// This file is auto-generated by @hey-api/openapi-ts

export type AccountChargesRequest = {
    amount?: number;
    chargeId?: number;
};

export type AccountData = {
    [key: string]: unknown;
};

export type AccountRequest = {
    allowDividendCalculationForInactiveClients?: string;
    applicationDate?: string;
    approvedDate?: string;
    charges?: Array<AccountChargesRequest>;
    clientId?: number;
    currencyCode?: string;
    dateFormat?: string;
    digitsAfterDecimal?: number;
    externalId?: string;
    id?: number;
    inMultiplesOf?: string;
    locale?: string;
    lockinPeriodFrequency?: number;
    lockinPeriodFrequencyType?: string;
    minimumActivePeriod?: number;
    minimumActivePeriodFrequencyType?: string;
    numberOfShares?: number;
    productId?: number;
    purchasedDate?: string;
    requestedShares?: number;
    savingsAccountId?: number;
    submittedDate?: string;
    unitPrice?: number;
};

export type AccountRuleRequest = {
    accountToCredit?: number;
    accountToDebit?: number;
    description?: string;
    name?: string;
    officeId?: number;
};

export type AccountTransferData = {
    currency?: CurrencyData;
    fromAccount?: PortfolioAccountData;
    fromAccountOptions?: Array<PortfolioAccountData>;
    fromAccountType?: EnumOptionData;
    fromAccountTypeOptions?: Array<EnumOptionData>;
    fromClient?: ClientData;
    fromClientOptions?: Array<ClientData>;
    fromOffice?: OfficeData;
    fromOfficeOptions?: Array<OfficeData>;
    id?: number;
    reversed?: boolean;
    toAccount?: PortfolioAccountData;
    toAccountOptions?: Array<PortfolioAccountData>;
    toAccountType?: EnumOptionData;
    toAccountTypeOptions?: Array<EnumOptionData>;
    toClient?: ClientData;
    toClientOptions?: Array<ClientData>;
    toOffice?: OfficeData;
    toOfficeOptions?: Array<OfficeData>;
    transferAmount?: number;
    transferDate?: string;
    transferDescription?: string;
};

export type AccountTransferRequest = {
    dateFormat?: string;
    fromAccountId?: string;
    fromAccountType?: string;
    fromClientId?: string;
    fromOfficeId?: string;
    locale?: string;
    toAccountId?: string;
    toAccountType?: string;
    toClientId?: string;
    toOfficeId?: string;
    transferAmount?: string;
    transferDate?: string;
    transferDescription?: string;
};

export type AccountingRuleData = {
    allowMultipleCreditEntries?: boolean;
    allowMultipleDebitEntries?: boolean;
    allowedAccounts?: Array<GLAccountData>;
    allowedCreditTagOptions?: Array<CodeValueData>;
    allowedDebitTagOptions?: Array<CodeValueData>;
    allowedOffices?: Array<OfficeData>;
    creditAccounts?: Array<GLAccountDataForLookup>;
    creditTags?: Array<AccountingTagRuleData>;
    debitAccounts?: Array<GLAccountDataForLookup>;
    debitTags?: Array<AccountingTagRuleData>;
    description?: string;
    id?: number;
    name?: string;
    officeId?: number;
    officeName?: string;
    systemDefined?: boolean;
};

export type AccountingTagRuleData = {
    id?: number;
    tag?: CodeValueData;
    transactionType?: EnumOptionData;
};

export type AdHocData = {
    createdBy?: string;
    createdById?: number;
    createdOn?: string;
    email?: string;
    id?: number;
    isActive?: boolean;
    lastRun?: string;
    name?: string;
    query?: string;
    reportRunEvery?: number;
    reportRunFrequencies?: Array<EnumOptionData>;
    reportRunFrequency?: number;
    tableFields?: string;
    tableName?: string;
    updatedById?: number;
    updatedOn?: string;
};

export type AdHocRequest = {
    email?: string;
    id?: number;
    isActive?: boolean;
    name?: string;
    query?: string;
    reportRunEvery?: number;
    reportRunFrequency?: number;
    tableFields?: string;
    tableName?: string;
};

export type AdHocSearchQueryData = {
    count?: number;
    loanOutStanding?: number;
    loanProductName?: string;
    loanProducts?: Array<LoanProductData>;
    officeName?: string;
    offices?: Array<OfficeData>;
    percentage?: number;
};

export type AddressData = {
    addressId?: number;
    addressLine1?: string;
    addressLine2?: string;
    addressLine3?: string;
    addressType?: string;
    addressTypeId?: number;
    addressTypeIdOptions?: Array<CodeValueData>;
    city?: string;
    clientID?: number;
    countryId?: number;
    countryIdOptions?: Array<CodeValueData>;
    countryName?: string;
    countyDistrict?: string;
    createdBy?: string;
    createdOn?: string;
    isActive?: boolean;
    latitude?: number;
    longitude?: number;
    postalCode?: string;
    stateName?: string;
    stateProvinceId?: number;
    stateProvinceIdOptions?: Array<CodeValueData>;
    street?: string;
    townVillage?: string;
    updatedBy?: string;
    updatedOn?: string;
};

export type AdvancedPaymentData = {
    futureInstallmentAllocationRule?: string;
    paymentAllocationOrder?: Array<PaymentAllocationOrder>;
    transactionType?: string;
};

export type AdvancedQueryData = {
    columnFilters?: Array<ColumnFilterData>;
    nonNullFilters?: Array<ColumnFilterData>;
    nonNullResultColumns?: Array<(string)>;
    resultColumns?: Array<(string)>;
};

export type AdvancedQueryRequest = {
    baseQuery?: AdvancedQueryData;
    datatableQueries?: Array<TableQueryData>;
};

export type AllowAttributeOverrides = {
    amortizationType?: boolean;
    graceOnArrearsAgeing?: boolean;
    graceOnPrincipalAndInterestPayment?: boolean;
    inArrearsTolerance?: boolean;
    interestCalculationPeriodType?: boolean;
    interestType?: boolean;
    repaymentEvery?: boolean;
    transactionProcessingStrategyCode?: boolean;
};

export type AppUser = {
    accountNonExpired?: boolean;
    accountNonLocked?: boolean;
    appUserClientMappings?: Array<AppUserClientMapping>;
    authorities?: Array<GrantedAuthority>;
    bypassUser?: boolean;
    checkerSuperUser?: boolean;
    credentialsNonExpired?: boolean;
    deleted?: boolean;
    displayName?: string;
    email?: string;
    enabled?: boolean;
    firstname?: string;
    id?: number;
    lastTimePasswordUpdated?: string;
    lastname?: string;
    new?: boolean;
    notEnabled?: boolean;
    office?: Office;
    password?: string;
    passwordNeverExpires?: boolean;
    roles?: Array<Role>;
    selfServiceUser?: boolean;
    staff?: Staff;
    staffDisplayName?: string;
    staffId?: number;
    systemUser?: boolean;
    username?: string;
};

export type AppUserClientMapping = {
    appUser?: AppUser;
    client?: Client;
    id?: number;
    new?: boolean;
};

export type AppUserData = {
    clients?: Array<ClientData>;
    rowIndex?: number;
    selfServiceUser?: boolean;
};

export type AuditData = {
    createdBy?: number;
    createdDate?: string;
    lastModifiedBy?: number;
    lastModifiedDate?: string;
};

export type AuditSearchData = {
    actionNames?: Array<(string)>;
    appUsers?: Array<AppUserData>;
    entityNames?: Array<(string)>;
    statuses?: Array<ProcessingResultLookup>;
};

export type BatchRequest = {
    body?: string;
    headers?: Array<Header>;
    method?: string;
    reference?: number;
    relativeUrl?: string;
    requestId?: number;
};

export type BatchResponse = {
    body?: string;
    headers?: Array<Header>;
    requestId?: number;
    statusCode?: number;
};

export type BodyPart = {
    contentDisposition?: ContentDisposition;
    entity?: {
        [key: string]: unknown;
    };
    headers?: {
        empty?: boolean;
        [key: string]: (array | boolean) | undefined;
    };
    mediaType?: MediaType;
    messageBodyWorkers?: MessageBodyWorkers;
    parameterizedHeaders?: {
        empty?: boolean;
        [key: string]: (array | boolean) | undefined;
    };
    parent?: MultiPart;
    providers?: Providers;
};

export type BusinessDateResponse = {
    date?: string;
    description?: string;
    type?: 'BUSINESS_DATE' | 'COB_DATE';
};

export type type = 'BUSINESS_DATE' | 'COB_DATE';

export type BusinessDateUpdateRequest = {
    date: string;
    dateFormat: string;
    locale: string;
    /**
     * Type of business date
     */
    type: 'BUSINESS_DATE' | 'COB_DATE';
};

export type BusinessDateUpdateResponse = {
    changes?: {
        [key: string]: (string);
    };
    date?: string;
    description?: string;
    type?: 'BUSINESS_DATE' | 'COB_DATE';
};

export type BusinessStep = {
    order?: number;
    stepName?: string;
};

export type BusinessStepDetail = {
    stepDescription?: string;
    stepName?: string;
};

export type BusinessStepRequest = {
    businessSteps?: Array<BusinessStep>;
};

export type BuyDownFeeAmortizationDetails = {
    adjustedAmount?: number;
    amortizedAmount?: number;
    buyDownFeeAmount?: number;
    buyDownFeeDate?: string;
    chargedOffAmount?: number;
    id?: number;
    loanId?: number;
    notYetAmortizedAmount?: number;
    transactionId?: number;
};

export type CacheData = {
    cacheType?: EnumOptionData;
    enabled?: boolean;
};

export type CacheSwitchRequest = {
    cacheType: number;
};

export type CacheSwitchResponse = {
    cacheType?: number;
    changes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
};

/**
 * CalculateFixedDepositInterestResponse
 */
export type CalculateFixedDepositInterestResponse = {
    maturityAmount?: number;
    warning?: string;
};

export type CalendarData = {
    calendarInstanceId?: number;
    calendarTypeOptions?: Array<EnumOptionData>;
    centerId?: string;
    createdByUserId?: number;
    createdByUsername?: string;
    createdDate?: string;
    dateFormat?: string;
    description?: string;
    duration?: number;
    endDate?: string;
    entityId?: number;
    entityType?: EnumOptionData;
    entityTypeOptions?: Array<EnumOptionData>;
    firstReminder?: number;
    frequency?: EnumOptionData;
    frequencyNthDayTypeOptions?: Array<EnumOptionData>;
    frequencyOptions?: Array<EnumOptionData>;
    humanReadable?: string;
    id?: number;
    interval?: number;
    lastUpdatedByUserId?: number;
    lastUpdatedByUsername?: string;
    lastUpdatedDate?: string;
    locale?: string;
    location?: string;
    meetingTime?: LocalTime;
    nextTenRecurringDates?: Array<(string)>;
    recentEligibleMeetingDate?: string;
    recurrence?: string;
    recurringDates?: Array<(string)>;
    remindBy?: EnumOptionData;
    remindByOptions?: Array<EnumOptionData>;
    repeating?: boolean;
    repeatsOnDay?: EnumOptionData;
    repeatsOnDayOfMonth?: number;
    repeatsOnDayOptions?: Array<EnumOptionData>;
    repeatsOnNthDayOfMonth?: EnumOptionData;
    rowIndex?: number;
    secondReminder?: number;
    startDate?: string;
    title?: string;
    type?: EnumOptionData;
    typeId?: string;
};

export type CalendarRequest = {
    dateFormat?: string;
    frequency?: string;
    interval?: string;
    locale?: string;
    repeating?: string;
    repeatsOnDay?: string;
    startDate?: string;
    title?: string;
    typeId?: string;
};

export type CampaignPreviewData = {
    campaignMessage?: string;
    totalNumberOfMessages?: number;
};

export type CapitalizedIncomeDetails = {
    amortizedAmount?: number;
    amount?: number;
    amountAdjustment?: number;
    chargedOffAmount?: number;
    unrecognizedAmount?: number;
};

export type CashierData = {
    description?: string;
    endDate?: string;
    endTime?: string;
    id?: number;
    isFullDay?: boolean;
    officeId?: number;
    officeName?: string;
    staffId?: number;
    staffName?: string;
    staffOptions?: Array<StaffData>;
    startDate?: string;
    startTime?: string;
    tellerId?: number;
    tellerName?: string;
};

export type CashierTransactionData = {
    cashierData?: CashierData;
    cashierId?: number;
    cashierName?: string;
    createdDate?: string;
    currencyOptions?: Array<CurrencyData>;
    endDate?: string;
    entityId?: number;
    entityType?: string;
    id?: number;
    officeId?: number;
    officeName?: string;
    startDate?: string;
    tellerId?: number;
    tellerName?: string;
    txnAmount?: number;
    txnDate?: string;
    txnNote?: string;
    txnType?: CashierTxnType;
};

export type CashierTransactionsWithSummaryData = {
    cashierId?: number;
    cashierName?: string;
    cashierTransactions?: PageCashierTransactionData;
    netCash?: number;
    officeName?: string;
    sumCashAllocation?: number;
    sumCashSettlement?: number;
    sumInwardCash?: number;
    sumOutwardCash?: number;
    tellerId?: number;
    tellerName?: string;
};

export type CashierTxnType = {
    id?: number;
    value?: string;
};

export type CashiersForTeller = {
    cashiers?: Array<CashierData>;
    officeId?: number;
    officeName?: string;
    tellerId?: number;
    tellerName?: string;
};

export type CenterData = {
    accountNo?: string;
    collectionMeetingCalendar?: CalendarData;
    datatables?: Array<DatatableData>;
    hierarchy?: string;
    id?: number;
    name?: string;
    officeName?: string;
    rowIndex?: number;
    staffName?: string;
};

/**
 * ChangeInstanceModeRequest
 */
export type ChangeInstanceModeRequest = {
    batchManagerEnabled: boolean;
    batchWorkerEnabled: boolean;
    readEnabled: boolean;
    writeEnabled: boolean;
};

/**
 * ChangePwdUsersUserIdRequest
 */
export type ChangePwdUsersUserIdRequest = {
    password?: string;
    repeatPassword?: string;
};

/**
 * ChangePwdUsersUserIdResponse
 */
export type ChangePwdUsersUserIdResponse = {
    changes?: ChangePwdUsersUserIdResponseChanges;
    officeId?: number;
    resourceId?: number;
};

export type ChangePwdUsersUserIdResponseChanges = {
    password?: boolean;
};

export type Charge = {
    account?: GLAccount;
    active?: boolean;
    allowedClientChargeCalculationType?: boolean;
    allowedClientChargeTime?: boolean;
    allowedLoanChargeTime?: boolean;
    allowedSavingsChargeCalculationType?: boolean;
    allowedSavingsChargeTime?: boolean;
    amount?: number;
    annualFee?: boolean;
    chargeCalculation?: number;
    chargePaymentMode?: number;
    chargeTimeType?: number;
    clientCharge?: boolean;
    currencyCode?: string;
    deleted?: boolean;
    disbursementCharge?: boolean;
    enableFreeWithdrawal?: boolean;
    enablePaymentType?: boolean;
    feeInterval?: number;
    feeOnMonthDay?: {
        dayOfMonth?: number;
        month?: 'JANUARY' | 'FEBRUARY' | 'MARCH' | 'APRIL' | 'MAY' | 'JUNE' | 'JULY' | 'AUGUST' | 'SEPTEMBER' | 'OCTOBER' | 'NOVEMBER' | 'DECEMBER';
        monthValue?: number;
    };
    frequencyFreeWithdrawalCharge?: number;
    id?: number;
    incomeAccountId?: number;
    loanCharge?: boolean;
    maxCap?: number;
    minCap?: number;
    monthlyFee?: boolean;
    name?: string;
    new?: boolean;
    overdueInstallment?: boolean;
    paymentType?: PaymentType;
    penalty?: boolean;
    percentageOfApprovedAmount?: boolean;
    percentageOfDisbursementAmount?: boolean;
    restartFrequency?: number;
    restartFrequencyEnum?: number;
    savingsCharge?: boolean;
    taxGroup?: TaxGroup;
};

export type month = 'JANUARY' | 'FEBRUARY' | 'MARCH' | 'APRIL' | 'MAY' | 'JUNE' | 'JULY' | 'AUGUST' | 'SEPTEMBER' | 'OCTOBER' | 'NOVEMBER' | 'DECEMBER';

export type ChargeData = {
    accountMappingForChargeConfig?: string;
    active?: boolean;
    amount?: number;
    assetAccountOptions?: Array<GLAccountData>;
    chargeAppliesTo?: EnumOptionData;
    chargeAppliesToOptions?: Array<EnumOptionData>;
    chargeCalculationType?: EnumOptionData;
    chargeCalculationTypeOptions?: Array<EnumOptionData>;
    chargePaymentMode?: EnumOptionData;
    chargePaymetModeOptions?: Array<EnumOptionData>;
    chargeTimeType?: EnumOptionData;
    chargeTimeTypeOptions?: Array<EnumOptionData>;
    clientChargeCalculationTypeOptions?: Array<EnumOptionData>;
    clientChargeTimeTypeOptions?: Array<EnumOptionData>;
    currency?: CurrencyData;
    currencyOptions?: Array<CurrencyData>;
    expenseAccountOptions?: Array<GLAccountData>;
    feeFrequency?: EnumOptionData;
    feeFrequencyOptions?: Array<EnumOptionData>;
    feeInterval?: number;
    feeOnMonthDay?: {
        dayOfMonth?: number;
        month?: 'JANUARY' | 'FEBRUARY' | 'MARCH' | 'APRIL' | 'MAY' | 'JUNE' | 'JULY' | 'AUGUST' | 'SEPTEMBER' | 'OCTOBER' | 'NOVEMBER' | 'DECEMBER';
        monthValue?: number;
    };
    freeWithdrawal?: boolean;
    freeWithdrawalChargeFrequency?: number;
    id?: number;
    incomeOrLiabilityAccount?: GLAccountData;
    incomeOrLiabilityAccountOptions?: {
        [key: string]: Array<GLAccountData>;
    };
    isPaymentType?: boolean;
    loanChargeCalculationTypeOptions?: Array<EnumOptionData>;
    loanChargeTimeTypeOptions?: Array<EnumOptionData>;
    maxCap?: number;
    minCap?: number;
    name?: string;
    overdueInstallmentCharge?: boolean;
    paymentTypeOptions?: PaymentTypeData;
    penalty?: boolean;
    restartFrequency?: number;
    restartFrequencyEnum?: number;
    savingsChargeCalculationTypeOptions?: Array<EnumOptionData>;
    savingsChargeTimeTypeOptions?: Array<EnumOptionData>;
    shareChargeCalculationTypeOptions?: Array<EnumOptionData>;
    shareChargeTimeTypeOptions?: Array<EnumOptionData>;
    taxGroup?: TaxGroupData;
    taxGroupOptions?: Array<TaxGroupData>;
};

export type ChargeOffReasonToGLAccountMapper = {
    chargeOffReasonCodeValue?: CodeValueData;
    expenseAccount?: GLAccountData;
};

export type ChargeRequest = {
    active?: boolean;
    amount?: number;
    chargeAppliesTo?: number;
    chargeCalculationType?: number;
    chargePaymentMode?: number;
    chargeTimeType?: number;
    currencyCode?: string;
    enablePaymentType?: boolean;
    feeFrequency?: string;
    feeInterval?: string;
    feeOnMonthDay?: string;
    locale?: string;
    maxCap?: number;
    minCap?: number;
    monthDayFormat?: string;
    name?: string;
    paymentTypeId?: number;
    penalty?: boolean;
    taxGroupId?: number;
};

export type ChargeToGLAccountMapper = {
    charge?: ChargeData;
    incomeAccount?: GLAccountData;
};

export type Client = {
    accountNumber?: string;
    activatedBy?: AppUser;
    activationDate?: string;
    active?: boolean;
    clientClassification?: CodeValue;
    clientType?: CodeValue;
    closed?: boolean;
    closedBy?: AppUser;
    closureDate?: string;
    closureReason?: CodeValue;
    createdBy: number;
    createdDate: string;
    dateOfBirth?: string;
    displayName?: string;
    emailAddress?: string;
    externalId?: ExternalId;
    firstname?: string;
    fullname?: string;
    gender?: CodeValue;
    groups?: Array<Group>;
    id?: number;
    identifiers?: Array<ClientIdentifier>;
    image?: Image;
    lastModifiedBy: number;
    lastModifiedDate: string;
    lastname?: string;
    legalForm?: number;
    middlename?: string;
    mobileNo?: string;
    new?: boolean;
    notActive?: boolean;
    notPending?: boolean;
    notStaff?: boolean;
    office?: Office;
    officeJoiningDate?: string;
    pending?: boolean;
    proposedTransferDate?: string;
    reactivateDate?: string;
    reactivatedBy?: AppUser;
    rejected?: boolean;
    rejectedBy?: AppUser;
    rejectedDate?: string;
    rejectionDate?: string;
    rejectionReason?: CodeValue;
    reopenedBy?: AppUser;
    reopenedDate?: string;
    savingsAccountId?: number;
    savingsProductId?: number;
    staff?: Staff;
    status?: number;
    subStatus?: CodeValue;
    submittedOnDate?: string;
    transferInProgress?: boolean;
    transferInProgressOrOnHold?: boolean;
    transferOnHold?: boolean;
    transferToOffice?: Office;
    withdrawalDate?: string;
    withdrawalReason?: CodeValue;
    withdrawn?: boolean;
    withdrawnBy?: AppUser;
};

/**
 * Address requests
 */
export type ClientAddressRequest = {
    addressId?: number;
    addressLine1?: string;
    addressLine2?: string;
    addressLine3?: string;
    addressTypeId?: number;
    city?: string;
    countryId?: number;
    countyDistrict?: string;
    createdBy?: string;
    createdOn?: string;
    isActive?: boolean;
    latitude?: number;
    longitude?: number;
    postalCode?: string;
    stateProvinceId?: number;
    townVillage?: string;
    updatedBy?: string;
    updatedOn?: string;
};

export type ClientCollateralManagementData = {
    id?: number;
    name?: string;
    pctToBase?: number;
    quantity?: number;
    total?: number;
    totalCollateral?: number;
    unitPrice?: number;
};

export type ClientCollateralRequest = {
    collateralId?: number;
    locale?: string;
    quantity?: number;
};

export type ClientData = {
    accountNo?: string;
    activationDate?: string;
    active?: boolean;
    address?: Array<AddressData>;
    clientClassification?: CodeValueData;
    clientClassificationId?: number;
    clientClassificationOptions?: Array<CodeValueData>;
    clientCollateralManagements?: Array<ClientCollateralManagementData>;
    clientLegalFormOptions?: Array<EnumOptionData>;
    clientNonPersonConstitutionOptions?: Array<CodeValueData>;
    clientNonPersonDetails?: ClientNonPersonData;
    clientNonPersonMainBusinessLineOptions?: Array<CodeValueData>;
    clientType?: CodeValueData;
    clientTypeId?: number;
    clientTypeOptions?: Array<CodeValueData>;
    datatables?: Array<DatatableData>;
    dateFormat?: string;
    dateOfBirth?: string;
    displayName?: string;
    emailAddress?: string;
    externalId?: ExternalId;
    familyMemberOptions?: ClientFamilyMembersData;
    firstname?: string;
    fullname?: string;
    gender?: CodeValueData;
    genderId?: number;
    genderOptions?: Array<CodeValueData>;
    groups?: Array<GroupGeneralData>;
    id?: number;
    imageId?: number;
    imagePresent?: boolean;
    isAddressEnabled?: boolean;
    isStaff?: boolean;
    lastname?: string;
    legalForm?: EnumOptionData;
    legalFormId?: number;
    locale?: string;
    middlename?: string;
    mobileNo?: string;
    narrations?: Array<CodeValueData>;
    officeId?: number;
    officeName?: string;
    officeOptions?: Array<OfficeData>;
    rowIndex?: number;
    savingAccountOptions?: Array<SavingsAccountData>;
    savingProductOptions?: Array<SavingsProductData>;
    savingsAccountId?: number;
    savingsProductId?: number;
    savingsProductName?: string;
    staffId?: number;
    staffName?: string;
    staffOptions?: Array<StaffData>;
    status?: EnumOptionData;
    subStatus?: CodeValueData;
    submittedOnDate?: string;
    timeline?: ClientTimelineData;
    transferToOfficeId?: number;
    transferToOfficeName?: string;
};

export type ClientFamilyMemberRequest = {
    age?: number;
    clientId?: number;
    dateFormat?: string;
    dateOfBirth?: string;
    familyMembers?: string;
    firstName?: string;
    genderId?: number;
    id?: number;
    isDependent?: boolean;
    lastName?: string;
    locale?: string;
    maritalStatusId?: number;
    middleName?: string;
    mobileNumber?: string;
    professionId?: number;
    qualification?: string;
    relationshipId?: number;
};

export type ClientFamilyMembersData = {
    age?: number;
    clientId?: number;
    dateOfBirth?: string;
    firstName?: string;
    gender?: string;
    genderId?: number;
    genderIdOptions?: Array<CodeValueData>;
    id?: number;
    isDependent?: boolean;
    lastName?: string;
    maritalStatus?: string;
    maritalStatusId?: number;
    maritalStatusIdOptions?: Array<CodeValueData>;
    middleName?: string;
    mobileNumber?: string;
    profession?: string;
    professionId?: number;
    professionIdOptions?: Array<CodeValueData>;
    qualification?: string;
    relationship?: string;
    relationshipId?: number;
    relationshipIdOptions?: Array<CodeValueData>;
};

export type ClientIdentifier = {
    createdBy: number;
    createdDate: string;
    id?: number;
    lastModifiedBy: number;
    lastModifiedDate: string;
    new?: boolean;
};

export type ClientIdentifierData = {
    allowedDocumentTypes?: Array<CodeValueData>;
    clientId?: number;
    description?: string;
    documentKey?: string;
    documentType?: CodeValueData;
    id?: number;
    status?: string;
};

export type ClientIdentifierRequest = {
    description?: string;
    documentKey?: string;
    documentTypeId?: number;
    status?: string;
};

export type ClientNonPersonData = {
    [key: string]: unknown;
};

export type ClientSearchData = {
    accountNumber?: string;
    activationDate?: string;
    createdDate?: string;
    displayName?: string;
    externalId?: ExternalId;
    id?: number;
    mobileNo?: string;
    officeId?: number;
    officeName?: string;
    status?: EnumOptionData;
};

export type ClientTextSearch = {
    text?: string;
};

export type ClientTimelineData = {
    activatedByFirstname?: string;
    activatedByLastname?: string;
    activatedByUsername?: string;
    activatedOnDate?: string;
    closedByFirstname?: string;
    closedByLastname?: string;
    closedByUsername?: string;
    closedOnDate?: string;
    submittedByFirstname?: string;
    submittedByLastname?: string;
    submittedByUsername?: string;
    submittedOnDate?: string;
};

export type Code = {
    id?: number;
    name?: string;
    new?: boolean;
    systemDefined?: boolean;
    values?: Array<CodeValue>;
};

export type CodeValue = {
    active?: boolean;
    code?: Code;
    description?: string;
    id?: number;
    label?: string;
    mandatory?: boolean;
    new?: boolean;
    position?: number;
};

export type CodeValueData = {
    active?: boolean;
    description?: string;
    id?: number;
    mandatory?: boolean;
    name?: string;
    position?: number;
};

export type CollateralData = {
    allowedCollateralTypes?: Array<CodeValueData>;
    currency?: CurrencyData;
    description?: string;
    id?: number;
    type?: CodeValueData;
    value?: number;
};

export type CollateralManagementData = {
    basePrice?: number;
    currency?: string;
    id?: number;
    name?: string;
    pctToBase?: number;
    quality?: string;
    unitType?: string;
};

export type CollateralManagementProductRequest = {
    basePrice?: number;
    currency?: string;
    locale?: string;
    name?: string;
    pctToBase?: number;
    quality?: string;
    unitType?: string;
};

export type CollateralProductRequest = {
    basePrice?: number;
    currency?: string;
    name?: string;
    pctToBase?: number;
    quality?: string;
    unitType?: string;
};

export type CollectionSheetRequest = {
    actualDisbursementDate?: string;
    bulkDisbursementTransactions?: DisbursementTransactionsRequest;
    dateFormat?: string;
    locale?: string;
    officeId?: number;
    transactionDate?: string;
};

export type ColumnFilterData = {
    column?: string;
    filters?: Array<FilterData>;
};

export type CommandProcessingResult = {
    changes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    clientId?: number;
    commandId?: number;
    creditBureauReportData?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    externalIdOrNull?: ExternalId;
    glimId?: number;
    groupId?: number;
    gsimId?: number;
    loanExternalId?: ExternalId;
    loanId?: number;
    officeId?: number;
    productId?: number;
    resourceExternalId?: ExternalId;
    resourceId?: number;
    resourceIdentifier?: string;
    rollbackTransaction?: boolean;
    savingsId?: number;
    subResourceExternalId?: ExternalId;
    subResourceId?: number;
    transactionId?: string;
};

export type CommandWrapper = {
    actionName?: string;
    cacheResource?: boolean;
    changePasswordOperation?: boolean;
    clientId?: number;
    commandId?: number;
    create?: boolean;
    createDatatable?: boolean;
    creditBureauId?: number;
    currencyResource?: boolean;
    datatableResource?: boolean;
    delete?: boolean;
    deleteDatatable?: boolean;
    deleteMultiple?: boolean;
    deleteOneToOne?: boolean;
    deleteOperation?: boolean;
    entityId?: number;
    entityName?: string;
    fullFilSurvey?: boolean;
    groupId?: number;
    href?: string;
    idempotencyKey?: string;
    interestPauseCreateResource?: boolean;
    interestPauseDeleteResource?: boolean;
    interestPauseResource?: boolean;
    interestPauseUpdateResource?: boolean;
    jobName?: string;
    json?: string;
    loanDisburseDetailResource?: boolean;
    loanExternalId?: ExternalId;
    loanId?: number;
    noteResource?: boolean;
    officeId?: number;
    organisationCreditBureauId?: number;
    passwordPreferencesResource?: boolean;
    permissionResource?: boolean;
    productId?: number;
    registerDatatable?: boolean;
    registerSurvey?: boolean;
    sanitizeJsonKeys?: Array<(string)>;
    savingsId?: number;
    subentityId?: number;
    surveyResource?: boolean;
    taskPermissionName?: string;
    templateId?: number;
    transactionId?: string;
    update?: boolean;
    updateDatatable?: boolean;
    updateDisbursementDate?: boolean;
    updateMultiple?: boolean;
    updateOneToOne?: boolean;
    updateOperation?: boolean;
    userResource?: boolean;
    workingDaysResource?: boolean;
};

export type Component = {
    description?: string;
    id?: number;
    key?: string;
    new?: boolean;
    sequenceNo?: number;
    survey?: Survey;
    text?: string;
};

export type ComponentData = {
    description?: string;
    id?: number;
    key?: string;
    sequenceNo?: number;
    text?: string;
};

export type ConfiguredJobNamesDTO = {
    businessJobs?: Array<(string)>;
};

export type ContentDisposition = {
    creationDate?: string;
    fileName?: string;
    modificationDate?: string;
    parameters?: {
        [key: string]: (string);
    };
    readDate?: string;
    size?: number;
    type?: string;
};

/**
 * PostStaffResponse
 */
export type CreateStaffResponse = {
    officeId?: number;
    resourceId?: number;
};

export type CreditAllocationData = {
    creditAllocationOrder?: Array<CreditAllocationOrder>;
    transactionType?: string;
};

export type CreditAllocationOrder = {
    creditAllocationRule?: string;
    order?: number;
};

export type CreditDebit = {
    amount?: number;
    glAccountId?: number;
};

export type CurrencyConfigurationData = {
    currencyOptions?: Array<CurrencyData>;
    selectedCurrencyOptions?: Array<CurrencyData>;
};

export type CurrencyData = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    inMultiplesOf?: number;
    name?: string;
    nameCode?: string;
};

export type CurrencyItem = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    inMultiplesOf?: number;
    name?: string;
    nameCode?: string;
};

export type CurrencyUpdateRequest = {
    currencies: Array<(string)>;
};

export type CurrencyUpdateResponse = {
    changes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    currencies?: Array<(string)>;
};

export type DatatableCheckStatusData = {
    [key: string]: unknown;
};

export type DatatableChecksData = {
    [key: string]: unknown;
};

export type DatatableData = {
    registeredTableName?: string;
};

export type DateParam = {
    [key: string]: unknown;
};

/**
 * DeleteAccountNumberFormatsResponse
 */
export type DeleteAccountNumberFormatsResponse = {
    resourceId?: number;
};

/**
 * DeleteAccountingRulesResponse
 */
export type DeleteAccountingRulesResponse = {
    resourceId?: number;
};

/**
 * DeleteCentersCenterIdResponse
 */
export type DeleteCentersCenterIdResponse = {
    changes?: DeleteCentersChanges;
    resourceId?: number;
};

export type DeleteCentersChanges = {
    [key: string]: unknown;
};

/**
 * DeleteChargesChargeIdResponse
 */
export type DeleteChargesChargeIdResponse = {
    resourceId?: number;
};

/**
 * DeleteClientCollateralResponse
 */
export type DeleteClientCollateralResponse = {
    resourceId?: number;
};

/**
 * DeleteClientsClientIdChargesChargeIdResponse
 */
export type DeleteClientsClientIdChargesChargeIdResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * DeleteClientsClientIdIdentifiersIdentifierIdResponse
 */
export type DeleteClientsClientIdIdentifiersIdentifierIdResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * DeleteClientsClientIdResponse
 */
export type DeleteClientsClientIdResponse = {
    clientId?: number;
    officeId?: number;
    resourceExternalId?: string;
    resourceId?: number;
};

/**
 * DeleteCodeValueDataResponse
 */
export type DeleteCodeValueDataResponse = {
    resourceId?: number;
};

/**
 * DeleteCodesResponse
 */
export type DeleteCodesResponse = {
    resourceId?: number;
};

/**
 * DeleteCollateralProductResponse
 */
export type DeleteCollateralProductResponse = {
    resourceId?: number;
};

/**
 * DeleteDataTablesDatatableAppTableIdDatatableIdResponse
 */
export type DeleteDataTablesDatatableAppTableIdDatatableIdResponse = {
    resourceId?: number;
};

/**
 * DeleteDataTablesDatatableAppTableIdResponse
 */
export type DeleteDataTablesDatatableAppTableIdResponse = {
    resourceId?: number;
};

/**
 * DeleteDataTablesResponse
 */
export type DeleteDataTablesResponse = {
    resourceIdentifier?: string;
};

/**
 * DeleteDelinquencyBucketResponse
 */
export type DeleteDelinquencyBucketResponse = {
    resourceId?: number;
};

/**
 * DeleteDelinquencyRangeResponse
 */
export type DeleteDelinquencyRangeResponse = {
    resourceId?: number;
};

/**
 * DeleteEntityDatatableChecksTemplateResponse
 */
export type DeleteEntityDatatableChecksTemplateResponse = {
    resourceId?: number;
};

/**
 * DeleteEntityTypeEntityIdDocumentsResponse
 */
export type DeleteEntityTypeEntityIdDocumentsResponse = {
    resourceId?: number;
    resourceIdentifier?: string;
};

/**
 * DeleteFinancialActivityAccountsResponse
 */
export type DeleteFinancialActivityAccountsResponse = {
    resourceId?: number;
};

/**
 * DeleteFixedDepositAccountsAccountIdResponse
 */
export type DeleteFixedDepositAccountsAccountIdResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * DeleteFixedDepositProductsProductIdResponse
 */
export type DeleteFixedDepositProductsProductIdResponse = {
    resourceId?: number;
};

/**
 * DeleteGLAccountsResponse
 */
export type DeleteGLAccountsResponse = {
    resourceId?: number;
};

/**
 * DeleteGlClosuresResponse
 */
export type DeleteGlClosuresResponse = {
    officeId?: number;
    resourceId?: number;
};

/**
 * DeleteGroupsGroupIdResponse
 */
export type DeleteGroupsGroupIdResponse = {
    groupId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * DeleteHolidaysHolidayIdResponse
 */
export type DeleteHolidaysHolidayIdResponse = {
    resourceId?: number;
};

/**
 * DeleteHookResponse
 */
export type DeleteHookResponse = {
    resourceId?: number;
};

/**
 * DeleteInterestRateChartsChartIdChartSlabsResponse
 */
export type DeleteInterestRateChartsChartIdChartSlabsResponse = {
    resourceId?: number;
};

/**
 * DeleteInterestRateChartsChartIdResponse
 */
export type DeleteInterestRateChartsChartIdResponse = {
    resourceId?: number;
};

/**
 * DeleteLoansLoanIdChargesChargeIdResponse
 */
export type DeleteLoansLoanIdChargesChargeIdResponse = {
    clientId?: number;
    loanId?: number;
    officeId?: number;
    resourceExternalId?: string;
    resourceId?: number;
};

/**
 * DeleteLoansLoanIdCollateralsCollateralIdResponse
 */
export type DeleteLoansLoanIdCollateralsCollateralIdResponse = {
    loanId?: number;
    resourceId?: number;
};

/**
 * DeleteLoansLoanIdResponse
 */
export type DeleteLoansLoanIdResponse = {
    clientId?: number;
    loanId?: number;
    officeId?: number;
    resourceExternalId?: string;
    resourceId?: number;
};

/**
 * DeletePaymentTypesPaymentTypeIdResponse
 */
export type DeletePaymentTypesPaymentTypeIdResponse = {
    resourceId?: number;
};

/**
 * DeletePostDatedCheck
 */
export type DeletePostDatedCheck = {
    loanId?: number;
    resourceId?: number;
};

/**
 * DeleteProvisioningCriteriaResponse
 */
export type DeleteProvisioningCriteriaResponse = {
    resourceId?: number;
};

/**
 * DeleteRecurringDepositAccountsResponse
 */
export type DeleteRecurringDepositAccountsResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * DeleteRecurringDepositProductsProductIdResponse
 */
export type DeleteRecurringDepositProductsProductIdResponse = {
    resourceId?: number;
};

/**
 * DeleteReportMailingJobsResponse
 */
export type DeleteReportMailingJobsResponse = {
    resourceId?: number;
};

/**
 * DeleteReportsResponse
 */
export type DeleteReportsResponse = {
    resourceId?: number;
};

/**
 * DeleteResourceTypeResourceIdNotesNoteIdResponse
 */
export type DeleteResourceTypeResourceIdNotesNoteIdResponse = {
    resourceId?: number;
};

/**
 * DeleteRolesRoleIdResponse
 */
export type DeleteRolesRoleIdResponse = {
    resourceId?: number;
};

/**
 * DeleteSavingsAccountsAccountIdResponse
 */
export type DeleteSavingsAccountsAccountIdResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * DeleteSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse
 */
export type DeleteSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
    savingsId?: number;
};

/**
 * DeleteSavingsProductsProductIdResponse
 */
export type DeleteSavingsProductsProductIdResponse = {
    resourceId?: number;
};

/**
 * DeleteSelfBeneficiariesTPTBeneficiaryIdResponse
 */
export type DeleteSelfBeneficiariesTPTBeneficiaryIdResponse = {
    resourceId?: number;
};

/**
 * DeleteTellersTellerIdCashiersCashierIdResponse
 */
export type DeleteTellersTellerIdCashiersCashierIdResponse = {
    resourceId?: number;
};

/**
 * DeleteTemplatesTemplateIdResponse
 */
export type DeleteTemplatesTemplateIdResponse = {
    resourceId?: number;
};

/**
 * DeleteUsersUserIdResponse
 */
export type DeleteUsersUserIdResponse = {
    changes?: DeleteUsersUserIdResponseChanges;
    officeId?: number;
    resourceId?: number;
};

export type DeleteUsersUserIdResponseChanges = {
    [key: string]: unknown;
};

export type DelinquencyBucket = {
    createdBy: number;
    createdDate: string;
    id?: number;
    lastModifiedBy: number;
    lastModifiedDate: string;
    name?: string;
    new?: boolean;
    ranges?: Array<DelinquencyRange>;
    version?: number;
};

export type DelinquencyBucketData = {
    id?: number;
    name?: string;
    ranges?: Array<DelinquencyRangeData>;
};

export type DelinquencyBucketRequest = {
    name?: string;
    ranges?: Array<(number)>;
};

export type DelinquencyRange = {
    classification?: string;
    createdBy: number;
    createdDate: string;
    id?: number;
    lastModifiedBy: number;
    lastModifiedDate: string;
    maximumAgeDays?: number;
    minimumAgeDays?: number;
    new?: boolean;
    version?: number;
};

export type DelinquencyRangeData = {
    classification?: string;
    id?: number;
    maximumAgeDays?: number;
    minimumAgeDays?: number;
};

export type DelinquencyRangeRequest = {
    classification?: string;
    locale?: string;
    maximumAgeDays?: number;
    minimumAgeDays?: number;
};

export type DepositAccountOnHoldTransactionData = {
    amount?: number;
    id?: number;
    loanAccountNo?: string;
    loanClientName?: string;
    loanId?: number;
    reversed?: boolean;
    savingsAccountNo?: string;
    savingsClientName?: string;
    savingsId?: number;
    transactionDate?: string;
    transactionType?: EnumOptionData;
};

export type DisbursementDetail = {
    expectedDisbursementDate?: string;
    id?: number;
    principal?: number;
};

export type DisbursementTransactionsRequest = {
    bulkRepaymentTransactions?: Array<RepaymentTransactionRequest>;
    bulkSavingsDueTransactions?: Array<SavingDueTransactionRequest>;
};

export type DocumentData = {
    description?: string;
    fileName?: string;
    id?: number;
    location?: string;
    name?: string;
    parentEntityId?: number;
    parentEntityType?: string;
    size?: number;
    storageType?: number;
    type?: string;
};

/**
 * Document upload request
 */
export type DocumentUploadRequest = {
    dateFormat?: string;
    description?: string;
    locale?: string;
    name?: string;
    uploadedInputStream?: (Blob | File);
};

export type Entity = {
    actions?: Array<(string)>;
    name?: string;
};

export type EnumOptionData = {
    code?: string;
    id?: number;
    value?: string;
};

export type EnumOptionType = {
    code?: string;
    id?: number;
    value?: string;
};

export type Event = {
    actionName?: string;
    entityName?: string;
};

/**
 * ExecuteJobRequest
 */
export type ExecuteJobRequest = {
    jobParameters?: Array<JobParameterDTO>;
};

export type ExtensionData = {
    key: string;
    value?: string;
};

export type ExternalAssetOwnerRequest = {
    dateFormat?: string;
    locale?: string;
    ownerExternalId?: string;
    purchasePriceRatio?: string;
    settlementDate?: string;
    transferExternalGroupId?: string;
    transferExternalId?: string;
};

export type ExternalAssetOwnerSearchRequest = {
    effectiveFromDate?: string;
    effectiveToDate?: string;
    submittedFromDate?: string;
    submittedToDate?: string;
    text?: string;
};

/**
 * ExternalAssetOwnerTransferChangesData
 */
export type ExternalAssetOwnerTransferChangesData = {
    ownerExternalId?: string;
    purchasePriceRatio?: string;
    settlementDate?: string;
    transferExternalId?: string;
};

export type ExternalEventConfigurationItemResponse = {
    enabled?: boolean;
    type?: string;
};

export type ExternalEventConfigurationResponse = {
    externalEventConfiguration?: Array<ExternalEventConfigurationItemResponse>;
};

export type ExternalEventConfigurationUpdateRequest = {
    externalEventConfigurations: {
        [key: string]: (boolean);
    };
};

export type ExternalEventConfigurationUpdateResponse = {
    changes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
};

export type ExternalEventResponse = {
    aggregateRootId?: number;
    businessDate?: string;
    category?: string;
    createdAt?: string;
    eventId?: number;
    payLoad?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    schema?: string;
    type?: string;
};

export type ExternalId = {
    empty?: boolean;
    value?: string;
};

export type ExternalOwnerJournalEntryData = {
    journalEntryData?: PageJournalEntryData;
    ownerData?: ExternalTransferOwnerData;
};

export type ExternalOwnerTransferJournalEntryData = {
    journalEntryData?: PageJournalEntryData;
    transferData?: ExternalTransferData;
};

export type ExternalServicesPropertiesData = {
    name?: string;
    value?: string;
};

export type ExternalTransferData = {
    details?: ExternalTransferDataDetails;
    effectiveFrom?: string;
    effectiveTo?: string;
    loan?: ExternalTransferLoanData;
    owner?: ExternalTransferOwnerData;
    previousOwner?: ExternalTransferOwnerData;
    purchasePriceRatio?: string;
    settlementDate?: string;
    status?: 'ACTIVE' | 'ACTIVE_INTERMEDIATE' | 'DECLINED' | 'PENDING' | 'PENDING_INTERMEDIATE' | 'BUYBACK' | 'BUYBACK_INTERMEDIATE' | 'CANCELLED';
    subStatus?: 'BALANCE_ZERO' | 'BALANCE_NEGATIVE' | 'SAMEDAY_TRANSFERS' | 'USER_REQUESTED' | 'UNSOLD';
    transferExternalGroupId?: string;
    transferExternalId?: string;
    transferId?: number;
};

export type status = 'ACTIVE' | 'ACTIVE_INTERMEDIATE' | 'DECLINED' | 'PENDING' | 'PENDING_INTERMEDIATE' | 'BUYBACK' | 'BUYBACK_INTERMEDIATE' | 'CANCELLED';

export type subStatus = 'BALANCE_ZERO' | 'BALANCE_NEGATIVE' | 'SAMEDAY_TRANSFERS' | 'USER_REQUESTED' | 'UNSOLD';

export type ExternalTransferDataDetails = {
    detailsId?: number;
    totalFeeChargesOutstanding?: number;
    totalInterestOutstanding?: number;
    totalOutstanding?: number;
    totalOverpaid?: number;
    totalPenaltyChargesOutstanding?: number;
    totalPrincipalOutstanding?: number;
};

export type ExternalTransferLoanData = {
    externalId?: string;
    loanId?: number;
};

export type ExternalTransferLoanProductAttributesData = {
    attributeId?: number;
    attributeKey?: string;
    attributeValue?: string;
    loanProductId?: number;
};

export type ExternalTransferOwnerData = {
    externalId?: string;
};

export type Field = {
    fieldName?: string;
    fieldType?: string;
    fieldValue?: string;
    optional?: boolean;
    placeholder?: string;
};

export type FieldConfigurationData = {
    entity?: string;
    field?: string;
    fieldConfigurationId?: number;
    isEnabled?: boolean;
    isMandatory?: boolean;
    subentity?: string;
    validationRegex?: string;
};

export type FilterData = {
    operator?: 'EQ' | 'NEQ' | 'GTE' | 'LTE' | 'GT' | 'LT' | 'LIKE' | 'NLIKE' | 'BTW' | 'NBTW' | 'IN' | 'NIN' | 'NULL' | 'NNULL';
    values?: Array<(string)>;
};

export type operator = 'EQ' | 'NEQ' | 'GTE' | 'LTE' | 'GT' | 'LT' | 'LIKE' | 'NLIKE' | 'BTW' | 'NBTW' | 'IN' | 'NIN' | 'NULL' | 'NNULL';

export type FinancialActivityAccountData = {
    financialActivityData?: FinancialActivityData;
    financialActivityOptions?: Array<FinancialActivityData>;
    glAccountData?: GLAccountData;
    glAccountOptions?: {
        [key: string]: Array<GLAccountData>;
    };
    id?: number;
};

export type FinancialActivityData = {
    id?: number;
    mappedGLAccountType?: 'ASSET' | 'LIABILITY' | 'EQUITY' | 'INCOME' | 'EXPENSE';
    name?: string;
};

export type mappedGLAccountType = 'ASSET' | 'LIABILITY' | 'EQUITY' | 'INCOME' | 'EXPENSE';

export type FloatingRate = {
    active?: boolean;
    baseLendingRate?: boolean;
    createdBy: number;
    createdDate: string;
    floatingRatePeriods?: Array<FloatingRatePeriod>;
    id?: number;
    lastModifiedBy: number;
    lastModifiedDate: string;
    name?: string;
    new?: boolean;
};

export type FloatingRateData = {
    createdBy?: string;
    createdOn?: string;
    id?: number;
    interestRateFrequencyTypeOptions?: Array<EnumOptionData>;
    isActive?: boolean;
    isBaseLendingRate?: boolean;
    modifiedBy?: string;
    modifiedOn?: string;
    name?: string;
    ratePeriods?: Array<FloatingRatePeriodData>;
};

export type FloatingRatePeriod = {
    active?: boolean;
    createdBy: number;
    createdDate: string;
    differentialToBaseLendingRate?: boolean;
    floatingRate?: FloatingRate;
    fromDate?: string;
    id?: number;
    interestRate?: number;
    lastModifiedBy: number;
    lastModifiedDate: string;
    new?: boolean;
};

export type FloatingRatePeriodData = {
    createdBy?: string;
    createdOn?: string;
    fromDate?: string;
    id?: number;
    interestRate?: number;
    isActive?: boolean;
    isDifferentialToBaseLendingRate?: boolean;
    modifiedBy?: string;
    modifiedOn?: string;
};

export type FloatingRatePeriodRequest = {
    dateFormat?: string;
    fromDate?: string;
    interestRate?: number;
    isDifferentialToBaseLendingRate?: boolean;
    locale?: string;
};

export type FloatingRateRequest = {
    isActive?: boolean;
    isBaseLendingRate?: boolean;
    name?: string;
    ratePeriods?: Array<FloatingRatePeriodRequest>;
};

export type FormDataBodyPart = {
    content?: {
        [key: string]: unknown;
    };
    contentDisposition?: ContentDisposition;
    entity?: {
        [key: string]: unknown;
    };
    fileName?: string;
    formDataContentDisposition?: FormDataContentDisposition;
    headers?: {
        empty?: boolean;
        [key: string]: (array | boolean) | undefined;
    };
    mediaType?: MediaType;
    messageBodyWorkers?: MessageBodyWorkers;
    name?: string;
    parameterizedHeaders?: {
        empty?: boolean;
        [key: string]: (array | boolean) | undefined;
    };
    parent?: MultiPart;
    providers?: Providers;
    simple?: boolean;
    value?: string;
};

export type FormDataContentDisposition = {
    creationDate?: string;
    fileName?: string;
    modificationDate?: string;
    name?: string;
    parameters?: {
        [key: string]: (string);
    };
    readDate?: string;
    size?: number;
    type?: string;
};

export type Fund = {
    id?: number;
    new?: boolean;
};

export type FundData = {
    externalId?: string;
    id?: number;
    name?: string;
};

export type FundRequest = {
    externalId?: string;
    name?: string;
};

export type GLAccount = {
    children?: Array<GLAccount>;
    description?: string;
    detailAccount?: boolean;
    disabled?: boolean;
    glCode?: string;
    headerAccount?: boolean;
    hierarchy?: string;
    id?: number;
    manualEntriesAllowed?: boolean;
    name?: string;
    new?: boolean;
    parent?: GLAccount;
    tagId?: CodeValue;
    type?: number;
    usage?: number;
};

export type GLAccountData = {
    accountTypeOptions?: Array<EnumOptionData>;
    allowedAssetsTagOptions?: Array<CodeValueData>;
    allowedEquityTagOptions?: Array<CodeValueData>;
    allowedExpensesTagOptions?: Array<CodeValueData>;
    allowedIncomeTagOptions?: Array<CodeValueData>;
    allowedLiabilitiesTagOptions?: Array<CodeValueData>;
    assetHeaderAccountOptions?: Array<GLAccountData>;
    description?: string;
    disabled?: boolean;
    equityHeaderAccountOptions?: Array<GLAccountData>;
    expenseHeaderAccountOptions?: Array<GLAccountData>;
    glCode?: string;
    id?: number;
    incomeHeaderAccountOptions?: Array<GLAccountData>;
    liabilityHeaderAccountOptions?: Array<GLAccountData>;
    manualEntriesAllowed?: boolean;
    name?: string;
    nameDecorated?: string;
    organizationRunningBalance?: number;
    parentId?: number;
    rowIndex?: number;
    tagId?: CodeValueData;
    type?: EnumOptionData;
    usage?: EnumOptionData;
    usageOptions?: Array<EnumOptionData>;
};

export type GLAccountDataForLookup = {
    glCode?: string;
    id?: number;
    name?: string;
};

export type GLClosureData = {
    allowedOffices?: Array<OfficeData>;
    closingDate?: string;
    comments?: string;
    createdByUserId?: number;
    createdByUsername?: string;
    createdDate?: string;
    deleted?: boolean;
    id?: number;
    lastUpdatedByUserId?: number;
    lastUpdatedByUsername?: string;
    lastUpdatedDate?: string;
    officeId?: number;
    officeName?: string;
};

export type GeoCodeData = {
    latitude: string;
    longitude: string;
};

/**
 * GetAccountNumberFormatsIdResponse
 */
export type GetAccountNumberFormatsIdResponse = {
    accountType?: EnumOptionData;
    id?: number;
    prefixType?: EnumOptionData;
};

/**
 * GetAccountNumberFormatsResponseTemplate
 */
export type GetAccountNumberFormatsResponseTemplate = {
    accountTypeOptions?: Array<EnumOptionData>;
    prefixTypeOptions?: {
        [key: string]: Array<EnumOptionData>;
    };
};

export type GetAccountOptions = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetAccountTransferTemplateResponse
 */
export type GetAccountTransferTemplateResponse = {
    accountTypeOptions?: Array<GetAccountOptions>;
    fromAccountTypeOptions?: Array<GetFromAccountOptions>;
    toAccountTypeOptions?: Array<GetFromAccountOptions>;
};

export type GetAccountTransfersClientClassification = {
    [key: string]: unknown;
};

export type GetAccountTransfersClientType = {
    [key: string]: unknown;
};

export type GetAccountTransfersFromAccountType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetAccountTransfersFromAccountTypeOptions = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetAccountTransfersFromClientOptions = {
    displayName?: string;
    id?: number;
    officeId?: number;
    officeName?: string;
};

export type GetAccountTransfersFromOffice = {
    externalId?: string;
    hierarchy?: string;
    id?: number;
    name?: string;
    nameDecorated?: string;
    openingDate?: string;
};

export type GetAccountTransfersFromOfficeOptions = {
    id?: number;
    name?: string;
    nameDecorated?: string;
};

export type GetAccountTransfersGender = {
    [key: string]: unknown;
};

export type GetAccountTransfersGroups = {
    [key: string]: unknown;
};

export type GetAccountTransfersPageItems = {
    currency?: GetAccountTransfersPageItemsCurrency;
    fromAccount?: GetAccountTransfersPageItemsFromAccount;
    fromAccountType?: GetAccountTransfersFromAccountType;
    fromClient?: GetAccountTransfersFromClientOptions;
    fromOffice?: GetAccountTransfersPageItemsFromOffice;
    id?: number;
    reversed?: boolean;
    toAccount?: GetAccountTransfersPageItemsFromAccount;
    toAccountType?: GetAccountTransfersPageItemsToAccountType;
    toClient?: GetAccountTransfersFromClientOptions;
    toOffice?: GetAccountTransfersPageItemsFromOffice;
    transferAmount?: number;
    transferDate?: string;
    transferDescription?: string;
};

export type GetAccountTransfersPageItemsCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetAccountTransfersPageItemsFromAccount = {
    accountNo?: number;
    id?: number;
};

export type GetAccountTransfersPageItemsFromOffice = {
    id?: number;
    name?: string;
};

export type GetAccountTransfersPageItemsToAccountType = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetAccountTransfersResponse
 */
export type GetAccountTransfersResponse = {
    pageItems?: Array<GetAccountTransfersPageItems>;
    totalFilteredRecords?: number;
};

export type GetAccountTransfersStatus = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetAccountTransfersTemplateRefundByTransferCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    inMultiplesOf?: number;
    name?: string;
    nameCode?: string;
};

export type GetAccountTransfersTemplateRefundByTransferFromAccount = {
    accountNo?: number;
    amtForTransfer?: number;
    clientId?: number;
    clientName?: string;
    currency?: GetAccountTransfersTemplateRefundByTransferCurrency;
    fieldOfficerId?: number;
    id?: number;
    productId?: number;
    productName?: string;
};

export type GetAccountTransfersTemplateRefundByTransferFromAccountOptions = {
    accountNo?: number;
    clientId?: number;
    clientName?: string;
    currency?: GetAccountTransfersTemplateRefundByTransferCurrency;
    fieldOfficerId?: number;
    id?: number;
    productId?: number;
    productName?: string;
};

export type GetAccountTransfersTemplateRefundByTransferFromClient = {
    accountNo?: number;
    activationDate?: string;
    active?: boolean;
    clientClassification?: GetAccountTransfersClientClassification;
    clientType?: GetAccountTransfersClientType;
    displayName?: string;
    firstname?: string;
    gender?: GetAccountTransfersGender;
    groups?: GetAccountTransfersGroups;
    id?: number;
    lastname?: string;
    officeId?: number;
    officeName?: string;
    status?: GetAccountTransfersStatus;
    timeline?: GetAccountTransfersTimeline;
};

export type GetAccountTransfersTemplateRefundByTransferFromClientOptions = {
    displayName?: string;
    id?: number;
    officeId?: number;
    officeName?: string;
};

export type GetAccountTransfersTemplateRefundByTransferFromOffice = {
    externalId?: string;
    hierarchy?: string;
    id?: number;
    name?: string;
    nameDecorated?: string;
    openingDate?: string;
};

export type GetAccountTransfersTemplateRefundByTransferFromOfficeOptions = {
    id?: number;
    name?: string;
    nameDecorated?: string;
};

/**
 * GetAccountTransfersTemplateRefundByTransferResponse
 */
export type GetAccountTransfersTemplateRefundByTransferResponse = {
    currency?: GetAccountTransfersTemplateRefundByTransferCurrency;
    fromAccount?: GetAccountTransfersTemplateRefundByTransferFromAccount;
    fromAccountOptions?: Array<GetAccountTransfersTemplateRefundByTransferFromAccountOptions>;
    fromAccountType?: GetAccountTransfersPageItemsToAccountType;
    fromAccountTypeOptions?: Array<GetAccountTransfersFromAccountType>;
    fromClient?: GetAccountTransfersTemplateRefundByTransferFromClient;
    fromClientOptions?: Array<GetAccountTransfersTemplateRefundByTransferFromClientOptions>;
    fromOffice?: GetAccountTransfersTemplateRefundByTransferFromOffice;
    fromOfficeOptions?: Array<GetAccountTransfersTemplateRefundByTransferFromOfficeOptions>;
    toAccount?: GetAccountTransfersTemplateRefundByTransferToAccount;
    toAccountOptions?: Array<GetAccountTransfersTemplateRefundByTransferToAccount>;
    toAccountType?: GetAccountTransfersFromAccountType;
    toAccountTypeOptions?: Array<GetAccountTransfersFromAccountType>;
    toClient?: GetAccountTransfersTemplateRefundByTransferToClient;
    toClientOptions?: Array<GetAccountTransfersTemplateRefundByTransferFromClientOptions>;
    toOffice?: GetAccountTransfersTemplateRefundByTransferFromOffice;
    toOfficeOptions?: Array<GetAccountTransfersTemplateRefundByTransferFromOfficeOptions>;
    transferAmount?: number;
    transferDate?: string;
};

export type GetAccountTransfersTemplateRefundByTransferToAccount = {
    accountNo?: number;
    clientId?: number;
    clientName?: string;
    currency?: GetAccountTransfersTemplateRefundByTransferCurrency;
    fieldOfficerId?: number;
    id?: number;
    productId?: number;
    productName?: string;
};

export type GetAccountTransfersTemplateRefundByTransferToClient = {
    displayName?: string;
    id?: number;
    officeId?: number;
    officeName?: string;
};

/**
 * GetAccountTransfersTemplateResponse
 */
export type GetAccountTransfersTemplateResponse = {
    fromAccountType?: GetAccountTransfersFromAccountType;
    fromAccountTypeOptions?: Array<GetAccountTransfersFromAccountTypeOptions>;
    fromClientOptions?: Array<GetAccountTransfersFromClientOptions>;
    fromOffice?: GetAccountTransfersFromOffice;
    fromOfficeOptions?: Array<GetAccountTransfersFromOfficeOptions>;
    toAccountTypeOptions?: Array<GetAccountTransfersToAccountTypeOptions>;
    toOfficeOptions?: Array<GetAccountTransfersToOfficeOptions>;
    transferAmount?: number;
    transferDate?: string;
};

export type GetAccountTransfersTimeline = {
    activatedByFirstname?: string;
    activatedByLastname?: string;
    activatedByUsername?: string;
    activatedOnDate?: string;
    submittedByFirstname?: string;
    submittedByLastname?: string;
    submittedByUsername?: string;
    submittedOnDate?: string;
};

export type GetAccountTransfersToAccountTypeOptions = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetAccountTransfersToOfficeOptions = {
    id?: number;
    name?: string;
    nameDecorated?: string;
};

export type GetAccountingMappingOptions = {
    [key: string]: unknown;
};

export type GetAccountsChargeCalculationType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetAccountsChargeTimeType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetAccountsCharges = {
    accountId?: number;
    amount?: number;
    amountOrPercentage?: number;
    amountOutstanding?: number;
    amountPaid?: number;
    amountPercentageAppliedTo?: number;
    amountWaived?: number;
    amountWrittenOff?: number;
    chargeCalculationType?: GetAccountsChargeCalculationType;
    chargeId?: number;
    chargeTimeType?: GetAccountsChargeTimeType;
    currency?: GetAccountsChargesCurrency;
    id?: number;
    isActive?: boolean;
    name?: string;
    percentage?: number;
};

export type GetAccountsChargesCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetAccountsCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    inMultiplesOf?: number;
    name?: string;
    nameCode?: string;
};

/**
 * GetAccountsLinkedToPocketResponse
 */
export type GetAccountsLinkedToPocketResponse = {
    loanAccounts?: Array<GetPocketLoanAccounts>;
    savingAccounts?: Array<GetPocketSavingAccounts>;
    shareAccounts?: Array<GetPocketShareAccounts>;
};

export type GetAccountsLockPeriodTypeEnum = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetAccountsPageItems = {
    accountNo?: number;
    clientId?: number;
    clientName?: string;
    currency?: GetAccountsChargesCurrency;
    id?: number;
    productId?: number;
    productName?: string;
    purchasedShares?: Array<GetAccountsTypePurchasedShares>;
    status?: GetAccountsTypeStatus;
    summary?: GetAccountsTypeSummary;
    timeline?: GetAccountsTypeTimeline;
};

export type GetAccountsPurchasedShares = {
    accountId?: number;
    amount?: number;
    amountPaid?: number;
    chargeAmount?: number;
    id?: number;
    numberOfShares?: number;
    purchasedDate?: string;
    purchasedPrice?: number;
    status?: GetAccountsPurchasedSharesStatus;
    type?: GetAccountsPurchasedSharesType;
};

export type GetAccountsPurchasedSharesStatus = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetAccountsPurchasedSharesType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetAccountsStatus = {
    active?: boolean;
    approved?: boolean;
    closed?: boolean;
    code?: string;
    description?: string;
    id?: number;
    rejected?: boolean;
    submittedAndPendingApproval?: boolean;
};

export type GetAccountsSummary = {
    accountNo?: number;
    currency?: GetAccountsCurrency;
    id?: number;
    productId?: number;
    productName?: string;
    status?: GetAccountsStatus;
    timeline?: GetAccountsTimeline;
    totalApprovedShares?: number;
    totalPendingForApprovalShares?: number;
};

export type GetAccountsTimeline = {
    activatedDate?: string;
    approvedByFirstname?: string;
    approvedByLastname?: string;
    approvedByUsername?: string;
    approvedDate?: string;
    submittedByFirstname?: string;
    submittedByLastname?: string;
    submittedByUsername?: string;
    submittedOnDate?: string;
};

/**
 * GetAccountsTypeAccountIdResponse
 */
export type GetAccountsTypeAccountIdResponse = {
    accountNo?: number;
    allowDividendCalculationForInactiveClients?: boolean;
    charges?: Array<GetAccountsCharges>;
    clientId?: number;
    clientName?: string;
    currency?: GetAccountsCurrency;
    currentMarketPrice?: number;
    dividends?: Array<(string)>;
    id?: number;
    lockPeriodTypeEnum?: GetAccountsLockPeriodTypeEnum;
    lockinPeriod?: number;
    minimumActivePeriod?: number;
    minimumActivePeriodTypeEnum?: GetAccountsLockPeriodTypeEnum;
    productId?: number;
    productName?: string;
    purchasedShares?: Array<GetAccountsPurchasedShares>;
    savingsAccountId?: number;
    savingsAccountNumber?: number;
    status?: GetAccountsStatus;
    summary?: GetAccountsSummary;
    timeline?: GetAccountsTimeline;
};

export type GetAccountsTypeProductOptions = {
    id?: number;
    name?: string;
    shortName?: string;
    totalShares?: number;
};

export type GetAccountsTypePurchasedShares = {
    id?: number;
    numberOfShares?: number;
    purchasedDate?: string;
    purchasedPrice?: number;
};

/**
 * GetAccountsTypeResponse
 */
export type GetAccountsTypeResponse = {
    pageItems?: Array<GetAccountsPageItems>;
    totalFilteredRecords?: number;
};

export type GetAccountsTypeStatus = {
    active?: boolean;
    approved?: boolean;
    closed?: boolean;
    code?: string;
    description?: string;
    id?: number;
    rejected?: boolean;
    submittedAndPendingApproval?: boolean;
};

export type GetAccountsTypeSummary = {
    currency?: GetAccountsChargesCurrency;
};

/**
 * GetAccountsTypeTemplateResponse
 */
export type GetAccountsTypeTemplateResponse = {
    clientId?: number;
    clientName?: string;
    productOptions?: Array<GetAccountsTypeProductOptions>;
};

export type GetAccountsTypeTimeline = {
    submittedOnDate?: string;
};

export type GetAssetType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetCentersAccountType = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetCentersCenterIdAccountsResponse
 */
export type GetCentersCenterIdAccountsResponse = {
    savingsAccounts?: Array<GetCentersSavingsAccounts>;
};

export type GetCentersCenterIdCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    inMultiplesOf?: number;
    name?: string;
    nameCode?: string;
};

/**
 * GetCentersCenterIdResponse
 */
export type GetCentersCenterIdResponse = {
    active?: boolean;
    hierarchy?: string;
    id?: number;
    name?: string;
    officeId?: number;
    officeName?: string;
    status?: GetCentersStatus;
};

export type GetCentersCenterIdStatus = {
    active?: boolean;
    approved?: boolean;
    closed?: boolean;
    code?: string;
    description?: string;
    id?: number;
    prematureClosed?: boolean;
    rejected?: boolean;
    submittedAndPendingApproval?: boolean;
    transferInProgress?: boolean;
    transferOnHold?: boolean;
    withdrawnByApplicant?: boolean;
};

export type GetCentersDepositType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetCentersOfficeOptions = {
    id?: number;
    name?: string;
    nameDecorated?: string;
};

export type GetCentersPageItems = {
    active?: boolean;
    hierarchy?: string;
    id?: number;
    name?: string;
    officeId?: number;
    officeName?: string;
    status?: GetCentersStatus;
};

/**
 * GetCentersResponse
 */
export type GetCentersResponse = {
    pageItems?: Array<GetCentersPageItems>;
    totalFilteredRecords?: number;
};

export type GetCentersSavingsAccounts = {
    accountNo?: number;
    accountType?: GetCentersAccountType;
    currency?: GetCentersCenterIdCurrency;
    depositType?: GetCentersDepositType;
    id?: number;
    productId?: number;
    productName?: string;
    status?: GetCentersCenterIdStatus;
    timeline?: GetCentersTimeline;
};

export type GetCentersStaffOptions = {
    displayName?: string;
    id?: number;
};

export type GetCentersStatus = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetCentersTemplateResponse
 */
export type GetCentersTemplateResponse = {
    activationDate?: string;
    active?: boolean;
    officeId?: number;
    officeOptions?: Array<GetCentersOfficeOptions>;
    staffOptions?: Array<GetCentersStaffOptions>;
};

export type GetCentersTimeline = {
    submittedByFirstname?: string;
    submittedByLastname?: string;
    submittedByUsername?: string;
    submittedOnDate?: string;
};

export type GetChargeAppliesTo = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetChargeCalculationType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetChargeOffReasonToExpenseAccountMappings = {
    chargeOffReasonCodeValue?: GetCodeValueData;
    expenseAccount?: GetGLAccountData;
};

export type GetChargePaymentMode = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetChargeTimeType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetChargesAppliesTo = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetChargesAppliesToResponse = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetChargesCalculationTypeResponse = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetChargesChargeCalculationType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetChargesChargeTimeType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetChargesCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetChargesCurrencyResponse = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetChargesPaymentModeResponse = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetChargesResponse
 */
export type GetChargesResponse = {
    active?: boolean;
    amount?: number;
    chargeAppliesTo?: GetChargesAppliesToResponse;
    chargeCalculationType?: GetChargesCalculationTypeResponse;
    chargePaymentMode?: GetChargesPaymentModeResponse;
    chargeTimeType?: GetChargesTimeTypeResponse;
    currency?: GetChargesCurrencyResponse;
    id?: number;
    maxCap?: number;
    minCap?: number;
    name?: string;
    penalty?: boolean;
    taxGroup?: GetChargesTaxGroup;
};

export type GetChargesTaxGroup = {
    id?: number;
    name?: string;
};

export type GetChargesTimeTypeResponse = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetClientChargeCalculationType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetClientChargeCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetClientChargeTimeType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetClientIdProductIdAccountingMappings = {
    ShareEquityId?: GetShareAccountsShareEquityId;
    incomeFromFeeAccountId?: GetShareAccountsIncomeFromFeeAccountId;
    shareReferenceId?: GetShareAccountsShareReferenceId;
    shareSuspenseId?: GetShareAccountsShareSuspenseId;
};

export type GetClientIdProductIdChargeOptions = {
    chargeOptions?: GetShareAccountsChargeOptions;
};

export type GetClientIdProductIdLockinPeriodFrequencyTypeOptions = {
    code?: string;
    description?: number;
    id?: number;
};

export type GetClientIdProductIdMinimumActivePeriodFrequencyTypeOptions = {
    code?: string;
    description?: number;
    id?: number;
};

export type GetClientIdProductIdProductOptions = {
    accountingMappingOptions?: GetAccountingMappingOptions;
    accountingMappings?: GetClientIdProductIdAccountingMappings;
    accountingRule?: GetShareAccountsClientIdProductIdAccountingRule;
    allowDividendCalculationForInactiveClients?: boolean;
    chargeOptions?: GetShareAccountsChargeOptions;
    charges?: string;
    currency?: GetShareAccountsCurrency;
    currencyOptions?: GetShareAccountsCurrency;
    description?: string;
    id?: number;
    lockinPeriod?: number;
    lockinPeriodEnum?: GetShareAccountsClientIdProductIdLockPeriodTypeEnum;
    lockinPeriodFrequencyTypeOptions?: GetClientIdProductIdLockinPeriodFrequencyTypeOptions;
    marketPrice?: string;
    maximumShares?: number;
    minimumActivePeriod?: number;
    minimumActivePeriodForDividendsTypeEnum?: GetShareAccountsClientIdProductIdMinimumActivePeriodForDividendsTypeEnum;
    minimumActivePeriodFrequencyTypeOptions?: GetClientIdProductIdMinimumActivePeriodFrequencyTypeOptions;
    minimumShares?: number;
    name?: string;
    norminalShares?: number;
    shareCapital?: number;
    shortName?: string;
    totalShares?: number;
    totalSharesIssued?: number;
    unitPrice?: number;
};

/**
 * GetClientObligeeDetailsResponse
 */
export type GetClientObligeeDetailsResponse = {
    obligees?: Array<GetObligeeData>;
};

export type GetClientStatus = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetClientTransactionsCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

/**
 * GetClientTransferProposalDateResponse
 */
export type GetClientTransferProposalDateResponse = {
    proposedTransferDate?: string;
};

export type GetClientsChargesPageItems = {
    amount?: number;
    amountOutstanding?: number;
    amountPaid?: number;
    amountWaived?: number;
    amountWrittenOff?: number;
    chargeCalculationType?: GetClientChargeCalculationType;
    chargeId?: number;
    chargeTimeType?: GetClientChargeTimeType;
    clientId?: number;
    currency?: GetClientChargeCurrency;
    dueDate?: string;
    id?: number;
    isActive?: boolean;
    isPaid?: boolean;
    isWaived?: boolean;
    name?: string;
    penalty?: boolean;
};

/**
 * GetClientsClientIdAccountsResponse
 */
export type GetClientsClientIdAccountsResponse = {
    loanAccounts?: Array<GetClientsLoanAccounts>;
    savingsAccounts?: Array<GetClientsSavingsAccounts>;
};

/**
 * GetClientsClientIdChargesResponse
 */
export type GetClientsClientIdChargesResponse = {
    pageItems?: Array<GetClientsChargesPageItems>;
    totalFilteredRecords?: number;
};

/**
 * GetClientsClientIdIdentifiersResponse
 */
export type GetClientsClientIdIdentifiersResponse = {
    clientId?: number;
    description?: string;
    documentKey?: string;
    documentType?: GetClientsDocumentType;
    id?: number;
};

/**
 * GetClientsClientIdResponse
 */
export type GetClientsClientIdResponse = {
    accountNo?: string;
    activationDate?: string;
    active?: boolean;
    displayName?: string;
    emailAddress?: string;
    externalId?: string;
    firstname?: string;
    groups?: Array<GetClientsGroups>;
    id?: number;
    lastname?: string;
    officeId?: number;
    officeName?: string;
    savingsProductId?: number;
    savingsProductName?: string;
    status?: GetClientsClientIdStatus;
    timeline?: GetClientsTimeline;
};

export type GetClientsClientIdStatus = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetClientsClientIdTransactionsResponse
 */
export type GetClientsClientIdTransactionsResponse = {
    pageItems?: Array<GetClientsPageItems>;
    totalFilteredRecords?: number;
};

/**
 * GetClientsClientIdTransactionsTransactionIdResponse
 */
export type GetClientsClientIdTransactionsTransactionIdResponse = {
    amount?: number;
    currency?: GetClientTransactionsCurrency;
    date?: string;
    id?: number;
    officeId?: number;
    officeName?: string;
    reversed?: boolean;
    submittedOnDate?: string;
    type?: GetClientsClientIdTransactionsType;
};

export type GetClientsClientIdTransactionsType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetClientsColumnHeaderData = {
    columnDisplayType?: string;
    columnLength?: number;
    columnName?: string;
    columnType?: string;
    columnValues?: Array<(string)>;
    isColumnNullable?: boolean;
    isColumnPrimaryKey?: boolean;
};

export type GetClientsDataTables = {
    applicationTableName?: string;
    columnHeaderData?: Array<GetClientsColumnHeaderData>;
    registeredTableName?: string;
};

export type GetClientsDocumentType = {
    id?: number;
    name?: string;
};

export type GetClientsGroups = {
    accountNo?: string;
    externalId?: number;
    id?: number;
    name?: string;
};

export type GetClientsLoanAccounts = {
    accountNo?: string;
    currency?: GetClientsLoansAccountsCurrency;
    externalId?: string;
    id?: number;
    loanCycle?: number;
    loanType?: GetClientsLoanAccountsType;
    productId?: number;
    productName?: string;
    status?: GetClientsLoanAccountsStatus;
};

export type GetClientsLoanAccountsStatus = {
    active?: boolean;
    closed?: boolean;
    closedObligationsMet?: boolean;
    closedRescheduled?: boolean;
    closedWrittenOff?: boolean;
    code?: string;
    description?: string;
    id?: number;
    overpaid?: boolean;
    pendingApproval?: boolean;
    waitingForDisbursal?: boolean;
};

export type GetClientsLoanAccountsType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetClientsLoansAccountsCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetClientsOfficeOptions = {
    id?: number;
    name?: string;
    nameDecorated?: string;
};

export type GetClientsPageItems = {
    amount?: number;
    currency?: GetClientTransactionsCurrency;
    date?: string;
    id?: number;
    officeId?: number;
    officeName?: string;
    reversed?: boolean;
    submittedOnDate?: string;
    type?: GetClientsClientIdTransactionsType;
};

export type GetClientsPageItemsResponse = {
    accountNo?: string;
    active?: boolean;
    displayName?: string;
    emailAddress?: string;
    fullname?: string;
    id?: number;
    officeId?: number;
    officeName?: string;
    status?: GetClientStatus;
};

/**
 * GetClientsResponse
 */
export type GetClientsResponse = {
    pageItems?: Array<GetClientsPageItemsResponse>;
    totalFilteredRecords?: number;
};

export type GetClientsSavingProductOptions = {
    allowOverdraft?: boolean;
    id?: number;
    name?: string;
    withdrawalFeeForTransfers?: boolean;
};

export type GetClientsSavingsAccounts = {
    accountNo?: string;
    currency?: GetClientsSavingsAccountsCurrency;
    depositType?: GetClientsSavingsAccountsDepositType;
    id?: number;
    productId?: number;
    productName?: string;
    shortProductName?: string;
    status?: GetClientsSavingsAccountsStatus;
};

export type GetClientsSavingsAccountsCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetClientsSavingsAccountsDepositType = {
    code?: string;
    id?: number;
    value?: string;
};

export type GetClientsSavingsAccountsStatus = {
    active?: boolean;
    approved?: boolean;
    closed?: boolean;
    code?: string;
    id?: number;
    matured?: boolean;
    prematureClosed?: boolean;
    rejected?: boolean;
    submittedAndPendingApproval?: boolean;
    transferInProgress?: boolean;
    transferOnHold?: boolean;
    value?: string;
    withdrawnByApplicant?: boolean;
};

export type GetClientsStaffOptions = {
    displayName?: string;
    firstname?: string;
    id?: number;
    isActive?: boolean;
    isLoanOfficer?: boolean;
    lastname?: string;
    officeId?: number;
    officeName?: string;
};

/**
 * GetClientsTemplateResponse
 */
export type GetClientsTemplateResponse = {
    activationDate?: string;
    datatables?: Array<GetClientsDataTables>;
    officeId?: number;
    officeOptions?: Array<GetClientsOfficeOptions>;
    savingProductOptions?: Array<GetClientsSavingProductOptions>;
    staffOptions?: Array<GetClientsStaffOptions>;
};

export type GetClientsTimeline = {
    activatedByFirstname?: string;
    activatedByLastname?: string;
    activatedByUsername?: string;
    activatedOnDate?: string;
    submittedByFirstname?: string;
    submittedByLastname?: string;
    submittedByUsername?: string;
    submittedOnDate?: string;
};

export type GetCodeValueData = {
    active?: boolean;
    description?: string;
    id?: number;
    mandatory?: boolean;
    name?: string;
    position?: number;
};

/**
 * GetCodeValuesDataResponse
 */
export type GetCodeValuesDataResponse = {
    description?: string;
    id?: number;
    name?: string;
    position?: number;
};

/**
 * GetCodesResponse
 */
export type GetCodesResponse = {
    id?: number;
    name?: string;
    systemDefined?: boolean;
};

export type GetCollateralCurrencyResponse = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetCollateralTypeResponse = {
    id?: number;
    name?: string;
};

/**
 * GetDataTablesResponse
 */
export type GetDataTablesResponse = {
    applicationTableName?: string;
    columnHeaderData?: Array<ResultsetColumnHeaderData>;
    registeredTableName?: string;
};

/**
 * GetDelinquencyActionsResponse
 */
export type GetDelinquencyActionsResponse = {
    action?: string;
    createdById?: number;
    createdOn?: string;
    endDate?: string;
    id?: number;
    lastModifiedOn?: string;
    startDate?: string;
    updatedById?: number;
};

/**
 * GetDelinquencyTagHistoryResponse
 */
export type GetDelinquencyTagHistoryResponse = {
    addedOnDate?: string;
    delinquencyRange?: DelinquencyRangeData;
    id?: number;
    liftedOnDate?: string;
    loanId?: number;
};

/**
 * GetEntityDatatableChecksResponse
 */
export type GetEntityDatatableChecksResponse = {
    datatableName?: string;
    entity?: string;
    id?: number;
    order?: number;
    productId?: number;
    productName?: string;
    status?: EnumOptionData;
    systemDefined?: boolean;
};

/**
 * GetEntityDatatableChecksTemplateResponse
 */
export type GetEntityDatatableChecksTemplateResponse = {
    datatables?: Array<DatatableChecksData>;
    entities?: Array<(string)>;
    loanProductDatas?: Array<LoanProductData>;
    savingsProductDatas?: Array<SavingsProductData>;
    statusClient?: Array<DatatableCheckStatusData>;
    statusGroup?: Array<DatatableCheckStatusData>;
    statusLoans?: Array<DatatableCheckStatusData>;
    statusSavings?: Array<DatatableCheckStatusData>;
};

export type GetEquityType = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetFinancialActivityAccountsResponse
 */
export type GetFinancialActivityAccountsResponse = {
    financialActivityData?: FinancialActivityData;
    glAccountData?: GLAccountData;
    id?: number;
};

export type GetFixedDepositAccountsAccountChart = {
    accountId?: number;
    accountNumber?: number;
    chartSlabs?: Array<GetFixedDepositAccountsChartSlabs>;
    fromDate?: string;
    id?: number;
    periodTypes?: Array<GetFixedDepositAccountsPeriodTypes>;
};

export type GetFixedDepositAccountsAccountChartCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetFixedDepositAccountsAccountIdCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    inMultiplesOf?: number;
    name?: string;
    nameCode?: string;
};

/**
 * GetFixedDepositAccountsAccountIdResponse
 */
export type GetFixedDepositAccountsAccountIdResponse = {
    accountChart?: GetFixedDepositAccountsAccountChart;
    accountNo?: number;
    clientId?: number;
    clientName?: string;
    currency?: GetFixedDepositAccountsAccountIdCurrency;
    depositAmount?: number;
    depositPeriod?: number;
    depositPeriodFrequency?: GetFixedDepositAccountsDepositPeriodFrequency;
    externalId?: string;
    fieldOfficerId?: number;
    id?: number;
    interestCalculationDaysInYearType?: GetFixedDepositAccountsInterestCalculationDaysInYearType;
    interestCalculationType?: GetFixedDepositAccountsInterestCalculationType;
    interestCompoundingPeriodType?: GetFixedDepositAccountsInterestCompoundingPeriodType;
    interestFreePeriodApplicable?: boolean;
    interestPostingPeriodType?: GetFixedDepositAccountsInterestPostingPeriodType;
    maturityAmount?: number;
    maturityDate?: string;
    maxDepositTerm?: number;
    maxDepositTermType?: GetFixedDepositAccountsMaxDepositTermType;
    minDepositTerm?: number;
    minDepositTermType?: GetFixedDepositAccountsMinDepositTermType;
    preClosurePenalApplicable?: boolean;
    savingsProductId?: number;
    savingsProductName?: string;
    status?: GetFixedDepositAccountsStatus;
    summary?: GetFixedDepositAccountsAccountIdSummary;
    timeline?: GetFixedDepositAccountsTimeline;
};

export type GetFixedDepositAccountsAccountIdSummary = {
    accountBalance?: number;
    currency?: GetFixedDepositAccountsAccountIdCurrency;
};

export type GetFixedDepositAccountsChartSlabs = {
    annualInterestRate?: number;
    currency?: GetFixedDepositAccountsAccountChartCurrency;
    fromPeriod?: number;
    id?: number;
    periodType?: GetFixedDepositAccountsPeriodType;
    toPeriod?: number;
};

export type GetFixedDepositAccountsCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    inMultiplesOf?: number;
    name?: string;
    nameCode?: string;
};

export type GetFixedDepositAccountsDepositPeriodFrequency = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositAccountsInterestCalculationDaysInYearType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositAccountsInterestCalculationType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositAccountsInterestCompoundingPeriodType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositAccountsInterestPostingPeriodType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositAccountsMaxDepositTermType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositAccountsMinDepositTermType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositAccountsPeriodType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositAccountsPeriodTypes = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositAccountsProductOptions = {
    id?: number;
    name?: string;
};

/**
 * GetFixedDepositAccountsResponse
 */
export type GetFixedDepositAccountsResponse = {
    accountNo?: number;
    clientId?: number;
    clientName?: string;
    currency?: GetFixedDepositAccountsCurrency;
    depositAmount?: number;
    depositPeriod?: number;
    depositPeriodFrequency?: GetFixedDepositAccountsDepositPeriodFrequency;
    fieldOfficerId?: number;
    id?: number;
    interestCalculationDaysInYearType?: GetFixedDepositAccountsInterestCalculationDaysInYearType;
    interestCalculationType?: GetFixedDepositAccountsInterestCalculationType;
    interestCompoundingPeriodType?: GetFixedDepositAccountsInterestCompoundingPeriodType;
    interestFreePeriodApplicable?: boolean;
    interestPostingPeriodType?: GetFixedDepositAccountsInterestPostingPeriodType;
    maturityAmount?: number;
    maturityDate?: string;
    maxDepositTerm?: number;
    maxDepositTermType?: GetFixedDepositAccountsMaxDepositTermType;
    minDepositTerm?: number;
    minDepositTermType?: GetFixedDepositAccountsMinDepositTermType;
    preClosurePenalApplicable?: boolean;
    savingsProductId?: number;
    savingsProductName?: string;
    status?: GetFixedDepositAccountsStatus;
    summary?: GetFixedDepositAccountsSummary;
    timeline?: GetFixedDepositAccountsTimeline;
};

export type GetFixedDepositAccountsStatus = {
    active?: boolean;
    approved?: boolean;
    closed?: boolean;
    code?: string;
    description?: string;
    id?: number;
    prematureClosed?: boolean;
    rejected?: boolean;
    submittedAndPendingApproval?: boolean;
    transferInProgress?: boolean;
    transferOnHold?: boolean;
    withdrawnByApplicant?: boolean;
};

export type GetFixedDepositAccountsSummary = {
    accountBalance?: number;
    currency?: GetFixedDepositAccountsCurrency;
};

/**
 * GetFixedDepositAccountsTemplateResponse
 */
export type GetFixedDepositAccountsTemplateResponse = {
    clientId?: number;
    clientName?: string;
    productOptions?: Array<GetFixedDepositAccountsProductOptions>;
};

export type GetFixedDepositAccountsTimeline = {
    submittedByFirstname?: string;
    submittedByLastname?: string;
    submittedByUsername?: string;
    submittedOnDate?: string;
};

export type GetFixedDepositProductsAccountingRule = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositProductsCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    inMultiplesOf?: number;
    name?: string;
    nameCode?: string;
};

export type GetFixedDepositProductsGlAccount = {
    glCode?: number;
    id?: number;
    name?: string;
};

export type GetFixedDepositProductsInterestCalculationDaysInYearType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositProductsInterestCalculationType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositProductsInterestCompoundingPeriodType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositProductsInterestPostingPeriodType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositProductsMaxDepositTermType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositProductsMinDepositTermType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositProductsProductIdAccountingMappings = {
    feeReceivableAccount?: GetFixedDepositProductsGlAccount;
    incomeFromFeeAccount?: GetFixedDepositProductsGlAccount;
    incomeFromPenaltyAccount?: GetFixedDepositProductsGlAccount;
    interestOnSavingsAccount?: GetFixedDepositProductsGlAccount;
    interestPayableAccount?: GetFixedDepositProductsGlAccount;
    penaltyReceivableAccount?: GetFixedDepositProductsGlAccount;
    savingsControlAccount?: GetFixedDepositProductsGlAccount;
    savingsReferenceAccount?: GetFixedDepositProductsGlAccount;
    transfersInSuspenseAccount?: GetFixedDepositProductsGlAccount;
};

export type GetFixedDepositProductsProductIdActiveChart = {
    chartSlabs?: Array<GetFixedDepositProductsProductIdChartSlabs>;
    fromDate?: string;
    id?: number;
    periodTypes?: Array<GetFixedDepositProductsProductIdPeriodType>;
    savingsProductId?: number;
    savingsProductName?: string;
};

export type GetFixedDepositProductsProductIdChartSlabs = {
    annualInterestRate?: number;
    currency?: GetFixedDepositProductsProductIdCurrency;
    description?: string;
    fromPeriod?: number;
    id?: number;
    periodType?: GetFixedDepositProductsProductIdPeriodType;
    toPeriod?: number;
};

export type GetFixedDepositProductsProductIdCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetFixedDepositProductsProductIdFeeToIncomeAccountMappings = {
    charge?: GetFixedDepositProductsProductIdFeeToIncomeAccountMappingsCharge;
    incomeAccount?: GetFixedDepositProductsProductIdFeeToIncomeAccountMappingsIncomeAccount;
};

export type GetFixedDepositProductsProductIdFeeToIncomeAccountMappingsCharge = {
    active?: boolean;
    id?: number;
    name?: string;
    penalty?: boolean;
};

export type GetFixedDepositProductsProductIdFeeToIncomeAccountMappingsIncomeAccount = {
    glCode?: string;
    id?: number;
    name?: string;
};

export type GetFixedDepositProductsProductIdInterestCompoundingPeriodType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositProductsProductIdMaxDepositTermType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositProductsProductIdMinDepositTermType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositProductsProductIdPenaltyToIncomeAccountMappings = {
    charge?: GetFixedDepositProductsProductIdPenaltyToIncomeAccountMappingsCharge;
    incomeAccount?: GetFixedDepositProductsGlAccount;
};

export type GetFixedDepositProductsProductIdPenaltyToIncomeAccountMappingsCharge = {
    active?: boolean;
    id?: number;
    name?: string;
    penalty?: boolean;
};

export type GetFixedDepositProductsProductIdPeriodType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFixedDepositProductsProductIdPreClosurePenalInterestOnType = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetFixedDepositProductsProductIdResponse
 */
export type GetFixedDepositProductsProductIdResponse = {
    accountingMappings?: GetFixedDepositProductsProductIdAccountingMappings;
    activeChart?: GetFixedDepositProductsProductIdActiveChart;
    currency?: GetFixedDepositProductsProductIdCurrency;
    description?: string;
    feeToIncomeAccountMappings?: Array<GetFixedDepositProductsProductIdFeeToIncomeAccountMappings>;
    id?: number;
    interestCalculationDaysInYearType?: GetFixedDepositProductsInterestCalculationDaysInYearType;
    interestCalculationType?: GetFixedDepositProductsInterestCalculationType;
    interestCompoundingPeriodType?: GetFixedDepositProductsProductIdInterestCompoundingPeriodType;
    interestPostingPeriodType?: GetFixedDepositProductsInterestPostingPeriodType;
    maxDepositTerm?: number;
    maxDepositTermType?: GetFixedDepositProductsProductIdMaxDepositTermType;
    minDepositTerm?: number;
    minDepositTermType?: GetFixedDepositProductsProductIdMinDepositTermType;
    name?: string;
    penaltyToIncomeAccountMappings?: Array<GetFixedDepositProductsProductIdPenaltyToIncomeAccountMappings>;
    preClosurePenalApplicable?: boolean;
    preClosurePenalInterest?: number;
    preClosurePenalInterestOnType?: GetFixedDepositProductsProductIdPreClosurePenalInterestOnType;
    shortName?: string;
};

/**
 * GetFixedDepositProductsResponse
 */
export type GetFixedDepositProductsResponse = {
    accountingRule?: GetFixedDepositProductsAccountingRule;
    currency?: GetFixedDepositProductsCurrency;
    description?: string;
    id?: number;
    interestCalculationDaysInYearType?: GetFixedDepositProductsInterestCalculationDaysInYearType;
    interestCalculationType?: GetFixedDepositProductsInterestCalculationType;
    interestCompoundingPeriodType?: GetFixedDepositProductsInterestCompoundingPeriodType;
    interestPostingPeriodType?: GetFixedDepositProductsInterestPostingPeriodType;
    maxDepositTerm?: number;
    maxDepositTermType?: GetFixedDepositProductsMaxDepositTermType;
    minDepositTerm?: number;
    minDepositTermType?: GetFixedDepositProductsMinDepositTermType;
    name?: string;
    nominalAnnualInterestRate?: number;
    preClosurePenalApplicable?: boolean;
    shortName?: string;
};

/**
 * GetFloatingRatesResponse
 */
export type GetFloatingRatesResponse = {
    createdBy?: string;
    createdOn?: string;
    id?: number;
    isActive?: boolean;
    isBaseLendingRate?: boolean;
    modifiedBy?: string;
    modifiedOn?: string;
    name?: string;
};

export type GetFromAccountOptions = {
    accountId?: number;
    accountNo?: number;
    accountType?: GetAccountOptions;
    clientId?: number;
    clientName?: string;
    officeId?: number;
    officeName?: string;
};

export type GetFromAccountStandingInstructionSwagger = {
    accountNo?: number;
    id?: number;
    productId?: number;
    productName?: string;
};

export type GetFromAccountTypeOptionsResponseStandingInstructionSwagger = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFromAccountTypeResponseStandingInstructionSwagger = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFromAccountTypeStandingInstructionSwagger = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetFromClientOptionsResponseStandingInstructionSwagger = {
    displayName?: string;
    id?: number;
    officeId?: number;
    officeName?: string;
};

export type GetFromClientStandingInstructionSwagger = {
    displayName?: string;
    id?: number;
    officeId?: number;
    officeName?: string;
};

export type GetFromOfficeOptionsResponseStandingInstructionSwagger = {
    id?: number;
    name?: string;
    nameDecorated?: string;
};

export type GetFromOfficeResponseStandingInstructionSwagger = {
    decoratedName?: string;
    externalId?: string;
    hierarchy?: string;
    id?: number;
    name?: string;
    openingDate?: string;
};

export type GetFromOfficeStandingInstructionSwagger = {
    id?: number;
    name?: string;
};

export type GetGLAccountData = {
    glCode?: string;
    id?: number;
    name?: string;
};

/**
 * GetGLAccountsResponse
 */
export type GetGLAccountsResponse = {
    description?: string;
    disabled?: boolean;
    glCode?: string;
    id?: number;
    manualEntriesAllowed?: boolean;
    name?: string;
    nameDecorated?: string;
    organizationRunningBalance?: number;
    parentId?: number;
    tagId?: CodeValueData;
    type?: EnumOptionData;
    usage?: EnumOptionData;
};

/**
 * GetGLAccountsTemplateResponse
 */
export type GetGLAccountsTemplateResponse = {
    accountTypeOptions?: Array<EnumOptionData>;
    allowedAssetsTagOptions?: Array<CodeValueData>;
    allowedEquityTagOptions?: Array<CodeValueData>;
    allowedExpensesTagOptions?: Array<CodeValueData>;
    allowedIncomeTagOptions?: Array<CodeValueData>;
    allowedLiabilitiesTagOptions?: Array<CodeValueData>;
    assetHeaderAccountOptions?: Array<GLAccountData>;
    disabled?: boolean;
    equityHeaderAccountOptions?: Array<GLAccountData>;
    expenseHeaderAccountOptions?: Array<GLAccountData>;
    liabilityHeaderAccountOptions?: Array<GLAccountData>;
    manualEntriesAllowed?: boolean;
    type?: EnumOptionData;
    usage?: EnumOptionData;
    usageOptions?: Array<EnumOptionData>;
};

export type GetGlAccountMapping = {
    glCode?: string;
    id?: number;
    name?: string;
};

/**
 * GetGLClosureResponse
 */
export type GetGlClosureResponse = {
    closingDate?: string;
    comments?: string;
    createdByUserId?: number;
    createdByUsername?: string;
    createdDate?: string;
    deleted?: boolean;
    id?: number;
    lastUpdatedByUserId?: number;
    lastUpdatedByUsername?: string;
    lastUpdatedDate?: string;
    officeId?: number;
    officeName?: string;
};

/**
 * GetGlobalConfigurationsResponse
 */
export type GetGlobalConfigurationsResponse = {
    globalConfiguration?: Array<GlobalConfigurationPropertyData>;
};

export type GetGroupsGroupIdAccountsLoanAccounts = {
    accountNo?: number;
    id?: number;
    loanType?: GetGroupsGroupIdAccountsLoanType;
    productId?: number;
    productName?: string;
    status?: GetGroupsGroupIdAccountsStatus;
};

export type GetGroupsGroupIdAccountsLoanType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetGroupsGroupIdAccountsMemberLoanAccounts = {
    accountNo?: number;
    id?: number;
    loanType?: GetGroupsGroupIdAccountsMemberLoanType;
    productId?: number;
    productName?: string;
    status?: GetGroupsGroupIdAccountsMemberLoanStatus;
};

export type GetGroupsGroupIdAccountsMemberLoanStatus = {
    active?: boolean;
    closed?: boolean;
    closedObligationsMet?: boolean;
    closedRescheduled?: boolean;
    closedWrittenOff?: boolean;
    code?: string;
    description?: string;
    id?: number;
    overpaid?: boolean;
    pendingApproval?: boolean;
    waitingForDisbursal?: boolean;
};

export type GetGroupsGroupIdAccountsMemberLoanType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetGroupsGroupIdAccountsMemberSavingsAccounts = {
    accountNo?: number;
    accountType?: GetGroupsGroupIdAccountsMemberLoanType;
    currency?: GetGroupsGroupIdAccountsSavingCurrency;
    id?: number;
    productId?: number;
    productName?: string;
    status?: GetGroupsGroupIdAccountsSavingStatus;
};

/**
 * GetGroupsGroupIdAccountsResponse
 */
export type GetGroupsGroupIdAccountsResponse = {
    loanAccounts?: Array<GetGroupsGroupIdAccountsLoanAccounts>;
    memberLoanAccounts?: Array<GetGroupsGroupIdAccountsMemberLoanAccounts>;
    memberSavingsAccounts?: Array<GetGroupsGroupIdAccountsMemberSavingsAccounts>;
    savingsAccounts?: Array<GetGroupsGroupIdAccountsSavingAccounts>;
};

export type GetGroupsGroupIdAccountsSavingAccountType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetGroupsGroupIdAccountsSavingAccounts = {
    accountNo?: number;
    accountType?: GetGroupsGroupIdAccountsSavingAccountType;
    currency?: GetGroupsGroupIdAccountsSavingCurrency;
    id?: number;
    productId?: number;
    productName?: string;
    status?: GetGroupsGroupIdAccountsSavingStatus;
};

export type GetGroupsGroupIdAccountsSavingCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetGroupsGroupIdAccountsSavingStatus = {
    active?: boolean;
    approved?: boolean;
    closed?: boolean;
    code?: string;
    description?: string;
    id?: number;
    rejected?: boolean;
    submittedAndPendingApproval?: boolean;
    withdrawnByApplicant?: boolean;
};

export type GetGroupsGroupIdAccountsStatus = {
    active?: boolean;
    closed?: boolean;
    closedObligationsMet?: boolean;
    closedRescheduled?: boolean;
    closedWrittenOff?: boolean;
    code?: string;
    description?: string;
    id?: number;
    overpaid?: boolean;
    pendingApproval?: boolean;
    waitingForDisbursal?: boolean;
};

/**
 * GetGroupsGroupIdResponse
 */
export type GetGroupsGroupIdResponse = {
    externalId?: string;
    hierarchy?: string;
    id?: number;
    name?: string;
    officeId?: number;
    officeName?: string;
    timeline?: GetGroupsGroupIdTimeline;
};

export type GetGroupsGroupIdTimeline = {
    activatedByFirstname?: string;
    activatedByLastname?: string;
    activatedByUsername?: string;
    activatedOnDate?: string;
};

export type GetGroupsPageItems = {
    active?: boolean;
    hierarchy?: string;
    id?: number;
    name?: string;
    officeId?: number;
    officeName?: string;
    status?: GetGroupsStatus;
};

/**
 * GetGroupsResponse
 */
export type GetGroupsResponse = {
    pageItems?: Array<GetGroupsPageItems>;
    totalFilteredRecords?: number;
};

export type GetGroupsStatus = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetGroupsTemplateClientOptions = {
    displayName?: string;
    id?: number;
    officeId?: number;
    officeName?: string;
};

export type GetGroupsTemplateColumnHeaderData = {
    columnDisplayType?: string;
    columnLength?: number;
    columnName?: string;
    columnType?: string;
    columnValues?: Array<GetGroupsTemplateColumnValues>;
    isColumnNullable?: boolean;
    isColumnPrimaryKey?: boolean;
};

export type GetGroupsTemplateColumnValues = {
    [key: string]: unknown;
};

export type GetGroupsTemplateDatatables = {
    applicationTableName?: string;
    columnHeaderData?: Array<GetGroupsTemplateColumnHeaderData>;
    registeredTableName?: string;
};

export type GetGroupsTemplateOfficeOptions = {
    id?: number;
    name?: string;
    nameDecorated?: string;
};

/**
 * GetGroupsTemplateResponse
 */
export type GetGroupsTemplateResponse = {
    clientOptions?: Array<GetGroupsTemplateClientOptions>;
    datatables?: Array<GetGroupsTemplateDatatables>;
    officeId?: number;
    officeOptions?: Array<GetGroupsTemplateOfficeOptions>;
    staffOptions?: Array<GetGroupsTemplateStaffOptions>;
};

export type GetGroupsTemplateStaffOptions = {
    displayName?: string;
    id?: number;
};

/**
 * GetHolidaysResponse
 */
export type GetHolidaysResponse = {
    fromDate?: string;
    id?: number;
    name?: string;
    officeId?: number;
    repaymentsRescheduledTo?: string;
    status?: EnumOptionData;
    toDate?: string;
};

/**
 * GetHookResponse
 */
export type GetHookResponse = {
    config?: Array<Field>;
    createdAt?: string;
    displayName?: string;
    events?: Array<Event>;
    id?: number;
    isActive?: boolean;
    name?: string;
    templateId?: number;
    templateName?: string;
    updatedAt?: string;
};

/**
 * GetHookTemplateResponse
 */
export type GetHookTemplateResponse = {
    groupings?: Array<Grouping>;
    templates?: Array<HookTemplateData>;
};

export type GetIncomeFromFeeAccountId = {
    glCode?: string;
    id?: number;
    name?: string;
};

export type GetIncomeType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetInstructionTypeOptionsResponseStandingInstructionSwagger = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetInstructionTypeStandingInstructionSwagger = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetInterestRateChartsChartSlabs = {
    annualInterestRate?: number;
    currency?: GetInterestRateChartsCurrency;
    fromPeriod?: number;
    id?: number;
    periodTypes?: GetInterestRateChartsTemplatePeriodTypes;
};

export type GetInterestRateChartsCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

/**
 * GetInterestRateChartsResponse
 */
export type GetInterestRateChartsResponse = {
    chartSlabs?: Array<GetInterestRateChartsChartSlabs>;
    fromDate?: string;
    id?: number;
    savingsProductId?: number;
    savingsProductName?: string;
};

export type GetInterestRateChartsTemplatePeriodTypes = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetInterestRateChartsTemplateResponse
 */
export type GetInterestRateChartsTemplateResponse = {
    periodTypes?: Array<GetInterestRateChartsTemplatePeriodTypes>;
};

/**
 * GetJobsJobIDJobRunHistoryResponse
 */
export type GetJobsJobIDJobRunHistoryResponse = {
    pageItems?: Array<JobDetailHistoryDataSwagger>;
    totalFilteredRecords?: number;
};

/**
 * GetJobsResponse
 */
export type GetJobsResponse = {
    active?: boolean;
    cronExpression?: string;
    currentlyRunning?: boolean;
    displayName?: string;
    initializingError?: string;
    jobId?: number;
    lastRunHistory?: JobDetailHistoryData;
    nextRunTime?: string;
    shortName?: string;
};

/**
 * GetJournalEntriesTransactionIdResponse
 */
export type GetJournalEntriesTransactionIdResponse = {
    pageItems?: Array<JournalEntryTransactionItem>;
    totalFilteredRecords?: number;
};

export type GetLoanAccountingMappings = {
    buyDownExpenseAccount?: GetGlAccountMapping;
    chargeOffExpenseAccount?: GetGlAccountMapping;
    chargeOffFraudExpenseAccount?: GetGlAccountMapping;
    deferredIncomeLiabilityAccount?: GetGlAccountMapping;
    fundSourceAccount?: GetGlAccountMapping;
    goodwillCreditAccount?: GetGlAccountMapping;
    incomeFromBuyDownAccount?: GetGlAccountMapping;
    incomeFromCapitalizationAccount?: GetGlAccountMapping;
    incomeFromChargeOffFeesAccount?: GetGlAccountMapping;
    incomeFromChargeOffInterestAccount?: GetGlAccountMapping;
    incomeFromChargeOffPenaltyAccount?: GetGlAccountMapping;
    incomeFromFeeAccount?: GetGlAccountMapping;
    incomeFromGoodwillCreditFeesAccount?: GetGlAccountMapping;
    incomeFromGoodwillCreditInterestAccount?: GetGlAccountMapping;
    incomeFromGoodwillCreditPenaltyAccount?: GetGlAccountMapping;
    incomeFromPenaltyAccount?: GetGlAccountMapping;
    incomeFromRecoveryAccount?: GetGlAccountMapping;
    interestOnLoanAccount?: GetGlAccountMapping;
    loanPortfolioAccount?: GetGlAccountMapping;
    overpaymentLiabilityAccount?: GetGlAccountMapping;
    receivableFeeAccount?: GetGlAccountMapping;
    receivableInterestAccount?: GetGlAccountMapping;
    receivablePenaltyAccount?: GetGlAccountMapping;
    transfersInSuspenseAccount?: GetGlAccountMapping;
    writeOffAccount?: GetGlAccountMapping;
};

export type GetLoanCharge = {
    active?: boolean;
    id?: number;
    name?: string;
    penalty?: boolean;
};

export type GetLoanChargeCalculationType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanChargeCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetLoanChargeTemplateChargeAppliesTo = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanChargeTemplateChargeOptions = {
    active?: boolean;
    amount?: number;
    chargeAppliesTo?: GetLoanChargeTemplateChargeAppliesTo;
    chargeCalculationType?: GetLoanChargeCalculationType;
    chargeTimeType?: GetLoanChargeTemplateChargeTimeType;
    currency?: GetLoanChargeCurrency;
    id?: number;
    name?: string;
    penalty?: boolean;
};

export type GetLoanChargeTemplateChargeTimeType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanChargeTimeType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetLoanFeeToIncomeAccountMappings = {
    charge?: GetLoanCharge;
    chargeId?: number;
    incomeAccount?: GetGlAccountMapping;
    incomeAccountId?: number;
};

export type GetLoanPaymentChannelToFundSourceMappings = {
    fundSourceAccountId?: number;
    paymentTypeId?: number;
};

export type GetLoanProductsAccountingMappingOptions = {
    assetAccountOptions?: Array<GetLoanProductsAssetAccountOptions>;
    expenseAccountOptions?: Array<GetLoanProductsExpenseAccountOptions>;
    incomeAccountOptions?: Array<GetLoanProductsIncomeAccountOptions>;
    liabilityAccountOptions?: Array<GetLoanProductsLiabilityAccountOptions>;
};

export type GetLoanProductsAccountingRule = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsAmortizationType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsAssetAccountOptions = {
    disabled?: boolean;
    glCode?: string;
    id?: number;
    manualEntriesAllowed?: boolean;
    name?: string;
    nameDecorated?: string;
    organizationRunningBalance?: number;
    tagId?: GetLoanProductsLiabilityTagId;
    type?: GetLoanProductsLiabilityType;
    usage?: GetLoanProductsLiabilityUsage;
};

export type GetLoanProductsChargeAppliesTo = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetLoanProductsChargeOffReasonOptions
 */
export type GetLoanProductsChargeOffReasonOptions = {
    active?: boolean;
    description?: string;
    id?: number;
    mandatory?: boolean;
    name?: string;
    position?: number;
};

export type GetLoanProductsChargeOptions = {
    active?: boolean;
    amount?: number;
    chargeAppliesTo?: GetLoanProductsChargeAppliesTo;
    chargeCalculationType?: GetLoanChargeCalculationType;
    chargePaymentMode?: GetLoansChargePaymentMode;
    chargeTimeType?: GetLoanChargeTimeType;
    currency?: GetLoanProductsCurrencyOptions;
    id?: number;
    name?: string;
    penalty?: boolean;
};

export type GetLoanProductsCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    inMultiplesOf?: number;
    name?: string;
    nameCode?: string;
};

export type GetLoanProductsCurrencyOptions = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetLoanProductsDaysInMonthType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsDaysInYearCustomStrategy = {
    code?: string;
    description?: string;
    id?: string;
};

export type GetLoanProductsDaysInYearType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsExpenseAccountOptions = {
    disabled?: boolean;
    glCode?: string;
    id?: number;
    manualEntriesAllowed?: boolean;
    name?: string;
    nameDecorated?: string;
    organizationRunningBalance?: number;
    tagId?: GetLoanProductsLiabilityTagId;
    type?: GetLoanProductsExpenseType;
    usage?: GetLoanProductsLiabilityUsage;
};

export type GetLoanProductsExpenseType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsIncomeAccountOptions = {
    disabled?: boolean;
    glCode?: string;
    id?: number;
    manualEntriesAllowed?: boolean;
    name?: string;
    nameDecorated?: string;
    organizationRunningBalance?: number;
    tagId?: GetLoanProductsLiabilityTagId;
    type?: GetLoanProductsIncomeType;
    usage?: GetLoanProductsLiabilityUsage;
};

export type GetLoanProductsIncomeType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsInterestRateFrequencyType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsInterestRateTemplateFrequencyType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsInterestRecalculationCompoundingFrequencyType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsInterestRecalculationCompoundingType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsInterestRecalculationData = {
    allowCompoundingOnEod?: boolean;
    disallowInterestCalculationOnPastDue?: boolean;
    id?: number;
    interestRecalculationCompoundingFrequencyType?: GetLoanProductsInterestRecalculationCompoundingFrequencyType;
    interestRecalculationCompoundingType?: GetLoanProductsInterestRecalculationCompoundingType;
    isArrearsBasedOnOriginalSchedule?: boolean;
    isCompoundingToBePostedAsTransaction?: boolean;
    preClosureInterestCalculationStrategy?: GetLoanProductsPreClosureInterestCalculationStrategy;
    productId?: number;
    recalculationCompoundingFrequencyInterval?: number;
    recalculationCompoundingFrequencyOnDayType?: number;
    recalculationRestFrequencyInterval?: number;
    recalculationRestFrequencyType?: GetLoanProductsInterestRecalculationCompoundingFrequencyType;
    rescheduleStrategyType?: GetLoanProductsRescheduleStrategyType;
};

export type GetLoanProductsInterestRecalculationTemplateData = {
    interestRecalculationCompoundingType?: GetLoanProductsInterestRecalculationCompoundingType;
    preClosureInterestCalculationStrategy?: GetLoanProductsPreClosureInterestCalculationStrategy;
    rescheduleStrategyType?: GetLoanProductsRescheduleStrategyType;
};

export type GetLoanProductsInterestTemplateType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsInterestType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsLiabilityAccountOptions = {
    disabled?: boolean;
    glCode?: string;
    id?: number;
    manualEntriesAllowed?: boolean;
    name?: string;
    nameDecorated?: string;
    organizationRunningBalance?: number;
    tagId?: GetLoanProductsLiabilityTagId;
    type?: GetLoanProductsLiabilityType;
    usage?: GetLoanProductsLiabilityUsage;
};

export type GetLoanProductsLiabilityTagId = {
    id?: number;
};

export type GetLoanProductsLiabilityType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsLiabilityUsage = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsParamType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsPaymentTypeOptions = {
    id?: number;
    name?: string;
    position?: number;
};

export type GetLoanProductsPreClosureInterestCalculationStrategy = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsPrincipalVariationsForBorrowerCycle = {
    borrowerCycleNumber?: number;
    defaultValue?: number;
    id?: number;
    maxValue?: number;
    minValue?: number;
    paramType?: GetLoanProductsParamType;
    valueConditionType?: GetLoanProductsValueConditionType;
};

/**
 * GetLoanProductsProductIdResponse
 */
export type GetLoanProductsProductIdResponse = {
    accountingMappings?: GetLoanAccountingMappings;
    accountingRule?: GetLoanProductsAccountingRule;
    allowApprovedDisbursedAmountsOverApplied?: boolean;
    allowPartialPeriodInterestCalculation?: boolean;
    allowVariableInstallments?: boolean;
    amortizationType?: GetLoanProductsAmortizationType;
    annualInterestRate?: number;
    buyDownFeeCalculationType?: StringEnumOptionData;
    buyDownFeeCalculationTypeOptions?: Array<StringEnumOptionData>;
    buyDownFeeIncomeType?: StringEnumOptionData;
    buyDownFeeIncomeTypeOptions?: Array<StringEnumOptionData>;
    buyDownFeeStrategy?: StringEnumOptionData;
    buyDownFeeStrategyOptions?: Array<StringEnumOptionData>;
    canDefineInstallmentAmount?: boolean;
    canUseForTopup?: boolean;
    capitalizedIncomeCalculationType?: StringEnumOptionData;
    capitalizedIncomeCalculationTypeOptions?: Array<StringEnumOptionData>;
    capitalizedIncomeStrategy?: StringEnumOptionData;
    capitalizedIncomeStrategyOptions?: Array<StringEnumOptionData>;
    capitalizedIncomeType?: StringEnumOptionData;
    capitalizedIncomeTypeOptions?: Array<StringEnumOptionData>;
    chargeOffBehaviour?: StringEnumOptionData;
    chargeOffReasonOptions?: Array<GetLoanProductsChargeOffReasonOptions>;
    chargeOffReasonToExpenseAccountMappings?: Array<GetChargeOffReasonToExpenseAccountMappings>;
    charges?: Array<LoanProductChargeData>;
    creditAllocation?: Array<CreditAllocationData>;
    currency?: GetLoanProductsCurrency;
    daysInMonthType?: GetLoanProductsDaysInMonthType;
    daysInYearCustomStrategy?: StringEnumOptionData;
    daysInYearType?: GetLoanProductsDaysInYearType;
    delinquencyBucket?: DelinquencyBucketData;
    delinquencyBucketOptions?: Array<DelinquencyBucketData>;
    description?: string;
    disallowExpectedDisbursements?: boolean;
    disbursedAmountPercentageForDownPayment?: number;
    dueDaysForRepaymentEvent?: number;
    enableAccrualActivityPosting?: boolean;
    enableAutoRepaymentForDownPayment?: boolean;
    enableBuyDownFee?: boolean;
    enableDownPayment?: boolean;
    enableIncomeCapitalization?: boolean;
    enableInstallmentLevelDelinquency?: boolean;
    feeToIncomeAccountMappings?: Array<GetLoanFeeToIncomeAccountMappings>;
    fixedLength?: number;
    fixedPrincipalPercentagePerInstallment?: number;
    id?: number;
    inArrearsTolerance?: number;
    includeInBorrowerCycle?: boolean;
    interestCalculationPeriodType?: GetLoansProductsInterestCalculationPeriodType;
    interestRateFrequencyType?: GetLoanProductsInterestRateFrequencyType;
    interestRatePerPeriod?: number;
    interestRateVariationsForBorrowerCycle?: Array<(number)>;
    interestRecalculationData?: GetLoanProductsInterestRecalculationData;
    interestRecognitionOnDisbursementDate?: boolean;
    interestType?: GetLoanProductsInterestTemplateType;
    isFloatingInterestRateCalculationAllowed?: boolean;
    isInterestRecalculationEnabled?: boolean;
    isLinkedToFloatingInterestRates?: boolean;
    isRatesEnabled?: boolean;
    loanScheduleProcessingType?: EnumOptionData;
    loanScheduleType?: EnumOptionData;
    maxInterestRatePerPeriod?: number;
    maxNumberOfRepayments?: number;
    maxPrincipal?: number;
    maxTrancheCount?: number;
    maximumGap?: number;
    merchantBuyDownFee?: boolean;
    minInterestRatePerPeriod?: number;
    minNumberOfRepayments?: number;
    minPrincipal?: number;
    minimumGap?: number;
    multiDisburseLoan?: boolean;
    name?: string;
    numberOfRepaymentVariationsForBorrowerCycle?: Array<(number)>;
    numberOfRepayments?: number;
    outstandingLoanBalance?: number;
    overAppliedCalculationType?: string;
    overDueDaysForRepaymentEvent?: number;
    overdueDaysForNPA?: number;
    paymentAllocation?: Array<AdvancedPaymentData>;
    paymentChannelToFundSourceMappings?: Array<GetLoanPaymentChannelToFundSourceMappings>;
    principal?: number;
    principalThresholdForLastInstalment?: number;
    productsPrincipalVariationsForBorrowerCycle?: Array<GetLoanProductsPrincipalVariationsForBorrowerCycle>;
    repaymentEvery?: number;
    repaymentFrequencyType?: GetLoanProductsRepaymentFrequencyType;
    repaymentStartDateType?: GetLoanProductsRepaymentStartDateType;
    shortName?: string;
    status?: string;
    supportedInterestRefundTypes?: Array<StringEnumOptionData>;
    transactionProcessingStrategyCode?: string;
    transactionProcessingStrategyName?: string;
    useBorrowerCycle?: boolean;
};

export type GetLoanProductsRepaymentFrequencyType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsRepaymentStartDateType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsRepaymentTemplateFrequencyType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsRescheduleStrategyType = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetLoanProductsResponse
 */
export type GetLoanProductsResponse = {
    accountingRule?: GetLoanProductsAccountingRule;
    amortizationType?: GetLoanProductsAmortizationType;
    annualInterestRate?: number;
    buyDownFeeCalculationType?: StringEnumOptionData;
    buyDownFeeIncomeType?: StringEnumOptionData;
    buyDownFeeStrategy?: StringEnumOptionData;
    capitalizedIncomeCalculationType?: StringEnumOptionData;
    capitalizedIncomeStrategy?: StringEnumOptionData;
    capitalizedIncomeType?: StringEnumOptionData;
    chargeOffBehaviour?: StringEnumOptionData;
    currency?: GetLoanProductsCurrency;
    daysInMonthType?: GetLoanProductsDaysInMonthType;
    daysInYearCustomStrategy?: GetLoanProductsDaysInYearCustomStrategy;
    daysInYearType?: GetLoanProductsDaysInYearType;
    enableBuyDownFee?: boolean;
    enableIncomeCapitalization?: boolean;
    endDate?: string;
    fixedLength?: number;
    fixedPrincipalPercentagePerInstallment?: number;
    id?: number;
    includeInBorrowerCycle?: boolean;
    interestCalculationPeriodType?: GetLoansProductsInterestCalculationPeriodType;
    interestRateFrequencyType?: GetLoanProductsInterestRateFrequencyType;
    interestRatePerPeriod?: number;
    interestRateVariationsForBorrowerCycle?: Array<(number)>;
    interestRecalculationData?: GetLoanProductsInterestRecalculationData;
    interestRecognitionOnDisbursementDate?: boolean;
    interestType?: GetLoanProductsInterestType;
    isInterestRecalculationEnabled?: boolean;
    maxNumberOfRepayments?: number;
    maxPrincipal?: number;
    merchantBuyDownFee?: boolean;
    minNumberOfRepayments?: number;
    minPrincipal?: number;
    name?: string;
    numberOfRepaymentVariationsForBorrowerCycle?: Array<(number)>;
    numberOfRepayments?: number;
    principal?: number;
    principalThresholdForLastInstalment?: number;
    principalVariationsForBorrowerCycle?: Array<(number)>;
    repaymentEvery?: number;
    repaymentFrequencyType?: GetLoanProductsRepaymentFrequencyType;
    repaymentStartDateType?: GetLoanProductsRepaymentStartDateType;
    shortName?: string;
    startDate?: string;
    status?: string;
    supportedInterestRefundTypes?: Array<StringEnumOptionData>;
    transactionProcessingStrategy?: string;
    transactionProcessingStrategyName?: string;
    useBorrowerCycle?: boolean;
};

export type GetLoanProductsTemplateCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    inMultiplesOf?: number;
    name?: string;
    nameCode?: string;
};

/**
 * GetLoanProductsTemplateResponse
 */
export type GetLoanProductsTemplateResponse = {
    accountingMappingOptions?: GetLoanProductsAccountingMappingOptions;
    accountingRule?: GetLoanProductsAccountingRule;
    accountingRuleOptions?: Array<GetLoanProductsAccountingRule>;
    advancedPaymentAllocationFutureInstallmentAllocationRules?: Array<EnumOptionData>;
    advancedPaymentAllocationTransactionTypes?: Array<EnumOptionData>;
    advancedPaymentAllocationTypes?: Array<EnumOptionData>;
    amortizationType?: GetLoanProductsAmortizationType;
    amortizationTypeOptions?: Array<GetLoanProductsAmortizationType>;
    buyDownFeeCalculationType?: StringEnumOptionData;
    buyDownFeeCalculationTypeOptions?: Array<StringEnumOptionData>;
    buyDownFeeIncomeType?: StringEnumOptionData;
    buyDownFeeIncomeTypeOptions?: Array<StringEnumOptionData>;
    buyDownFeeStrategy?: StringEnumOptionData;
    buyDownFeeStrategyOptions?: Array<StringEnumOptionData>;
    capitalizedIncomeCalculationType?: StringEnumOptionData;
    capitalizedIncomeCalculationTypeOptions?: Array<StringEnumOptionData>;
    capitalizedIncomeStrategy?: StringEnumOptionData;
    capitalizedIncomeStrategyOptions?: Array<StringEnumOptionData>;
    capitalizedIncomeType?: StringEnumOptionData;
    capitalizedIncomeTypeOptions?: Array<StringEnumOptionData>;
    chargeOffBehaviour?: StringEnumOptionData;
    chargeOffBehaviourOptions?: Array<StringEnumOptionData>;
    chargeOffReasonOptions?: Array<GetLoanProductsChargeOffReasonOptions>;
    chargeOptions?: Array<GetLoanProductsChargeOptions>;
    creditAllocationAllocationTypes?: Array<EnumOptionData>;
    creditAllocationTransactionTypes?: Array<EnumOptionData>;
    currency?: GetLoanProductsTemplateCurrency;
    currencyOptions?: Array<GetLoanProductsCurrencyOptions>;
    daysInMonthType?: GetLoanProductsDaysInMonthType;
    daysInMonthTypeOptions?: Array<StringEnumOptionData>;
    daysInYearCustomStrategy?: StringEnumOptionData;
    daysInYearType?: GetLoanProductsDaysInYearType;
    daysInYearTypeCustomStrategyOptions?: Array<StringEnumOptionData>;
    daysInYearTypeOptions?: Array<GetLoanProductsInterestTemplateType>;
    enableBuyDownFee?: boolean;
    enableIncomeCapitalization?: boolean;
    includeInBorrowerCycle?: boolean;
    interestCalculationPeriodType?: GetLoansProductsInterestCalculationPeriodType;
    interestCalculationPeriodTypeOptions?: Array<GetLoansProductsInterestCalculationPeriodType>;
    interestRateFrequencyType?: GetLoanProductsInterestRateTemplateFrequencyType;
    interestRateFrequencyTypeOptions?: Array<GetLoanProductsInterestRateTemplateFrequencyType>;
    interestRateVariationsForBorrowerCycle?: Array<(number)>;
    interestRecalculationCompoundingTypeOptions?: Array<GetLoanProductsInterestRecalculationCompoundingType>;
    interestRecalculationData?: GetLoanProductsInterestRecalculationTemplateData;
    interestRecalculationFrequencyTypeOptions?: Array<GetLoanProductsInterestRecalculationCompoundingFrequencyType>;
    interestType?: GetLoanProductsInterestTemplateType;
    interestTypeOptions?: Array<GetLoanProductsInterestTemplateType>;
    isInterestRecalculationEnabled?: boolean;
    loanScheduleProcessingTypeOptions?: Array<EnumOptionData>;
    loanScheduleTypeOptions?: Array<EnumOptionData>;
    merchantBuyDownFee?: boolean;
    numberOfRepaymentVariationsForBorrowerCycle?: Array<(number)>;
    paymentTypeOptions?: Array<GetLoanProductsPaymentTypeOptions>;
    preClosureInterestCalculationStrategyOptions?: Array<GetLoanProductsPreClosureInterestCalculationStrategy>;
    principalVariationsForBorrowerCycle?: Array<(number)>;
    repaymentFrequencyType?: GetLoanProductsRepaymentTemplateFrequencyType;
    repaymentFrequencyTypeOptions?: Array<GetLoanProductsRepaymentTemplateFrequencyType>;
    repaymentStartDateTypeOptions?: Array<GetLoanProductsRepaymentStartDateType>;
    rescheduleStrategyTypeOptions?: Array<GetLoanProductsRescheduleStrategyType>;
    supportedInterestRefundTypes?: Array<StringEnumOptionData>;
    supportedInterestRefundTypesOptions?: Array<StringEnumOptionData>;
    transactionProcessingStrategyOptions?: Array<GetLoanProductsTransactionProcessingStrategyOptions>;
    useBorrowerCycle?: boolean;
    valueConditionTypeOptions?: Array<GetLoanProductsValueConditionTypeOptions>;
};

export type GetLoanProductsTransactionProcessingStrategyOptions = {
    code?: string;
    id?: number;
    name?: string;
};

export type GetLoanProductsValueConditionType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoanProductsValueConditionTypeOptions = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetLoanRescheduleRequestResponse
 */
export type GetLoanRescheduleRequestResponse = {
    clientId?: number;
    clientName?: string;
    id?: number;
    loanAccountNumber?: string;
    loanId?: number;
    loanTermVariationsData?: Array<LoanTermVariationsData>;
    recalculateInterest?: boolean;
    rescheduleFromDate?: string;
    rescheduleFromInstallment?: number;
    rescheduleReasonCodeValue?: RescheduleReasonsCodeValue;
    rescheduleReasonComment?: string;
    statusEnum?: GetLoanRescheduleRequestStatus;
    timeline?: RescheduleReasonsTimeline;
};

export type GetLoanRescheduleRequestStatus = {
    approved?: boolean;
    code?: string;
    id?: number;
    pendingApproval?: boolean;
    rejected?: boolean;
    value?: string;
};

export type GetLoanTransactionRelation = {
    amount?: number;
    fromLoanTransaction?: number;
    paymentType?: string;
    relationType?: string;
    toLoanCharge?: number;
    toLoanTransaction?: number;
};

/**
 * GetLoansApprovalTemplateResponse
 */
export type GetLoansApprovalTemplateResponse = {
    approvalAmount?: number;
    approvalDate?: string;
    currency?: GetLoanCurrency;
    netDisbursalAmount?: number;
};

export type GetLoansChargePaymentMode = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoansCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetLoansLoanIdAmortizationType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoansLoanIdChargeCalculationType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoansLoanIdChargePaymentMode = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoansLoanIdChargeTimeType = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetLoansLoanIdChargesChargeIdResponse
 */
export type GetLoansLoanIdChargesChargeIdResponse = {
    amount?: number;
    amountOrPercentage?: number;
    amountOutstanding?: number;
    amountPaid?: number;
    amountPercentageAppliedTo?: number;
    amountWaived?: number;
    amountWrittenOff?: number;
    chargeCalculationType?: GetLoanChargeCalculationType;
    chargeId?: number;
    chargeTimeType?: GetLoanChargeTimeType;
    currency?: GetLoanChargeCurrency;
    dueDate?: string;
    externalId?: string;
    id?: number;
    name?: string;
    penalty?: boolean;
    percentage?: number;
    submittedOnDate?: string;
};

/**
 * GetLoansLoanIdChargesTemplateResponse
 */
export type GetLoansLoanIdChargesTemplateResponse = {
    amountPaid?: number;
    amountWaived?: number;
    amountWrittenOff?: number;
    chargeOptions?: Array<GetLoanChargeTemplateChargeOptions>;
    penalty?: boolean;
};

/**
 * List of GetLoansLoanIdCodeValueData
 */
export type GetLoansLoanIdCodeValueData = {
    active?: boolean;
    description?: string;
    id?: number;
    mandatory?: boolean;
    name?: string;
    position?: number;
};

/**
 * GetLoansLoanIdCollateralsResponse
 */
export type GetLoansLoanIdCollateralsResponse = {
    currency?: GetCollateralCurrencyResponse;
    description?: string;
    id?: number;
    type?: GetCollateralTypeResponse;
    value?: number;
};

export type GetLoansLoanIdCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

/**
 * List of GetLoansLoanIdDelinquencyPausePeriod
 */
export type GetLoansLoanIdDelinquencyPausePeriod = {
    active?: boolean;
    pausePeriodEnd?: string;
    pausePeriodStart?: string;
};

/**
 * Delinquent data
 */
export type GetLoansLoanIdDelinquencySummary = {
    availableDisbursementAmount?: number;
    availableDisbursementAmountWithOverApplied?: number;
    /**
     * List of GetLoansLoanIdDelinquencyPausePeriod
     */
    delinquencyPausePeriods?: Array<GetLoansLoanIdDelinquencyPausePeriod>;
    delinquentAmount?: number;
    delinquentDate?: string;
    delinquentDays?: number;
    delinquentFee?: number;
    delinquentInterest?: number;
    delinquentPenalty?: number;
    delinquentPrincipal?: number;
    /**
     * List of GetLoansLoanIdLoanInstallmentLevelDelinquency
     */
    installmentLevelDelinquency?: Array<GetLoansLoanIdLoanInstallmentLevelDelinquency>;
    lastPaymentAmount?: number;
    lastPaymentDate?: string;
    lastRepaymentAmount?: number;
    lastRepaymentDate?: string;
    nextPaymentAmount?: number;
    nextPaymentDueDate?: string;
    pastDueDays?: number;
};

export type GetLoansLoanIdDisbursementDetails = {
    actualDisbursementDate?: string;
    approvedPrincipal?: number;
    chargeAmount?: number;
    dateFormat?: string;
    expectedDisbursementDate?: string;
    id?: number;
    loanChargeId?: string;
    locale?: string;
    netDisbursalAmount?: number;
    note?: string;
    principal?: number;
    waivedChargeAmount?: number;
};

export type GetLoansLoanIdEmiVariations = {
    [key: string]: unknown;
};

/**
 * Enum option data
 */
export type GetLoansLoanIdEnumOptionData = {
    code?: string;
    id?: number;
    value?: string;
};

export type GetLoansLoanIdFeeFrequency = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoansLoanIdInterestCalculationPeriodType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoansLoanIdInterestRateFrequencyType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoansLoanIdInterestType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoansLoanIdLinkedAccount = {
    accountNo?: number;
    id?: number;
};

/**
 * Set of charges
 */
export type GetLoansLoanIdLoanChargeData = {
    amount?: number;
    amountOrPercentage?: number;
    amountOutstanding?: number;
    amountPaid?: number;
    amountPercentageAppliedTo?: number;
    amountWaived?: number;
    amountWrittenOff?: number;
    chargeCalculationType?: GetLoansLoanIdEnumOptionData;
    chargeId?: number;
    chargePayable?: boolean;
    chargePaymentMode?: GetLoansLoanIdEnumOptionData;
    chargeTimeType?: GetLoansLoanIdEnumOptionData;
    currency?: GetLoansLoanIdCurrency;
    dueDate?: string;
    id?: number;
    /**
     * List of GetLoansLoanIdLoanInstallmentChargeData
     */
    installmentChargeData?: Array<GetLoansLoanIdLoanInstallmentChargeData>;
    loanId?: number;
    maxCap?: number;
    minCap?: number;
    name?: string;
    paid?: boolean;
    penalty?: boolean;
    percentage?: number;
    waived?: boolean;
};

/**
 * List of GetLoansLoanIdLoanChargePaidByData
 */
export type GetLoansLoanIdLoanChargePaidByData = {
    amount?: number;
    chargeId?: number;
    id?: number;
    installmentNumber?: number;
    name?: string;
    transactionId?: number;
};

/**
 * List of GetLoansLoanIdLoanInstallmentChargeData
 */
export type GetLoansLoanIdLoanInstallmentChargeData = {
    amount?: number;
    amountAccrued?: number;
    amountOutstanding?: number;
    amountUnrecognized?: number;
    amountWaived?: number;
    dueDate?: string;
    installmentNumber?: number;
    paid?: boolean;
    waived?: boolean;
};

/**
 * List of GetLoansLoanIdLoanInstallmentLevelDelinquency
 */
export type GetLoansLoanIdLoanInstallmentLevelDelinquency = {
    classification?: string;
    delinquentAmount?: number;
    maximumAgeDays?: number;
    minimumAgeDays?: number;
    rangeId?: number;
};

/**
 * List of GetLoansLoanIdLoanRepaymentScheduleInstallmentData
 */
export type GetLoansLoanIdLoanRepaymentScheduleInstallmentData = {
    amount?: number;
    date?: string;
    id?: number;
    installmentId?: number;
};

/**
 * Enum option data
 */
export type GetLoansLoanIdLoanTermEnumData = {
    code?: string;
    id?: number;
    value?: string;
};

/**
 * List of GetLoansLoanIdLoanTermVariations
 */
export type GetLoansLoanIdLoanTermVariations = {
    dateValue?: string;
    decimalValue?: number;
    id?: number;
    isProcessed?: boolean;
    isSpecificToInstallment?: boolean;
    termType?: GetLoansLoanIdLoanTermEnumData;
    termVariationApplicableFrom?: string;
};

/**
 * Transaction type
 */
export type GetLoansLoanIdLoanTransactionEnumData = {
    accrual?: boolean;
    approveTransfer?: boolean;
    buyDownFee?: boolean;
    buyDownFeeAdjustment?: boolean;
    buyDownFeeAmortization?: boolean;
    buyDownFeeAmortizationAdjustment?: boolean;
    capitalizedIncome?: boolean;
    capitalizedIncomeAdjustment?: boolean;
    capitalizedIncomeAmortization?: boolean;
    chargeAdjustment?: boolean;
    chargePayment?: boolean;
    chargeoff?: boolean;
    code?: string;
    contra?: boolean;
    contractTermination?: boolean;
    creditBalanceRefund?: boolean;
    disbursement?: boolean;
    goodwillCredit?: boolean;
    id?: number;
    initiateTransfer?: boolean;
    merchantIssuedRefund?: boolean;
    payoutRefund?: boolean;
    recoveryRepayment?: boolean;
    refund?: boolean;
    refundForActiveLoans?: boolean;
    rejectTransfer?: boolean;
    repayment?: boolean;
    repaymentAtDisbursement?: boolean;
    value?: string;
    waiveCharges?: boolean;
    waiveInterest?: boolean;
    withdrawTransfer?: boolean;
    writeOff?: boolean;
};

/**
 * List of GetLoansLoanIdLoanTransactionRelationData
 */
export type GetLoansLoanIdLoanTransactionRelation = {
    amount?: number;
    fromLoanTransaction?: number;
    paymentType?: string;
    relationType?: string;
    toLoanCharge?: number;
    toLoanTransaction?: number;
};

export type GetLoansLoanIdLoanType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoansLoanIdOverdueCharges = {
    active?: boolean;
    amount?: number;
    chargeAppliesTo?: GetLoanChargeTemplateChargeAppliesTo;
    chargeCalculationType?: GetLoansLoanIdChargeCalculationType;
    chargePaymentMode?: GetLoansLoanIdChargePaymentMode;
    chargeTimeType?: GetLoansLoanIdChargeTimeType;
    currency?: GetLoanCurrency;
    feeFrequency?: GetLoansLoanIdFeeFrequency;
    feeInterval?: number;
    id?: number;
    name?: string;
    penalty?: boolean;
};

/**
 * Payment detail
 */
export type GetLoansLoanIdPaymentDetailData = {
    accountNumber?: string;
    bankNumber?: string;
    checkNumber?: string;
    id?: number;
    paymentType?: GetLoansLoanIdPaymentType;
    receiptNumber?: string;
    routingCode?: string;
};

/**
 * List of GetLoansLoanIdPaymentType
 */
export type GetLoansLoanIdPaymentType = {
    description?: string;
    id?: number;
    isCashPayment?: boolean;
    name?: string;
    position?: number;
};

export type GetLoansLoanIdRepaymentFrequencyType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoansLoanIdRepaymentPeriod = {
    complete?: boolean;
    daysInPeriod?: number;
    downPaymentPeriod?: boolean;
    dueDate?: string;
    feeChargesDue?: number;
    feeChargesOutstanding?: number;
    feeChargesPaid?: number;
    feeChargesWaived?: number;
    feeChargesWrittenOff?: number;
    fromDate?: string;
    interestDue?: number;
    interestOriginalDue?: number;
    interestOutstanding?: number;
    interestPaid?: number;
    interestWaived?: number;
    interestWrittenOff?: number;
    obligationsMetOnDate?: string;
    penaltyChargesDue?: number;
    penaltyChargesOutstanding?: number;
    penaltyChargesPaid?: number;
    penaltyChargesWaived?: number;
    penaltyChargesWrittenOff?: number;
    period?: number;
    principalDue?: number;
    principalLoanBalanceOutstanding?: number;
    principalOriginalDue?: number;
    principalOutstanding?: number;
    principalPaid?: number;
    principalWrittenOff?: number;
    totalActualCostOfLoanForPeriod?: number;
    totalCredits?: number;
    totalDueForPeriod?: number;
    totalInstallmentAmountForPeriod?: number;
    totalOriginalDueForPeriod?: number;
    totalOutstandingForPeriod?: number;
    totalPaidForPeriod?: number;
    totalPaidInAdvanceForPeriod?: number;
    totalPaidLateForPeriod?: number;
    totalWaivedForPeriod?: number;
    totalWrittenOffForPeriod?: number;
};

export type GetLoansLoanIdRepaymentSchedule = {
    currency?: GetLoansLoanIdCurrency;
    loanTermInDays?: number;
    periods?: Array<GetLoansLoanIdRepaymentPeriod>;
    totalFeeChargesCharged?: number;
    totalInterestCharged?: number;
    totalOutstanding?: number;
    totalPaidInAdvance?: number;
    totalPaidLate?: number;
    totalPenaltyChargesCharged?: number;
    totalPrincipalDisbursed?: number;
    totalPrincipalExpected?: number;
    totalPrincipalPaid?: number;
    totalRepaymentExpected?: number;
    totalWaived?: number;
    totalWrittenOff?: number;
};

/**
 * GetLoansLoanIdResponse
 */
export type GetLoansLoanIdResponse = {
    accountNo?: string;
    amortizationType?: GetLoansLoanIdAmortizationType;
    annualInterestRate?: number;
    approvedPrincipal?: number;
    buyDownFeeCalculationType?: StringEnumOptionData;
    buyDownFeeIncomeType?: StringEnumOptionData;
    buyDownFeeStrategy?: StringEnumOptionData;
    capitalizedIncomeCalculationType?: StringEnumOptionData;
    capitalizedIncomeStrategy?: StringEnumOptionData;
    capitalizedIncomeType?: StringEnumOptionData;
    chargeOffBehaviour?: StringEnumOptionData;
    chargedOff?: boolean;
    /**
     * Set of charges
     */
    charges?: Array<GetLoansLoanIdLoanChargeData>;
    clientExternalId?: string;
    clientId?: number;
    clientName?: string;
    clientOfficeId?: number;
    currency?: GetLoansLoanIdCurrency;
    delinquencyRange?: DelinquencyRangeData;
    delinquent?: GetLoansLoanIdDelinquencySummary;
    disallowExpectedDisbursements?: boolean;
    disbursedAmountPercentageForDownPayment?: number;
    /**
     * Set of GetLoansLoanIdDisbursementDetails
     */
    disbursementDetails?: Array<GetLoansLoanIdDisbursementDetails>;
    /**
     * List of GetLoansLoanIdLoanTermVariations
     */
    emiAmountVariations?: Array<GetLoansLoanIdLoanTermVariations>;
    enableAutoRepaymentForDownPayment?: boolean;
    enableBuyDownFee?: boolean;
    enableDownPayment?: boolean;
    enableIncomeCapitalization?: boolean;
    enableInstallmentLevelDelinquency?: boolean;
    externalId?: string;
    fixedLength?: number;
    fixedPrincipalPercentagePerInstallment?: number;
    fraud?: boolean;
    id?: number;
    inArrearsTolerance?: number;
    interestCalculationPeriodType?: GetLoansLoanIdInterestCalculationPeriodType;
    interestRateFrequencyType?: GetLoansLoanIdInterestRateFrequencyType;
    interestRatePerPeriod?: number;
    interestRecognitionOnDisbursementDate?: boolean;
    interestType?: GetLoansLoanIdInterestType;
    isFloatingInterestRate?: boolean;
    lastClosedBusinessDate?: string;
    loanOfficerId?: number;
    loanOfficerName?: string;
    loanProductDescription?: string;
    loanProductId?: number;
    loanProductName?: string;
    loanPurposeId?: number;
    loanPurposeName?: string;
    loanScheduleProcessingType?: EnumOptionData;
    loanScheduleType?: EnumOptionData;
    /**
     * List of GetLoansLoanIdLoanTermVariations
     */
    loanTermVariations?: Array<GetLoansLoanIdLoanTermVariations>;
    loanType?: GetLoansLoanIdLoanType;
    netDisbursalAmount?: number;
    numberOfRepayments?: number;
    overpaidOnDate?: string;
    principal?: number;
    proposedPrincipal?: number;
    repaymentEvery?: number;
    repaymentFrequencyType?: GetLoansLoanIdRepaymentFrequencyType;
    repaymentSchedule?: GetLoansLoanIdRepaymentSchedule;
    status?: GetLoansLoanIdStatus;
    summary?: GetLoansLoanIdSummary;
    termFrequency?: number;
    termPeriodFrequencyType?: GetLoansLoanIdTermPeriodFrequencyType;
    timeline?: GetLoansLoanIdTimeline;
    totalOverpaid?: number;
    transactionProcessingStrategyCode?: string;
    /**
     * Set of GetLoansLoanIdTransactions
     */
    transactions?: Array<GetLoansLoanIdTransactions>;
};

export type GetLoansLoanIdStatus = {
    active?: boolean;
    closed?: boolean;
    closedObligationsMet?: boolean;
    closedRescheduled?: boolean;
    closedWrittenOff?: boolean;
    code?: string;
    description?: string;
    id?: number;
    overpaid?: boolean;
    pendingApproval?: boolean;
    waitingForDisbursal?: boolean;
};

export type GetLoansLoanIdSummary = {
    canDisburse?: boolean;
    chargeOffReason?: string;
    chargeOffReasonId?: number;
    currency?: GetLoansLoanIdCurrency;
    disbursementDetails?: Array<GetLoansLoanIdDisbursementDetails>;
    feeAdjustments?: number;
    feeChargesCharged?: number;
    feeChargesDueAtDisbursementCharged?: number;
    feeChargesOutstanding?: number;
    feeChargesOverdue?: number;
    feeChargesPaid?: number;
    feeChargesWaived?: number;
    feeChargesWrittenOff?: number;
    fixedEmiAmount?: number;
    inArrears?: boolean;
    interestCharged?: number;
    interestOutstanding?: number;
    interestOverdue?: number;
    interestPaid?: number;
    interestWaived?: number;
    interestWrittenOff?: number;
    isNPA?: boolean;
    linkedAccount?: GetLoansLoanIdLinkedAccount;
    maxOutstandingLoanBalance?: number;
    overdueCharges?: Array<GetLoansLoanIdOverdueCharges>;
    overdueSinceDate?: string;
    penaltyAdjustments?: number;
    penaltyChargesCharged?: number;
    penaltyChargesOutstanding?: number;
    penaltyChargesOverdue?: number;
    penaltyChargesPaid?: number;
    penaltyChargesWaived?: number;
    penaltyChargesWrittenOff?: number;
    principalAdjustments?: number;
    principalDisbursed?: number;
    principalOutstanding?: number;
    principalOverdue?: number;
    principalPaid?: number;
    principalWrittenOff?: number;
    totalCapitalizedIncome?: number;
    totalCapitalizedIncomeAdjustment?: number;
    totalChargeAdjustment?: number;
    totalChargeAdjustmentReversed?: number;
    totalChargeback?: number;
    totalCostOfLoan?: number;
    totalCreditBalanceRefund?: number;
    totalCreditBalanceRefundReversed?: number;
    totalExpectedCostOfLoan?: number;
    totalExpectedRepayment?: number;
    totalGoodwillCredit?: number;
    totalGoodwillCreditReversed?: number;
    totalInterestPaymentWaiver?: number;
    totalInterestRefund?: number;
    totalMerchantRefund?: number;
    totalMerchantRefundReversed?: number;
    totalOutstanding?: number;
    totalOverdue?: number;
    totalPayoutRefund?: number;
    totalPayoutRefundReversed?: number;
    totalPrincipal?: number;
    totalRecovered?: number;
    totalRepayment?: number;
    totalRepaymentTransaction?: number;
    totalRepaymentTransactionReversed?: number;
    totalUnpaidPayableDueInterest?: number;
    totalUnpaidPayableNotDueInterest?: number;
    totalWaived?: number;
    totalWrittenOff?: number;
    writeoffReason?: string;
    writeoffReasonId?: number;
};

export type GetLoansLoanIdTermPeriodFrequencyType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoansLoanIdTimeline = {
    actualDisbursementDate?: string;
    actualMaturityDate?: string;
    approvedByFirstname?: string;
    approvedByLastname?: string;
    approvedByUsername?: string;
    approvedOnDate?: string;
    chargedOffByFirstname?: string;
    chargedOffByLastname?: string;
    chargedOffByUsername?: string;
    chargedOffOnDate?: string;
    closedOnDate?: string;
    disbursedByFirstname?: string;
    disbursedByLastname?: string;
    disbursedByUsername?: string;
    expectedDisbursementDate?: string;
    expectedMaturityDate?: string;
    submittedByFirstname?: string;
    submittedByLastname?: string;
    submittedByUsername?: string;
    submittedOnDate?: string;
};

/**
 * Set of GetLoansLoanIdTransactions
 */
export type GetLoansLoanIdTransactions = {
    accountId?: number;
    accountNumber?: string;
    amount?: number;
    bankNumber?: number;
    checkNumber?: number;
    currency?: GetLoansLoanIdCurrency;
    date?: string;
    dateFormat?: string;
    externalId?: string;
    feeChargesPortion?: number;
    fixedEmiAmount?: number;
    id?: number;
    interestPortion?: number;
    /**
     * List of GetLoansLoanIdLoanChargePaidByData
     */
    loanChargePaidByList?: Array<GetLoansLoanIdLoanChargePaidByData>;
    /**
     * List of GetLoansLoanIdLoanRepaymentScheduleInstallmentData
     */
    loanRepaymentScheduleInstallments?: Array<GetLoansLoanIdLoanRepaymentScheduleInstallmentData>;
    locale?: string;
    manuallyReversed?: boolean;
    netDisbursalAmount?: number;
    numberOfRepayments?: number;
    officeId?: number;
    officeName?: string;
    outstandingLoanBalance?: number;
    overpaymentPortion?: number;
    paymentDetailData?: GetLoansLoanIdPaymentDetailData;
    paymentTypeId?: number;
    /**
     * List of GetLoansLoanIdPaymentType
     */
    paymentTypeOptions?: Array<GetLoansLoanIdPaymentType>;
    penaltyChargesPortion?: number;
    possibleNextRepaymentDate?: string;
    principalPortion?: number;
    receiptNumber?: number;
    reversalExternalId?: string;
    reversedOnDate?: string;
    routingCode?: number;
    submittedOnDate?: string;
    transactionAmount?: number;
    transactionDate?: string;
    /**
     * List of GetLoansLoanIdLoanTransactionRelationData
     */
    transactionRelations?: Array<GetLoansLoanIdLoanTransactionRelation>;
    transactionType?: string;
    type?: GetLoansLoanIdLoanTransactionEnumData;
    unrecognizedIncomePortion?: number;
    /**
     * List of GetLoansLoanIdCodeValueData
     */
    writeOffReasonOptions?: Array<GetLoansLoanIdCodeValueData>;
};

/**
 * GetLoansLoanIdTransactionsResponse
 */
export type GetLoansLoanIdTransactionsResponse = {
    content?: Array<GetLoansLoanIdTransactionsTransactionIdResponse>;
    empty?: boolean;
    first?: boolean;
    last?: boolean;
    number?: number;
    numberOfElements?: number;
    pageable?: Pageable;
    size?: number;
    sort?: Sort;
    totalElements?: number;
    totalPages?: number;
};

/**
 * GetLoansLoanIdTransactionsTemplateResponse
 */
export type GetLoansLoanIdTransactionsTemplateResponse = {
    amount?: number;
    chargeOffReasonOptions?: Array<GetLoanProductsChargeOffReasonOptions>;
    currency?: GetLoanCurrency;
    date?: string;
    feeChargesPortion?: number;
    interestPortion?: number;
    netDisbursalAmount?: number;
    paymentTypeOptions?: Array<GetPaymentTypeOptions>;
    penaltyChargesPortion?: number;
    principalPortion?: number;
    total?: GetLoansTotal;
    type?: GetLoansTransactionType;
};

/**
 * GetLoansLoanIdTransactionsTransactionIdResponse
 */
export type GetLoansLoanIdTransactionsTransactionIdResponse = {
    amount?: number;
    currency?: GetLoansCurrency;
    date?: string;
    externalId?: string;
    feeChargesPortion?: number;
    id?: number;
    interestPortion?: number;
    loanChargePaidByList?: Array<GetLoansLoanIdLoanChargePaidByData>;
    manuallyReversed?: boolean;
    netDisbursalAmount?: number;
    outstandingLoanBalance?: number;
    overpaymentPortion?: number;
    paymentDetailData?: PaymentDetailData;
    penaltyChargesPortion?: number;
    possibleNextRepaymentDate?: string;
    principalPortion?: number;
    reversalExternalId?: string;
    reversedOnDate?: string;
    submittedOnDate?: string;
    transactionRelations?: Array<GetLoanTransactionRelation>;
    type?: GetLoansType;
    unrecognizedIncomePortion?: number;
};

export type GetLoansProductsInterestCalculationPeriodType = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetLoansResponse
 */
export type GetLoansResponse = {
    pageItems?: Array<GetLoansLoanIdResponse>;
    totalFilteredRecords?: number;
};

export type GetLoansTemplateProductOptions = {
    id?: number;
    name?: string;
};

/**
 * GetLoansTemplateResponse
 */
export type GetLoansTemplateResponse = {
    clientId?: number;
    clientName?: string;
    clientOfficeId?: number;
    productOptions?: Array<GetLoansTemplateProductOptions>;
    timeline?: GetLoansTemplateTimeline;
};

export type GetLoansTemplateTimeline = {
    expectedDisbursementDate?: string;
};

export type GetLoansTotal = {
    amount?: number;
    currencyCode?: string;
    defaultName?: string;
    digitsAfterDecimal?: number;
    displaySymbol?: string;
    displaySymbolValue?: string;
    greaterThanZero?: boolean;
    inMultiplesOf?: number;
    nameCode?: string;
    zero?: boolean;
};

export type GetLoansTransactionType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetLoansType = {
    code?: string;
    contra?: boolean;
    description?: string;
    disbursement?: boolean;
    externalId?: string;
    externalLoanId?: string;
    id?: number;
    loanId?: number;
    recoveryRepayment?: boolean;
    repayment?: boolean;
    repaymentAtDisbursement?: boolean;
    waiveCharges?: boolean;
    waiveInterest?: boolean;
    writeOff?: boolean;
};

export type GetLockPeriodTypeEnum = {
    description?: string;
    id?: number;
};

export type GetNotification = {
    action?: string;
    actorId?: number;
    content?: string;
    createdAt?: string;
    id?: number;
    isRead?: boolean;
    isSystemGenerated?: boolean;
    objectId?: number;
    objectType?: string;
    officeId?: number;
    tenantIdentifier?: string;
    userIds?: Array<(number)>;
};

/**
 * GetNotificationsResponse
 */
export type GetNotificationsResponse = {
    pageItems?: Array<GetNotification>;
    totalFilteredRecords?: number;
};

export type GetObligeeData = {
    accountNumber?: string;
    amountReleased?: number;
    amountTransferred?: number;
    displayName?: string;
    firstName?: string;
    guaranteeAmount?: number;
    lastName?: string;
    loanAmount?: number;
};

/**
 * GetOfficesResponse
 */
export type GetOfficesResponse = {
    allowedParents?: Array<GetOfficesResponse>;
    dateFormat?: string;
    externalId?: string;
    hierarchy?: string;
    id?: number;
    locale?: string;
    name?: string;
    nameDecorated?: string;
    openingDate?: string;
};

/**
 * GetOfficesTemplateResponse
 */
export type GetOfficesTemplateResponse = {
    allowedParents?: Array<GetOfficesResponse>;
    openingDate?: string;
};

export type GetPageItemsStandingInstructionSwagger = {
    accountDetailId?: number;
    amount?: number;
    fromAccount?: GetFromAccountStandingInstructionSwagger;
    fromAccountType?: GetFromAccountTypeStandingInstructionSwagger;
    fromClient?: GetFromClientStandingInstructionSwagger;
    fromOffice?: GetFromOfficeStandingInstructionSwagger;
    id?: number;
    instructionType?: GetInstructionTypeStandingInstructionSwagger;
    name?: string;
    priority?: GetPriorityStandingInstructionSwagger;
    recurrenceFrequency?: GetRecurrenceFrequencyStandingInstructionSwagger;
    recurrenceInterval?: number;
    recurrenceOnMonthDay?: string;
    recurrenceType?: GetRecurrenceTypeStandingInstructionSwagger;
    status?: GetStatusStandingInstructionSwagger;
    toAccount?: GetToAccountStandingInstructionSwagger;
    toAccountType?: GetToAccountTypeStandingInstructionSwagger;
    toClient?: GetToClientStandingInstructionSwagger;
    toOffice?: GetToOfficeStandingInstructionSwagger;
    transferType?: GetTransferTypeStandingInstructionSwagger;
    validFrom?: string;
};

/**
 * GetPasswordPreferencesTemplateResponse
 */
export type GetPasswordPreferencesTemplateResponse = {
    active?: boolean;
    description?: string;
    id?: number;
    key?: string;
};

export type GetPaymentTypeData = {
    id?: number;
    isSystemDefined?: boolean;
    name?: string;
};

export type GetPaymentTypeOptions = {
    id?: number;
    name?: string;
    position?: number;
};

/**
 * GetPaymentTypesResponse
 */
export type GetPaymentTypesResponse = {
    codeName?: string;
    description?: string;
    id?: number;
    isCashPayment?: boolean;
    isSystemDefined?: boolean;
    name?: string;
    position?: number;
};

/**
 * GetPermissionsResponse
 */
export type GetPermissionsResponse = {
    actionName?: string;
    code?: string;
    entityName?: string;
    grouping?: string;
    selected?: boolean;
};

export type GetPocketData = {
    row?: string;
};

export type GetPocketLoanAccounts = {
    accountId?: number;
    accountNumber?: number;
    accountType?: number;
    id?: number;
    pocketId?: number;
};

export type GetPocketSavingAccounts = {
    accountId?: number;
    accountNumber?: number;
    accountType?: number;
    id?: number;
    pocketId?: number;
};

export type GetPocketShareAccounts = {
    [key: string]: unknown;
};

/**
 * GetPostDatedChecks
 */
export type GetPostDatedChecks = {
    accountNo?: number;
    amount?: number;
    date?: string;
    id?: number;
    installmentId?: number;
    name?: string;
};

export type GetPriorityOptionsResponseStandingInstructionSwagger = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetPriorityStandingInstructionSwagger = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetProductsAccountingMappingOptions = {
    assetAccountOptions?: Array<GetProductsAssetAccountOptions>;
    equityAccountOptions?: Array<GetProductsEquityAccountOptions>;
    incomeAccountOptions?: Array<GetProductsIncomeAccountOptions>;
    liabilityAccountOptions?: Array<GetProductsLiabilityAccountOptions>;
};

export type GetProductsAccountingMappings = {
    incomeFromFeeAccountId?: GetIncomeFromFeeAccountId;
    shareEquityId?: GetShareEquityId;
    shareReferenceId?: GetShareReferenceId;
    shareSuspenseId?: GetShareSuspenseId;
};

export type GetProductsAccountingRule = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetProductsAssetAccountOptions = {
    description?: string;
    disabled?: boolean;
    glCode?: string;
    id?: number;
    manualEntriesAllowed?: boolean;
    name?: string;
    nameDecorated?: string;
    tagId?: GetProductsTagId;
    type?: GetAssetType;
    usage?: GetProductsLiabilityUsage;
};

export type GetProductsCharges = {
    active?: boolean;
    amount?: number;
    chargeAppliesTo?: GetChargeAppliesTo;
    chargeCalculationType?: GetChargeCalculationType;
    chargePaymentMode?: GetChargePaymentMode;
    chargeTimeType?: GetChargeTimeType;
    currency?: GetChargesCurrency;
    id?: number;
    name?: string;
    penalty?: boolean;
};

export type GetProductsCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    inMultiplesOf?: number;
    name?: string;
    nameCode?: string;
};

export type GetProductsEquityAccountOptions = {
    disabled?: boolean;
    glCode?: string;
    id?: number;
    manualEntriesAllowed?: boolean;
    name?: string;
    nameDecorated?: string;
    tagId?: GetProductsTagId;
    type?: GetEquityType;
    usage?: GetProductsLiabilityUsage;
};

export type GetProductsIncomeAccountOptions = {
    description?: string;
    disabled?: boolean;
    glCode?: string;
    id?: number;
    manualEntriesAllowed?: boolean;
    name?: string;
    nameDecorated?: string;
    tagId?: GetProductsTagId;
    type?: GetIncomeType;
    usage?: GetProductsLiabilityUsage;
};

export type GetProductsLiabilityAccountOptions = {
    description?: string;
    disabled?: boolean;
    glCode?: string;
    id?: number;
    manualEntriesAllowed?: boolean;
    name?: string;
    nameDecorated?: string;
    tagId?: GetProductsTagId;
    type?: GetProductsLiabilityType;
    usage?: GetProductsLiabilityUsage;
};

export type GetProductsLiabilityType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetProductsLiabilityUsage = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetProductsMarketPrice = {
    fromDate?: string;
    id?: number;
    shareValue?: number;
};

export type GetProductsMinimumActivePeriodFrequencyTypeOptions = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetProductsPageItems = {
    id?: number;
    name?: string;
    shortName?: string;
    totalShares?: number;
};

export type GetProductsTagId = {
    id?: number;
    isActive?: boolean;
};

/**
 * GetProductsTypeProductIdResponse
 */
export type GetProductsTypeProductIdResponse = {
    accountingMappingOptions?: GetProductsAccountingMappingOptions;
    accountingMappings?: GetProductsAccountingMappings;
    accountingRule?: GetProductsAccountingRule;
    allowDividendCalculationForInactiveClients?: boolean;
    chargeOptions?: Array<GetProductsCharges>;
    charges?: Array<GetProductsCharges>;
    currency?: GetProductsCurrency;
    currencyOptions?: Array<GetChargesCurrency>;
    description?: string;
    id?: number;
    lockPeriodTypeEnum?: GetLockPeriodTypeEnum;
    lockinPeriod?: number;
    lockinPeriodFrequencyTypeOptions?: Array<GetProductsMinimumActivePeriodFrequencyTypeOptions>;
    marketPrice?: Array<GetProductsMarketPrice>;
    maximumShares?: number;
    minimumActivePeriod?: number;
    minimumActivePeriodForDividendsTypeEnum?: GetLockPeriodTypeEnum;
    minimumActivePeriodFrequencyTypeOptions?: Array<GetProductsMinimumActivePeriodFrequencyTypeOptions>;
    minimumShares?: number;
    name?: string;
    nominalShares?: number;
    shareCapital?: number;
    shortName?: string;
    totalShares?: number;
    totalSharesIssued?: number;
    unitPrice?: number;
};

/**
 * GetProductsTypeResponse
 */
export type GetProductsTypeResponse = {
    pageItems?: Array<GetProductsPageItems>;
    totalFilteredRecords?: number;
};

/**
 * GetProvisioningCriteriaCriteriaIdResponse
 */
export type GetProvisioningCriteriaCriteriaIdResponse = {
    createdBy?: string;
    criteriaId?: number;
    criteriaName?: string;
    loanProducts?: Array<LoanProductData>;
    provisioningcriteria?: Array<ProvisioningCriteriaDefinitionData>;
};

/**
 * GetProvisioningCriteriaResponse
 */
export type GetProvisioningCriteriaResponse = {
    createdBy?: string;
    criteriaId?: number;
    criteriaName?: string;
};

export type GetRecurrenceFrequencyOptionsResponseStandingInstructionSwagger = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurrenceFrequencyStandingInstructionSwagger = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurrenceTypeOptionsResponseStandingInstructionSwagger = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurrenceTypeStandingInstructionSwagger = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    inMultiplesOf?: number;
    name?: string;
    nameCode?: string;
};

export type GetRecurringDepositAccountsAccountChart = {
    accountId?: number;
    accountNumber?: number;
    chartSlabs?: Array<GetRecurringDepositAccountsChartSlabs>;
    fromDate?: string;
    id?: number;
    periodTypes?: Array<GetRecurringDepositAccountsPeriodTypes>;
};

export type GetRecurringDepositAccountsAccountChartCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

/**
 * GetRecurringDepositAccountsAccountIdResponse
 */
export type GetRecurringDepositAccountsAccountIdResponse = {
    accountChart?: GetRecurringDepositAccountsAccountChart;
    accountNo?: number;
    clientId?: number;
    clientName?: string;
    currency?: GetRecurringDepositAccountsCurrency;
    depositPeriod?: number;
    depositPeriodFrequency?: GetRecurringDepositAccountsDepositPeriodFrequency;
    expectedFirstDepositOnDate?: string;
    externalId?: string;
    fieldOfficerId?: number;
    id?: number;
    interestCalculationDaysInYearType?: GetRecurringDepositAccountsInterestCalculationDaysInYearType;
    interestCalculationType?: GetRecurringDepositAccountsInterestCalculationType;
    interestCompoundingPeriodType?: GetRecurringDepositAccountsInterestCompoundingPeriodType;
    interestPostingPeriodType?: GetRecurringDepositAccountsInterestPostingPeriodType;
    maxDepositTerm?: number;
    maxDepositTermType?: GetRecurringDepositAccountsMaxDepositTermType;
    minDepositTerm?: number;
    minDepositTermType?: GetRecurringDepositAccountsMinDepositTermType;
    preClosurePenalApplicable?: boolean;
    recurringDepositAmount?: number;
    recurringDepositFrequency?: number;
    recurringDepositFrequencyType?: GetRecurringDepositAccountsRecurringDepositFrequencyType;
    savingsProductId?: number;
    savingsProductName?: string;
    status?: GetRecurringDepositAccountsStatus;
    summary?: GetRecurringDepositAccountsSummary;
    timeline?: GetRecurringDepositAccountsTimeline;
};

export type GetRecurringDepositAccountsChartSlabs = {
    annualInterestRate?: number;
    currency?: GetRecurringDepositAccountsAccountChartCurrency;
    fromPeriod?: number;
    id?: number;
    periodType?: GetRecurringDepositAccountsPeriodType;
    toPeriod?: number;
};

export type GetRecurringDepositAccountsCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    inMultiplesOf?: number;
    name?: string;
    nameCode?: string;
};

export type GetRecurringDepositAccountsDepositPeriodFrequency = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositAccountsInterestCalculationDaysInYearType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositAccountsInterestCalculationType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositAccountsInterestCompoundingPeriodType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositAccountsInterestPostingPeriodType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositAccountsMaxDepositTermType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositAccountsMinDepositTermType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositAccountsPeriodType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositAccountsPeriodTypes = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTemplateResponse
 */
export type GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTemplateResponse = {
    accountId?: number;
    accountNo?: string;
    amount?: number;
    currency?: GetRecurringCurrency;
    date?: string;
    id?: number;
    paymentTypeOptions?: Array<(number)>;
    reversed?: boolean;
    transactionType?: GetRecurringTransactionType;
};

/**
 * GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse
 */
export type GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse = {
    accountId?: number;
    accountNo?: string;
    amount?: number;
    currency?: GetRecurringTransactionsCurrency;
    date?: string;
    id?: number;
    paymentDetailData?: GetRecurringPaymentDetailData;
    reversed?: boolean;
    runningBalance?: number;
    transactionType?: GetRecurringTransactionsTransactionType;
};

export type GetRecurringDepositAccountsRecurringDepositFrequencyType = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetRecurringDepositAccountsResponse
 */
export type GetRecurringDepositAccountsResponse = {
    accountNo?: number;
    clientId?: number;
    clientName?: string;
    currency?: GetRecurringDepositAccountsCurrency;
    depositAmount?: number;
    depositPeriod?: number;
    depositPeriodFrequency?: GetRecurringDepositAccountsDepositPeriodFrequency;
    fieldOfficerId?: number;
    id?: number;
    interestCalculationDaysInYearType?: GetRecurringDepositAccountsInterestCalculationDaysInYearType;
    interestCalculationType?: GetRecurringDepositAccountsInterestCalculationType;
    interestCompoundingPeriodType?: GetRecurringDepositAccountsInterestCompoundingPeriodType;
    interestPostingPeriodType?: GetRecurringDepositAccountsInterestPostingPeriodType;
    maturityAmount?: number;
    maturityDate?: string;
    maxDepositTerm?: number;
    maxDepositTermType?: GetRecurringDepositAccountsMaxDepositTermType;
    minDepositTerm?: number;
    minDepositTermType?: GetRecurringDepositAccountsMinDepositTermType;
    preClosurePenalApplicable?: boolean;
    recurringDepositAmount?: number;
    recurringDepositFrequency?: number;
    recurringDepositFrequencyType?: GetRecurringDepositAccountsRecurringDepositFrequencyType;
    savingsProductId?: number;
    savingsProductName?: string;
    status?: GetRecurringDepositAccountsStatus;
    summary?: GetRecurringDepositAccountsSummary;
    timeline?: GetRecurringDepositAccountsTimeline;
};

export type GetRecurringDepositAccountsStatus = {
    active?: boolean;
    approved?: boolean;
    closed?: boolean;
    code?: string;
    description?: string;
    id?: number;
    prematureClosed?: boolean;
    rejected?: boolean;
    submittedAndPendingApproval?: boolean;
    transferInProgress?: boolean;
    transferOnHold?: boolean;
    withdrawnByApplicant?: boolean;
};

export type GetRecurringDepositAccountsSummary = {
    accountBalance?: number;
    currency?: GetRecurringDepositAccountsCurrency;
};

/**
 * GetRecurringDepositAccountsTemplateResponse
 */
export type GetRecurringDepositAccountsTemplateResponse = {
    clientId?: number;
    clientName?: string;
    productOptions?: Array<GetRecurringProductOptions>;
};

export type GetRecurringDepositAccountsTimeline = {
    submittedByFirstname?: string;
    submittedByLastname?: string;
    submittedByUsername?: string;
    submittedOnDate?: string;
};

export type GetRecurringDepositProductsAccountingRule = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositProductsCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    inMultiplesOf?: number;
    name?: string;
    nameCode?: string;
};

export type GetRecurringDepositProductsGlAccount = {
    glCode?: string;
    id?: number;
    name?: string;
};

export type GetRecurringDepositProductsInterestCalculationDaysInYearType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositProductsInterestCalculationType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositProductsInterestCompoundingPeriodType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositProductsInterestPostingPeriodType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositProductsMaxDepositTermType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositProductsMinDepositTermType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositProductsProductIdAccountingMappings = {
    feeReceivableAccount?: GetRecurringDepositProductsGlAccount;
    incomeFromFeeAccount?: GetRecurringDepositProductsGlAccount;
    incomeFromPenaltyAccount?: GetRecurringDepositProductsGlAccount;
    interestOnSavingsAccount?: GetRecurringDepositProductsGlAccount;
    interestPayableAccount?: GetRecurringDepositProductsGlAccount;
    penaltyReceivableAccount?: GetRecurringDepositProductsGlAccount;
    savingsControlAccount?: GetRecurringDepositProductsGlAccount;
    transfersInSuspenseAccount?: GetRecurringDepositProductsGlAccount;
};

export type GetRecurringDepositProductsProductIdActiveChart = {
    chartSlabs?: Array<GetRecurringDepositProductsProductIdChartSlabs>;
    fromDate?: string;
    id?: number;
    periodTypes?: Array<GetRecurringDepositProductsProductIdPeriodType>;
    savingsProductId?: number;
    savingsProductName?: string;
};

export type GetRecurringDepositProductsProductIdChartSlabs = {
    annualInterestRate?: number;
    currency?: GetRecurringDepositProductsProductIdCurrency;
    description?: string;
    fromPeriod?: number;
    id?: number;
    periodType?: GetRecurringDepositProductsProductIdPeriodType;
    toPeriod?: number;
};

export type GetRecurringDepositProductsProductIdCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetRecurringDepositProductsProductIdFeeToIncomeAccountMappings = {
    charge?: GetRecurringDepositProductsProductIdFeeToIncomeAccountMappingsCharge;
    incomeAccount?: GetRecurringDepositProductsProductIdFeeToIncomeAccountMappingsIncomeAccount;
};

export type GetRecurringDepositProductsProductIdFeeToIncomeAccountMappingsCharge = {
    active?: boolean;
    id?: number;
    name?: string;
    penalty?: boolean;
};

export type GetRecurringDepositProductsProductIdFeeToIncomeAccountMappingsIncomeAccount = {
    glCode?: string;
    id?: number;
    name?: string;
};

export type GetRecurringDepositProductsProductIdInterestCompoundingPeriodType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositProductsProductIdMaxDepositTermType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositProductsProductIdMinDepositTermType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositProductsProductIdPenaltyToIncomeAccountMappings = {
    charge?: GetRecurringDepositProductsProductIdPenaltyToIncomeAccountMappingsCharge;
    incomeAccount?: GetRecurringDepositProductsGlAccount;
};

export type GetRecurringDepositProductsProductIdPenaltyToIncomeAccountMappingsCharge = {
    active?: boolean;
    id?: number;
    name?: string;
    penalty?: boolean;
};

export type GetRecurringDepositProductsProductIdPeriodType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetRecurringDepositProductsProductIdPreClosurePenalInterestOnType = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetRecurringDepositProductsProductIdResponse
 */
export type GetRecurringDepositProductsProductIdResponse = {
    accountingMappings?: GetRecurringDepositProductsProductIdAccountingMappings;
    activeChart?: GetRecurringDepositProductsProductIdActiveChart;
    currency?: GetRecurringDepositProductsProductIdCurrency;
    description?: string;
    feeToIncomeAccountMappings?: Array<GetRecurringDepositProductsProductIdFeeToIncomeAccountMappings>;
    id?: number;
    interestCalculationDaysInYearType?: GetRecurringDepositProductsInterestCalculationDaysInYearType;
    interestCalculationType?: GetRecurringDepositProductsInterestCalculationType;
    interestCompoundingPeriodType?: GetRecurringDepositProductsProductIdInterestCompoundingPeriodType;
    interestPostingPeriodType?: GetRecurringDepositProductsInterestPostingPeriodType;
    maxDepositTerm?: number;
    maxDepositTermType?: GetRecurringDepositProductsProductIdMaxDepositTermType;
    minDepositTerm?: number;
    minDepositTermType?: GetRecurringDepositProductsProductIdMinDepositTermType;
    name?: string;
    penaltyToIncomeAccountMappings?: Array<GetRecurringDepositProductsProductIdPenaltyToIncomeAccountMappings>;
    preClosurePenalApplicable?: boolean;
    preClosurePenalInterest?: number;
    preClosurePenalInterestOnType?: GetRecurringDepositProductsProductIdPreClosurePenalInterestOnType;
    recurringDepositFrequency?: number;
    recurringDepositFrequencyType?: GetRecurringDepositProductsRecurringDepositFrequencyType;
    shortName?: string;
};

export type GetRecurringDepositProductsRecurringDepositFrequencyType = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetRecurringDepositProductsResponse
 */
export type GetRecurringDepositProductsResponse = {
    accountingRule?: GetRecurringDepositProductsAccountingRule;
    currency?: GetRecurringDepositProductsCurrency;
    description?: string;
    id?: number;
    interestCalculationDaysInYearType?: GetRecurringDepositProductsInterestCalculationDaysInYearType;
    interestCalculationType?: GetRecurringDepositProductsInterestCalculationType;
    interestCompoundingPeriodType?: GetRecurringDepositProductsInterestCompoundingPeriodType;
    interestPostingPeriodType?: GetRecurringDepositProductsInterestPostingPeriodType;
    maxDepositTerm?: number;
    maxDepositTermType?: GetRecurringDepositProductsMaxDepositTermType;
    minDepositTerm?: number;
    minDepositTermType?: GetRecurringDepositProductsMinDepositTermType;
    name?: string;
    nominalAnnualInterestRate?: number;
    preClosurePenalApplicable?: boolean;
    recurringDepositFrequency?: number;
    recurringDepositFrequencyType?: GetRecurringDepositProductsRecurringDepositFrequencyType;
    shortName?: string;
};

export type GetRecurringPaymentDetailData = {
    accountNumber?: number;
    bankNumber?: number;
    checkNumber?: number;
    id?: number;
    paymentType?: GetRecurringPaymentType;
    receiptNumber?: number;
    routingCode?: number;
};

export type GetRecurringPaymentType = {
    id?: number;
    name?: string;
};

export type GetRecurringProductOptions = {
    id?: number;
    name?: string;
};

export type GetRecurringTransactionType = {
    approveTransfer?: boolean;
    code?: string;
    deposit?: boolean;
    description?: string;
    feeDeduction?: boolean;
    id?: number;
    initiateTransfer?: boolean;
    interestPosting?: boolean;
    overdraftFee?: boolean;
    overdraftInterest?: boolean;
    rejectTransfer?: boolean;
    withdrawTransfer?: boolean;
    withdrawal?: boolean;
    writtenoff?: boolean;
};

export type GetRecurringTransactionsCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    inMultiplesOf?: number;
    name?: string;
    nameCode?: string;
};

export type GetRecurringTransactionsTransactionType = {
    code?: string;
    deposit?: boolean;
    description?: string;
    feeDeduction?: boolean;
    id?: number;
    interestPosting?: boolean;
    withdrawal?: boolean;
};

/**
 * GetReportMailingJobsResponse
 */
export type GetReportMailingJobsResponse = {
    description?: string;
    emailAttachmentFileFormat?: EnumOptionData;
    emailMessage?: string;
    emailRecipients?: string;
    emailSubject?: string;
    id?: number;
    isActive?: boolean;
    name?: string;
    nextRunDateTime?: string;
    numberOfRuns?: number;
    recurrence?: string;
    runAsUserId?: number;
    startDateTime?: string;
    stretchyReport?: ReportData;
    stretchyReportParamMap?: string;
    timeline?: ReportMailingJobTimelineData;
};

/**
 * GetReportMailingJobsTemplate
 */
export type GetReportMailingJobsTemplate = {
    emailAttachmentFileFormatOptions?: Array<EnumOptionData>;
    isActive?: boolean;
    stretchyReportParamDateOptions?: Array<EnumOptionData>;
};

/**
 * GetReportsResponse
 */
export type GetReportsResponse = {
    coreReport?: boolean;
    description?: string;
    id?: number;
    reportCategory?: string;
    reportName?: string;
    reportParameters?: Array<ReportParameterData>;
    reportSql?: string;
    reportSubType?: string;
    reportType?: string;
    useReport?: boolean;
};

/**
 * GetReportsTemplateResponse
 */
export type GetReportsTemplateResponse = {
    allowedParameters?: Array<ReportParameterData>;
    allowedReportSubTypes?: Array<(string)>;
    allowedReportTypes?: Array<(string)>;
};

export type GetRescheduleReasonsAllowedTypes = {
    active?: boolean;
    description?: string;
    id?: number;
    mandatory?: boolean;
    name?: string;
    position?: number;
};

/**
 * GetRescheduleReasonsTemplateResponse
 */
export type GetRescheduleReasonsTemplateResponse = {
    rescheduleReasons?: Array<GetRescheduleReasonsAllowedTypes>;
};

/**
 * GetRolesResponse
 */
export type GetRolesResponse = {
    description?: string;
    id?: number;
    name?: string;
};

/**
 * GetRolesRoleIdPermissionsResponse
 */
export type GetRolesRoleIdPermissionsResponse = {
    description?: string;
    id?: number;
    name?: string;
    permissionUsageData?: Array<GetRolesRoleIdPermissionsResponsePermissionData>;
};

export type GetRolesRoleIdPermissionsResponsePermissionData = {
    actionName?: string;
    code?: string;
    entityName?: string;
    grouping?: string;
    selected?: boolean;
};

/**
 * GetRolesRoleIdResponse
 */
export type GetRolesRoleIdResponse = {
    description?: string;
    id?: number;
    name?: string;
};

export type GetRunReportColumnHeaders = {
    columnName?: string;
    columnType?: string;
    columnValues?: string;
    isColumnNullable?: boolean;
    isColumnPrimaryKey?: boolean;
};

/**
 * GetRunReportResponse
 */
export type GetRunReportResponse = {
    columnHeaders?: Array<GetRunReportColumnHeaders>;
    data?: Array<GetPocketData>;
};

export type GetSavingsAccountChargesPaidByData = {
    amount?: number;
    chargeId?: number;
};

export type GetSavingsAccountTransactionsPageItem = {
    accountId?: number;
    accountNo?: string;
    amount?: number;
    chargesPaidByData?: Array<GetSavingsAccountChargesPaidByData>;
    currency?: GetTransactionsCurrency;
    date?: string;
    entryType?: 'CREDIT' | 'DEBIT';
    id?: number;
    interestedPostedAsOn?: boolean;
    isManualTransaction?: boolean;
    isReversal?: boolean;
    lienTransaction?: boolean;
    originalTransactionId?: number;
    paymentDetailData?: GetTransactionsPaymentDetailData;
    releaseTransactionId?: number;
    reversed?: boolean;
    runningBalance?: number;
    submittedByUsername?: string;
    submittedOnDate?: string;
    transactionType?: GetTranscationEnumData;
};

export type entryType = 'CREDIT' | 'DEBIT';

/**
 * GetSavingsAccountsResponse
 */
export type GetSavingsAccountsResponse = {
    pageItems?: Array<GetSavingsPageItems>;
    totalFilteredRecords?: number;
};

/**
 * GetSavingsAccountsSavingsAccountIdChargesResponse
 */
export type GetSavingsAccountsSavingsAccountIdChargesResponse = {
    accountId?: number;
    amount?: number;
    amountOrPercentage?: number;
    amountOutstanding?: number;
    amountPaid?: number;
    amountPercentageAppliedTo?: number;
    amountWaived?: number;
    amountWrittenOff?: number;
    chargeCalculationType?: GetChargesChargeCalculationType;
    chargeId?: number;
    chargeTimeType?: GetChargesChargeTimeType;
    currency?: GetChargesCurrencyResponse;
    id?: number;
    name?: string;
    penalty?: boolean;
    percentage?: number;
};

/**
 * GetSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse
 */
export type GetSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse = {
    amount?: number;
    amountOrPercentage?: number;
    amountOutstanding?: number;
    amountPaid?: number;
    amountPercentageAppliedTo?: number;
    amountWaived?: number;
    amountWrittenOff?: number;
    chargeCalculationType?: GetChargesChargeCalculationType;
    chargeId?: number;
    chargeTimeType?: GetChargesChargeTimeType;
    currency?: GetChargesCurrencyResponse;
    id?: number;
    name?: string;
    penalty?: boolean;
    percentage?: number;
};

/**
 * GetSavingsAccountsSavingsAccountIdChargesTemplateResponse
 */
export type GetSavingsAccountsSavingsAccountIdChargesTemplateResponse = {
    amountPaid?: number;
    amountWaived?: number;
    amountWrittenOff?: number;
    chargeOptions?: Array<GetSavingsChargesOptions>;
    penalty?: boolean;
};

/**
 * GetSavingsAccountsTemplateResponse
 */
export type GetSavingsAccountsTemplateResponse = {
    clientId?: number;
    clientName?: string;
    productOptions?: Array<GetSavingsProductOptions>;
};

export type GetSavingsAssetLiabilityType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSavingsAssetTagId = {
    [key: string]: unknown;
};

export type GetSavingsChargeCalculationType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSavingsChargePaymentMode = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSavingsChargeTimeType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSavingsChargesChargeTimeType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSavingsChargesOptions = {
    active?: boolean;
    amount?: number;
    chargeCalculationType?: GetChargesChargeCalculationType;
    chargeTimeType?: GetSavingsChargesChargeTimeType;
    chargesAppliesTo?: GetChargesAppliesTo;
    currency?: GetChargesCurrencyResponse;
    id?: number;
    name?: string;
    penalty?: boolean;
};

export type GetSavingsCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetSavingsInterestCalculationDaysInYearType = {
    code?: string;
    id?: number;
    value?: string;
};

export type GetSavingsInterestCalculationType = {
    code?: string;
    id?: number;
    value?: string;
};

export type GetSavingsInterestCompoundingPeriodType = {
    code?: string;
    id?: number;
    value?: string;
};

export type GetSavingsInterestPostingPeriodType = {
    code?: string;
    id?: number;
    value?: string;
};

export type GetSavingsPageItems = {
    accountNo?: string;
    clientId?: number;
    clientName?: string;
    currency?: GetSavingsCurrency;
    fieldOfficerId?: number;
    id?: number;
    interestCalculationDaysInYearType?: GetSavingsInterestCalculationDaysInYearType;
    interestCalculationType?: GetSavingsInterestCalculationType;
    interestCompoundingPeriodType?: GetSavingsInterestCompoundingPeriodType;
    interestPostingPeriodType?: GetSavingsInterestPostingPeriodType;
    nominalAnnualInterestRate?: number;
    savingsProductId?: number;
    savingsProductName?: string;
    status?: GetSavingsStatus;
    summary?: GetSavingsSummary;
    timeline?: GetSavingsTimeline;
};

export type GetSavingsProductOptions = {
    id?: number;
    name?: string;
};

export type GetSavingsProductsAccountingMappingOptions = {
    assetAccountOptions?: Array<GetSavingsProductsAssetAccountOptions>;
    expenseAccountOptions?: Array<GetSavingsProductsExpenseAccountOptions>;
    incomeAccountOptions?: Array<GetSavingsProductsIncomeAccountOptions>;
    liabilityAccountOptions?: Array<GetSavingsProductsLiabilityAccountOptions>;
};

export type GetSavingsProductsAccountingMappings = {
    feeReceivableAccount?: GetSavingsProductsGlAccount;
    incomeFromFeeAccount?: GetSavingsProductsGlAccount;
    incomeFromInterest?: GetSavingsProductsGlAccount;
    incomeFromPenaltyAccount?: GetSavingsProductsGlAccount;
    interestOnSavingsAccount?: GetSavingsProductsGlAccount;
    interestPayableAccount?: GetSavingsProductsGlAccount;
    interestReceivableAccount?: GetSavingsProductsGlAccount;
    overdraftPortfolioControl?: GetSavingsProductsGlAccount;
    penaltyReceivableAccount?: GetSavingsProductsGlAccount;
    savingsControlAccount?: GetSavingsProductsGlAccount;
    savingsReferenceAccount?: GetSavingsProductsGlAccount;
    transfersInSuspenseAccount?: GetSavingsProductsGlAccount;
    writeOffAccount?: GetSavingsProductsGlAccount;
};

export type GetSavingsProductsAccountingRule = {
    code?: string;
    id?: number;
    value?: string;
};

export type GetSavingsProductsAssetAccountOptions = {
    disabled?: boolean;
    glCode?: string;
    id?: number;
    manualEntriesAllowed?: boolean;
    name?: string;
    tagId?: GetSavingsAssetTagId;
    type?: GetSavingsAssetLiabilityType;
    usage?: GetSavingsProductsLiabilityUsage;
};

export type GetSavingsProductsChargeAppliesTo = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSavingsProductsChargeOptions = {
    active?: boolean;
    amount?: number;
    chargeAppliesTo?: GetSavingsProductsChargeAppliesTo;
    chargeCalculationType?: GetSavingsChargeCalculationType;
    chargePaymentMode?: GetSavingsChargePaymentMode;
    chargeTimeType?: GetSavingsChargeTimeType;
    currency?: GetSavingsCurrency;
    id?: number;
    name?: string;
    penalty?: boolean;
};

export type GetSavingsProductsExpenseAccountOptions = {
    disabled?: boolean;
    glCode?: string;
    id?: number;
    manualEntriesAllowed?: boolean;
    name?: string;
    tagId?: GetSavingsAssetTagId;
    type?: GetSavingsProductsExpenseType;
    usage?: GetSavingsProductsLiabilityUsage;
};

export type GetSavingsProductsExpenseType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSavingsProductsFeeToIncomeAccountMappings = {
    charge?: GetSavingsProductsFeeToIncomeAccountMappingsCharge;
    incomeAccount?: GetSavingsProductsFeeToIncomeAccountMappingsIncomeAccount;
};

export type GetSavingsProductsFeeToIncomeAccountMappingsCharge = {
    active?: boolean;
    id?: number;
    name?: string;
    penalty?: boolean;
};

export type GetSavingsProductsFeeToIncomeAccountMappingsIncomeAccount = {
    glCode?: string;
    id?: number;
    name?: string;
};

export type GetSavingsProductsFundSourceAccount = {
    glCode?: string;
    id?: number;
    name?: string;
};

export type GetSavingsProductsGlAccount = {
    glCode?: string;
    id?: number;
    name?: string;
};

export type GetSavingsProductsIncomeAccountOptions = {
    disabled?: boolean;
    glCode?: string;
    id?: number;
    manualEntriesAllowed?: boolean;
    name?: string;
    tagId?: GetSavingsAssetTagId;
    type?: GetSavingsProductsIncomeType;
    usage?: GetSavingsProductsLiabilityUsage;
};

export type GetSavingsProductsIncomeType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSavingsProductsInterestCalculationDaysInYearType = {
    code?: string;
    id?: number;
    value?: string;
};

export type GetSavingsProductsInterestCalculationType = {
    code?: string;
    id?: number;
    value?: string;
};

export type GetSavingsProductsInterestCompoundingPeriodType = {
    code?: string;
    id?: number;
    value?: string;
};

export type GetSavingsProductsInterestPostingPeriodType = {
    code?: string;
    id?: number;
    value?: string;
};

export type GetSavingsProductsLiabilityAccountOptions = {
    disabled?: boolean;
    glCode?: string;
    id?: number;
    manualEntriesAllowed?: boolean;
    name?: string;
    nameDecorated?: string;
    tagId?: GetSavingsProductsLiabilityTagId;
    type?: GetSavingsProductsLiabilityType;
    usage?: GetSavingsProductsLiabilityUsage;
};

export type GetSavingsProductsLiabilityTagId = {
    id?: number;
};

export type GetSavingsProductsLiabilityType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSavingsProductsLiabilityUsage = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSavingsProductsLockinPeriodFrequencyTypeOptions = {
    code?: string;
    id?: number;
    value?: string;
};

export type GetSavingsProductsPaymentChannelToFundSourceMappings = {
    fundSourceAccount?: GetSavingsProductsFundSourceAccount;
    paymentType?: GetSavingsProductsPaymentType;
};

export type GetSavingsProductsPaymentType = {
    id?: number;
    name?: string;
};

export type GetSavingsProductsPaymentTypeOptions = {
    description?: string;
    id?: number;
    isCashPayment?: boolean;
    name?: string;
    position?: number;
};

export type GetSavingsProductsPenaltyToIncomeAccountMappings = {
    charge?: GetSavingsProductsPenaltyToIncomeAccountMappingsCharge;
    incomeAccount?: GetSavingsProductsGlAccount;
};

export type GetSavingsProductsPenaltyToIncomeAccountMappingsCharge = {
    active?: boolean;
    id?: number;
    name?: string;
    penalty?: boolean;
};

/**
 * GetSavingsProductsProductIdResponse
 */
export type GetSavingsProductsProductIdResponse = {
    accountingMappings?: GetSavingsProductsAccountingMappings;
    accountingRule?: GetSavingsProductsAccountingRule;
    charges?: Array<(number)>;
    currency?: GetSavingsCurrency;
    description?: string;
    feeToIncomeAccountMappings?: Array<GetSavingsProductsFeeToIncomeAccountMappings>;
    id?: number;
    interestCalculationDaysInYearType?: GetSavingsProductsInterestCalculationDaysInYearType;
    interestCalculationType?: GetSavingsProductsInterestCalculationType;
    interestCompoundingPeriodType?: GetSavingsProductsInterestCompoundingPeriodType;
    interestPostingPeriodType?: GetSavingsProductsInterestPostingPeriodType;
    name?: string;
    nominalAnnualInterestRate?: number;
    paymentChannelToFundSourceMappings?: Array<GetSavingsProductsPaymentChannelToFundSourceMappings>;
    penaltyToIncomeAccountMappings?: Array<GetSavingsProductsPenaltyToIncomeAccountMappings>;
    shortName?: string;
    withdrawalFeeForTransfers?: boolean;
};

/**
 * GetSavingsProductsResponse
 */
export type GetSavingsProductsResponse = {
    accountingRule?: GetSavingsProductsAccountingRule;
    currency?: GetSavingsCurrency;
    description?: string;
    id?: number;
    interestCalculationDaysInYearType?: GetSavingsProductsInterestCalculationDaysInYearType;
    interestCalculationType?: GetSavingsProductsInterestCalculationType;
    interestCompoundingPeriodType?: GetSavingsProductsInterestCompoundingPeriodType;
    interestPostingPeriodType?: GetSavingsProductsInterestPostingPeriodType;
    name?: string;
    nominalAnnualInterestRate?: number;
    shortName?: string;
    withdrawalFeeForTransfers?: boolean;
};

export type GetSavingsProductsTemplateAccountingRule = {
    code?: string;
    id?: number;
    value?: string;
};

/**
 * GetSavingsProductsTemplateResponse
 */
export type GetSavingsProductsTemplateResponse = {
    accountMapping?: GetSavingsCurrency;
    accountingMappingOptions?: GetSavingsProductsAccountingMappingOptions;
    accountingRule?: GetSavingsProductsTemplateAccountingRule;
    accountingRuleOptions?: Array<GetSavingsProductsTemplateAccountingRule>;
    chargeOptions?: Array<GetSavingsProductsChargeOptions>;
    currency?: GetSavingsCurrency;
    currencyOptions?: Array<GetSavingsCurrency>;
    interestCalculationDaysInYearType?: GetSavingsProductsInterestCalculationDaysInYearType;
    interestCalculationDaysInYearTypeOptions?: Array<GetSavingsProductsInterestCalculationDaysInYearType>;
    interestCalculationType?: GetSavingsProductsInterestCalculationType;
    interestCalculationTypeOptions?: Array<GetSavingsProductsInterestCalculationType>;
    interestCompoundingPeriodType?: GetSavingsProductsInterestCompoundingPeriodType;
    interestCompoundingPeriodTypeOptions?: Array<GetSavingsProductsInterestCompoundingPeriodType>;
    interestPostingPeriodType?: GetSavingsProductsInterestPostingPeriodType;
    interestPostingPeriodTypeOptions?: Array<GetSavingsProductsInterestPostingPeriodType>;
    lockinPeriodFrequencyTypeOptions?: Array<GetSavingsProductsLockinPeriodFrequencyTypeOptions>;
    paymentTypeOptions?: Array<GetSavingsProductsPaymentTypeOptions>;
    withdrawalFeeTypeOptions?: Array<GetSavingsProductsWithdrawalFeeTypeOptions>;
};

export type GetSavingsProductsWithdrawalFeeTypeOptions = {
    code?: string;
    id?: number;
    value?: string;
};

export type GetSavingsStatus = {
    active?: boolean;
    approved?: boolean;
    closed?: boolean;
    code?: string;
    id?: number;
    rejected?: boolean;
    submittedAndPendingApproval?: boolean;
    value?: string;
    withdrawnByApplicant?: boolean;
};

export type GetSavingsSummary = {
    accountBalance?: number;
    currency?: GetSavingsCurrency;
};

export type GetSavingsTimeline = {
    activatedOnDate?: string;
    approvedByFirstname?: string;
    approvedByLastname?: string;
    approvedByUsername?: string;
    approvedOnDate?: string;
    submittedByFirstname?: string;
    submittedByLastname?: string;
    submittedByUsername?: string;
    submittedOnDate?: string;
};

/**
 * GetSchedulerResponse
 */
export type GetSchedulerResponse = {
    active?: boolean;
};

/**
 * GetSearchResponse
 */
export type GetSearchResponse = {
    entityAccountNo?: number;
    entityExternalId?: string;
    entityId?: number;
    entityName?: string;
    entityStatus?: EnumOptionData;
    entityType?: string;
    parentId?: number;
    parentName?: string;
};

export type GetSelfBeneficiariesAccountOptions = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetSelfBeneficiariesTPTResponse
 */
export type GetSelfBeneficiariesTPTResponse = {
    accountNumber?: number;
    accountType?: GetSelfBeneficiariesAccountOptions;
    clientName?: string;
    id?: number;
    name?: string;
    officeName?: string;
    transferLimit?: number;
};

/**
 * GetSelfBeneficiariesTPTTemplateResponse
 */
export type GetSelfBeneficiariesTPTTemplateResponse = {
    accountTypeOptions?: Array<GetSelfBeneficiariesAccountOptions>;
};

export type GetSelfClientsChargeCalculationType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSelfClientsChargeTimeType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSelfClientsChargesPageItems = {
    amount?: number;
    amountOutstanding?: number;
    amountPaid?: number;
    amountWaived?: number;
    amountWrittenOff?: number;
    chargeCalculationType?: GetSelfClientsChargeCalculationType;
    chargeId?: number;
    chargeTimeType?: GetSelfClientsChargeTimeType;
    clientId?: number;
    currency?: GetSelfClientsSavingsAccountsCurrency;
    dueDate?: string;
    id?: number;
    isActive?: boolean;
    isPaid?: boolean;
    isWaived?: boolean;
    name?: string;
    penalty?: boolean;
};

/**
 * GetSelfClientsClientIdAccountsResponse
 */
export type GetSelfClientsClientIdAccountsResponse = {
    loanAccounts?: Array<GetSelfClientsLoanAccounts>;
    savingsAccounts?: Array<GetSelfClientsSavingsAccounts>;
};

/**
 * GetSelfClientsClientIdChargesChargeIdResponse
 */
export type GetSelfClientsClientIdChargesChargeIdResponse = {
    amount?: number;
    amountOutstanding?: number;
    amountPaid?: number;
    amountWaived?: number;
    amountWrittenOff?: number;
    chargeCalculationType?: GetSelfClientsChargeCalculationType;
    chargeId?: number;
    chargeTimeType?: GetSelfClientsChargeTimeType;
    clientId?: number;
    currency?: GetSelfClientsSavingsAccountsCurrency;
    dueDate?: string;
    id?: number;
    isActive?: boolean;
    isPaid?: boolean;
    isWaived?: boolean;
    name?: string;
    penalty?: boolean;
};

/**
 * GetSelfClientsClientIdChargesResponse
 */
export type GetSelfClientsClientIdChargesResponse = {
    pageItems?: Array<GetSelfClientsChargesPageItems>;
    totalFilteredRecords?: number;
};

/**
 * GetSelfClientsClientIdResponse
 */
export type GetSelfClientsClientIdResponse = {
    accountNo?: number;
    activationDate?: string;
    active?: boolean;
    displayName?: string;
    firstname?: string;
    groups?: Array<(string)>;
    id?: number;
    lastname?: string;
    officeId?: number;
    officeName?: string;
    savingsProductId?: number;
    savingsProductName?: string;
    status?: GetSelfClientsStatus;
    timeline?: GetSelfClientsTimeline;
};

export type GetSelfClientsClientIdTransactionsPageItems = {
    amount?: number;
    currency?: GetSelfClientsSavingsAccountsCurrency;
    date?: string;
    id?: number;
    officeId?: number;
    officeName?: string;
    reversed?: boolean;
    submittedOnDate?: string;
    type?: GetSelfClientsClientIdTransactionsType;
};

/**
 * GetSelfClientsClientIdTransactionsResponse
 */
export type GetSelfClientsClientIdTransactionsResponse = {
    pageItems?: Array<GetSelfClientsClientIdTransactionsPageItems>;
    totalFilteredRecords?: number;
};

/**
 * GetSelfClientsClientIdTransactionsTransactionIdResponse
 */
export type GetSelfClientsClientIdTransactionsTransactionIdResponse = {
    amount?: number;
    currency?: GetSelfClientsSavingsAccountsCurrency;
    date?: string;
    id?: number;
    officeId?: number;
    officeName?: string;
    reversed?: boolean;
    submittedOnDate?: string;
    type?: GetSelfClientsClientIdTransactionsType;
};

export type GetSelfClientsClientIdTransactionsType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSelfClientsLoanAccounts = {
    accountNo?: number;
    externalId?: string;
    id?: number;
    loanCycle?: number;
    loanType?: GetSelfClientsLoanAccountsType;
    productId?: number;
    productName?: string;
    status?: GetSelfClientsLoanAccountsStatus;
};

export type GetSelfClientsLoanAccountsStatus = {
    active?: boolean;
    closed?: boolean;
    closedObligationsMet?: boolean;
    closedRescheduled?: boolean;
    closedWrittenOff?: boolean;
    code?: string;
    description?: string;
    id?: number;
    overpaid?: boolean;
    pendingApproval?: boolean;
    waitingForDisbursal?: boolean;
};

export type GetSelfClientsLoanAccountsType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSelfClientsPageItems = {
    accountNo?: number;
    activationDate?: string;
    active?: boolean;
    displayName?: string;
    fullname?: string;
    id?: number;
    officeId?: number;
    officeName?: string;
    status?: GetSelfClientsStatus;
};

/**
 * GetSelfClientsResponse
 */
export type GetSelfClientsResponse = {
    pageItems?: Array<GetSelfClientsPageItems>;
    totalFilteredRecords?: number;
};

export type GetSelfClientsSavingsAccounts = {
    accountNo?: number;
    currency?: GetSelfClientsSavingsAccountsCurrency;
    id?: number;
    productId?: number;
    productName?: string;
    status?: GetSelfClientsSavingsAccountsStatus;
};

export type GetSelfClientsSavingsAccountsCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetSelfClientsSavingsAccountsStatus = {
    active?: boolean;
    approved?: boolean;
    closed?: boolean;
    code?: string;
    description?: string;
    id?: number;
    rejected?: boolean;
    submittedAndPendingApproval?: boolean;
    withdrawnByApplicant?: boolean;
};

export type GetSelfClientsStatus = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSelfClientsTimeline = {
    activatedByFirstname?: string;
    activatedByLastname?: string;
    activatedByUsername?: string;
    activatedOnDate?: string;
    submittedByFirstname?: string;
    submittedByLastname?: string;
    submittedByUsername?: string;
    submittedOnDate?: string;
};

export type GetSelfLoanIdSummary = {
    canDisburse?: boolean;
    currency?: GetLoansLoanIdCurrency;
    disbursementDetails?: Array<GetLoansLoanIdDisbursementDetails>;
    emiAmountVariations?: Array<GetLoansLoanIdEmiVariations>;
    feeChargesCharged?: number;
    feeChargesDueAtDisbursementCharged?: number;
    feeChargesOutstanding?: number;
    feeChargesOverdue?: number;
    feeChargesPaid?: number;
    feeChargesWaived?: number;
    feeChargesWrittenOff?: number;
    fixedEmiAmount?: number;
    inArrears?: boolean;
    interestCharged?: number;
    interestOutstanding?: number;
    interestOverdue?: number;
    interestPaid?: number;
    interestWaived?: number;
    interestWrittenOff?: number;
    isNPA?: boolean;
    linkedAccount?: GetLoansLoanIdLinkedAccount;
    maxOutstandingLoanBalance?: number;
    overdueCharges?: Array<GetLoansLoanIdOverdueCharges>;
    overdueSinceDate?: string;
    penaltyChargesCharged?: number;
    penaltyChargesOutstanding?: number;
    penaltyChargesOverdue?: number;
    penaltyChargesPaid?: number;
    penaltyChargesWaived?: number;
    penaltyChargesWrittenOff?: number;
    principalAdjustments?: number;
    principalDisbursed?: number;
    principalOutstanding?: number;
    principalOverdue?: number;
    principalPaid?: number;
    principalWrittenOff?: number;
    totalChargeAdjustment?: number;
    totalChargeAdjustmentReversed?: number;
    totalChargeback?: number;
    totalCostOfLoan?: number;
    totalCreditBalanceRefund?: number;
    totalCreditBalanceRefundReversed?: number;
    totalExpectedCostOfLoan?: number;
    totalExpectedRepayment?: number;
    totalGoodwillCredit?: number;
    totalGoodwillCreditReversed?: number;
    totalMerchantRefund?: number;
    totalMerchantRefundReversed?: number;
    totalOutstanding?: number;
    totalOverdue?: number;
    totalPayoutRefund?: number;
    totalPayoutRefundReversed?: number;
    totalRepayment?: number;
    totalRepaymentTransaction?: number;
    totalRepaymentTransactionReversed?: number;
    totalWaived?: number;
    totalWrittenOff?: number;
};

export type GetSelfLoanIdTimeline = {
    actualDisbursementDate?: string;
    approvedByFirstname?: string;
    approvedByLastname?: string;
    approvedByUsername?: string;
    approvedOnDate?: string;
    closedOnDate?: string;
    disbursedByFirstname?: string;
    disbursedByLastname?: string;
    disbursedByUsername?: string;
    expectedDisbursementDate?: string;
    expectedMaturityDate?: string;
    submittedByFirstname?: string;
    submittedByLastname?: string;
    submittedByUsername?: string;
    submittedOnDate?: string;
};

export type GetSelfLoansChargeCalculationType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSelfLoansChargeTimeType = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetSelfLoansLoanIdChargesResponse
 */
export type GetSelfLoansLoanIdChargesResponse = {
    amount?: number;
    amountOrPercentage?: number;
    amountOutstanding?: number;
    amountPaid?: number;
    amountPercentageAppliedTo?: number;
    amountWaived?: number;
    amountWrittenOff?: number;
    chargeCalculationType?: GetSelfLoansChargeCalculationType;
    chargeId?: number;
    chargeTimeType?: GetSelfLoansChargeTimeType;
    currency?: GetLoanCurrency;
    id?: number;
    name?: string;
    penalty?: boolean;
    percentage?: number;
};

/**
 * GetSelfLoansLoanIdResponse
 */
export type GetSelfLoansLoanIdResponse = {
    accountNo?: number;
    amortizationType?: GetLoansLoanIdAmortizationType;
    annualInterestRate?: number;
    clientId?: number;
    clientName?: string;
    clientOfficeId?: number;
    currency?: GetLoansLoanIdCurrency;
    id?: number;
    interestCalculationPeriodType?: GetLoansLoanIdInterestCalculationPeriodType;
    interestRateFrequencyType?: GetLoansLoanIdInterestRateFrequencyType;
    interestRatePerPeriod?: number;
    interestType?: GetLoansLoanIdInterestType;
    loanOfficerId?: number;
    loanOfficerName?: string;
    loanProductDescription?: string;
    loanProductId?: number;
    loanProductName?: string;
    loanPurposeId?: number;
    loanPurposeName?: string;
    loanType?: GetLoansLoanIdLoanType;
    numberOfRepayments?: number;
    principal?: number;
    repaymentEvery?: number;
    repaymentFrequencyType?: GetLoansLoanIdRepaymentFrequencyType;
    status?: GetLoansLoanIdStatus;
    summary?: GetSelfLoanIdSummary;
    termFrequency?: number;
    termPeriodFrequencyType?: GetLoansLoanIdTermPeriodFrequencyType;
    timeline?: GetSelfLoanIdTimeline;
    transactionProcessingStrategyCode?: string;
};

/**
 * GetSelfLoansLoanIdTransactionsTransactionIdResponse
 */
export type GetSelfLoansLoanIdTransactionsTransactionIdResponse = {
    amount?: number;
    currency?: GetLoanCurrency;
    date?: string;
    id?: number;
    interestPortion?: number;
    manuallyReversed?: boolean;
    type?: GetSelfLoansLoanIdTransactionsType;
};

export type GetSelfLoansLoanIdTransactionsType = {
    code?: string;
    contra?: boolean;
    description?: string;
    disbursement?: boolean;
    id?: number;
    recoveryRepayment?: boolean;
    repayment?: boolean;
    repaymentAtDisbursement?: boolean;
    waiveCharges?: boolean;
    waiveInterest?: boolean;
    writeOff?: boolean;
};

export type GetSelfLoansProductOptions = {
    id?: number;
    name?: string;
};

/**
 * GetSelfLoansTemplateResponse
 */
export type GetSelfLoansTemplateResponse = {
    clientId?: number;
    clientName?: string;
    clientOfficeId?: number;
    productOptions?: Array<GetSelfLoansProductOptions>;
    timeline?: GetSelfLoansTimeline;
};

export type GetSelfLoansTimeline = {
    expectedDisbursementDate?: string;
};

/**
 * GetSelfSavingsAccountsAccountIdChargesResponse
 */
export type GetSelfSavingsAccountsAccountIdChargesResponse = {
    accountId?: number;
    amount?: number;
    amountOrPercentage?: number;
    amountOutstanding?: number;
    amountPaid?: number;
    amountPercentageAppliedTo?: number;
    amountWaived?: number;
    amountWrittenOff?: number;
    chargeCalculationType?: GetSelfSavingsChargeCalculationType;
    chargeId?: number;
    chargeTimeType?: GetSelfSavingsChargeTimeType;
    currency?: GetSelfSavingsCurrency;
    id?: number;
    name?: string;
    penalty?: boolean;
    percentage?: number;
};

/**
 * GetSelfSavingsAccountsAccountIdChargesSavingsAccountChargeIdResponse
 */
export type GetSelfSavingsAccountsAccountIdChargesSavingsAccountChargeIdResponse = {
    amount?: number;
    amountOrPercentage?: number;
    amountOutstanding?: number;
    amountPaid?: number;
    amountPercentageAppliedTo?: number;
    amountWaived?: number;
    amountWrittenOff?: number;
    chargeCalculationType?: GetSelfSavingsChargeCalculationType;
    chargeId?: number;
    chargeTimeType?: GetSelfSavingsChargeTimeType;
    currency?: GetSelfSavingsCurrency;
    id?: number;
    name?: string;
    penalty?: boolean;
    percentage?: number;
};

/**
 * GetSelfSavingsAccountsAccountIdTransactionsTransactionIdResponse
 */
export type GetSelfSavingsAccountsAccountIdTransactionsTransactionIdResponse = {
    accountId?: number;
    accountNo?: number;
    amount?: number;
    currency?: GetSelfSavingsTransactionCurrency;
    date?: string;
    id?: number;
    paymentDetailData?: GetSelfSavingsPaymentDetailData;
    reversed?: boolean;
    runningBalance?: number;
    transactionType?: GetSelfSavingsTransactionType;
};

/**
 * GetSelfSavingsAccountsResponse
 */
export type GetSelfSavingsAccountsResponse = {
    accountNo?: number;
    clientId?: number;
    clientName?: string;
    currency?: GetSelfSavingsCurrency;
    fieldOfficerId?: number;
    id?: number;
    interestCalculationDaysInYearType?: GetSelfSavingsInterestCalculationDaysInYearType;
    interestCalculationType?: GetSelfSavingsInterestCalculationType;
    interestCompoundingPeriodType?: GetSelfSavingsInterestCompoundingPeriodType;
    interestPostingPeriodType?: GetSelfSavingsInterestPostingPeriodType;
    nominalAnnualInterestRate?: number;
    savingsProductId?: number;
    savingsProductName?: string;
    status?: GetSelfSavingsStatus;
    summary?: GetSelfSavingsSummary;
    timeline?: GetSelfSavingsTimeline;
};

export type GetSelfSavingsChargeCalculationType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSelfSavingsChargeTimeType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSelfSavingsCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetSelfSavingsInterestCalculationDaysInYearType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSelfSavingsInterestCalculationType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSelfSavingsInterestCompoundingPeriodType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSelfSavingsInterestPostingPeriodType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetSelfSavingsPaymentDetailData = {
    accountNumber?: number;
    bankNumber?: number;
    checkNumber?: number;
    id?: number;
    paymentType?: GetSelfSavingsPaymentType;
    receiptNumber?: number;
    routingCode?: number;
};

export type GetSelfSavingsPaymentType = {
    id?: number;
    name?: string;
};

export type GetSelfSavingsStatus = {
    active?: boolean;
    approved?: boolean;
    closed?: boolean;
    code?: string;
    description?: string;
    id?: number;
    rejected?: boolean;
    submittedAndPendingApproval?: boolean;
    withdrawnByApplicant?: boolean;
};

export type GetSelfSavingsSummary = {
    accountBalance?: number;
    currency?: GetSelfSavingsCurrency;
};

export type GetSelfSavingsTimeline = {
    submittedOnDate?: string;
};

export type GetSelfSavingsTransactionCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    inMultiplesOf?: number;
    name?: string;
    nameCode?: string;
};

export type GetSelfSavingsTransactionType = {
    code?: string;
    deposit?: boolean;
    description?: string;
    feeDeduction?: boolean;
    id?: number;
    interestPosting?: boolean;
    withdrawal?: boolean;
};

export type GetSelfUserDetailsOrganisationalRole = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetSelfUserDetailsResponse
 */
export type GetSelfUserDetailsResponse = {
    authenticated?: boolean;
    base64EncodedAuthenticationKey?: string;
    clients?: Array<(number)>;
    isSelfServiceUser?: boolean;
    officeId?: number;
    officeName?: string;
    organisationalRole?: GetSelfUserDetailsOrganisationalRole;
    permissions?: Array<(string)>;
    roles?: Array<GetSelfUserDetailsRoles>;
    staffDisplayName?: string;
    staffId?: number;
    userId?: number;
    username?: string;
};

export type GetSelfUserDetailsRoles = {
    description?: string;
    id?: number;
    name?: string;
};

export type GetShareAccountsChargeAppliesTo = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetShareAccountsChargeCalculationType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetShareAccountsChargeOptions = {
    active?: boolean;
    amount?: number;
    calculationType?: GetShareAccountsChargeCalculationType;
    chargeAppliesTo?: GetShareAccountsChargeAppliesTo;
    chargeTimeType?: GetShareAccountsChargeTimeType;
    currency?: GetShareAccountsCurrency;
    id?: number;
    name?: string;
    paymentMode?: GetShareAccountsChargePaymentMode;
    penalty?: boolean;
};

export type GetShareAccountsChargePaymentMode = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetShareAccountsChargeTimeType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetShareAccountsClientIdProductIdAccountingRule = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetShareAccountsClientIdProductIdLockPeriodTypeEnum = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetShareAccountsClientIdProductIdMinimumActivePeriodForDividendsTypeEnum = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetShareAccountsClientIdProductIdResponse
 */
export type GetShareAccountsClientIdProductIdResponse = {
    chargeOptions?: Array<GetClientIdProductIdChargeOptions>;
    productOptions?: Array<GetClientIdProductIdProductOptions>;
};

export type GetShareAccountsCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    name?: string;
    nameCode?: string;
};

export type GetShareAccountsIncomeFromFeeAccountId = {
    glCode?: string;
    id?: number;
    name?: string;
};

export type GetShareAccountsShareEquityId = {
    glCode?: string;
    id?: number;
    name?: string;
};

export type GetShareAccountsShareReferenceId = {
    glCode?: string;
    id?: number;
    name?: string;
};

export type GetShareAccountsShareSuspenseId = {
    glCode?: string;
    id?: number;
    name?: string;
};

export type GetShareEquityId = {
    glCode?: string;
    id?: number;
    name?: string;
};

export type GetShareReferenceId = {
    glCode?: string;
    id?: number;
    name?: string;
};

export type GetShareSuspenseId = {
    glCode?: string;
    id?: number;
    name?: string;
};

export type GetStandingInstructionHistoryFromAccount = {
    accountNo?: number;
    id?: number;
    productId?: number;
    productName?: string;
};

export type GetStandingInstructionHistoryPageItemsFromClient = {
    displayName?: string;
    id?: number;
    officeId?: number;
    officeName?: string;
};

export type GetStandingInstructionHistoryPageItemsResponse = {
    amount?: number;
    errorLog?: string;
    executionTime?: string;
    fromAccount?: GetStandingInstructionHistoryFromAccount;
    fromAccountType?: GetFromAccountTypeStandingInstructionSwagger;
    fromClient?: GetStandingInstructionHistoryPageItemsFromClient;
    fromOffice?: GetFromOfficeStandingInstructionSwagger;
    name?: string;
    standingInstructionId?: number;
    status?: string;
    toAccount?: GetStandingInstructionHistoryToAccount;
    toAccountType?: GetToAccountTypeStandingInstructionSwagger;
    toClient?: GetStandingInstructionHistoryToClient;
    toOffice?: GetToOfficeStandingInstructionSwagger;
};

export type GetStandingInstructionHistoryToAccount = {
    accountNo?: number;
    id?: number;
    productId?: number;
    productName?: string;
};

export type GetStandingInstructionHistoryToClient = {
    displayName?: string;
    id?: number;
    officeId?: number;
    officeName?: string;
};

/**
 * GetStandingInstructionRunHistoryResponse
 */
export type GetStandingInstructionRunHistoryResponse = {
    pageItems?: Array<GetStandingInstructionHistoryPageItemsResponse>;
    totalFilteredRecords?: number;
};

/**
 * GetStandingInstructionsResponse
 */
export type GetStandingInstructionsResponse = {
    pageItems?: Array<GetPageItemsStandingInstructionSwagger>;
    totalFilteredRecords?: number;
};

/**
 * GetStandingInstructionsStandingInstructionIdResponse
 */
export type GetStandingInstructionsStandingInstructionIdResponse = {
    accountDetailId?: number;
    amount?: number;
    fromAccount?: GetFromAccountStandingInstructionSwagger;
    fromAccountType?: GetFromAccountTypeStandingInstructionSwagger;
    fromClient?: GetFromClientStandingInstructionSwagger;
    fromOffice?: GetFromOfficeStandingInstructionSwagger;
    id?: number;
    instructionType?: GetInstructionTypeStandingInstructionSwagger;
    name?: string;
    priority?: GetPriorityStandingInstructionSwagger;
    recurrenceFrequency?: GetRecurrenceFrequencyStandingInstructionSwagger;
    recurrenceInterval?: number;
    recurrenceOnMonthDay?: string;
    recurrenceType?: GetRecurrenceTypeStandingInstructionSwagger;
    status?: GetStatusStandingInstructionSwagger;
    toAccount?: GetToAccountStandingInstructionSwagger;
    toAccountType?: GetToAccountTypeStandingInstructionSwagger;
    toClient?: GetToClientStandingInstructionSwagger;
    toOffice?: GetToOfficeStandingInstructionSwagger;
    transferType?: GetTransferTypeStandingInstructionSwagger;
    validFrom?: string;
};

/**
 * GetStandingInstructionsTemplateResponse
 */
export type GetStandingInstructionsTemplateResponse = {
    fromAccountType?: GetFromAccountTypeResponseStandingInstructionSwagger;
    fromAccountTypeOptions?: Array<GetFromAccountTypeOptionsResponseStandingInstructionSwagger>;
    fromClientOptions?: Array<GetFromClientOptionsResponseStandingInstructionSwagger>;
    fromOffice?: GetFromOfficeResponseStandingInstructionSwagger;
    fromOfficeOptions?: Array<GetFromOfficeOptionsResponseStandingInstructionSwagger>;
    instructionTypeOptions?: Array<GetInstructionTypeOptionsResponseStandingInstructionSwagger>;
    priorityOptions?: Array<GetPriorityOptionsResponseStandingInstructionSwagger>;
    recurrenceFrequencyOptions?: Array<GetRecurrenceFrequencyOptionsResponseStandingInstructionSwagger>;
    recurrenceTypeOptions?: Array<GetRecurrenceTypeOptionsResponseStandingInstructionSwagger>;
    statusOptions?: Array<GetStatusOptionsResponseStandingInstructionSwagger>;
    toAccountTypeOptions?: Array<GetToAccountTypeOptionsResponseStandingInstructionSwagger>;
    toOfficeOptions?: Array<GetToOfficeOptionsResponseStandingInstructionSwagger>;
    transferTypeOptions?: Array<GetTransferTypeOptionsResponseStandingInstructionSwagger>;
};

export type GetStatusOptionsResponseStandingInstructionSwagger = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetStatusStandingInstructionSwagger = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetSurveyResponse
 */
export type GetSurveyResponse = {
    datatableData?: GetSurveyResponseDatatableData;
    enabled?: boolean;
};

export type GetSurveyResponseDatatableData = {
    applicationTableName?: string;
    columnHeaderData?: Array<ResultsetColumnHeaderData>;
    registeredTableName?: string;
};

export type GetTaxesComponentsCreditAccount = {
    glCode?: string;
    id?: number;
    name?: string;
};

export type GetTaxesComponentsCreditAccountType = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetTaxesComponentsHistories = {
    [key: string]: unknown;
};

/**
 * GetTaxesComponentsResponse
 */
export type GetTaxesComponentsResponse = {
    creditAccount?: GetTaxesComponentsCreditAccount;
    creditAccountType?: GetTaxesComponentsCreditAccountType;
    id?: number;
    name?: string;
    percentage?: number;
    startDate?: string;
    taxComponentsHistories?: Array<GetTaxesComponentsHistories>;
};

/**
 * GetTaxesGroupResponse
 */
export type GetTaxesGroupResponse = {
    id?: number;
    name?: string;
    taxAssociations?: Array<GetTaxesGroupTaxAssociations>;
};

export type GetTaxesGroupTaxAssociations = {
    id?: number;
    startDate?: string;
    taxComponent?: GetTaxesGroupTaxComponent;
};

export type GetTaxesGroupTaxComponent = {
    id?: number;
    name?: string;
};

/**
 * GetTellersResponse
 */
export type GetTellersResponse = {
    creditAccountId?: number;
    debitAccountId?: number;
    id?: number;
    name?: string;
    officeId?: number;
    officeName?: string;
    startDate?: string;
    status?: 'INVALID' | 'PENDING' | 'ACTIVE' | 'INACTIVE' | 'CLOSED';
};

export type status2 = 'INVALID' | 'PENDING' | 'ACTIVE' | 'INACTIVE' | 'CLOSED';

/**
 * GetTellersTellerIdCashiersCashierIdResponse
 */
export type GetTellersTellerIdCashiersCashierIdResponse = {
    description?: string;
    endDate?: string;
    endTime?: string;
    id?: number;
    isFullDay?: boolean;
    staffId?: number;
    staffName?: string;
    startDate?: string;
    startTime?: string;
    tellerId?: number;
    tellerName?: string;
};

/**
 * GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse
 */
export type GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse = {
    cashierId?: number;
    cashierName?: string;
    cashierTransactions?: PageCashierTransactionData;
    netCash?: number;
    officeName?: string;
    sumCashAllocation?: number;
    sumCashSettlement?: number;
    sumInwardCash?: number;
    sumOutwardCash?: number;
    tellerId?: number;
    tellerName?: string;
};

/**
 * GetTellersTellerIdCashiersCashiersIdTransactionsResponse
 */
export type GetTellersTellerIdCashiersCashiersIdTransactionsResponse = {
    cashierId?: number;
    cashierName?: string;
    createdDate?: string;
    entityId?: number;
    entityType?: string;
    id?: number;
    officeId?: number;
    officeName?: string;
    tellerId?: number;
    txnAmount?: number;
    txnDate?: string;
    txnNote?: string;
    txnType?: CashierTxnType;
};

/**
 * GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse
 */
export type GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse = {
    cashierData?: CashierData;
    cashierId?: number;
    cashierName?: string;
    currencyOptions?: Array<CurrencyData>;
    endDate?: string;
    officeName?: string;
    startDate?: string;
    tellerId?: number;
    tellerName?: string;
};

/**
 * GetTellersTellerIdCashiersResponse
 */
export type GetTellersTellerIdCashiersResponse = {
    cashiers?: Array<CashierData>;
    officeId?: number;
    officeName?: string;
    tellerId?: number;
    tellerName?: string;
};

/**
 * GetTellersTellerIdCashiersTemplateResponse
 */
export type GetTellersTellerIdCashiersTemplateResponse = {
    officeId?: number;
    officeName?: string;
    staffOptions?: Array<StaffData>;
    tellerId?: number;
    tellerName?: string;
};

/**
 * GetTemplatesResponse
 */
export type GetTemplatesResponse = {
    entity?: number;
    id?: number;
    mappers?: Array<TemplateMapper>;
    name?: string;
    text?: string;
    type?: number;
};

/**
 * GetTemplatesTemplateIdResponse
 */
export type GetTemplatesTemplateIdResponse = {
    entity?: number;
    id?: number;
    mappers?: Array<TemplateMapper>;
    name?: string;
    text?: string;
    type?: number;
};

/**
 * GetTemplatesTemplateResponse
 */
export type GetTemplatesTemplateResponse = {
    entity?: number;
    id?: number;
    mappers?: Array<TemplateMapper>;
    name?: string;
    text?: string;
    type?: number;
};

export type GetToAccountStandingInstructionSwagger = {
    accountNo?: number;
    id?: number;
    productId?: number;
    productName?: string;
};

export type GetToAccountTypeOptionsResponseStandingInstructionSwagger = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetToAccountTypeStandingInstructionSwagger = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetToClientStandingInstructionSwagger = {
    displayName?: string;
    id?: number;
    officeId?: number;
    officeName?: string;
};

export type GetToOfficeOptionsResponseStandingInstructionSwagger = {
    id?: number;
    name?: string;
    nameDecorated?: string;
};

export type GetToOfficeStandingInstructionSwagger = {
    id?: number;
    name?: string;
};

export type GetTransactionsCurrency = {
    code?: string;
    decimalPlaces?: number;
    displayLabel?: string;
    displaySymbol?: string;
    isMultiplesOf?: number;
    name?: string;
    nameCode?: string;
};

export type GetTransactionsPaymentDetailData = {
    accountNumber?: string;
    bankNumber?: string;
    checkNumber?: string;
    id?: number;
    paymentType?: GetPaymentTypeData;
    receiptNumber?: string;
    routingCode?: string;
};

export type GetTranscationEnumData = {
    amountHold?: boolean;
    amountRelease?: boolean;
    approveTransfer?: boolean;
    code?: string;
    deposit?: boolean;
    dividendPayout?: boolean;
    escheat?: boolean;
    feeDeduction?: boolean;
    id?: number;
    initiateTransfer?: boolean;
    interestPosting?: boolean;
    overdraftFee?: boolean;
    overdraftInterest?: boolean;
    rejectTransfer?: boolean;
    value?: string;
    withdrawTransfer?: boolean;
    withdrawal?: boolean;
    withholdTax?: boolean;
    writtenoff?: boolean;
};

export type GetTransferTypeOptionsResponseStandingInstructionSwagger = {
    code?: string;
    description?: string;
    id?: number;
};

export type GetTransferTypeStandingInstructionSwagger = {
    code?: string;
    description?: string;
    id?: number;
};

/**
 * GetUserDetailsResponse
 */
export type GetUserDetailsResponse = {
    accessToken?: string;
    authenticated?: boolean;
    officeId?: number;
    officeName?: string;
    organisationalRole?: EnumOptionData;
    permissions?: Array<(string)>;
    roles?: Array<RoleData>;
    staffDisplayName?: string;
    staffId?: number;
    userId?: number;
    username?: string;
};

/**
 * GetUsersResponse
 */
export type GetUsersResponse = {
    email?: string;
    firstname?: string;
    id?: number;
    lastname?: string;
    officeId?: number;
    officeName?: string;
    passwordNeverExpires?: boolean;
    selectedRoles?: Array<RoleData>;
    staff?: StaffData;
    username?: string;
};

/**
 * GetUsersTemplateResponse
 */
export type GetUsersTemplateResponse = {
    allowedOffices?: Array<OfficeData>;
    availableRoles?: Array<RoleData>;
    selfServiceRoles?: Array<RoleData>;
};

/**
 * GetUsersUserIdResponse
 */
export type GetUsersUserIdResponse = {
    availableRoles?: Array<RoleData>;
    email?: string;
    firstname?: string;
    id?: number;
    lastname?: string;
    officeId?: number;
    officeName?: string;
    passwordNeverExpires?: boolean;
    selectedRoles?: Array<RoleData>;
    staff?: StaffData;
    username?: string;
};

/**
 * GetWorkingDaysTemplateResponse
 */
export type GetWorkingDaysTemplateResponse = {
    repaymentRescheduleOptions?: Array<EnumOptionData>;
};

export type GlobalConfigurationPropertyData = {
    dateValue?: string;
    description?: string;
    enabled?: boolean;
    id?: number;
    name?: string;
    stringValue?: string;
    trapDoor?: boolean;
    value?: number;
};

export type GrantedAuthority = {
    authority?: string;
};

export type Group = {
    accountNumber?: string;
    activatedBy?: AppUser;
    activationDate?: string;
    active?: boolean;
    activeClientMembers?: Array<Client>;
    center?: boolean;
    childGroup?: boolean;
    clientMembers?: Array<Client>;
    closed?: boolean;
    closedBy?: AppUser;
    closureDate?: string;
    closureReason?: CodeValue;
    externalId?: string;
    group?: boolean;
    groupLevel?: GroupLevel;
    groupMembers?: Array<Group>;
    groupRole?: Array<GroupRole>;
    hierarchy?: string;
    id?: number;
    name?: string;
    new?: boolean;
    notActive?: boolean;
    notPending?: boolean;
    office?: Office;
    parent?: Group;
    pending?: boolean;
    staff?: Staff;
    staffHistory?: Array<StaffAssignmentHistory>;
    status?: number;
    submittedBy?: AppUser;
    submittedOnDate?: string;
    transferInProgress?: boolean;
    transferInProgressOrOnHold?: boolean;
    transferOnHold?: boolean;
};

export type GroupGeneralData = {
    accountNo?: string;
    activationDate?: string;
    active?: boolean;
    activeClientMembers?: Array<ClientData>;
    availableRoles?: Array<CodeValueData>;
    calendarsData?: Array<CalendarData>;
    centerId?: number;
    centerName?: string;
    centerOptions?: Array<CenterData>;
    childGroup?: boolean;
    clientMembers?: Array<ClientData>;
    clientOptions?: Array<ClientData>;
    closureReasons?: Array<CodeValueData>;
    collectionMeetingCalendar?: CalendarData;
    datatables?: Array<DatatableData>;
    dateFormat?: string;
    externalId?: string;
    groupLevel?: string;
    groupRoles?: Array<GroupRoleData>;
    hierarchy?: string;
    id?: number;
    locale?: string;
    name?: string;
    officeId?: number;
    officeName?: string;
    officeOptions?: Array<OfficeData>;
    parentId?: number;
    rowIndex?: number;
    selectedRole?: GroupRoleData;
    staffId?: number;
    staffName?: string;
    staffOptions?: Array<StaffData>;
    status?: EnumOptionData;
    submittedOnDate?: string;
    timeline?: GroupTimelineData;
};

export type GroupLevel = {
    center?: boolean;
    group?: boolean;
    id?: number;
    levelName?: string;
    new?: boolean;
    parentId?: number;
    recursable?: boolean;
    superParent?: boolean;
};

export type GroupLevelData = {
    canHaveClients?: boolean;
    childLevelId?: number;
    childLevelName?: string;
    levelId?: number;
    levelName?: string;
    parentLevelId?: number;
    parentLevelName?: string;
    recursable?: boolean;
    superParent?: boolean;
};

export type GroupRole = {
    id?: number;
    new?: boolean;
};

export type GroupRoleData = {
    clientId?: number;
    clientName?: string;
    id?: number;
    role?: CodeValueData;
};

export type GroupTimelineData = {
    [key: string]: unknown;
};

export type Grouping = {
    entities?: Array<Entity>;
    name?: string;
};

export type GuarantorData = {
    accountId?: number;
    accountLinkingOptions?: Array<PortfolioAccountData>;
    addressLine1?: string;
    addressLine2?: string;
    allowedClientRelationshipTypes?: Array<CodeValueData>;
    amount?: number;
    city?: string;
    clientRelationshipType?: CodeValueData;
    clientRelationshipTypeId?: number;
    comment?: string;
    country?: string;
    dateFormat?: string;
    dob?: string;
    entityId?: number;
    existingClient?: boolean;
    externalGuarantor?: boolean;
    externalId?: string;
    firstname?: string;
    guarantorFundingDetails?: Array<GuarantorFundingData>;
    guarantorType?: EnumOptionData;
    guarantorTypeId?: number;
    guarantorTypeOptions?: Array<EnumOptionData>;
    housePhoneNumber?: string;
    id?: number;
    joinedDate?: string;
    lastname?: string;
    loanId?: number;
    locale?: string;
    mobileNumber?: string;
    officeName?: string;
    rowIndex?: number;
    savingsId?: number;
    staffMember?: boolean;
    state?: string;
    status?: boolean;
    zip?: string;
};

export type GuarantorFundingData = {
    amount?: number;
    amountReleased?: number;
    amountRemaining?: number;
    amountTransfered?: number;
    guarantorTransactions?: Array<GuarantorTransactionData>;
    id?: number;
    savingsAccount?: PortfolioAccountData;
    status?: EnumOptionData;
};

export type GuarantorTransactionData = {
    id?: number;
    loanTransactionData?: LoanTransactionData;
    onHoldTransactionData?: DepositAccountOnHoldTransactionData;
    reversed?: boolean;
};

export type GuarantorsRequest = {
    addressLine1?: string;
    addressLine2?: string;
    amount?: number;
    city?: string;
    clientRelationshipTypeId?: number;
    comment?: string;
    country?: string;
    dateFormat?: string;
    dob?: string;
    entityId?: number;
    firstname?: string;
    guarantorTypeId?: number;
    housePhoneNumber?: string;
    lastname?: string;
    locale?: string;
    mobileNumber?: string;
    savingsId?: number;
    state?: string;
    zip?: string;
};

export type Header = {
    name?: string;
    value?: string;
};

export type HookTemplateData = {
    id?: number;
    name?: string;
    schema?: Array<Field>;
};

export type IdDocument = {
    idNumber?: string;
    idType?: string;
    issuerCountry?: string;
    otherIdDescription?: string;
};

export type Image = {
    id?: number;
    location?: string;
    new?: boolean;
    storageType?: number;
};

/**
 * InlineJobRequest
 */
export type InlineJobRequest = {
    loanIds?: Array<(number)>;
};

/**
 * InlineJobResponse
 */
export type InlineJobResponse = {
    loanIds?: Array<(number)>;
};

export type InterestIncentiveData = {
    [key: string]: unknown;
};

export type InterestIncentiveRequest = {
    amount?: number;
    attributeName?: number;
    attributeValue?: string;
    conditionType?: number;
    description?: string;
    entityType?: number;
    id?: number;
    incentiveType?: number;
};

/**
 * Request DTO for creating an interest pause
 */
export type InterestPauseRequestDto = {
    /**
     * Format of the dates provided
     */
    dateFormat?: string;
    /**
     * End date of the interest pause period
     */
    endDate?: string;
    /**
     * Locale to interpret the date format
     */
    locale?: string;
    /**
     * Start date of the interest pause period
     */
    startDate?: string;
};

/**
 * Response DTO for Interest Pause periods
 */
export type InterestPauseResponseDto = {
    /**
     * Date format used to interpret start and end dates
     */
    dateFormat?: string;
    /**
     * End date of the interest pause period
     */
    endDate?: string;
    /**
     * ID of the loan term variation
     */
    id?: number;
    /**
     * Locale used for date formatting
     */
    locale?: string;
    /**
     * Start date of the interest pause period
     */
    startDate?: string;
};

export type InterestPeriod = {
    balanceCorrectionAmount?: Money;
    calculatedDueInterest?: number;
    capitalizedIncomePrincipal?: Money;
    creditedAmounts?: Money;
    creditedInterest?: Money;
    creditedPrincipal?: Money;
    disbursementAmount?: Money;
    dueDate: string;
    firstInterestPeriod?: boolean;
    fromDate: string;
    length?: number;
    lengthTillPeriodDueDate?: number;
    mc?: {
        precision?: number;
        roundingMode?: 'UP' | 'DOWN' | 'CEILING' | 'FLOOR' | 'HALF_UP' | 'HALF_DOWN' | 'HALF_EVEN' | 'UNNECESSARY';
    };
    outstandingLoanBalance?: Money;
    paused?: boolean;
    rateFactor?: number;
    rateFactorTillPeriodDueDate?: number;
    repaymentPeriod?: RepaymentPeriod;
};

export type roundingMode = 'UP' | 'DOWN' | 'CEILING' | 'FLOOR' | 'HALF_UP' | 'HALF_DOWN' | 'HALF_EVEN' | 'UNNECESSARY';

export type InterestRateChartSlabData = {
    amountRangeFrom?: number;
    amountRangeTo?: number;
    annualInterestRate?: number;
    attributeNameOptions?: Array<EnumOptionData>;
    clientClassificationOptions?: Array<CodeValueData>;
    clientTypeOptions?: Array<CodeValueData>;
    conditionTypeOptions?: Array<EnumOptionData>;
    currency?: CurrencyData;
    description?: string;
    entityTypeOptions?: Array<EnumOptionData>;
    fromPeriod?: number;
    genderOptions?: Array<CodeValueData>;
    id?: number;
    incentiveTypeOptions?: Array<EnumOptionData>;
    incentives?: Array<InterestIncentiveData>;
    periodType?: EnumOptionData;
    periodTypes?: Array<EnumOptionData>;
    toPeriod?: number;
};

export type InterestRateChartStabRequest = {
    amountRangeFrom?: number;
    amountRangeTo?: number;
    annualInterestRate?: number;
    currencyCode?: string;
    description?: string;
    fromPeriod?: number;
    incentives?: Array<InterestIncentiveRequest>;
    locale?: string;
    periodType?: number;
    toPeriod?: number;
};

export type InteropAccountData = {
    changes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    clientId?: number;
    commandId?: number;
    creditBureauReportData?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    externalIdOrNull?: ExternalId;
    glimId?: number;
    groupId?: number;
    gsimId?: number;
    loanExternalId?: ExternalId;
    loanId?: number;
    officeId?: number;
    productId?: number;
    resourceExternalId?: ExternalId;
    resourceId?: number;
    resourceIdentifier?: string;
    rollbackTransaction?: boolean;
    savingsId?: number;
    subResourceExternalId?: ExternalId;
    subResourceId?: number;
    transactionId?: string;
};

export type InteropIdentifierAccountResponseData = {
    accountId: string;
    changes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    clientId?: number;
    commandId?: number;
    creditBureauReportData?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    externalIdOrNull?: ExternalId;
    glimId?: number;
    groupId?: number;
    gsimId?: number;
    loanExternalId?: ExternalId;
    loanId?: number;
    officeId?: number;
    productId?: number;
    resourceExternalId?: ExternalId;
    resourceId?: number;
    resourceIdentifier?: string;
    rollbackTransaction?: boolean;
    savingsId?: number;
    subResourceExternalId?: ExternalId;
    subResourceId?: number;
    transactionId?: string;
};

export type InteropIdentifierRequestData = {
    accountId: string;
    idType: 'MSISDN' | 'EMAIL' | 'PERSONAL_ID' | 'BUSINESS' | 'DEVICE' | 'ACCOUNT_ID' | 'IBAN' | 'ALIAS' | 'BBAN';
    idValue: string;
    subIdOrType?: string;
};

export type idType = 'MSISDN' | 'EMAIL' | 'PERSONAL_ID' | 'BUSINESS' | 'DEVICE' | 'ACCOUNT_ID' | 'IBAN' | 'ALIAS' | 'BBAN';

export type InteropIdentifiersResponseData = {
    changes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    clientId?: number;
    commandId?: number;
    creditBureauReportData?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    externalIdOrNull?: ExternalId;
    glimId?: number;
    groupId?: number;
    gsimId?: number;
    loanExternalId?: ExternalId;
    loanId?: number;
    officeId?: number;
    productId?: number;
    resourceExternalId?: ExternalId;
    resourceId?: number;
    resourceIdentifier?: string;
    rollbackTransaction?: boolean;
    savingsId?: number;
    subResourceExternalId?: ExternalId;
    subResourceId?: number;
    transactionId?: string;
};

export type InteropKycResponseData = {
    birthCountry?: string;
    changes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    clientId?: number;
    commandId?: number;
    contactPhone?: string;
    creditBureauReportData?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    dateOfBirth?: string;
    emailAddress?: string;
    externalIdOrNull?: ExternalId;
    gender?: string;
    glimId?: number;
    groupId?: number;
    gsimId?: number;
    idDocument?: Array<IdDocument>;
    loanExternalId?: ExternalId;
    loanId?: number;
    nationality?: string;
    officeId?: number;
    postalAddress?: PostalAddress;
    productId?: number;
    resourceExternalId?: ExternalId;
    resourceId?: number;
    resourceIdentifier?: string;
    rollbackTransaction?: boolean;
    savingsId?: number;
    subResourceExternalId?: ExternalId;
    subResourceId?: number;
    subjectName?: SubjectName;
    transactionId?: string;
};

export type InteropQuoteRequestData = {
    accountId: string;
    amount: MoneyData;
    amountType: 'SEND' | 'RECEIVE';
    expiration?: string;
    expirationLocalDate?: string;
    extensionList?: Array<ExtensionData>;
    fees?: MoneyData;
    geoCode?: GeoCodeData;
    note?: string;
    quoteCode: string;
    requestCode?: string;
    transactionCode: string;
    transactionRole: 'PAYER' | 'PAYEE';
    transactionType?: InteropTransactionTypeData;
};

export type amountType = 'SEND' | 'RECEIVE';

export type transactionRole = 'PAYER' | 'PAYEE';

export type InteropQuoteResponseData = {
    changes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    clientId?: number;
    commandId?: number;
    creditBureauReportData?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    expiration?: string;
    extensionList?: Array<ExtensionData>;
    externalIdOrNull?: ExternalId;
    fspCommission?: MoneyData;
    fspFee?: MoneyData;
    glimId?: number;
    groupId?: number;
    gsimId?: number;
    loanExternalId?: ExternalId;
    loanId?: number;
    officeId?: number;
    productId?: number;
    quoteCode: string;
    resourceExternalId?: ExternalId;
    resourceId?: number;
    resourceIdentifier?: string;
    rollbackTransaction?: boolean;
    savingsId?: number;
    state: 'ACCEPTED' | 'REJECTED';
    subResourceExternalId?: ExternalId;
    subResourceId?: number;
    transactionCode: string;
    transactionId?: string;
};

export type state = 'ACCEPTED' | 'REJECTED';

export type InteropTransactionData = {
    accountBalance: number;
    accountId: string;
    amount: number;
    bookingDateTime: string;
    changes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    chargeAmount?: number;
    clientId?: number;
    commandId?: number;
    creditBureauReportData?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    currency: string;
    externalIdOrNull?: ExternalId;
    glimId?: number;
    groupId?: number;
    gsimId?: number;
    loanExternalId?: ExternalId;
    loanId?: number;
    note?: string;
    officeId?: number;
    productId?: number;
    resourceExternalId?: ExternalId;
    resourceId?: number;
    resourceIdentifier?: string;
    rollbackTransaction?: boolean;
    savingTransactionId: string;
    savingsId?: number;
    subResourceExternalId?: ExternalId;
    subResourceId?: number;
    transactionId?: string;
    transactionType: 'INVALID' | 'DEPOSIT' | 'WITHDRAWAL' | 'INTEREST_POSTING' | 'WITHDRAWAL_FEE' | 'ANNUAL_FEE' | 'WAIVE_CHARGES' | 'PAY_CHARGE' | 'DIVIDEND_PAYOUT' | 'ACCRUAL' | 'INITIATE_TRANSFER' | 'APPROVE_TRANSFER' | 'WITHDRAW_TRANSFER' | 'REJECT_TRANSFER' | 'WRITTEN_OFF' | 'OVERDRAFT_INTEREST' | 'WITHHOLD_TAX' | 'ESCHEAT' | 'AMOUNT_HOLD' | 'AMOUNT_RELEASE';
    valueDateTime: string;
};

export type transactionType = 'INVALID' | 'DEPOSIT' | 'WITHDRAWAL' | 'INTEREST_POSTING' | 'WITHDRAWAL_FEE' | 'ANNUAL_FEE' | 'WAIVE_CHARGES' | 'PAY_CHARGE' | 'DIVIDEND_PAYOUT' | 'ACCRUAL' | 'INITIATE_TRANSFER' | 'APPROVE_TRANSFER' | 'WITHDRAW_TRANSFER' | 'REJECT_TRANSFER' | 'WRITTEN_OFF' | 'OVERDRAFT_INTEREST' | 'WITHHOLD_TAX' | 'ESCHEAT' | 'AMOUNT_HOLD' | 'AMOUNT_RELEASE';

export type InteropTransactionRequestData = {
    accountId: string;
    amount: MoneyData;
    expiration?: string;
    expirationLocalDate?: string;
    extensionList?: Array<ExtensionData>;
    geoCode?: GeoCodeData;
    note?: string;
    requestCode?: string;
    transactionCode: string;
    transactionRole: 'PAYER' | 'PAYEE';
    transactionType?: InteropTransactionTypeData;
};

export type InteropTransactionRequestResponseData = {
    changes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    clientId?: number;
    commandId?: number;
    creditBureauReportData?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    expiration?: string;
    extensionList?: Array<ExtensionData>;
    externalIdOrNull?: ExternalId;
    glimId?: number;
    groupId?: number;
    gsimId?: number;
    loanExternalId?: ExternalId;
    loanId?: number;
    officeId?: number;
    productId?: number;
    requestCode: string;
    resourceExternalId?: ExternalId;
    resourceId?: number;
    resourceIdentifier?: string;
    rollbackTransaction?: boolean;
    savingsId?: number;
    state: 'ACCEPTED' | 'REJECTED';
    subResourceExternalId?: ExternalId;
    subResourceId?: number;
    transactionCode: string;
    transactionId?: string;
};

export type InteropTransactionTypeData = {
    initiator: 'PAYER' | 'PAYEE';
    initiatorType: 'CONSUMER' | 'AGENT' | 'BUSINESS' | 'DEVICE';
    scenario: 'DEPOSIT' | 'WITHDRAWAL' | 'TRANSFER' | 'PAYMENT' | 'REFUND';
    subScenario?: string;
};

export type initiator = 'PAYER' | 'PAYEE';

export type initiatorType = 'CONSUMER' | 'AGENT' | 'BUSINESS' | 'DEVICE';

export type scenario = 'DEPOSIT' | 'WITHDRAWAL' | 'TRANSFER' | 'PAYMENT' | 'REFUND';

export type InteropTransactionsData = {
    changes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    clientId?: number;
    commandId?: number;
    creditBureauReportData?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    externalIdOrNull?: ExternalId;
    glimId?: number;
    groupId?: number;
    gsimId?: number;
    loanExternalId?: ExternalId;
    loanId?: number;
    officeId?: number;
    productId?: number;
    resourceExternalId?: ExternalId;
    resourceId?: number;
    resourceIdentifier?: string;
    rollbackTransaction?: boolean;
    savingsId?: number;
    subResourceExternalId?: ExternalId;
    subResourceId?: number;
    transactionId?: string;
    transactions?: Array<InteropTransactionData>;
};

export type InteropTransferRequestData = {
    accountId: string;
    amount: MoneyData;
    expiration?: string;
    expirationLocalDate?: string;
    extensionList?: Array<ExtensionData>;
    fspCommission?: MoneyData;
    fspFee?: MoneyData;
    geoCode?: GeoCodeData;
    note?: string;
    requestCode?: string;
    transactionCode: string;
    transactionRole: 'PAYER' | 'PAYEE';
    transactionType?: InteropTransactionTypeData;
    transferCode: string;
};

export type InteropTransferResponseData = {
    changes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    clientId?: number;
    commandId?: number;
    completedTimestamp?: string;
    creditBureauReportData?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    expiration?: string;
    extensionList?: Array<ExtensionData>;
    externalIdOrNull?: ExternalId;
    glimId?: number;
    groupId?: number;
    gsimId?: number;
    loanExternalId?: ExternalId;
    loanId?: number;
    officeId?: number;
    productId?: number;
    resourceExternalId?: ExternalId;
    resourceId?: number;
    resourceIdentifier?: string;
    rollbackTransaction?: boolean;
    savingsId?: number;
    state: 'ACCEPTED' | 'REJECTED';
    subResourceExternalId?: ExternalId;
    subResourceId?: number;
    transactionCode: string;
    transactionId?: string;
    transferCode: string;
};

export type IsCatchUpRunningDTO = {
    catchUpRunning?: boolean;
    processingDate?: string;
};

export type JobBusinessStepConfigData = {
    businessSteps?: Array<BusinessStep>;
    jobName?: string;
};

export type JobBusinessStepDetail = {
    availableBusinessSteps?: Array<BusinessStepDetail>;
    jobName?: string;
};

export type JobDetailHistoryData = {
    jobRunEndTime?: string;
    jobRunErrorLog?: string;
    jobRunErrorMessage?: string;
    jobRunStartTime?: string;
    status?: string;
    triggerType?: string;
    version?: number;
};

export type JobDetailHistoryDataSwagger = {
    jobRunEndTime?: string;
    jobRunStartTime?: string;
    status?: string;
    triggerType?: string;
    version?: number;
};

export type JobParameterDTO = {
    parameterName?: string;
    parameterValue?: string;
};

export type JournalEntryCommand = {
    accountNumber?: string;
    accountingRuleId?: number;
    amount?: number;
    bankNumber?: string;
    checkNumber?: string;
    comments?: string;
    credits?: Array<SingleDebitOrCreditEntryCommand>;
    currencyCode?: string;
    dateFormat?: string;
    debits?: Array<SingleDebitOrCreditEntryCommand>;
    externalAssetOwner?: string;
    locale?: string;
    officeId?: number;
    paymentTypeId?: number;
    receiptNumber?: string;
    referenceNumber?: string;
    routingCode?: string;
    transactionDate?: string;
};

export type JournalEntryData = {
    accountNumber?: string;
    amount?: number;
    bankNumber?: string;
    checkNumber?: string;
    comments?: string;
    createdByUserId?: number;
    createdByUserName?: string;
    createdDate?: string;
    credits?: Array<CreditDebit>;
    currency?: CurrencyData;
    currencyCode?: string;
    dateFormat?: string;
    debits?: Array<CreditDebit>;
    entityId?: number;
    entityType?: EnumOptionData;
    entryType?: EnumOptionData;
    externalAssetOwner?: string;
    glAccountCode?: string;
    glAccountId?: number;
    glAccountName?: string;
    glAccountType?: EnumOptionData;
    id?: number;
    locale?: string;
    manualEntry?: boolean;
    officeId?: number;
    officeName?: string;
    officeRunningBalance?: number;
    organizationRunningBalance?: number;
    paymentTypeId?: number;
    receiptNumber?: string;
    referenceNumber?: string;
    reversed?: boolean;
    routingCode?: string;
    rowIndex?: number;
    runningBalanceComputed?: boolean;
    savingTransactionId?: number;
    submittedOnDate?: string;
    transactionDate?: string;
    transactionDetails?: TransactionDetailData;
    transactionId?: string;
};

export type JournalEntryTransactionItem = {
    amount?: number;
    comments?: string;
    createdByUserId?: number;
    createdByUserName?: string;
    createdDate?: string;
    currency?: CurrencyItem;
    entityId?: number;
    entityType?: EnumOptionType;
    entryType?: EnumOptionType;
    externalAssetOwner?: string;
    glAccountCode?: string;
    glAccountId?: number;
    glAccountName?: string;
    glAccountType?: EnumOptionType;
    id?: number;
    manualEntry?: boolean;
    officeId?: number;
    officeName?: string;
    officeRunningBalance?: number;
    organizationRunningBalance?: number;
    referenceNumber?: string;
    reversed?: boolean;
    runningBalanceComputed?: boolean;
    submittedOnDate?: string;
    transactionDate?: string;
    transactionDetails?: TransactionDetails;
    transactionId?: string;
};

export type LoanAccountLock = {
    error?: string;
    loanId?: number;
    lockOwner?: 'LOAN_COB_CHUNK_PROCESSING' | 'LOAN_INLINE_COB_PROCESSING';
    lockPlacedOn?: string;
    lockPlacedOnCobBusinessDate?: string;
    newLockOwner?: 'LOAN_COB_CHUNK_PROCESSING' | 'LOAN_INLINE_COB_PROCESSING';
    stacktrace?: string;
    version?: number;
};

export type lockOwner = 'LOAN_COB_CHUNK_PROCESSING' | 'LOAN_INLINE_COB_PROCESSING';

export type newLockOwner = 'LOAN_COB_CHUNK_PROCESSING' | 'LOAN_INLINE_COB_PROCESSING';

export type LoanAccountLockResponseDTO = {
    content?: Array<LoanAccountLock>;
    limit?: number;
    page?: number;
};

export type LoanApprovedAmountHistoryData = {
    dateOfChange?: string;
    externalLoanId?: ExternalId;
    loanId?: number;
    newApprovedAmount?: number;
    oldApprovedAmount?: number;
};

export type LoanArrearsData = {
    feeOverdue?: number;
    interestOverdue?: number;
    overDueSince?: string;
    overdue?: boolean;
    penaltyOverdue?: number;
    principalOverdue?: number;
    totalOverdue?: number;
};

export type LoanCapitalizedIncomeData = {
    capitalizedIncomeData?: Array<CapitalizedIncomeDetails>;
};

export type LoanChargePaidByData = {
    amount?: number;
    chargeId?: number;
    id?: number;
    installmentNumber?: number;
    name?: string;
    transactionId?: number;
};

export type LoanCollateralResponseData = {
    clientCollateralId?: number;
    collateralId?: number;
    quantity?: number;
    total?: number;
    totalCollateral?: number;
};

export type LoanCollateralTemplateData = {
    basePrice?: number;
    collateralId?: number;
    name?: string;
    pctToBase?: number;
    quantity?: number;
};

export type LoanFeeData = {
    feeAdjustments?: number;
    feeChargesCharged?: number;
    feeChargesDueAtDisbursementCharged?: number;
    feeChargesOutstanding?: number;
    feeChargesPaid?: number;
    feeChargesWaived?: number;
    feeChargesWrittenOff?: number;
};

export type LoanInterestData = {
    interestCharged?: number;
    interestOutstanding?: number;
    interestPaid?: number;
    interestWaived?: number;
    interestWrittenOff?: number;
};

export type LoanPenaltyData = {
    penaltyAdjustments?: number;
    penaltyChargesCharged?: number;
    penaltyChargesOutstanding?: number;
    penaltyChargesPaid?: number;
    penaltyChargesWaived?: number;
    penaltyChargesWrittenOff?: number;
};

export type LoanPointInTimeData = {
    accountNo?: string;
    arrears?: LoanArrearsData;
    clientAccountNo?: string;
    clientDisplayName?: string;
    clientExternalId?: string;
    clientId?: number;
    clientOfficeId?: number;
    currency?: CurrencyData;
    externalId?: string;
    fee?: LoanFeeData;
    id?: number;
    interest?: LoanInterestData;
    loanProductId?: number;
    loanProductName?: string;
    penalty?: LoanPenaltyData;
    principal?: LoanPrincipalData;
    status?: LoanStatusEnumData;
    total?: LoanTotalAmountData;
};

export type LoanPrincipalData = {
    principalAdjustments?: number;
    principalDisbursed?: number;
    principalOutstanding?: number;
    principalPaid?: number;
    principalWrittenOff?: number;
};

export type LoanProduct = {
    accountMovesOutOfNPAOnlyOnArrearsCompletion?: boolean;
    accountingDisabled?: boolean;
    accountingRule?: 'NONE' | 'CASH BASED' | 'ACCRUAL PERIODIC' | 'ACCRUAL UPFRONT';
    allowApprovedDisbursedAmountsOverApplied?: boolean;
    allowVariabeInstallments?: boolean;
    arrearsBasedOnOriginalSchedule?: boolean;
    borrowerCycleVariations?: Array<LoanProductBorrowerCycleVariations>;
    canDefineInstallmentAmount?: boolean;
    canUseForTopup?: boolean;
    cashBasedAccountingEnabled?: boolean;
    charges?: Array<Charge>;
    closeDate?: string;
    creditAllocationRules?: Array<LoanProductCreditAllocationRule>;
    currency?: MonetaryCurrency;
    delinquencyBucket?: DelinquencyBucket;
    description?: string;
    disallowExpectedDisbursements?: boolean;
    dueDaysForRepaymentEvent?: number;
    enableInstallmentLevelDelinquency?: boolean;
    equalAmortization?: boolean;
    externalId?: ExternalId;
    fixedPrincipalPercentagePerInstallment?: number;
    floatingRates?: LoanProductFloatingRates;
    fund?: Fund;
    holdGuaranteeFunds?: boolean;
    id?: number;
    includeInBorrowerCycle?: boolean;
    interestPeriodFrequencyType?: 'DAYS' | 'WEEKS' | 'MONTHS' | 'YEARS' | 'WHOLE_TERM' | 'INVALID';
    interestRecalculationEnabled?: boolean;
    linkedToFloatingInterestRate?: boolean;
    loanConfigurableAttributes?: LoanProductConfigurableAttributes;
    loanProductGuaranteeDetails?: LoanProductGuaranteeDetails;
    loanProductMinMaxConstraints?: LoanProductMinMaxConstraints;
    loanProductRelatedDetail?: LoanProductRelatedDetail;
    loanProductTrancheDetails?: LoanProductTrancheDetails;
    maxNominalInterestRatePerPeriod?: number;
    maxNumberOfRepayments?: number;
    maxPrincipalAmount?: Money;
    minNominalInterestRatePerPeriod?: number;
    minNumberOfRepayments?: number;
    minPrincipalAmount?: Money;
    minimumDaysBetweenDisbursalAndFirstRepayment?: number;
    multiDisburseLoan?: boolean;
    name?: string;
    new?: boolean;
    nominalInterestRatePerPeriod?: number;
    numberOfRepayments?: number;
    overAppliedCalculationType?: string;
    overAppliedNumber?: number;
    overDueDaysForRepaymentEvent?: number;
    overdueDaysForNPA?: number;
    paymentAllocationRules?: Array<LoanProductPaymentAllocationRule>;
    periodicAccrualAccountingEnabled?: boolean;
    principalAmount?: Money;
    principalThresholdForLastInstallment?: number;
    productInterestRecalculationDetails?: LoanProductInterestRecalculationDetails;
    rates?: Array<Rate>;
    repaymentStartDateType?: 'INVALID' | 'DISBURSEMENT_DATE' | 'SUBMITTED_ON_DATE';
    shortName?: string;
    startDate?: string;
    syncExpectedWithDisbursementDate?: boolean;
    transactionProcessingStrategyCode?: string;
    transactionProcessingStrategyName?: string;
    upfrontAccrualAccountingEnabled?: boolean;
    useBorrowerCycle?: boolean;
    variableInstallmentConfig?: LoanProductVariableInstallmentConfig;
};

export type accountingRule = 'NONE' | 'CASH BASED' | 'ACCRUAL PERIODIC' | 'ACCRUAL UPFRONT';

export type interestPeriodFrequencyType = 'DAYS' | 'WEEKS' | 'MONTHS' | 'YEARS' | 'WHOLE_TERM' | 'INVALID';

export type repaymentStartDateType = 'INVALID' | 'DISBURSEMENT_DATE' | 'SUBMITTED_ON_DATE';

export type LoanProductBorrowerCycleVariationData = {
    borrowerCycleNumber?: number;
    defaultValue?: number;
    id?: number;
    loanProductParamType?: 'INVALID' | 'PRINCIPAL' | 'INTERESTRATE' | 'REPAYMENT';
    loanProductValueConditionType?: 'INVALID' | 'EQUAL' | 'GREATERTHAN';
    maxValue?: number;
    minValue?: number;
    paramType?: EnumOptionData;
    valueConditionType?: EnumOptionData;
};

export type loanProductParamType = 'INVALID' | 'PRINCIPAL' | 'INTERESTRATE' | 'REPAYMENT';

export type loanProductValueConditionType = 'INVALID' | 'EQUAL' | 'GREATERTHAN';

export type LoanProductBorrowerCycleVariations = {
    borrowerCycleNumber?: number;
    defaultValue?: number;
    id?: number;
    maxValue?: number;
    minValue?: number;
    new?: boolean;
    paramType?: 'INVALID' | 'PRINCIPAL' | 'INTERESTRATE' | 'REPAYMENT';
    valueConditionType?: 'INVALID' | 'EQUAL' | 'GREATERTHAN';
};

export type paramType = 'INVALID' | 'PRINCIPAL' | 'INTERESTRATE' | 'REPAYMENT';

export type valueConditionType = 'INVALID' | 'EQUAL' | 'GREATERTHAN';

/**
 * LoanProductChargeData
 */
export type LoanProductChargeData = {
    amount?: number;
    id?: number;
};

/**
 * LoanProductChargeToGLAccountMapper
 */
export type LoanProductChargeToGLAccountMapper = {
    charge?: LoanProductChargeData;
    incomeAccount?: GLAccountData;
};

export type LoanProductConfigurableAttributes = {
    amortizationBoolean?: boolean;
    amortizationType?: boolean;
    arrearsToleranceBoolean?: boolean;
    graceOnArrearsAgeing?: boolean;
    graceOnArrearsAgingBoolean?: boolean;
    graceOnPrincipalAndInterestPayment?: boolean;
    graceOnPrincipalAndInterestPaymentBoolean?: boolean;
    id?: number;
    inArrearsTolerance?: boolean;
    interestCalcPeriodBoolean?: boolean;
    interestCalculationPeriodType?: boolean;
    interestMethodBoolean?: boolean;
    interestType?: boolean;
    loanProduct?: LoanProduct;
    new?: boolean;
    repaymentEvery?: boolean;
    repaymentEveryBoolean?: boolean;
    transactionProcessingStrategyBoolean?: boolean;
    transactionProcessingStrategyCode?: boolean;
};

export type LoanProductCreditAllocationRule = {
    allocationTypes?: Array<('PENALTY' | 'FEE' | 'PRINCIPAL' | 'INTEREST')>;
    createdBy: number;
    createdDate: string;
    id?: number;
    lastModifiedBy: number;
    lastModifiedDate: string;
    loanProduct?: LoanProduct;
    new?: boolean;
    transactionType?: 'CHARGEBACK';
};

export type transactionType2 = 'CHARGEBACK';

export type LoanProductData = {
    accountMovesOutOfNPAOnlyOnArrearsCompletion?: boolean;
    accountingMappingOptions?: {
        [key: string]: Array<GLAccountData>;
    };
    accountingMappings?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    accountingRule?: EnumOptionData;
    accountingRuleOptions?: Array<EnumOptionData>;
    advancedPaymentAllocationFutureInstallmentAllocationRules?: Array<EnumOptionData>;
    advancedPaymentAllocationTransactionTypes?: Array<EnumOptionData>;
    advancedPaymentAllocationTypes?: Array<EnumOptionData>;
    allowApprovedDisbursedAmountsOverApplied?: boolean;
    allowAttributeOverrides?: LoanProductConfigurableAttributes;
    allowPartialPeriodInterestCalculation?: boolean;
    allowVariableInstallments?: boolean;
    amortizationType?: EnumOptionData;
    amortizationTypeOptions?: Array<EnumOptionData>;
    annualInterestRate?: number;
    buyDownFeeCalculationType?: StringEnumOptionData;
    buyDownFeeCalculationTypeOptions?: Array<StringEnumOptionData>;
    buyDownFeeIncomeType?: StringEnumOptionData;
    buyDownFeeIncomeTypeOptions?: Array<StringEnumOptionData>;
    buyDownFeeStrategy?: StringEnumOptionData;
    buyDownFeeStrategyOptions?: Array<StringEnumOptionData>;
    canDefineInstallmentAmount?: boolean;
    canUseForTopup?: boolean;
    capitalizedIncomeCalculationType?: StringEnumOptionData;
    capitalizedIncomeCalculationTypeOptions?: Array<StringEnumOptionData>;
    capitalizedIncomeStrategy?: StringEnumOptionData;
    capitalizedIncomeStrategyOptions?: Array<StringEnumOptionData>;
    capitalizedIncomeType?: StringEnumOptionData;
    capitalizedIncomeTypeOptions?: Array<StringEnumOptionData>;
    chargeOffBehaviour?: StringEnumOptionData;
    chargeOffBehaviourOptions?: Array<StringEnumOptionData>;
    chargeOffReasonOptions?: Array<CodeValueData>;
    chargeOffReasonToExpenseAccountMappings?: Array<ChargeOffReasonToGLAccountMapper>;
    chargeOptions?: Array<ChargeData>;
    charges?: Array<ChargeData>;
    closeDate?: string;
    compoundingToBePostedAsTransaction?: boolean;
    creditAllocation?: Array<CreditAllocationData>;
    creditAllocationAllocationTypes?: Array<EnumOptionData>;
    creditAllocationTransactionTypes?: Array<EnumOptionData>;
    currency?: CurrencyData;
    currencyOptions?: Array<CurrencyData>;
    daysInMonthType?: EnumOptionData;
    daysInMonthTypeOptions?: Array<EnumOptionData>;
    daysInYearCustomStrategy?: StringEnumOptionData;
    daysInYearCustomStrategyOptions?: Array<StringEnumOptionData>;
    daysInYearType?: EnumOptionData;
    daysInYearTypeOptions?: Array<EnumOptionData>;
    defaultDifferentialLendingRate?: number;
    delinquencyBucket?: DelinquencyBucketData;
    delinquencyBucketOptions?: Array<DelinquencyBucketData>;
    description?: string;
    disallowExpectedDisbursements?: boolean;
    disbursedAmountPercentageForDownPayment?: number;
    dueDaysForRepaymentEvent?: number;
    enableAccrualActivityPosting?: boolean;
    enableAutoRepaymentForDownPayment?: boolean;
    enableBuyDownFee?: boolean;
    enableDownPayment?: boolean;
    enableIncomeCapitalization?: boolean;
    enableInstallmentLevelDelinquency?: boolean;
    equalAmortization?: boolean;
    externalId?: string;
    feeToIncomeAccountMappings?: Array<ChargeToGLAccountMapper>;
    fixedLength?: number;
    fixedPrincipalPercentagePerInstallment?: number;
    floatingInterestRateCalculationAllowed?: boolean;
    floatingRateId?: number;
    floatingRateName?: string;
    floatingRateOptions?: Array<FloatingRateData>;
    fundId?: number;
    fundName?: string;
    fundOptions?: Array<FundData>;
    graceOnArrearsAgeing?: number;
    graceOnInterestCharged?: number;
    graceOnInterestPayment?: number;
    graceOnPrincipalPayment?: number;
    holdGuaranteeFunds?: boolean;
    id?: number;
    inArrearsTolerance?: number;
    includeInBorrowerCycle?: boolean;
    installmentAmountInMultiplesOf?: number;
    interestCalculationPeriodType?: EnumOptionData;
    interestCalculationPeriodTypeOptions?: Array<EnumOptionData>;
    interestRateDifferential?: number;
    interestRateFrequencyType?: EnumOptionData;
    interestRateFrequencyTypeOptions?: Array<EnumOptionData>;
    interestRatePerPeriod?: number;
    interestRateVariationsForBorrowerCycle?: Array<LoanProductBorrowerCycleVariationData>;
    interestRecalculationCompoundingTypeOptions?: Array<EnumOptionData>;
    interestRecalculationData?: LoanProductInterestRecalculationData;
    interestRecalculationDayOfWeekTypeOptions?: Array<EnumOptionData>;
    interestRecalculationEnabled?: boolean;
    interestRecalculationFrequencyTypeOptions?: Array<EnumOptionData>;
    interestRecalculationNthDayTypeOptions?: Array<EnumOptionData>;
    interestRecognitionOnDisbursementDate?: boolean;
    interestType?: EnumOptionData;
    interestTypeOptions?: Array<EnumOptionData>;
    isAllowPartialPeriodInterestCalculation?: boolean;
    isEqualAmortization?: boolean;
    isFloatingInterestRateCalculationAllowed?: boolean;
    isInterestRecalculationEnabled?: boolean;
    isLinkedToFloatingInterestRates?: boolean;
    isRatesEnabled?: boolean;
    linkedToFloatingInterestRates?: boolean;
    loanProductConfigurableAttributes?: LoanProductConfigurableAttributes;
    loanScheduleProcessingType?: EnumOptionData;
    loanScheduleProcessingTypeOptions?: Array<EnumOptionData>;
    loanScheduleType?: EnumOptionData;
    loanScheduleTypeOptions?: Array<EnumOptionData>;
    maxDifferentialLendingRate?: number;
    maxInterestRatePerPeriod?: number;
    maxNumberOfRepayments?: number;
    maxPrincipal?: number;
    maxTrancheCount?: number;
    maximumGap?: number;
    merchantBuyDownFee?: boolean;
    minDifferentialLendingRate?: number;
    minInterestRatePerPeriod?: number;
    minNumberOfRepayments?: number;
    minPrincipal?: number;
    minimumDaysBetweenDisbursalAndFirstRepayment?: number;
    minimumGap?: number;
    multiDisburseLoan?: boolean;
    name?: string;
    numberOfRepaymentVariationsForBorrowerCycle?: Array<LoanProductBorrowerCycleVariationData>;
    numberOfRepayments?: number;
    outstandingLoanBalance?: number;
    overAppliedCalculationType?: string;
    overAppliedNumber?: number;
    overDueDaysForRepaymentEvent?: number;
    overdueDaysForNPA?: number;
    paymentAllocation?: Array<AdvancedPaymentData>;
    paymentChannelToFundSourceMappings?: Array<PaymentTypeToGLAccountMapper>;
    paymentTypeOptions?: Array<PaymentTypeData>;
    penaltyOptions?: Array<ChargeData>;
    penaltyToIncomeAccountMappings?: Array<ChargeToGLAccountMapper>;
    preClosureInterestCalculationStrategyOptions?: Array<EnumOptionData>;
    principal?: number;
    principalThresholdForLastInstallment?: number;
    principalVariationsForBorrowerCycle?: Array<LoanProductBorrowerCycleVariationData>;
    productGuaranteeData?: LoanProductGuaranteeData;
    rateOptions?: Array<RateData>;
    rates?: Array<RateData>;
    ratesEnabled?: boolean;
    recurringMoratoriumOnPrincipalPeriods?: number;
    repaymentEvery?: number;
    repaymentFrequencyType?: EnumOptionData;
    repaymentFrequencyTypeOptions?: Array<EnumOptionData>;
    repaymentStartDateType?: EnumOptionData;
    repaymentStartDateTypeOptions?: Array<EnumOptionData>;
    rescheduleStrategyTypeOptions?: Array<EnumOptionData>;
    shortName?: string;
    startDate?: string;
    status?: string;
    supportedInterestRefundTypes?: Array<StringEnumOptionData>;
    supportedInterestRefundTypesOptions?: Array<StringEnumOptionData>;
    syncExpectedWithDisbursementDate?: boolean;
    transactionProcessingStrategyCode?: string;
    transactionProcessingStrategyName?: string;
    transactionProcessingStrategyOptions?: Array<TransactionProcessingStrategyData>;
    useBorrowerCycle?: boolean;
    valueConditionTypeOptions?: Array<EnumOptionData>;
};

export type LoanProductFloatingRates = {
    defaultDifferentialLendingRate?: number;
    floatingInterestRateCalculationAllowed?: boolean;
    floatingRate?: FloatingRate;
    id?: number;
    interestRateDifferential?: number;
    loanProduct?: LoanProduct;
    maxDifferentialLendingRate?: number;
    minDifferentialLendingRate?: number;
    new?: boolean;
};

export type LoanProductGuaranteeData = {
    id?: number;
    mandatoryGuarantee?: number;
    minimumGuaranteeFromGuarantor?: number;
    minimumGuaranteeFromOwnFunds?: number;
    productId?: number;
};

export type LoanProductGuaranteeDetails = {
    id?: number;
    loanProduct?: LoanProduct;
    mandatoryGuarantee?: number;
    minimumGuaranteeFromGuarantor?: number;
    minimumGuaranteeFromOwnFunds?: number;
    new?: boolean;
};

export type LoanProductInterestRecalculationData = {
    allowCompoundingOnEod?: boolean;
    arrearsBasedOnOriginalSchedule?: boolean;
    compoundingToBePostedAsTransaction?: boolean;
    disallowInterestCalculationOnPastDue?: boolean;
    id?: number;
    interestRecalculationCompoundingType?: EnumOptionData;
    isArrearsBasedOnOriginalSchedule?: boolean;
    isCompoundingToBePostedAsTransaction?: boolean;
    preClosureInterestCalculationStrategy?: EnumOptionData;
    productId?: number;
    recalculationCompoundingFrequencyInterval?: number;
    recalculationCompoundingFrequencyNthDay?: EnumOptionData;
    recalculationCompoundingFrequencyOnDay?: number;
    recalculationCompoundingFrequencyType?: EnumOptionData;
    recalculationCompoundingFrequencyWeekday?: EnumOptionData;
    recalculationRestFrequencyInterval?: number;
    recalculationRestFrequencyNthDay?: EnumOptionData;
    recalculationRestFrequencyOnDay?: number;
    recalculationRestFrequencyType?: EnumOptionData;
    recalculationRestFrequencyWeekday?: EnumOptionData;
    rescheduleStrategyType?: EnumOptionData;
};

export type LoanProductInterestRecalculationDetails = {
    allowCompoundingOnEod?: boolean;
    arrearsBasedOnOriginalSchedule?: boolean;
    compoundingFrequencyNthDay?: number;
    compoundingFrequencyOnDay?: number;
    compoundingFrequencyType?: 'INVALID' | 'SAME_AS_REPAYMENT_PERIOD' | 'DAILY' | 'WEEKLY' | 'MONTHLY';
    compoundingFrequencyWeekday?: number;
    compoundingInterval?: number;
    disallowInterestCalculationOnPastDue?: boolean;
    id?: number;
    interestRecalculationCompoundingMethod?: number;
    isCompoundingToBePostedAsTransaction?: boolean;
    loanProduct?: LoanProduct;
    new?: boolean;
    preCloseInterestCalculationStrategy?: 'NONE' | 'TILL_PRE_CLOSURE_DATE' | 'TILL_REST_FREQUENCY_DATE';
    rescheduleStrategyMethod?: number;
    restFrequencyNthDay?: number;
    restFrequencyOnDay?: number;
    restFrequencyType?: 'INVALID' | 'SAME_AS_REPAYMENT_PERIOD' | 'DAILY' | 'WEEKLY' | 'MONTHLY';
    restFrequencyWeekday?: number;
    restInterval?: number;
};

export type compoundingFrequencyType = 'INVALID' | 'SAME_AS_REPAYMENT_PERIOD' | 'DAILY' | 'WEEKLY' | 'MONTHLY';

export type preCloseInterestCalculationStrategy = 'NONE' | 'TILL_PRE_CLOSURE_DATE' | 'TILL_REST_FREQUENCY_DATE';

export type restFrequencyType = 'INVALID' | 'SAME_AS_REPAYMENT_PERIOD' | 'DAILY' | 'WEEKLY' | 'MONTHLY';

export type LoanProductMinMaxConstraints = {
    maxNominalInterestRatePerPeriod?: number;
    maxNumberOfRepayments?: number;
    maxPrincipal?: number;
    minNominalInterestRatePerPeriod?: number;
    minNumberOfRepayments?: number;
    minPrincipal?: number;
};

export type LoanProductMinimumRepaymentScheduleRelatedDetail = {
    allowPartialPeriodInterestCalculation?: boolean;
    amortizationMethod?: 'EQUAL_PRINCIPAL' | 'EQUAL_INSTALLMENTS' | 'INVALID';
    annualNominalInterestRate?: number;
    currencyData?: CurrencyData;
    daysInMonthType?: number;
    daysInYearCustomStrategy?: 'FULL_LEAP_YEAR' | 'FEB_29_PERIOD_ONLY';
    daysInYearType?: number;
    graceOnArrearsAgeing?: number;
    graceOnInterestCharged?: number;
    graceOnInterestPayment?: number;
    graceOnPrincipalPayment?: number;
    interestCalculationPeriodMethod?: 'DAILY' | 'SAME_AS_REPAYMENT_PERIOD' | 'INVALID';
    interestMethod?: 'DECLINING_BALANCE' | 'FLAT' | 'INVALID';
    interestPeriodFrequencyType?: 'DAYS' | 'WEEKS' | 'MONTHS' | 'YEARS' | 'WHOLE_TERM' | 'INVALID';
    interestRecognitionOnDisbursementDate?: boolean;
    nominalInterestRatePerPeriod?: number;
    numberOfRepayments?: number;
    recurringMoratoriumOnPrincipalPeriods?: number;
    repayEvery?: number;
    repaymentPeriodFrequencyType?: 'DAYS' | 'WEEKS' | 'MONTHS' | 'YEARS' | 'WHOLE_TERM' | 'INVALID';
};

export type amortizationMethod = 'EQUAL_PRINCIPAL' | 'EQUAL_INSTALLMENTS' | 'INVALID';

export type daysInYearCustomStrategy = 'FULL_LEAP_YEAR' | 'FEB_29_PERIOD_ONLY';

export type interestCalculationPeriodMethod = 'DAILY' | 'SAME_AS_REPAYMENT_PERIOD' | 'INVALID';

export type interestMethod = 'DECLINING_BALANCE' | 'FLAT' | 'INVALID';

export type repaymentPeriodFrequencyType = 'DAYS' | 'WEEKS' | 'MONTHS' | 'YEARS' | 'WHOLE_TERM' | 'INVALID';

export type LoanProductPaymentAllocationRule = {
    allocationTypes?: Array<('PAST_DUE_PENALTY' | 'PAST_DUE_FEE' | 'PAST_DUE_PRINCIPAL' | 'PAST_DUE_INTEREST' | 'DUE_PENALTY' | 'DUE_FEE' | 'DUE_PRINCIPAL' | 'DUE_INTEREST' | 'IN_ADVANCE_PENALTY' | 'IN_ADVANCE_FEE' | 'IN_ADVANCE_PRINCIPAL' | 'IN_ADVANCE_INTEREST')>;
    createdBy: number;
    createdDate: string;
    futureInstallmentAllocationRule?: 'NEXT_INSTALLMENT' | 'LAST_INSTALLMENT' | 'NEXT_LAST_INSTALLMENT' | 'REAMORTIZATION';
    id?: number;
    lastModifiedBy: number;
    lastModifiedDate: string;
    loanProduct?: LoanProduct;
    new?: boolean;
    transactionType?: 'DEFAULT' | 'REPAYMENT' | 'DOWN_PAYMENT' | 'MERCHANT_ISSUED_REFUND' | 'PAYOUT_REFUND' | 'GOODWILL_CREDIT' | 'CHARGE_REFUND' | 'CHARGE_ADJUSTMENT' | 'WAIVE_INTEREST' | 'CHARGE_PAYMENT' | 'REFUND_FOR_ACTIVE_LOAN' | 'INTEREST_PAYMENT_WAIVER' | 'INTEREST_REFUND' | 'CAPITALIZED_INCOME_ADJUSTMENT';
};

export type futureInstallmentAllocationRule = 'NEXT_INSTALLMENT' | 'LAST_INSTALLMENT' | 'NEXT_LAST_INSTALLMENT' | 'REAMORTIZATION';

export type transactionType3 = 'DEFAULT' | 'REPAYMENT' | 'DOWN_PAYMENT' | 'MERCHANT_ISSUED_REFUND' | 'PAYOUT_REFUND' | 'GOODWILL_CREDIT' | 'CHARGE_REFUND' | 'CHARGE_ADJUSTMENT' | 'WAIVE_INTEREST' | 'CHARGE_PAYMENT' | 'REFUND_FOR_ACTIVE_LOAN' | 'INTEREST_PAYMENT_WAIVER' | 'INTEREST_REFUND' | 'CAPITALIZED_INCOME_ADJUSTMENT';

export type LoanProductProvisioningEntryData = {
    amountreserved?: number;
    balance?: number;
    categoryId?: number;
    categoryName?: string;
    criteriaId?: number;
    currencyCode?: string;
    expenseAccount?: number;
    expenseAccountCode?: string;
    expenseAccountName?: string;
    historyId?: number;
    liabilityAccountCode?: string;
    liabilityAccountName?: string;
    liablityAccount?: number;
    officeId?: number;
    officeName?: string;
    overdueInDays?: number;
    percentage?: number;
    productId?: number;
    productName?: string;
};

export type LoanProductRelatedDetail = {
    allowPartialPeriodInterestCalculation?: boolean;
    amortizationMethod?: 'EQUAL_PRINCIPAL' | 'EQUAL_INSTALLMENTS' | 'INVALID';
    annualNominalInterestRate?: number;
    buyDownFeeCalculationType?: 'FLAT';
    buyDownFeeIncomeType?: 'FEE' | 'INTEREST';
    buyDownFeeStrategy?: 'EQUAL_AMORTIZATION';
    capitalizedIncomeCalculationType?: 'FLAT';
    capitalizedIncomeStrategy?: 'EQUAL_AMORTIZATION';
    capitalizedIncomeType?: 'FEE' | 'INTEREST';
    chargeOffBehaviour?: 'REGULAR' | 'ZERO_INTEREST' | 'ACCELERATE_MATURITY';
    currency?: MonetaryCurrency;
    currencyData?: CurrencyData;
    daysInMonthType?: number;
    daysInYearCustomStrategy?: 'FULL_LEAP_YEAR' | 'FEB_29_PERIOD_ONLY';
    daysInYearType?: number;
    disbursedAmountPercentageForDownPayment?: number;
    enableAccrualActivityPosting?: boolean;
    enableAutoRepaymentForDownPayment?: boolean;
    enableBuyDownFee?: boolean;
    enableDownPayment?: boolean;
    enableIncomeCapitalization?: boolean;
    equalAmortization?: boolean;
    fixedLength?: number;
    graceOnArrearsAgeing?: number;
    graceOnInterestCharged?: number;
    graceOnInterestPayment?: number;
    graceOnPrincipalPayment?: number;
    inArrearsTolerance?: Money;
    installmentAmountInMultiplesOf?: number;
    interestCalculationPeriodMethod?: 'DAILY' | 'SAME_AS_REPAYMENT_PERIOD' | 'INVALID';
    interestMethod?: 'DECLINING_BALANCE' | 'FLAT' | 'INVALID';
    interestPeriodFrequencyType?: 'DAYS' | 'WEEKS' | 'MONTHS' | 'YEARS' | 'WHOLE_TERM' | 'INVALID';
    interestRecalculationEnabled?: boolean;
    interestRecognitionOnDisbursementDate?: boolean;
    loanScheduleProcessingType?: 'HORIZONTAL' | 'VERTICAL';
    loanScheduleType?: 'CUMULATIVE' | 'PROGRESSIVE';
    merchantBuyDownFee?: boolean;
    nominalInterestRatePerPeriod?: number;
    numberOfRepayments?: number;
    principal?: Money;
    recurringMoratoriumOnPrincipalPeriods?: number;
    repayEvery?: number;
    repaymentPeriodFrequencyType?: 'DAYS' | 'WEEKS' | 'MONTHS' | 'YEARS' | 'WHOLE_TERM' | 'INVALID';
    supportedInterestRefundTypes?: Array<('MERCHANT_ISSUED_REFUND' | 'PAYOUT_REFUND')>;
};

export type buyDownFeeCalculationType = 'FLAT';

export type buyDownFeeIncomeType = 'FEE' | 'INTEREST';

export type buyDownFeeStrategy = 'EQUAL_AMORTIZATION';

export type capitalizedIncomeCalculationType = 'FLAT';

export type capitalizedIncomeStrategy = 'EQUAL_AMORTIZATION';

export type capitalizedIncomeType = 'FEE' | 'INTEREST';

export type chargeOffBehaviour = 'REGULAR' | 'ZERO_INTEREST' | 'ACCELERATE_MATURITY';

export type loanScheduleProcessingType = 'HORIZONTAL' | 'VERTICAL';

export type loanScheduleType = 'CUMULATIVE' | 'PROGRESSIVE';

export type LoanProductTrancheDetails = {
    maxTrancheCount?: number;
    multiDisburseLoan?: boolean;
    outstandingLoanBalance?: number;
};

export type LoanProductVariableInstallmentConfig = {
    id?: number;
    loanProduct?: LoanProduct;
    maximumGap?: number;
    minimumGap?: number;
    new?: boolean;
};

export type LoanRepaymentScheduleInstallmentData = {
    amount?: number;
    date?: string;
    id?: number;
    installmentId?: number;
};

export type LoanStatusEnumData = {
    active?: boolean;
    closed?: boolean;
    closedObligationsMet?: boolean;
    closedRescheduled?: boolean;
    closedWrittenOff?: boolean;
    code?: string;
    id?: number;
    overpaid?: boolean;
    pendingApproval?: boolean;
    value?: string;
    waitingForDisbursal?: boolean;
};

export type LoanTermTypeOptions = {
    code?: string;
    id?: number;
    value?: string;
};

export type LoanTermVariationsData = {
    dateValue?: string;
    decimalValue?: number;
    id?: number;
    isProcessed?: boolean;
    isSpecificToInstallment?: boolean;
    termType?: LoanTermTypeOptions;
    termVariationApplicableFrom?: string;
};

export type LoanTotalAmountData = {
    totalCostOfLoan?: number;
    totalExpectedCostOfLoan?: number;
    totalExpectedRepayment?: number;
    totalOutstanding?: number;
    totalRepayment?: number;
    totalWaived?: number;
    totalWrittenOff?: number;
};

export type LoanTransactionData = {
    accountId?: number;
    accountNumber?: string;
    amount?: number;
    availableDisbursementAmountWithOverApplied?: number;
    bankNumber?: number;
    chargeOffReasonOptions?: Array<CodeValueData>;
    checkNumber?: number;
    currency?: CurrencyData;
    date?: string;
    dateFormat?: string;
    externalId?: ExternalId;
    externalLoanId?: ExternalId;
    feeChargesPortion?: number;
    fixedEmiAmount?: number;
    id?: number;
    interestPortion?: number;
    loanChargePaidByList?: Array<LoanChargePaidByData>;
    loanId?: number;
    loanRepaymentScheduleInstallments?: Array<LoanRepaymentScheduleInstallmentData>;
    loanTransactionRelations?: Array<LoanTransactionRelationData>;
    locale?: string;
    manuallyReversed?: boolean;
    netDisbursalAmount?: number;
    notDisbursement?: boolean;
    numberOfRepayments?: number;
    officeId?: number;
    officeName?: string;
    outstandingLoanBalance?: number;
    overpaymentPortion?: number;
    paymentDetailData?: PaymentDetailData;
    paymentTypeId?: number;
    paymentTypeOptions?: Array<PaymentTypeData>;
    penaltyChargesPortion?: number;
    possibleNextRepaymentDate?: string;
    principalPortion?: number;
    receiptNumber?: number;
    reversalExternalId?: ExternalId;
    reversedOnDate?: string;
    routingCode?: number;
    rowIndex?: number;
    submittedOnDate?: string;
    transactionAmount?: number;
    transactionDate?: string;
    transactionRelations?: Array<LoanTransactionRelationData>;
    transactionType?: string;
    transfer?: AccountTransferData;
    type?: LoanTransactionEnumData;
    unrecognizedIncomePortion?: number;
    writeOffReasonOptions?: Array<CodeValueData>;
};

export type LoanTransactionEnumData = {
    accrual?: boolean;
    accrualActivity?: boolean;
    accrualAdjustment?: boolean;
    approveTransfer?: boolean;
    buyDownFee?: boolean;
    buyDownFeeAdjustment?: boolean;
    buyDownFeeAmortization?: boolean;
    buyDownFeeAmortizationAdjustment?: boolean;
    capitalizedIncome?: boolean;
    capitalizedIncomeAdjustment?: boolean;
    capitalizedIncomeAmortization?: boolean;
    capitalizedIncomeAmortizationAdjustment?: boolean;
    chargeAdjustment?: boolean;
    chargePayment?: boolean;
    chargeRefund?: boolean;
    chargeback?: boolean;
    chargeoff?: boolean;
    code?: string;
    contra?: boolean;
    contractTermination?: boolean;
    creditBalanceRefund?: boolean;
    disbursement?: boolean;
    downPayment?: boolean;
    goodwillCredit?: boolean;
    id?: number;
    initiateTransfer?: boolean;
    interestPaymentWaiver?: boolean;
    interestRefund?: boolean;
    merchantIssuedRefund?: boolean;
    payoutRefund?: boolean;
    reAge?: boolean;
    reAmortize?: boolean;
    recoveryRepayment?: boolean;
    refund?: boolean;
    refundForActiveLoans?: boolean;
    rejectTransfer?: boolean;
    repayment?: boolean;
    repaymentAtDisbursement?: boolean;
    repaymentType?: boolean;
    value?: string;
    waiveCharges?: boolean;
    waiveInterest?: boolean;
    withdrawTransfer?: boolean;
    writeOff?: boolean;
};

export type LoanTransactionRelationData = {
    amount?: number;
    fromLoanTransaction?: number;
    paymentType?: string;
    relationType?: 'INVALID' | 'CHARGEBACK' | 'CHARGE_ADJUSTMENT' | 'REPLAYED' | 'RELATED' | 'ADJUSTMENT';
    toLoanCharge?: number;
    toLoanTransaction?: number;
};

export type relationType = 'INVALID' | 'CHARGEBACK' | 'CHARGE_ADJUSTMENT' | 'REPLAYED' | 'RELATED' | 'ADJUSTMENT';

export type LoansLoanIdCollateralsRequest = {
    collateralTypeId?: number;
};

export type LoansLoandIdCollateralsCollateralIdRequest = {
    description?: string;
};

export type LocalTime = {
    hour?: number;
    minute?: number;
    nano?: number;
    second?: number;
};

export type LookupTableData = {
    description?: string;
    entries?: Array<LookupTableEntry>;
    key?: string;
};

export type LookupTableEntry = {
    score?: number;
    valueFrom?: number;
    valueTo?: number;
};

export type MediaType = {
    parameters?: {
        [key: string]: (string);
    };
    subtype?: string;
    type?: string;
    wildcardSubtype?: boolean;
    wildcardType?: boolean;
};

export type MessageBodyWorkers = {
    [key: string]: unknown;
};

export type MixTaxonomyData = {
    description?: string;
    dimension?: string;
    id?: number;
    name?: string;
    namespace?: string;
    type?: number;
};

export type MixTaxonomyMappingData = {
    config?: string;
    identifier?: string;
};

export type MixTaxonomyRequest = {
    config?: string;
    identifier?: string;
};

export type MonetaryCurrency = {
    code?: string;
    currencyData?: CurrencyData;
    digitsAfterDecimal?: number;
    inMultiplesOf?: number;
};

export type Money = {
    amount?: number;
    amountDefaultedToNullIfZero?: number;
    currency?: MonetaryCurrency;
    currencyCode?: string;
    currencyData?: CurrencyData;
    greaterThanZero?: boolean;
    inMultiplesOf?: number;
    lessThanZero?: boolean;
    mc?: {
        precision?: number;
        roundingMode?: 'UP' | 'DOWN' | 'CEILING' | 'FLOOR' | 'HALF_UP' | 'HALF_DOWN' | 'HALF_EVEN' | 'UNNECESSARY';
    };
    zero?: boolean;
};

export type MoneyData = {
    amount: number;
    currency: string;
};

export type MultiPart = {
    bodyParts?: Array<BodyPart>;
    contentDisposition?: ContentDisposition;
    entity?: {
        [key: string]: unknown;
    };
    headers?: {
        empty?: boolean;
        [key: string]: (array | boolean) | undefined;
    };
    mediaType?: MediaType;
    messageBodyWorkers?: MessageBodyWorkers;
    parameterizedHeaders?: {
        empty?: boolean;
        [key: string]: (array | boolean) | undefined;
    };
    parent?: MultiPart;
    providers?: Providers;
};

export type MultivaluedMapStringParameterizedHeader = {
    empty?: boolean;
    [key: string]: (array | boolean) | undefined;
};

export type MultivaluedMapStringString = {
    empty?: boolean;
    [key: string]: (array | boolean) | undefined;
};

export type NoteData = {
    clientId?: number;
    createdById?: number;
    createdByUsername?: string;
    createdOn?: string;
    depositAccountId?: number;
    groupId?: number;
    id?: number;
    loanId?: number;
    loanTransactionId?: number;
    note?: string;
    noteType?: EnumOptionData;
    savingAccountId?: number;
    updatedById?: number;
    updatedByUsername?: string;
    updatedOn?: string;
};

export type NoteRequest = {
    note?: string;
};

export type Office = {
    children?: Array<Office>;
    externalId?: ExternalId;
    hierarchy?: string;
    id?: number;
    name?: string;
    new?: boolean;
    openingDate?: string;
    openingLocalDate?: string;
    parent?: Office;
};

export type OfficeData = {
    dateFormat?: string;
    externalId?: ExternalId;
    hierarchy?: string;
    id?: number;
    locale?: string;
    name?: string;
    nameDecorated?: string;
    openingDate?: string;
    parentId?: number;
    parentName?: string;
    rowIndex?: number;
};

export type OldestCOBProcessedLoanDTO = {
    cobBusinessDate?: string;
    cobProcessedDate?: string;
    loanIds?: Array<(number)>;
};

export type PageAccountData = {
    pageItems?: Array<AccountData>;
    totalFilteredRecords?: number;
};

export type PageAccountTransferData = {
    pageItems?: Array<AccountTransferData>;
    totalFilteredRecords?: number;
};

export type PageCashierTransactionData = {
    pageItems?: Array<CashierTransactionData>;
    totalFilteredRecords?: number;
};

export type PageClientSearchData = {
    content?: Array<ClientSearchData>;
    empty?: boolean;
    first?: boolean;
    last?: boolean;
    number?: number;
    numberOfElements?: number;
    pageable?: Pageable;
    size?: number;
    sort?: Sort;
    totalElements?: number;
    totalPages?: number;
};

export type PageExternalTransferData = {
    content?: Array<ExternalTransferData>;
    empty?: boolean;
    first?: boolean;
    last?: boolean;
    number?: number;
    numberOfElements?: number;
    pageable?: Pageable;
    size?: number;
    sort?: Sort;
    totalElements?: number;
    totalPages?: number;
};

export type PageExternalTransferLoanProductAttributesData = {
    pageItems?: Array<ExternalTransferLoanProductAttributesData>;
    totalFilteredRecords?: number;
};

export type PageJournalEntryData = {
    content?: Array<JournalEntryData>;
    empty?: boolean;
    first?: boolean;
    last?: boolean;
    number?: number;
    numberOfElements?: number;
    pageable?: Pageable;
    size?: number;
    sort?: Sort;
    totalElements?: number;
    totalPages?: number;
};

export type PageLoanProductProvisioningEntryData = {
    pageItems?: Array<LoanProductProvisioningEntryData>;
    totalFilteredRecords?: number;
};

export type PageLoanTransactionData = {
    content?: Array<LoanTransactionData>;
    empty?: boolean;
    first?: boolean;
    last?: boolean;
    number?: number;
    numberOfElements?: number;
    pageable?: Pageable;
    size?: number;
    sort?: Sort;
    totalElements?: number;
    totalPages?: number;
};

export type PageProvisioningEntryData = {
    pageItems?: Array<ProvisioningEntryData>;
    totalFilteredRecords?: number;
};

export type PageSmsCampaignData = {
    pageItems?: Array<SmsCampaignData>;
    totalFilteredRecords?: number;
};

export type PageSmsData = {
    pageItems?: Array<SmsData>;
    totalFilteredRecords?: number;
};

export type PageStandingInstructionData = {
    pageItems?: Array<StandingInstructionData>;
    totalFilteredRecords?: number;
};

export type PageStandingInstructionHistoryData = {
    pageItems?: Array<StandingInstructionHistoryData>;
    totalFilteredRecords?: number;
};

export type Pageable = {
    offset?: number;
    pageNumber?: number;
    pageSize?: number;
    paged?: boolean;
    sort?: Sort;
    unpaged?: boolean;
};

export type PagedLocalRequestAdvancedQueryData = {
    dateFormat?: string;
    dateTimeFormat?: string;
    locale?: string;
    localeObject?: {
        country?: string;
        displayCountry?: string;
        displayLanguage?: string;
        displayName?: string;
        displayScript?: string;
        displayVariant?: string;
        extensionKeys?: Array<(string)>;
        iso3Country?: string;
        iso3Language?: string;
        language?: string;
        script?: string;
        unicodeLocaleAttributes?: Array<(string)>;
        unicodeLocaleKeys?: Array<(string)>;
        variant?: string;
    };
    page?: number;
    request?: AdvancedQueryData;
    size?: number;
    sorts?: Array<SortOrder>;
};

export type PagedLocalRequestAdvancedQueryRequest = {
    dateFormat?: string;
    dateTimeFormat?: string;
    locale?: string;
    localeObject?: {
        country?: string;
        displayCountry?: string;
        displayLanguage?: string;
        displayName?: string;
        displayScript?: string;
        displayVariant?: string;
        extensionKeys?: Array<(string)>;
        iso3Country?: string;
        iso3Language?: string;
        language?: string;
        script?: string;
        unicodeLocaleAttributes?: Array<(string)>;
        unicodeLocaleKeys?: Array<(string)>;
        variant?: string;
    };
    page?: number;
    request?: AdvancedQueryRequest;
    size?: number;
    sorts?: Array<SortOrder>;
};

export type PagedRequestClientTextSearch = {
    page?: number;
    request?: ClientTextSearch;
    size?: number;
    sorts?: Array<SortOrder>;
};

export type PagedRequestExternalAssetOwnerSearchRequest = {
    page?: number;
    request?: ExternalAssetOwnerSearchRequest;
    size?: number;
    sorts?: Array<SortOrder>;
};

export type ParameterizedHeader = {
    parameters?: {
        [key: string]: (string);
    };
    value?: string;
};

export type PaymentAllocationOrder = {
    order?: number;
    paymentAllocationRule?: string;
};

export type PaymentDetailData = {
    accountNumber?: string;
    bankNumber?: string;
    checkNumber?: string;
    id?: number;
    paymentType?: PaymentTypeData;
    receiptNumber?: string;
    routingCode?: string;
};

export type PaymentType = {
    codeName?: string;
    description?: string;
    id?: number;
    isCashPayment?: boolean;
    isSystemDefined?: boolean;
    name?: string;
    new?: boolean;
    position?: number;
};

export type PaymentTypeData = {
    codeName?: string;
    description?: string;
    id?: number;
    isCashPayment?: boolean;
    isSystemDefined?: boolean;
    name?: string;
    position?: number;
};

export type PaymentTypeRequest = {
    codeName?: string;
    description?: string;
    isCashPayment?: boolean;
    isSystemDefined?: boolean;
    name?: string;
    position?: number;
};

export type PaymentTypeToGLAccountMapper = {
    fundSourceAccount?: GLAccountData;
    paymentType?: PaymentTypeData;
};

export type Permission = {
    code?: string;
    grouping?: string;
    id?: number;
    new?: boolean;
};

export type PortfolioAccountData = {
    accountNo?: string;
    amtForTransfer?: number;
    clientId?: number;
    clientName?: string;
    currency?: CurrencyData;
    currencyCodeFromCurrency?: string;
    externalId?: string;
    fieldOfficerId?: number;
    fieldOfficerName?: string;
    groupId?: number;
    groupName?: string;
    id?: number;
    productId?: number;
    productName?: string;
};

/**
 * PostAccountNumberFormatsRequest
 */
export type PostAccountNumberFormatsRequest = {
    accountType?: number;
    prefixType?: number;
};

/**
 * PostAccountNumberFormatsResponse
 */
export type PostAccountNumberFormatsResponse = {
    resourceId?: number;
};

/**
 * PostAccountTransfersRefundByTransferResponse
 */
export type PostAccountTransfersRefundByTransferResponse = {
    resourceId?: number;
    savingsId?: number;
};

/**
 * PostAccountTransfersResponse
 */
export type PostAccountTransfersResponse = {
    resourceId?: number;
    savingsId?: number;
};

/**
 * PostAccountingRulesResponse
 */
export type PostAccountingRulesResponse = {
    officeId?: number;
    resourceId?: number;
};

export type PostAccountsRequestedShares = {
    id?: number;
};

/**
 * PostAccountsTypeAccountIdRequest
 */
export type PostAccountsTypeAccountIdRequest = {
    requestedShares?: Array<PostAccountsRequestedShares>;
};

/**
 * PostAccountsTypeAccountIdResponse
 */
export type PostAccountsTypeAccountIdResponse = {
    resourceId?: number;
};

/**
 * PostAccountsTypeResponse
 */
export type PostAccountsTypeResponse = {
    resourceId?: number;
};

/**
 * PostAddAndDeleteDisbursementDetailRequest
 */
export type PostAddAndDeleteDisbursementDetailRequest = {
    approvedLoanAmount?: number;
    dateFormat?: string;
    disbursementData?: Array<DisbursementDetail>;
    locale?: string;
};

/**
 * PostAdhocQuerySearchRequest
 */
export type PostAdhocQuerySearchRequest = {
    dateFormat?: string;
    includeOutStandingAmountPercentage?: boolean;
    includeOutstandingAmount?: boolean;
    loanDateOption?: string;
    loanFromDate?: string;
    loanToDate?: string;
    locale?: string;
    maxOutstandingAmount?: number;
    minOutstandingAmount?: number;
    outStandingAmountPercentage?: number;
    outStandingAmountPercentageCondition?: string;
    outstandingAmountCondition?: string;
};

/**
 * PostAuthenticationRequest
 */
export type PostAuthenticationRequest = {
    password: string;
    username: string;
};

/**
 * PostAuthenticationResponse
 */
export type PostAuthenticationResponse = {
    authenticated?: boolean;
    base64EncodedAuthenticationKey?: string;
    officeId?: number;
    officeName?: string;
    organisationalRole?: EnumOptionData;
    permissions?: Array<(string)>;
    roles?: Array<RoleData>;
    staffDisplayName?: string;
    staffId?: number;
    userId?: number;
    username?: string;
};

/**
 * PostCentersCenterIdRequest
 */
export type PostCentersCenterIdRequest = {
    closureDate?: string;
    closureReasonId?: number;
    dateFormat?: string;
    locale?: string;
};

/**
 * PostCentersCenterIdResponse
 */
export type PostCentersCenterIdResponse = {
    resourceId?: number;
};

/**
 * PostCentersRequest
 */
export type PostCentersRequest = {
    active?: boolean;
    name?: string;
    officeId?: number;
};

/**
 * PostCentersResponse
 */
export type PostCentersResponse = {
    groupId?: number;
    officeId?: number;
    resourceId?: number;
};

export type PostChargeOffReasonToExpenseAccountMappings = {
    chargeOffReasonCodeValueId?: number;
    expenseAccountId?: number;
};

/**
 * PostChargesResponse
 */
export type PostChargesResponse = {
    resourceId?: number;
};

/**
 * PostClientClientIdAddressesResponse
 */
export type PostClientClientIdAddressesResponse = {
    resourceId?: number;
};

/**
 * PostClientCollateralResponse
 */
export type PostClientCollateralResponse = {
    clientId?: number;
    resourceId?: number;
};

/**
 * PostClientsClientIdChargesChargeIdRequest
 */
export type PostClientsClientIdChargesChargeIdRequest = {
    amount?: number;
    dateFormat?: string;
    externalId?: string;
    locale?: string;
    transactionDate?: string;
};

/**
 * PostClientsClientIdChargesChargeIdResponse
 */
export type PostClientsClientIdChargesChargeIdResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
    transactionId?: number;
};

/**
 * PostClientsClientIdChargesRequest
 */
export type PostClientsClientIdChargesRequest = {
    amount?: number;
    chargeId?: number;
    dateFormat?: string;
    dueDate?: string;
    locale?: string;
};

/**
 * PostClientsClientIdChargesResponse
 */
export type PostClientsClientIdChargesResponse = {
    chargeId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * PostClientsClientIdIdentifiersRequest
 */
export type PostClientsClientIdIdentifiersRequest = {
    description?: string;
    documentKey?: string;
    documentTypeId?: number;
    status?: string;
};

/**
 * PostClientsClientIdIdentifiersResponse
 */
export type PostClientsClientIdIdentifiersResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * PostClientsClientIdRequest
 */
export type PostClientsClientIdRequest = {
    activationDate?: string;
    dateFormat?: string;
    locale?: string;
};

/**
 * PostClientsClientIdResponse
 */
export type PostClientsClientIdResponse = {
    clientId?: number;
    officeId?: number;
    resourceExternalId?: string;
    resourceId?: number;
};

/**
 * PostClientsClientIdTransactionsTransactionIdResponse
 */
export type PostClientsClientIdTransactionsTransactionIdResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * List of PostClientsDatatable
 */
export type PostClientsDatatable = {
    data?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    registeredTableName?: string;
};

/**
 * PostClientsRequest
 */
export type PostClientsRequest = {
    activationDate?: string;
    active?: boolean;
    /**
     * Address requests
     */
    address?: Array<ClientAddressRequest>;
    /**
     * List of PostClientsDatatable
     */
    datatables?: Array<PostClientsDatatable>;
    dateFormat?: string;
    dateOfBirth?: string;
    emailAddress?: string;
    externalId?: string;
    firstname?: string;
    fullname?: string;
    groupId?: number;
    lastname?: string;
    legalFormId?: number;
    locale?: string;
    middlename?: string;
    mobileNo?: string;
    officeId?: number;
};

/**
 * PostClientsResponse
 */
export type PostClientsResponse = {
    clientId?: number;
    groupId?: number;
    officeId?: number;
    resourceExternalId?: string;
    resourceId?: number;
};

/**
 * PostCodeValueDataResponse
 */
export type PostCodeValueDataResponse = {
    resourceId?: number;
    subResourceId?: number;
};

/**
 * PostCodeValuesDataRequest
 */
export type PostCodeValuesDataRequest = {
    description?: string;
    isActive?: boolean;
    name?: string;
    position?: number;
};

/**
 * PostCodesRequest
 */
export type PostCodesRequest = {
    name?: string;
};

/**
 * PostCodesResponse
 */
export type PostCodesResponse = {
    resourceId?: number;
};

/**
 * PostCollateralManagementProductResponse
 */
export type PostCollateralManagementProductResponse = {
    resourceId?: number;
};

export type PostCollectionSheetChanges = {
    SavingsTransactions?: Array<(number)>;
    dateFormat?: string;
    loanTransactions?: Array<(number)>;
    locale?: string;
};

/**
 * PostCollectionSheetResponse
 */
export type PostCollectionSheetResponse = {
    changes?: PostCollectionSheetChanges;
    groupId?: number;
    resourceId?: number;
};

export type PostColumnHeaderData = {
    /**
     * Used in Code Value fields. Column name becomes: code_cd_name. Mandatory if using type Dropdown, otherwise an error is returned.
     */
    code?: string;
    /**
     * Defaults to false
     */
    indexed?: boolean;
    /**
     * Length of the text field. Mandatory if type String is used, otherwise an error is returned.
     */
    length?: number;
    /**
     * Defaults to false
     */
    mandatory?: boolean;
    name: string;
    /**
     * Any of them: Boolean | Date | DateTime | Decimal | Dropdown | Number | String | Text
     */
    type: string;
    /**
     * Defaults to false
     */
    unique?: boolean;
};

/**
 * PostCreateRescheduleLoansRequest
 */
export type PostCreateRescheduleLoansRequest = {
    adjustedDueDate?: string;
    dateFormat?: string;
    extraTerms?: number;
    graceOnInterest?: number;
    graceOnPrincipal?: number;
    loanId?: number;
    locale?: string;
    newInterestRate?: number;
    rescheduleFromDate?: string;
    rescheduleReasonComment?: string;
    rescheduleReasonId?: number;
    submittedOnDate?: string;
};

/**
 * PostCreateRescheduleLoansResponse
 */
export type PostCreateRescheduleLoansResponse = {
    clientId?: number;
    loanId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * PostDataTablesAppTableIdResponse
 */
export type PostDataTablesAppTableIdResponse = {
    resourceId?: number;
};

/**
 * PostDataTablesRegisterDatatableAppTable
 */
export type PostDataTablesRegisterDatatableAppTable = {
    [key: string]: unknown;
};

/**
 * PostDataTablesRequest
 */
export type PostDataTablesRequest = {
    apptableName: string;
    columns: Array<PostColumnHeaderData>;
    datatableName: string;
    entitySubType?: string;
    /**
     * Allows to create multiple entries in the Data Table. Optional, defaults to false. If this property is not provided Data Table will allow only one entry.
     */
    multiRow?: boolean;
};

/**
 * PostDataTablesResponse
 */
export type PostDataTablesResponse = {
    resourceIdentifier?: string;
};

/**
 * PostDelinquencyBucketResponse
 */
export type PostDelinquencyBucketResponse = {
    resourceId?: number;
};

/**
 * PostDelinquencyRangeResponse
 */
export type PostDelinquencyRangeResponse = {
    resourceId?: number;
};

/**
 * PostEntityDatatableChecksTemplateRequest
 */
export type PostEntityDatatableChecksTemplateRequest = {
    datatableName?: string;
    entity?: string;
    productId?: number;
    status?: number;
};

/**
 * PostEntityDatatableChecksTemplateResponse
 */
export type PostEntityDatatableChecksTemplateResponse = {
    resourceId?: number;
};

/**
 * PostEntityTypeEntityIdDocumentsResponse
 */
export type PostEntityTypeEntityIdDocumentsResponse = {
    resourceId?: number;
    resourceIdentifier?: string;
};

/**
 * PostExternalAssetOwnerLoanProductAttributeRequest
 */
export type PostExternalAssetOwnerLoanProductAttributeRequest = {
    attributeKey?: string;
    attributeValue?: string;
};

/**
 * PostFinancialActivityAccountsRequest
 */
export type PostFinancialActivityAccountsRequest = {
    financialActivityId?: number;
    glAccountId?: number;
};

/**
 * PostFinancialActivityAccountsResponse
 */
export type PostFinancialActivityAccountsResponse = {
    resourceId?: number;
};

/**
 * PostFixedDepositAccountsAccountIdRequest
 */
export type PostFixedDepositAccountsAccountIdRequest = {
    [key: string]: unknown;
};

/**
 * PostFixedDepositAccountsAccountIdResponse
 */
export type PostFixedDepositAccountsAccountIdResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
    savingsId?: number;
};

/**
 * PostFixedDepositAccountsRequest
 */
export type PostFixedDepositAccountsRequest = {
    clientId?: number;
    dateFormat?: string;
    depositAmount?: number;
    depositPeriod?: number;
    depositPeriodFrequencyId?: number;
    locale?: string;
    productId?: number;
    submittedOnDate?: string;
};

/**
 * PostFixedDepositAccountsResponse
 */
export type PostFixedDepositAccountsResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
    savingsId?: number;
};

export type PostFixedDepositProductsChartSlabs = {
    annualInterestRate?: number;
    description?: string;
    fromPeriod?: number;
    periodType?: number;
    toPeriod?: number;
};

export type PostFixedDepositProductsCharts = {
    chartSlabs?: Array<PostFixedDepositProductsChartSlabs>;
    dateFormat?: string;
    fromDate?: string;
    locale?: string;
};

/**
 * PostFixedDepositProductsRequest
 */
export type PostFixedDepositProductsRequest = {
    accountingRule?: number;
    charts?: Array<PostFixedDepositProductsCharts>;
    currencyCode?: string;
    description?: string;
    digitsAfterDecimal?: number;
    inMultiplesOf?: number;
    interestCalculationDaysInYearType?: number;
    interestCalculationType?: number;
    interestCompoundingPeriodType?: number;
    interestPostingPeriodType?: number;
    locale?: string;
    maxDepositTerm?: number;
    maxDepositTermTypeId?: number;
    minDepositTerm?: number;
    minDepositTermTypeId?: number;
    name?: string;
    preClosurePenalApplicable?: boolean;
    preClosurePenalInterest?: number;
    preClosurePenalInterestOnTypeId?: number;
    shortName?: string;
};

/**
 * PostFixedDepositProductsResponse
 */
export type PostFixedDepositProductsResponse = {
    resourceId?: number;
};

export type PostFloatingRatesRatePeriods = {
    dateFormat?: string;
    fromDate?: string;
    interestRate?: number;
    locale?: string;
};

/**
 * PostFloatingRatesResponse
 */
export type PostFloatingRatesResponse = {
    resourceId?: number;
};

/**
 * PostFundsResponse
 */
export type PostFundsResponse = {
    resourceId?: number;
};

/**
 * PostGLAccountsRequest
 */
export type PostGLAccountsRequest = {
    description?: string;
    glCode?: string;
    manualEntriesAllowed?: boolean;
    name?: string;
    parentId?: number;
    tagId?: number;
    type?: number;
    usage?: number;
};

/**
 * PostGLAccountsResponse
 */
export type PostGLAccountsResponse = {
    resourceId?: number;
};

/**
 * PostGLCLosuresRequest
 */
export type PostGlClosuresRequest = {
    closingDate?: string;
    comments?: string;
    dateFormat?: string;
    locale?: string;
    officeId?: number;
};

/**
 * PostGlClosuresResponse
 */
export type PostGlClosuresResponse = {
    officeId?: number;
    resourceId?: number;
};

export type PostGroupsGroupIdClients = {
    id?: number;
};

export type PostGroupsGroupIdCommandUnassignStaffChanges = {
    [key: string]: unknown;
};

/**
 * PostGroupsGroupIdCommandUnassignStaffRequest
 */
export type PostGroupsGroupIdCommandUnassignStaffRequest = {
    staffId?: number;
};

/**
 * PostGroupsGroupIdCommandUnassignStaffResponse
 */
export type PostGroupsGroupIdCommandUnassignStaffResponse = {
    changes?: PostGroupsGroupIdCommandUnassignStaffChanges;
    groupId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * PostGroupsGroupIdRequest
 */
export type PostGroupsGroupIdRequest = {
    clients?: Array<PostGroupsGroupIdClients>;
    destinationGroupId?: number;
};

/**
 * PostGroupsGroupIdResponse
 */
export type PostGroupsGroupIdResponse = {
    resourceId?: number;
};

/**
 * PostGroupsRequest
 */
export type PostGroupsRequest = {
    active?: boolean;
    name?: string;
    officeId?: number;
};

/**
 * PostGroupsResponse
 */
export type PostGroupsResponse = {
    groupId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * PostHolidaysHolidayIdRequest
 */
export type PostHolidaysHolidayIdRequest = {
    [key: string]: unknown;
};

/**
 * PostHolidaysHolidayIdResponse
 */
export type PostHolidaysHolidayIdResponse = {
    resourceId?: number;
};

/**
 * PostHolidaysRequest
 */
export type PostHolidaysRequest = {
    dateFormat?: string;
    description?: string;
    fromDate?: string;
    locale?: string;
    name?: string;
    offices?: Array<PostHolidaysRequestOffices>;
    repaymentsRescheduledTo?: string;
    toDate?: string;
};

export type PostHolidaysRequestOffices = {
    officeId?: number;
};

/**
 * PostHolidaysResponse
 */
export type PostHolidaysResponse = {
    resourceId?: number;
};

/**
 * PostHookRequest
 */
export type PostHookRequest = {
    config?: Array<Field>;
    displayName?: string;
    events?: Array<Event>;
    isActive?: boolean;
    name?: string;
    templateId?: number;
};

/**
 * PostHookResponse
 */
export type PostHookResponse = {
    resourceId?: number;
};

/**
 * PostInitiateTransferResponse
 */
export type PostInitiateTransferResponse = {
    changes?: ExternalAssetOwnerTransferChangesData;
    dateFormat?: string;
    locale?: string;
    /**
     * transfer external ID
     */
    resourceExternalId?: string;
    /**
     * transfer ID
     */
    resourceId?: number;
    /**
     * loan external ID
     */
    subResourceExternalId?: string;
    /**
     * loan ID
     */
    subResourceId?: number;
};

/**
 * PostInterestRateChartsChartIdChartSlabsResponse
 */
export type PostInterestRateChartsChartIdChartSlabsResponse = {
    resourceId?: number;
};

/**
 * PostInterestRateChartsRequest
 */
export type PostInterestRateChartsRequest = {
    dateFormat?: string;
    description?: string;
    fromDate?: string;
    locale?: string;
    name?: string;
    type?: string;
};

/**
 * PostInterestRateChartsResponse
 */
export type PostInterestRateChartsResponse = {
    resourceId?: number;
};

/**
 * PostJournalEntriesResponse
 */
export type PostJournalEntriesResponse = {
    /**
     * 1
     */
    officeId?: number;
    /**
     * RS9MCISID4WK1ZM
     */
    transactionId?: string;
};

/**
 * PostJournalEntriesTransactionIdRequest
 */
export type PostJournalEntriesTransactionIdRequest = {
    /**
     * 1
     */
    officeId?: number;
};

/**
 * PostJournalEntriesTransactionIdResponse
 */
export type PostJournalEntriesTransactionIdResponse = {
    /**
     * 1
     */
    officeId?: number;
};

/**
 * PostLinkDelinkAccountsToFromPocketResponse
 */
export type PostLinkDelinkAccountsToFromPocketResponse = {
    resourceId?: number;
};

export type PostLoanChanges = {
    removedEntityIds?: Array<(number)>;
};

/**
 * PostLoanProductsRequest
 */
export type PostLoanProductsRequest = {
    accountMovesOutOfNPAOnlyOnArrearsCompletion?: boolean;
    accountingRule?: number;
    allowApprovedDisbursedAmountsOverApplied?: boolean;
    allowAttributeOverrides?: AllowAttributeOverrides;
    allowCompoundingOnEod?: boolean;
    allowPartialPeriodInterestCalcualtion?: boolean;
    allowVariableInstallments?: boolean;
    amortizationType?: number;
    buyDownExpenseAccountId?: number;
    buyDownFeeCalculationType?: 'FLAT';
    buyDownFeeIncomeType?: 'FEE' | 'INTEREST';
    buyDownFeeStrategy?: 'EQUAL_AMORTIZATION';
    canDefineInstallmentAmount?: boolean;
    canUseForTopup?: boolean;
    capitalizedIncomeCalculationType?: 'FLAT';
    capitalizedIncomeStrategy?: 'EQUAL_AMORTIZATION';
    capitalizedIncomeType?: 'FEE' | 'INTEREST';
    chargeOffBehaviour?: string;
    chargeOffExpenseAccountId?: number;
    chargeOffFraudExpenseAccountId?: number;
    chargeOffReasonToExpenseAccountMappings?: Array<PostChargeOffReasonToExpenseAccountMappings>;
    charges?: Array<LoanProductChargeData>;
    closeDate?: string;
    creditAllocation?: Array<CreditAllocationData>;
    currencyCode?: string;
    dateFormat?: string;
    daysInMonthType?: number;
    daysInYearCustomStrategy?: string;
    daysInYearType?: number;
    deferredIncomeLiabilityAccountId?: number;
    delinquencyBucketId?: number;
    description?: string;
    digitsAfterDecimal?: number;
    disallowExpectedDisbursements?: boolean;
    disallowInterestCalculationOnPastDue?: boolean;
    disbursedAmountPercentageForDownPayment?: number;
    dueDaysForRepaymentEvent?: number;
    enableAccrualActivityPosting?: boolean;
    enableAutoRepaymentForDownPayment?: boolean;
    enableBuyDownFee?: boolean;
    enableDownPayment?: boolean;
    enableIncomeCapitalization?: boolean;
    enableInstallmentLevelDelinquency?: boolean;
    externalId?: string;
    feeToIncomeAccountMappings?: Array<LoanProductChargeToGLAccountMapper>;
    fixedLength?: number;
    fixedPrincipalPercentagePerInstallment?: number;
    fundId?: number;
    fundSourceAccountId?: number;
    goodwillCreditAccountId?: number;
    graceOnArrearsAgeing?: number;
    graceOnInterestPayment?: number;
    graceOnPrincipalPayment?: number;
    holdGuaranteeFunds?: boolean;
    inArrearsTolerance?: number;
    inMultiplesOf?: number;
    includeInBorrowerCycle?: boolean;
    incomeFromBuyDownAccountId?: number;
    incomeFromCapitalizationAccountId?: number;
    incomeFromChargeOffFeesAccountId?: number;
    incomeFromChargeOffInterestAccountId?: number;
    incomeFromChargeOffPenaltyAccountId?: number;
    incomeFromFeeAccountId?: number;
    incomeFromGoodwillCreditFeesAccountId?: number;
    incomeFromGoodwillCreditInterestAccountId?: number;
    incomeFromGoodwillCreditPenaltyAccountId?: number;
    incomeFromPenaltyAccountId?: number;
    incomeFromRecoveryAccountId?: number;
    installmentAmountInMultiplesOf?: number;
    interestCalculationPeriodType?: number;
    interestOnLoanAccountId?: number;
    interestRateFrequencyType?: number;
    interestRatePerPeriod?: number;
    interestRateVariationsForBorrowerCycle?: Array<(number)>;
    interestRecalculationCompoundingMethod?: number;
    interestRecognitionOnDisbursementDate?: boolean;
    interestType?: number;
    isArrearsBasedOnOriginalSchedule?: boolean;
    isCompoundingToBePostedAsTransaction?: boolean;
    isEqualAmortization?: boolean;
    isInterestRecalculationEnabled?: boolean;
    isLinkedToFloatingInterestRates?: boolean;
    loanPortfolioAccountId?: number;
    loanScheduleProcessingType?: string;
    loanScheduleType?: string;
    locale?: string;
    maxInterestRatePerPeriod?: number;
    maxNumberOfRepayments?: number;
    maxPrincipal?: number;
    maxTrancheCount?: number;
    merchantBuyDownFee?: boolean;
    minInterestRatePerPeriod?: number;
    minNumberOfRepayments?: number;
    minPrincipal?: number;
    minimumDaysBetweenDisbursalAndFirstRepayment?: number;
    multiDisburseLoan?: boolean;
    name?: string;
    numberOfRepaymentVariationsForBorrowerCycle?: Array<(number)>;
    numberOfRepayments?: number;
    outstandingLoanBalance?: number;
    overAppliedCalculationType?: string;
    overAppliedNumber?: number;
    overDueDaysForRepaymentEvent?: number;
    overdueDaysForNPA?: number;
    overpaymentLiabilityAccountId?: number;
    paymentAllocation?: Array<AdvancedPaymentData>;
    paymentChannelToFundSourceMappings?: Array<GetLoanPaymentChannelToFundSourceMappings>;
    penaltyToIncomeAccountMappings?: Array<LoanProductChargeToGLAccountMapper>;
    preClosureInterestCalculationStrategy?: number;
    principal?: number;
    principalThresholdForLastInstallment?: number;
    principalVariationsForBorrowerCycle?: Array<(number)>;
    rates?: Array<RateData>;
    recalculationCompoundingFrequencyInterval?: number;
    recalculationCompoundingFrequencyOnDayType?: number;
    recalculationCompoundingFrequencyType?: number;
    recalculationRestFrequencyInterval?: number;
    recalculationRestFrequencyType?: number;
    receivableFeeAccountId?: number;
    receivableInterestAccountId?: number;
    receivablePenaltyAccountId?: number;
    repaymentEvery?: number;
    repaymentFrequencyType?: number;
    repaymentStartDateType?: number;
    rescheduleStrategyMethod?: number;
    shortName?: string;
    startDate?: string;
    supportedInterestRefundTypes?: Array<(string)>;
    transactionProcessingStrategyCode?: string;
    transfersInSuspenseAccountId?: number;
    useBorrowerCycle?: boolean;
    writeOffAccountId?: number;
};

/**
 * PostLoanProductsResponse
 */
export type PostLoanProductsResponse = {
    resourceId?: number;
};

export type PostLoansDataTable = {
    data?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    registeredTableName?: string;
};

/**
 * PostLoansDelinquencyActionRequest
 */
export type PostLoansDelinquencyActionRequest = {
    action?: string;
    dateFormat?: string;
    endDate?: string;
    locale?: string;
    startDate?: string;
};

/**
 * PostLoansDelinquencyActionResponse
 */
export type PostLoansDelinquencyActionResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * List of PostLoansDisbursementData
 */
export type PostLoansDisbursementData = {
    expectedDisbursementDate?: string;
    principal?: number;
};

/**
 * PostLoansLoanIdChanges
 */
export type PostLoansLoanIdChanges = {
    approvedOnDate?: string;
    dateFormat?: string;
    locale?: string;
    note?: string;
    status?: PostLoansLoanIdStatus;
};

export type PostLoansLoanIdChargesChargeIdChanges = {
    amount?: number;
    chargeId?: number;
    date?: number;
    dueDate?: string;
    externalId?: string;
    feeChargesPortion?: number;
    id?: number;
    installmentNumber?: number;
    interestPortion?: number;
    locale?: string;
    outstandingLoanBalance?: number;
    penaltyChargesPortion?: number;
    principalPortion?: number;
    transactionDate?: string;
};

/**
 * PostLoansLoanIdChargesChargeIdRequest
 */
export type PostLoansLoanIdChargesChargeIdRequest = {
    accountNumber?: string;
    amount?: number;
    bankNumber?: string;
    chargeId?: number;
    checkNumber?: string;
    dateFormat?: string;
    dueDate?: string;
    externalId?: string;
    installmentNumber?: number;
    locale?: string;
    note?: string;
    paymentTypeId?: number;
    receiptNumber?: string;
    routingCode?: string;
    transactionDate?: string;
};

/**
 * PostLoansLoanIdChargesChargeIdResponse
 */
export type PostLoansLoanIdChargesChargeIdResponse = {
    changes?: PostLoansLoanIdChargesChargeIdChanges;
    clientId?: number;
    loanId?: number;
    officeId?: number;
    resourceExternalId?: string;
    resourceId?: number;
    savingsId?: number;
    subResourceExternalId?: string;
    subResourceId?: number;
};

/**
 *  PostLoansLoanIdChargesRequest
 */
export type PostLoansLoanIdChargesRequest = {
    amount?: number;
    chargeId?: number;
    dateFormat?: string;
    dueDate?: string;
    externalId?: string;
    locale?: string;
};

/**
 *  PostLoansLoanIdChargesResponse
 */
export type PostLoansLoanIdChargesResponse = {
    clientId?: number;
    loanId?: number;
    officeId?: number;
    resourceExternalId?: string;
    resourceId?: number;
};

/**
 * PostLoansLoanIdCollateralsResponse
 */
export type PostLoansLoanIdCollateralsResponse = {
    resourceId?: number;
};

/**
 * List of PostLoansLoanIdDisbursementData
 */
export type PostLoansLoanIdDisbursementData = {
    expectedDisbursementDate?: string;
    principal?: number;
};

/**
 * PostLoansLoanIdRequest
 */
export type PostLoansLoanIdRequest = {
    actualDisbursementDate?: string;
    adjustRepaymentDate?: string;
    approvedLoanAmount?: number;
    approvedOnDate?: string;
    assignmentDate?: string;
    dateFormat?: string;
    /**
     * List of PostLoansLoanIdDisbursementData
     */
    disbursementData?: Array<PostLoansLoanIdDisbursementData>;
    expectedDisbursementDate?: string;
    externalId?: string;
    fixedEmiAmount?: number;
    fromLoanOfficerId?: number;
    locale?: string;
    note?: string;
    paymentTypeId?: number;
    rejectedOnDate?: string;
    toLoanOfficerId?: number;
    transactionAmount?: number;
    unassignedDate?: string;
    withdrawnOnDate?: string;
};

/**
 * PostLoansLoanIdResponse
 */
export type PostLoansLoanIdResponse = {
    changes?: PostLoansLoanIdChanges;
    clientId?: number;
    loanId?: number;
    officeId?: number;
    resourceExternalId?: string;
    resourceId?: number;
    subResourceExternalId?: string;
    subResourceId?: number;
};

/**
 * PostLoansLoanIdScheduleRequest
 */
export type PostLoansLoanIdScheduleRequest = {
    [key: string]: unknown;
};

/**
 * PostLoansLoanIdScheduleResponse
 */
export type PostLoansLoanIdScheduleResponse = {
    changes?: PostLoanChanges;
    loanId?: number;
};

/**
 * PostLoansLoanIdStatus
 */
export type PostLoansLoanIdStatus = {
    active?: boolean;
    closed?: boolean;
    closedObligationsMet?: boolean;
    closedRescheduled?: boolean;
    closedWrittenOff?: boolean;
    code?: string;
    id?: number;
    overpaid?: boolean;
    pendingApproval?: boolean;
    value?: string;
    waitingForDisbursal?: boolean;
};

/**
 * PostLoansLoanIdTransactionsRequest
 */
export type PostLoansLoanIdTransactionsRequest = {
    accountNumber?: string;
    bankNumber?: string;
    chargeOffReasonId?: number;
    checkNumber?: string;
    dateFormat?: string;
    dueDate?: string;
    externalId?: string;
    frequencyNumber?: number;
    frequencyType?: string;
    /**
     * Optional. Controls whether Interest Refund transaction should be created for this refund. If not provided, loan product config is used.
     */
    interestRefundCalculation?: boolean;
    loanChargeId?: number;
    locale?: string;
    note?: string;
    numberOfInstallments?: number;
    paymentTypeId?: number;
    receiptNumber?: string;
    reversalExternalId?: string;
    routingCode?: string;
    startDate?: string;
    transactionAmount?: number;
    transactionDate?: string;
    writeoffReasonId?: number;
};

/**
 * PostLoansLoanIdTransactionsResponse
 */
export type PostLoansLoanIdTransactionsResponse = {
    changes?: PostLoansLoanIdTransactionsResponseChanges;
    clientId?: number;
    loanId?: number;
    officeId?: number;
    resourceExternalId?: string;
    resourceId?: number;
    subResourceExternalId?: string;
    subResourceId?: number;
};

export type PostLoansLoanIdTransactionsResponseChanges = {
    dateFormat?: string;
    externalId?: string;
    locale?: string;
    note?: string;
    paymentTypeId?: number;
    reversalExternalId?: string;
    transactionAmount?: string;
    transactionDate?: string;
};

/**
 * PostLoansLoanIdTransactionsTransactionIdRequest
 */
export type PostLoansLoanIdTransactionsTransactionIdRequest = {
    dateFormat?: string;
    externalId?: string;
    locale?: string;
    note?: string;
    paymentTypeId?: number;
    reversalExternalId?: string;
    transactionAmount?: number;
    transactionDate?: string;
};

export type PostLoansRepaymentSchedulePeriods = {
    dueDate?: string;
    feeChargesDue?: number;
    feeChargesOutstanding?: number;
    period?: number;
    principalDisbursed?: number;
    principalLoanBalanceOutstanding?: number;
    totalActualCostOfLoanForPeriod?: number;
    totalDueForPeriod?: number;
    totalOriginalDueForPeriod?: number;
    totalOutstandingForPeriod?: number;
    totalOverdue?: number;
};

/**
 * PostLoansRequest
 */
export type PostLoansRequest = {
    amortizationType?: number;
    buyDownFeeCalculationType?: 'FLAT';
    buyDownFeeIncomeType?: 'FEE' | 'INTEREST';
    buyDownFeeStrategy?: 'EQUAL_AMORTIZATION';
    capitalizedIncomeCalculationType?: 'FLAT';
    capitalizedIncomeStrategy?: 'EQUAL_AMORTIZATION';
    capitalizedIncomeType?: StringEnumOptionData;
    charges?: Array<PostLoansRequestChargeData>;
    clientId?: number;
    datatables?: Array<PostLoansDataTable>;
    dateFormat?: string;
    daysInYearCustomStrategy?: 'FULL_LEAP_YEAR, FEB_29_PERIOD_ONLY';
    daysInYearType?: number;
    disbursedAmountPercentageForDownPayment?: number;
    /**
     * List of PostLoansDisbursementData
     */
    disbursementData?: Array<PostLoansDisbursementData>;
    enableAutoRepaymentForDownPayment?: boolean;
    enableBuyDownFee?: boolean;
    enableDownPayment?: boolean;
    enableIncomeCapitalization?: boolean;
    enableInstallmentLevelDelinquency?: boolean;
    expectedDisbursementDate?: string;
    externalId?: string;
    fixedEmiAmount?: number;
    fixedLength?: number;
    fixedPrincipalPercentagePerInstallment?: number;
    graceOnArrearsAgeing?: number;
    graceOnInterestCharged?: number;
    graceOnInterestPayment?: number;
    graceOnPrincipalPayment?: number;
    interestCalculationPeriodType?: number;
    interestRateFrequencyType?: number;
    interestRatePerPeriod?: number;
    interestRecognitionOnDisbursementDate?: boolean;
    interestType?: number;
    loanScheduleProcessingType?: string;
    loanTermFrequency?: number;
    loanTermFrequencyType?: number;
    loanType?: string;
    locale?: string;
    /**
     * Maximum allowed outstanding balance
     */
    maxOutstandingLoanBalance?: number;
    numberOfRepayments?: number;
    principal?: number;
    productId?: number;
    repaymentEvery?: number;
    repaymentFrequencyType?: number;
    repaymentsStartingFromDate?: string;
    submittedOnDate?: string;
    transactionProcessingStrategyCode?: string;
};

export type daysInYearCustomStrategy2 = 'FULL_LEAP_YEAR, FEB_29_PERIOD_ONLY';

export type PostLoansRequestChargeData = {
    amount?: number;
    chargeId?: number;
};

/**
 * PostLoansResponse
 */
export type PostLoansResponse = {
    clientId?: number;
    currency?: GetLoansLoanIdCurrency;
    loanId?: number;
    loanTermInDays?: number;
    officeId?: number;
    periods?: Array<PostLoansRepaymentSchedulePeriods>;
    resourceExternalId?: string;
    resourceId?: number;
    totalFeeChargesCharged?: number;
    totalInterestCharged?: number;
    totalOutstanding?: number;
    totalPenaltyChargesCharged?: number;
    totalPrincipalDisbursed?: number;
    totalPrincipalExpected?: number;
    totalPrincipalPaid?: number;
    totalRepayment?: number;
    totalRepaymentExpected?: number;
    totalWaived?: number;
    totalWrittenOff?: number;
};

/**
 * PostMakerCheckersResponse
 */
export type PostMakerCheckersResponse = {
    auditId?: number;
};

/**
 * PostNewShareApplicationResponse
 */
export type PostNewShareApplicationResponse = {
    resourceId?: number;
};

/**
 * PostNewTransferResponse
 */
export type PostNewTransferResponse = {
    resourceId?: number;
    savingsId?: number;
};

/**
 * PostOfficesRequest
 */
export type PostOfficesRequest = {
    dateFormat?: string;
    externalId?: string;
    locale?: string;
    name?: string;
    openingDate?: string;
    parentId?: number;
};

/**
 * PostOfficesResponse
 */
export type PostOfficesResponse = {
    officeId?: number;
    resourceId?: number;
};

/**
 * PostPaymentTypesResponse
 */
export type PostPaymentTypesResponse = {
    resourceId?: number;
};

export type PostProductsChargesSelected = {
    id?: number;
};

export type PostProductsMarketPricePeriods = {
    dateFormat?: string;
    fromDate?: string;
    locale?: string;
    shareValue?: number;
};

/**
 * PostProductsTypeRequest
 */
export type PostProductsTypeRequest = {
    accountingRule?: number;
    allowDividendCalculationForInactiveClients?: boolean;
    chargesSelected?: Array<PostProductsChargesSelected>;
    currencyCode?: string;
    description?: string;
    digitsAfterDecimal?: number;
    inMultiplesOf?: number;
    locale?: string;
    lockinPeriodFrequency?: number;
    lockinPeriodFrequencyType?: number;
    marketPricePeriods?: Array<PostProductsMarketPricePeriods>;
    maximumShares?: number;
    minimumActivePeriodForDividends?: number;
    minimumShares?: number;
    minimumactiveperiodFrequencyType?: number;
    name?: string;
    nominalShares?: number;
    sharesIssued?: number;
    shortName?: string;
    totalShares?: number;
    unitPrice?: number;
};

/**
 * PostProductsTypeResponse
 */
export type PostProductsTypeResponse = {
    resourceId?: number;
};

/**
 * PostProvisioningCriteriaRequest
 */
export type PostProvisioningCriteriaRequest = {
    criteriaName?: string;
    loanProducts?: Array<LoanProductData>;
    provisioningcriteria?: Array<ProvisioningCriteriaDefinitionData>;
};

/**
 * PostProvisioningCriteriaResponse
 */
export type PostProvisioningCriteriaResponse = {
    resourceId?: number;
};

/**
 * PostProvisioningEntriesResponse
 */
export type PostProvisioningEntriesResponse = {
    resourceId?: number;
};

export type PostRecurringChanges = {
    accountNumber?: string;
    bankNumber?: string;
    checkNumber?: string;
    receiptNumber?: string;
    routingCode?: string;
};

/**
 * PostRecurringDepositAccountsAccountIdRequest
 */
export type PostRecurringDepositAccountsAccountIdRequest = {
    [key: string]: unknown;
};

/**
 * PostRecurringDepositAccountsAccountIdResponse
 */
export type PostRecurringDepositAccountsAccountIdResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
    savingsId?: number;
};

/**
 * PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest
 */
export type PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest = {
    accountNumber?: string;
    bankNumber?: string;
    checkNumber?: string;
    dateFormat?: string;
    locale?: string;
    paymentTypeId?: number;
    receiptNumber?: string;
    routingCode?: string;
    transactionAmount?: number;
    transactionDate?: string;
};

/**
 * PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsResponse
 */
export type PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsResponse = {
    changes?: PostRecurringChanges;
    clientId?: number;
    officeId?: number;
    resourceId?: number;
    savingsId?: number;
};

/**
 * PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse
 */
export type PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse = {
    changes?: PostRecurringChanges;
    clientId?: number;
    officeId?: number;
    resourceId?: number;
    savingsId?: number;
};

/**
 * PostRecurringDepositAccountsRequest
 */
export type PostRecurringDepositAccountsRequest = {
    clientId?: number;
    dateFormat?: string;
    depositAmount?: number;
    depositPeriod?: number;
    depositPeriodFrequencyId?: number;
    isCalendarInherited?: boolean;
    locale?: string;
    mandatoryRecommendedDepositAmount?: number;
    productId?: number;
    recurringFrequency?: number;
    recurringFrequencyType?: number;
    submittedOnDate?: string;
};

/**
 * PostRecurringDepositAccountsResponse
 */
export type PostRecurringDepositAccountsResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
    savingsId?: number;
};

export type PostRecurringDepositProductsChartSlabs = {
    annualInterestRate?: number;
    description?: string;
    fromPeriod?: number;
    periodType?: number;
    toPeriod?: number;
};

export type PostRecurringDepositProductsCharts = {
    chartSlabs?: Array<PostRecurringDepositProductsChartSlabs>;
    dateFormat?: string;
    fromDate?: string;
    locale?: string;
};

/**
 * PostRecurringDepositProductsRequest
 */
export type PostRecurringDepositProductsRequest = {
    accountingRule?: number;
    charts?: Array<PostRecurringDepositProductsCharts>;
    currencyCode?: string;
    depositAmount?: number;
    description?: string;
    digitsAfterDecimal?: number;
    inMultiplesOf?: number;
    interestCalculationDaysInYearType?: number;
    interestCalculationType?: number;
    interestCompoundingPeriodType?: number;
    interestPostingPeriodType?: number;
    locale?: string;
    maxDepositAmount?: number;
    maxDepositTerm?: number;
    maxDepositTermTypeId?: number;
    minDepositAmount?: number;
    minDepositTerm?: number;
    minDepositTermTypeId?: number;
    name?: string;
    preClosurePenalApplicable?: boolean;
    preClosurePenalInterest?: number;
    preClosurePenalInterestOnTypeId?: number;
    recurringDepositFrequency?: number;
    recurringDepositFrequencyTypeId?: number;
    shortName?: string;
};

/**
 * PostRecurringDepositProductsResponse
 */
export type PostRecurringDepositProductsResponse = {
    resourceId?: number;
};

/**
 * PostReportMailingJobsRequest
 */
export type PostReportMailingJobsRequest = {
    dateFormat?: string;
    description?: string;
    emailMessage?: string;
    emailRecipients?: string;
    emailSubject?: string;
    isActive?: boolean;
    locale?: string;
    name?: string;
    recurrence?: string;
    startDateTime?: string;
    stretchyReportId?: number;
    stretchyReportParamMap?: string;
};

/**
 * PostReportMailingJobsResponse
 */
export type PostReportMailingJobsResponse = {
    resourceId?: number;
};

/**
 * PostReportsResponse
 */
export type PostReportsResponse = {
    resourceId?: number;
};

/**
 * PostRepostRequest
 */
export type PostRepostRequest = {
    description?: string;
    reportCategory?: string;
    reportName?: string;
    reportParameters?: Array<ReportParameterData>;
    reportSql?: string;
    reportSubType?: string;
    reportType?: string;
};

/**
 * PostResourceTypeResourceIdNotesResponse
 */
export type PostResourceTypeResourceIdNotesResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * PostRolesRequest
 */
export type PostRolesRequest = {
    description?: string;
    name?: string;
};

/**
 * PostRolesResponse
 */
export type PostRolesResponse = {
    resourceId?: number;
};

/**
 * PostRolesRoleIdResponse
 */
export type PostRolesRoleIdResponse = {
    resourceId?: number;
};

/**
 * runaccrualsRequest
 */
export type PostRunaccrualsRequest = {
    dateFormat?: string;
    locale?: string;
    /**
     * which specifies periodic accruals should happen till the given Date
     */
    tillDate?: string;
};

/**
 * PostSavingsAccountBulkReversalTransactionsRequest
 */
export type PostSavingsAccountBulkReversalTransactionsRequest = {
    isBulk?: string;
};

/**
 * PostSavingsAccountTransactionsRequest
 */
export type PostSavingsAccountTransactionsRequest = {
    dateFormat?: string;
    lienAllowed?: string;
    locale?: string;
    paymentTypeId?: number;
    reasonForBlock?: string;
    transactionAmount?: number;
    transactionDate?: string;
};

/**
 * PostSavingsAccountTransactionsResponse
 */
export type PostSavingsAccountTransactionsResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
    savingsId?: number;
};

export type PostSavingsAccountsAccountIdChanges = {
    [key: string]: unknown;
};

/**
 * PostSavingsAccountsAccountIdRequest
 */
export type PostSavingsAccountsAccountIdRequest = {
    activatedOnDate?: string;
    approvedOnDate?: string;
    dateFormat?: string;
    locale?: string;
};

/**
 * PostSavingsAccountsAccountIdResponse
 */
export type PostSavingsAccountsAccountIdResponse = {
    changes?: PostSavingsAccountsAccountIdChanges;
    clientId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * PostSavingsAccountsRequest
 */
export type PostSavingsAccountsRequest = {
    clientId?: number;
    dateFormat?: string;
    externalId?: string;
    locale?: string;
    productId?: number;
    submittedOnDate?: string;
};

/**
 * PostSavingsAccountsResponse
 */
export type PostSavingsAccountsResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
    savingsId?: number;
};

/**
 * PostSavingsAccountsSavingsAccountIdChargesRequest
 */
export type PostSavingsAccountsSavingsAccountIdChargesRequest = {
    amount?: number;
    chargeId?: number;
    dateFormat?: string;
    dueDate?: string;
    locale?: string;
};

/**
 * PostSavingsAccountsSavingsAccountIdChargesResponse
 */
export type PostSavingsAccountsSavingsAccountIdChargesResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
    savingsId?: number;
};

/**
 * PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest
 */
export type PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest = {
    amount?: number;
    dateFormat?: string;
    dueDate?: string;
    locale?: string;
};

/**
 * PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse
 */
export type PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
    savingsId?: number;
};

export type PostSavingsCharges = {
    id?: number;
};

/**
 * PostSavingsProductsRequest
 */
export type PostSavingsProductsRequest = {
    accountMappingForPayment?: string;
    accountingRule?: number;
    allowOverdraft?: boolean;
    charges?: Array<PostSavingsCharges>;
    currencyCode?: string;
    description?: string;
    digitsAfterDecimal?: number;
    enforceMinRequiredBalance?: boolean;
    inMultiplesOf?: number;
    interestCalculationDaysInYearType?: number;
    interestCalculationType?: number;
    interestCompoundingPeriodType?: number;
    interestPostingPeriodType?: number;
    isDormancyTrackingActive?: boolean;
    locale?: string;
    name?: string;
    nominalAnnualInterestRate?: number;
    shortName?: string;
    withHoldTax?: boolean;
    withdrawalFeeForTransfers?: boolean;
};

/**
 * PostSavingsProductsResponse
 */
export type PostSavingsProductsResponse = {
    resourceId?: number;
};

/**
 * PostSelfAuthenticationResponse
 */
export type PostSelfAuthenticationResponse = {
    authenticated?: boolean;
    base64EncodedAuthenticationKey?: string;
    clients?: Array<(number)>;
    isSelfServiceUser?: boolean;
    officeId?: number;
    officeName?: string;
    organisationalRole?: GetSelfUserDetailsOrganisationalRole;
    permissions?: Array<(string)>;
    roles?: Array<GetSelfUserDetailsRoles>;
    staffDisplayName?: string;
    staffId?: number;
    userId?: number;
    username?: string;
};

/**
 * PostSelfBeneficiariesTPTRequest
 */
export type PostSelfBeneficiariesTPTRequest = {
    accountNumber?: number;
    accountType?: number;
    locale?: string;
    name?: string;
    officeName?: string;
    transferLimit?: number;
};

/**
 * PostSelfBeneficiariesTPTResponse
 */
export type PostSelfBeneficiariesTPTResponse = {
    resourceId?: number;
};

export type PostSelfLoansData = {
    Activation_Date?: string;
    dateFormat?: string;
    locale?: string;
};

export type PostSelfLoansDatatables = {
    data?: PostSelfLoansData;
    registeredTableName?: string;
};

export type PostSelfLoansDisbursementData = {
    approvedPrincipal?: number;
    expectedDisbursementDate?: string;
    principal?: number;
};

export type PostSelfLoansLoanIdChanges = {
    closedOnDate?: string;
    dateFormat?: string;
    locale?: string;
    status?: PostSelfLoansLoanIdStatus;
    withdrawnOnDate?: string;
};

/**
 * PostSelfLoansLoanIdRequest
 */
export type PostSelfLoansLoanIdRequest = {
    dateFormat?: string;
    locale?: string;
    note?: string;
    withdrawnOnDate?: string;
};

/**
 * PostSelfLoansLoanIdResponse
 */
export type PostSelfLoansLoanIdResponse = {
    changes?: PostSelfLoansLoanIdChanges;
    clientId?: number;
    loanId?: number;
    officeId?: number;
    resourceId?: number;
};

export type PostSelfLoansLoanIdStatus = {
    active?: boolean;
    closed?: boolean;
    closedObligationsMet?: boolean;
    closedRescheduled?: boolean;
    closedWrittenOff?: boolean;
    code?: string;
    description?: string;
    id?: number;
    overpaid?: boolean;
    pendingApproval?: boolean;
    waitingForDisbursal?: boolean;
};

/**
 * PostSelfLoansRequest
 */
export type PostSelfLoansRequest = {
    amortizationType?: number;
    clientId?: number;
    datatables?: Array<PostSelfLoansDatatables>;
    dateFormat?: string;
    disbursementData?: Array<PostSelfLoansDisbursementData>;
    expectedDisbursementDate?: string;
    fixedEmiAmount?: number;
    interestCalculationPeriodType?: number;
    interestRatePerPeriod?: number;
    interestType?: number;
    linkAccountId?: number;
    loanTermFrequency?: number;
    loanTermFrequencyType?: number;
    loanType?: string;
    locale?: string;
    maxOutstandingLoanBalance?: number;
    numberOfRepayments?: number;
    principal?: number;
    productId?: number;
    repaymentEvery?: number;
    repaymentFrequencyType?: number;
    submittedOnDate?: string;
    transactionProcessingStrategyCode?: string;
};

/**
 * PostSelfLoansResponse
 */
export type PostSelfLoansResponse = {
    clientId?: number;
    loanId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * PostStandingInstructionsResponse
 */
export type PostStandingInstructionsResponse = {
    clientId?: number;
    resourceId?: number;
};

/**
 * PostSurveySurveyNameApptableIdRequest
 */
export type PostSurveySurveyNameApptableIdRequest = {
    date?: string;
    dateFormat?: string;
    locale?: string;
    ppi_businessoccupation_cd_q3_businessoccupation?: number;
    ppi_floortype_cd_q5_floortype?: number;
    ppi_fryingpans_cd_q10_fryingpans?: number;
    ppi_habitablerooms_cd_q4_habitablerooms?: number;
    ppi_highestschool_cd_q2_highestschool?: number;
    ppi_household_members_cd_q1_householdmembers?: number;
    ppi_irons_cd_q7_irons?: number;
    ppi_lightingsource_cd_q6_lightingsource?: number;
    ppi_mosquitonets_cd_q8_mosquitonets?: number;
    ppi_towels_cd_q9_towels?: number;
};

/**
 * PostSurveySurveyNameApptableIdResponse
 */
export type PostSurveySurveyNameApptableIdResponse = {
    clientId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * PostTaxesComponentsRequest
 */
export type PostTaxesComponentsRequest = {
    creditAccountType?: number;
    creditAcountId?: number;
    dateFormat?: string;
    locale?: string;
    name?: string;
    percentage?: number;
    startDate?: string;
};

/**
 * PostTaxesComponentsResponse
 */
export type PostTaxesComponentsResponse = {
    resourceId?: number;
};

/**
 * PostTaxesGroupRequest
 */
export type PostTaxesGroupRequest = {
    dateFormat?: string;
    locale?: string;
    name?: string;
    taxComponents?: Array<PostTaxesGroupTaxComponents>;
};

/**
 * PostTaxesGroupResponse
 */
export type PostTaxesGroupResponse = {
    resourceId?: number;
};

export type PostTaxesGroupTaxComponents = {
    startDate?: string;
    taxComponentId?: number;
};

/**
 * PostTellersRequest
 */
export type PostTellersRequest = {
    dateFormat?: string;
    description?: string;
    locale?: string;
    name?: string;
    officeId?: number;
    startDate?: string;
    status?: 'INVALID' | 'PENDING' | 'ACTIVE' | 'INACTIVE' | 'CLOSED';
};

/**
 * PostTellersResponse
 */
export type PostTellersResponse = {
    officeId?: number;
    resourceId?: number;
};

/**
 * PostTellersTellerIdCashiersCashierIdAllocateRequest
 */
export type PostTellersTellerIdCashiersCashierIdAllocateRequest = {
    currencyCode?: string;
    dateFormat?: string;
    locale?: string;
    txnAmount?: number;
    txnDate?: string;
    txnNote?: string;
};

/**
 * PostTellersTellerIdCashiersCashierIdAllocateResponse
 */
export type PostTellersTellerIdCashiersCashierIdAllocateResponse = {
    resourceId?: number;
    subResourceId?: number;
};

/**
 * PostTellersTellerIdCashiersCashierIdSettleRequest
 */
export type PostTellersTellerIdCashiersCashierIdSettleRequest = {
    currencyCode?: string;
    dateFormat?: string;
    locale?: string;
    txnAmount?: number;
    txnDate?: string;
    txnNote?: string;
};

/**
 * PostTellersTellerIdCashiersCashierIdSettleResponse
 */
export type PostTellersTellerIdCashiersCashierIdSettleResponse = {
    resourceId?: number;
    subResourceId?: number;
};

/**
 * PostTellersTellerIdCashiersRequest
 */
export type PostTellersTellerIdCashiersRequest = {
    dateFormat?: string;
    description?: string;
    endDate?: string;
    isFullDay?: boolean;
    locale?: string;
    staffId?: number;
    startDate?: string;
};

/**
 * PostTellersTellerIdCashiersResponse
 */
export type PostTellersTellerIdCashiersResponse = {
    resourceId?: number;
    subResourceId?: number;
};

/**
 * PostTemplatesRequest
 */
export type PostTemplatesRequest = {
    entity?: number;
    id?: number;
    mappers?: Array<TemplateMapper>;
    name?: string;
    text?: string;
    type?: number;
};

/**
 * PostTemplatesResponse
 */
export type PostTemplatesResponse = {
    resourceId?: number;
};

export type PostUpdateRescheduleLoanChanges = {
    approvedByUserId?: number;
    approvedOnDate?: string;
    dateFormat?: string;
    locale?: string;
};

/**
 * PostUpdateRescheduleLoansRequest
 */
export type PostUpdateRescheduleLoansRequest = {
    approvedOnDate?: string;
    dateFormat?: string;
    locale?: string;
    rejectedOnDate?: string;
};

/**
 * PostUpdateRescheduleLoansResponse
 */
export type PostUpdateRescheduleLoansResponse = {
    changes?: PostUpdateRescheduleLoanChanges;
    clientId?: number;
    loanId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * PostUsersRequest
 */
export type PostUsersRequest = {
    clients?: Array<(number)>;
    email?: string;
    firstname?: string;
    isSelfServiceUser?: boolean;
    lastname?: string;
    officeId?: number;
    password?: string;
    passwordNeverExpires?: boolean;
    repeatPassword?: string;
    roles?: Array<(number)>;
    sendPasswordToEmail?: boolean;
    staffId?: number;
    username?: string;
};

/**
 * PostUsersResponse
 */
export type PostUsersResponse = {
    officeId?: number;
    resourceId?: number;
};

export type PostalAddress = {
    addressLine1?: string;
    addressLine2?: string;
    city?: string;
    country?: string;
    postalCode?: string;
    stateProvince?: string;
};

export type ProcessingResultLookup = {
    id?: number;
    processingResult?: string;
};

export type ProductData = {
    [key: string]: unknown;
};

export type ProductMixRequest = {
    restrictedProducts?: Array<(number)>;
};

export type ProgressiveLoanInterestScheduleModel = {
    copy?: boolean;
    emirecalculationEnabled?: boolean;
    empty?: boolean;
    lastRepaymentPeriod: RepaymentPeriod;
    loanTermInDays?: number;
    maturityDate?: string;
    startDate?: string;
    totalCreditedPrincipal?: Money;
    totalDueInterest?: Money;
    totalDuePrincipal?: Money;
    totalOutstandingPrincipal?: Money;
    totalPaidInterest?: Money;
    totalPaidPrincipal?: Money;
};

export type Providers = {
    [key: string]: unknown;
};

export type ProvisionEntryRequest = {
    createjournalentries?: boolean;
    date?: string;
    dateFormat?: string;
    locale?: string;
};

export type ProvisioningCategoryData = {
    categoryDescription?: string;
    categoryName?: string;
    id?: number;
};

export type ProvisioningCriteriaData = {
    createdBy?: string;
    criteriaId?: number;
    criteriaName?: string;
    definitions?: Array<ProvisioningCriteriaDefinitionData>;
    glAccounts?: Array<GLAccountData>;
    loanProducts?: Array<LoanProductData>;
    selectedLoanProducts?: Array<LoanProductData>;
};

export type ProvisioningCriteriaDefinitionData = {
    categoryId?: number;
    categoryName?: string;
    expenseAccount?: number;
    expenseCode?: string;
    expenseName?: string;
    id?: number;
    liabilityAccount?: number;
    liabilityCode?: string;
    liabilityName?: string;
    maxAge?: number;
    minAge?: number;
    provisioningPercentage?: number;
};

export type ProvisioningEntryData = {
    createdById?: number;
    createdDate?: string;
    createdUser?: string;
    id?: number;
    journalEntry?: boolean;
    modifiedById?: number;
    modifiedUser?: string;
    provisioningEntries?: Array<LoanProductProvisioningEntryData>;
    reservedAmount?: number;
};

/**
 * PutAccountNumberFormatsRequest
 */
export type PutAccountNumberFormatsRequest = {
    prefixType?: number;
};

/**
 * PutAccountNumberFormatsResponse
 */
export type PutAccountNumberFormatsResponse = {
    changes?: PutAccountNumberFormatschangesSwagger;
    resourceId?: number;
};

export type PutAccountNumberFormatschangesSwagger = {
    prefixType?: number;
};

/**
 * PutAccountingRulesResponse
 */
export type PutAccountingRulesResponse = {
    changes?: PutAccountingRulesResponsechangesSwagger;
    resourceId?: number;
};

export type PutAccountingRulesResponsechangesSwagger = {
    name?: string;
};

export type PutAccountsChanges = {
    applicationDate?: string;
    dateFormat?: string;
    locale?: string;
    requestedShares?: number;
};

/**
 * PutAccountsTypeAccountIdRequest
 */
export type PutAccountsTypeAccountIdRequest = {
    applicationDate?: string;
    dateFormat?: string;
    locale?: string;
    requestedShares?: number;
};

/**
 * PutAccountsTypeAccountIdResponse
 */
export type PutAccountsTypeAccountIdResponse = {
    changes?: PutAccountsChanges;
    resourceId?: number;
};

/**
 * PutCentersCenterIdRequest
 */
export type PutCentersCenterIdRequest = {
    name?: string;
};

/**
 * PutCentersCenterIdResponse
 */
export type PutCentersCenterIdResponse = {
    changes?: PutCentersChanges;
    groupId?: number;
    officeId?: number;
    resourceId?: number;
};

export type PutCentersChanges = {
    name?: string;
};

/**
 * PutChargeTransactionChangesRequest
 */
export type PutChargeTransactionChangesRequest = {
    id?: number;
    loanId?: number;
};

/**
 * PutChargeTransactionChangesResponse
 */
export type PutChargeTransactionChangesResponse = {
    changes?: PutChargeTransactionChangesResponseChanges;
    clientId?: number;
    loanId?: number;
    officeId?: number;
    resourceExternalId?: string;
    resourceId?: number;
    subResourceExternalId?: string;
    subResourceId?: number;
};

export type PutChargeTransactionChangesResponseChanges = {
    amount?: number;
    date?: string;
    externalId?: string;
    feeChargesPortion?: number;
    id?: number;
    interestPortion?: number;
    outstandingLoanBalance?: number;
    penaltyChargesPortion?: number;
    principalPortion?: number;
};

/**
 * PutChargesChargeIdRequest
 */
export type PutChargesChargeIdRequest = {
    active?: boolean;
    amount?: number;
    chargeAppliesTo?: number;
    chargeCalculationType?: number;
    chargePaymentMode?: number;
    chargeTimeType?: number;
    countFrequencyType?: number;
    currencyCode?: string;
    enableFreeWithdrawalCharge?: boolean;
    enablePaymentType?: boolean;
    feeFrequency?: string;
    feeInterval?: number;
    feeOnMonthDay?: string;
    freeWithdrawalFrequency?: number;
    locale?: string;
    maxCap?: number;
    minCap?: number;
    monthDayFormat?: string;
    name?: string;
    paymentTypeId?: number;
    penalty?: boolean;
    restartCountFrequency?: number;
    taxGroupId?: number;
};

/**
 * PutChargesChargeIdResponse
 */
export type PutChargesChargeIdResponse = {
    changes?: PutChargesChargeIdRequest;
    resourceId?: number;
};

/**
 * PutClientClientIdAddressesResponse
 */
export type PutClientClientIdAddressesResponse = {
    resourceId?: number;
};

/**
 * PutClientCollateralResponse
 */
export type PutClientCollateralResponse = {
    changes?: UpdateClientCollateralRequest;
    clientId?: number;
    resourceId?: number;
};

/**
 * PutClientsClientIdIdentifiersIdentifierIdResponse
 */
export type PutClientsClientIdIdentifiersIdentifierIdResponse = {
    changes?: ClientIdentifierRequest;
    clientId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * PutClientsClientIdRequest
 */
export type PutClientsClientIdRequest = {
    externalId?: string;
    resourceExternalId?: string;
};

/**
 * PutClientsClientIdResponse
 */
export type PutClientsClientIdResponse = {
    changes?: PutClientsClientIdRequest;
    clientId?: number;
    officeId?: number;
    resourceExternalId?: string;
    resourceId?: number;
};

/**
 * PutCodeValueDataResponse
 */
export type PutCodeValueDataResponse = {
    changes?: PutCodeValuechangesSwagger;
    resourceId?: number;
};

export type PutCodeValuechangesSwagger = {
    description?: string;
    name?: string;
    position?: number;
};

/**
 * PutCodeValuesDataRequest
 */
export type PutCodeValuesDataRequest = {
    description?: string;
    isActive?: boolean;
    name?: string;
    position?: number;
};

export type PutCodesApichangesSwagger = {
    name?: string;
};

/**
 * PutCodesRequest
 */
export type PutCodesRequest = {
    name?: string;
};

/**
 * PutCodesResponse
 */
export type PutCodesResponse = {
    changes?: PutCodesApichangesSwagger;
    resourceId?: number;
};

/**
 * PutCollateralProductResponse
 */
export type PutCollateralProductResponse = {
    changes?: CollateralProductRequest;
    resourceId?: number;
};

/**
 * PutDataTablesAppTableIdDatatableIdResponse
 */
export type PutDataTablesAppTableIdDatatableIdResponse = {
    changes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    clientId?: number;
    loanId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * PutDataTablesAppTableIdResponse
 */
export type PutDataTablesAppTableIdResponse = {
    changes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    clientId?: number;
    loanId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * PutDataTablesRequest
 */
export type PutDataTablesRequest = {
    addColumns?: Array<PutDataTablesRequestAddColumns>;
    apptableName?: string;
    changeColumns?: Array<PutDataTablesRequestChangeColumns>;
    dropColumns?: Array<PutDataTablesRequestDropColumns>;
};

export type PutDataTablesRequestAddColumns = {
    code?: string;
    /**
     * Defaults to false
     */
    indexed?: boolean;
    mandatory?: boolean;
    name?: string;
    type?: string;
    unique?: boolean;
};

export type PutDataTablesRequestChangeColumns = {
    code?: string;
    /**
     * Defaults to false
     */
    indexed?: boolean;
    mandatory?: boolean;
    name?: string;
    newCode?: string;
    newName?: string;
    unique?: boolean;
};

export type PutDataTablesRequestDropColumns = {
    name?: string;
};

/**
 * PutDataTablesResponse
 */
export type PutDataTablesResponse = {
    resourceIdentifier?: string;
};

/**
 * PutDelinquencyBucketResponse
 */
export type PutDelinquencyBucketResponse = {
    resourceId?: number;
};

/**
 * PutDelinquencyRangeResponse
 */
export type PutDelinquencyRangeResponse = {
    changes?: DelinquencyRangeRequest;
    resourceId?: number;
};

/**
 * PutEntityTypeEntityIdDocumentsResponse
 */
export type PutEntityTypeEntityIdDocumentsResponse = {
    changes?: PutEntityTypeEntityIdDocumentsResponseChangesSwagger;
    resourceId?: number;
    resourceIdentifier?: string;
};

export type PutEntityTypeEntityIdDocumentsResponseChangesSwagger = {
    [key: string]: unknown;
};

/**
 * PutExternalAssetOwnerLoanProductAttributeRequest
 */
export type PutExternalAssetOwnerLoanProductAttributeRequest = {
    attributeKey?: string;
    attributeValue?: string;
};

/**
 * PutExternalServiceRequest
 */
export type PutExternalServiceRequest = {
    password?: string;
    username?: string;
};

/**
 * PutFinancialActivityAccountsResponse
 */
export type PutFinancialActivityAccountsResponse = {
    comments?: PutFinancialActivityAccountscommentsSwagger;
    resourceId?: number;
};

export type PutFinancialActivityAccountscommentsSwagger = {
    glAccountId?: number;
};

/**
 * PutFixedDepositAccountsAccountIdRequest
 */
export type PutFixedDepositAccountsAccountIdRequest = {
    depositAmount?: number;
    locale?: string;
};

/**
 * PutFixedDepositAccountsAccountIdResponse
 */
export type PutFixedDepositAccountsAccountIdResponse = {
    changes?: PutFixedDepositAccountsChanges;
    clientId?: number;
    officeId?: number;
    resourceId?: number;
    savingsId?: number;
};

export type PutFixedDepositAccountsChanges = {
    depositAmount?: number;
    locale?: string;
};

export type PutFixedDepositProductsChanges = {
    description?: string;
    minDepositTerm?: number;
};

/**
 * PutFixedDepositProductsProductIdRequest
 */
export type PutFixedDepositProductsProductIdRequest = {
    description?: string;
    locale?: string;
    minDepositTerm?: number;
    minDepositTermTypeId?: number;
};

/**
 * PutFixedDepositProductsProductIdResponse
 */
export type PutFixedDepositProductsProductIdResponse = {
    changes?: PutFixedDepositProductsChanges;
    resourceId?: number;
};

export type PutFloatingRatesChanges = {
    ratePeriods?: Array<PostFloatingRatesRatePeriods>;
};

/**
 * PutFloatingRatesFloatingRateIdResponse
 */
export type PutFloatingRatesFloatingRateIdResponse = {
    changes?: PutFloatingRatesChanges;
    resourceId?: number;
};

/**
 * PutFundsFundIdRequest
 */
export type PutFundsFundIdRequest = {
    name?: string;
};

/**
 * PutFundsFundIdResponse
 */
export type PutFundsFundIdResponse = {
    changes?: PutFundsFundIdRequest;
    resourceId?: number;
};

/**
 * PutGLAccountsRequest
 */
export type PutGLAccountsRequest = {
    description?: string;
    disabled?: boolean;
    glCode?: string;
    manualEntriesAllowed?: boolean;
    name?: string;
    parentId?: number;
    tagId?: number;
    type?: number;
    usage?: number;
};

/**
 * PutGLAccountsResponse
 */
export type PutGLAccountsResponse = {
    changes?: PutGLAccountsResponsechangesSwagger;
    resourceId?: number;
};

export type PutGLAccountsResponsechangesSwagger = {
    name?: string;
};

/**
 * PutGlClosuresRequest
 */
export type PutGlClosuresRequest = {
    comments?: string;
};

/**
 * PutGlClosuresResponse
 */
export type PutGlClosuresResponse = {
    comments?: string;
    officeId?: number;
    resourceId?: number;
};

/**
 * PutGlobalConfigurationsRequest
 */
export type PutGlobalConfigurationsRequest = {
    dateFormat?: string;
    dateValue?: string;
    enabled?: boolean;
    locale?: string;
    stringValue?: string;
    value?: number;
};

/**
 * PutGlobalConfigurationsResponse
 */
export type PutGlobalConfigurationsResponse = {
    changes?: PutGlobalConfigurationsResponsechangesSwagger;
    resourceId?: number;
};

export type PutGlobalConfigurationsResponsechangesSwagger = {
    dateValue?: string;
    enabled?: boolean;
    stringValue?: string;
    value?: number;
};

export type PutGroupsGroupIdChanges = {
    name?: string;
};

/**
 * PutGroupsGroupIdRequest
 */
export type PutGroupsGroupIdRequest = {
    name?: string;
};

/**
 * PutGroupsGroupIdResponse
 */
export type PutGroupsGroupIdResponse = {
    changes?: PutGroupsGroupIdChanges;
    groupId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * PutHolidaysHolidayIdRequest
 */
export type PutHolidaysHolidayIdRequest = {
    description?: string;
    name?: string;
};

/**
 * PutHolidaysHolidayIdResponse
 */
export type PutHolidaysHolidayIdResponse = {
    changes?: PutHolidaysHolidayIdResponseChanges;
    resourceId?: number;
};

export type PutHolidaysHolidayIdResponseChanges = {
    description?: string;
    name?: string;
};

/**
 * PutHookRequest
 */
export type PutHookRequest = {
    config?: Array<Field>;
    displayName?: string;
    events?: Array<Event>;
    isActive?: boolean;
    name?: string;
    templateId?: number;
};

/**
 * PutHookResponse
 */
export type PutHookResponse = {
    changes?: PutHookResponseChangesSwagger;
    resourceId?: number;
};

export type PutHookResponseChangesSwagger = {
    config?: Array<Field>;
    displayName?: string;
    events?: Array<Event>;
};

/**
 * PutInterestRateChartsChartIdChartSlabsChartSlabIdRequest
 */
export type PutInterestRateChartsChartIdChartSlabsChartSlabIdRequest = {
    annualInterestRate?: number;
    description?: string;
};

/**
 * PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse
 */
export type PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse = {
    changes?: PutInterestRateChartsChartIdChartSlabsChartSlabIdRequest;
    resourceId?: number;
};

/**
 * PutInterestRateChartsChartIdRequest
 */
export type PutInterestRateChartsChartIdRequest = {
    description?: string;
    name?: string;
};

/**
 * PutInterestRateChartsChartIdResponse
 */
export type PutInterestRateChartsChartIdResponse = {
    resourceId?: number;
};

/**
 * PutJobsJobsIDRequest
 */
export type PutJobsJobIDRequest = {
    active?: boolean;
    cronExpression?: string;
    displayName?: string;
};

export type PutLoanChanges = {
    locale?: string;
    principal?: number;
};

/**
 * PutLoanProductsProductIdRequest
 */
export type PutLoanProductsProductIdRequest = {
    accountMovesOutOfNPAOnlyOnArrearsCompletion?: boolean;
    accountingRule?: number;
    allowApprovedDisbursedAmountsOverApplied?: boolean;
    allowAttributeOverrides?: AllowAttributeOverrides;
    allowCompoundingOnEod?: boolean;
    allowPartialPeriodInterestCalcualtion?: boolean;
    allowVariableInstallments?: boolean;
    amortizationType?: number;
    buyDownExpenseAccountId?: number;
    buyDownFeeCalculationType?: 'FLAT';
    buyDownFeeIncomeType?: 'FEE' | 'INTEREST';
    buyDownFeeStrategy?: 'EQUAL_AMORTIZATION';
    canDefineInstallmentAmount?: boolean;
    canUseForTopup?: boolean;
    capitalizedIncomeCalculationType?: 'FLAT';
    capitalizedIncomeStrategy?: 'EQUAL_AMORTIZATION';
    capitalizedIncomeType?: 'FEE' | 'INTEREST';
    chargeOffBehaviour?: string;
    chargeOffExpenseAccountId?: number;
    chargeOffFraudExpenseAccountId?: number;
    chargeOffReasonToExpenseAccountMappings?: Array<PostChargeOffReasonToExpenseAccountMappings>;
    charges?: Array<LoanProductChargeData>;
    closeDate?: string;
    creditAllocation?: Array<CreditAllocationData>;
    currencyCode?: string;
    dateFormat?: string;
    daysInMonthType?: number;
    daysInYearCustomStrategy?: string;
    daysInYearType?: number;
    deferredIncomeLiabilityAccountId?: number;
    delinquencyBucketId?: number;
    description?: string;
    digitsAfterDecimal?: number;
    disallowExpectedDisbursements?: boolean;
    disallowInterestCalculationOnPastDue?: boolean;
    disbursedAmountPercentageForDownPayment?: number;
    dueDaysForRepaymentEvent?: number;
    enableAccrualActivityPosting?: boolean;
    enableAutoRepaymentForDownPayment?: boolean;
    enableBuyDownFee?: boolean;
    enableDownPayment?: boolean;
    enableIncomeCapitalization?: boolean;
    enableInstallmentLevelDelinquency?: boolean;
    feeToIncomeAccountMappings?: Array<LoanProductChargeToGLAccountMapper>;
    fixedLength?: number;
    fixedPrincipalPercentagePerInstallment?: number;
    fundId?: number;
    fundSourceAccountId?: number;
    goodwillCreditAccountId?: number;
    graceOnArrearsAgeing?: number;
    graceOnInterestPayment?: number;
    graceOnPrincipalPayment?: number;
    holdGuaranteeFunds?: boolean;
    inArrearsTolerance?: number;
    inMultiplesOf?: number;
    includeInBorrowerCycle?: boolean;
    incomeFromBuyDownAccountId?: number;
    incomeFromCapitalizationAccountId?: number;
    incomeFromChargeOffFeesAccountId?: number;
    incomeFromChargeOffInterestAccountId?: number;
    incomeFromChargeOffPenaltyAccountId?: number;
    incomeFromFeeAccountId?: number;
    incomeFromGoodwillCreditFeesAccountId?: number;
    incomeFromGoodwillCreditInterestAccountId?: number;
    incomeFromGoodwillCreditPenaltyAccountId?: number;
    incomeFromPenaltyAccountId?: number;
    incomeFromRecoveryAccountId?: number;
    installmentAmountInMultiplesOf?: number;
    interestCalculationPeriodType?: number;
    interestOnLoanAccountId?: number;
    interestRateFrequencyType?: number;
    interestRatePerPeriod?: number;
    interestRateVariationsForBorrowerCycle?: Array<(number)>;
    interestRecalculationCompoundingMethod?: number;
    interestRecognitionOnDisbursementDate?: boolean;
    interestType?: number;
    isArrearsBasedOnOriginalSchedule?: boolean;
    isCompoundingToBePostedAsTransaction?: boolean;
    isEqualAmortization?: boolean;
    isInterestRecalculationEnabled?: boolean;
    isLinkedToFloatingInterestRates?: boolean;
    loanPortfolioAccountId?: number;
    loanScheduleProcessingType?: string;
    loanScheduleType?: string;
    locale?: string;
    maxInterestRatePerPeriod?: number;
    maxNumberOfRepayments?: number;
    maxPrincipal?: number;
    maxTrancheCount?: number;
    merchantBuyDownFee?: boolean;
    minInterestRatePerPeriod?: number;
    minNumberOfRepayments?: number;
    minPrincipal?: number;
    minimumDaysBetweenDisbursalAndFirstRepayment?: number;
    multiDisburseLoan?: boolean;
    name?: string;
    numberOfRepaymentVariationsForBorrowerCycle?: Array<(number)>;
    numberOfRepayments?: number;
    outstandingLoanBalance?: number;
    overAppliedCalculationType?: string;
    overAppliedNumber?: number;
    overDueDaysForRepaymentEvent?: number;
    overdueDaysForNPA?: number;
    overpaymentLiabilityAccountId?: number;
    paymentAllocation?: Array<AdvancedPaymentData>;
    paymentChannelToFundSourceMappings?: Array<GetLoanPaymentChannelToFundSourceMappings>;
    penaltyToIncomeAccountMappings?: Array<LoanProductChargeToGLAccountMapper>;
    preClosureInterestCalculationStrategy?: number;
    principal?: number;
    principalThresholdForLastInstallment?: number;
    principalVariationsForBorrowerCycle?: Array<(number)>;
    rates?: Array<RateData>;
    recalculationCompoundingFrequencyInterval?: number;
    recalculationCompoundingFrequencyOnDayType?: number;
    recalculationCompoundingFrequencyType?: number;
    recalculationRestFrequencyInterval?: number;
    recalculationRestFrequencyType?: number;
    receivableFeeAccountId?: number;
    receivableInterestAccountId?: number;
    receivablePenaltyAccountId?: number;
    repaymentEvery?: number;
    repaymentFrequencyType?: number;
    repaymentStartDateType?: number;
    rescheduleStrategyMethod?: number;
    shortName?: string;
    startDate?: string;
    supportedInterestRefundTypes?: Array<(string)>;
    transactionProcessingStrategyCode?: string;
    transfersInSuspenseAccountId?: number;
    useBorrowerCycle?: boolean;
    writeOffAccountId?: number;
};

/**
 * PutLoanProductsProductIdResponse
 */
export type PutLoanProductsProductIdResponse = {
    changes?: PutLoanChanges;
    resourceId?: number;
};

/**
 * PutLoansApprovedAmountChanges
 */
export type PutLoansApprovedAmountChanges = {
    locale?: string;
    newApprovedAmount?: number;
    oldApprovedAmount?: number;
};

/**
 * PutLoansApprovedAmountRequest
 */
export type PutLoansApprovedAmountRequest = {
    amount?: number;
    locale?: string;
};

/**
 * PutLoansApprovedAmountResponse
 */
export type PutLoansApprovedAmountResponse = {
    changes?: PutLoansApprovedAmountChanges;
    clientId?: number;
    groupId?: number;
    officeId?: number;
    resourceExternalId?: string;
    resourceId?: number;
};

/**
 * PutLoansAvailableDisbursementAmountChanges
 */
export type PutLoansAvailableDisbursementAmountChanges = {
    locale?: string;
    newApprovedAmount?: number;
    newAvailableDisbursementAmount?: number;
    oldApprovedAmount?: number;
    oldAvailableDisbursementAmount?: number;
};

/**
 * PutLoansAvailableDisbursementAmountRequest
 */
export type PutLoansAvailableDisbursementAmountRequest = {
    amount?: number;
    locale?: string;
};

/**
 * PutLoansAvailableDisbursementAmountResponse
 */
export type PutLoansAvailableDisbursementAmountResponse = {
    changes?: PutLoansAvailableDisbursementAmountChanges;
    clientId?: number;
    groupId?: number;
    officeId?: number;
    resourceExternalId?: string;
    resourceId?: number;
};

export type PutLoansLoanIdChanges = {
    fraud?: boolean;
    locale?: string;
    principal?: number;
};

/**
 *  PutLoansLoanIdChargesChargeIdRequest
 */
export type PutLoansLoanIdChargesChargeIdRequest = {
    amount?: number;
    dateFormat?: string;
    dueDate?: string;
    locale?: string;
};

/**
 * PutLoansLoanIdChargesChargeIdResponse
 */
export type PutLoansLoanIdChargesChargeIdResponse = {
    changes?: PutLoansLoanIdChargesChargeIdRequest;
    clientId?: number;
    loanId?: number;
    officeId?: number;
    resourceExternalId?: string;
    resourceId?: number;
};

export type PutLoansLoanIdCollateral = {
    clientCollateralId?: number;
    quantity?: number;
};

/**
 * PutLoansLoanIdCollateralsCollateralIdResponse
 */
export type PutLoansLoanIdCollateralsCollateralIdResponse = {
    changes?: LoansLoanIdCollateralsRequest;
    loanId?: number;
    resourceId?: number;
};

export type PutLoansLoanIdDisbursementData = {
    dateFormat?: string;
    expectedDisbursementDate?: string;
    interestType?: number;
    isEqualAmortization?: boolean;
    locale?: string;
    netDisbursalAmount?: number;
    principal?: number;
};

/**
 * PutLoansLoanIdRequest
 */
export type PutLoansLoanIdRequest = {
    amortizationType?: number;
    charges?: Array<PutLoansLoanIdChanges>;
    clientId?: number;
    collateral?: Array<PutLoansLoanIdCollateral>;
    createStandingInstructionAtDisbursement?: boolean;
    dateFormat?: string;
    disbursedAmountPercentageForDownPayment?: number;
    disbursementData?: Array<PutLoansLoanIdDisbursementData>;
    enableAutoRepaymentForDownPayment?: boolean;
    enableDownPayment?: boolean;
    enableInstallmentLevelDelinquency?: boolean;
    expectedDisbursementDate?: string;
    fixedLength?: number;
    fixedPrincipalPercentagePerInstallment?: number;
    fraud?: boolean;
    graceOnArrearsAgeing?: number;
    interestCalculationPeriodType?: number;
    interestChargedFromDate?: string;
    interestRateFrequencyType?: number;
    interestRatePerPeriod?: number;
    interestRecognitionOnDisbursementDate?: boolean;
    interestType?: number;
    isEqualAmortization?: boolean;
    isTopup?: boolean;
    linkAccountId?: number;
    loanIdToClose?: number;
    loanScheduleProcessingType?: string;
    loanTermFrequency?: number;
    loanTermFrequencyType?: number;
    loanType?: string;
    locale?: string;
    maxOutstandingLoanBalance?: number;
    numberOfRepayments?: number;
    principal?: number;
    productId?: number;
    repaymentEvery?: number;
    repaymentFrequencyDayOfWeekType?: number;
    repaymentFrequencyNthDayType?: number;
    repaymentFrequencyType?: number;
    repaymentsStartingFromDate?: string;
    submittedOnDate?: string;
    transactionProcessingStrategyCode?: string;
};

/**
 * PutLoansLoanIdResponse
 */
export type PutLoansLoanIdResponse = {
    changes?: PutLoansLoanIdChanges;
    clientId?: number;
    loanId?: number;
    officeId?: number;
    resourceExternalId?: string;
    resourceId?: number;
};

export type PutNotesChanges = {
    note?: string;
};

/**
 * PutOfficesOfficeIdRequest
 */
export type PutOfficesOfficeIdRequest = {
    dateFormat?: string;
    externalId?: string;
    locale?: string;
    name?: string;
    openingDate?: string;
};

/**
 * PutOfficesOfficeIdResponse
 */
export type PutOfficesOfficeIdResponse = {
    changes?: PutOfficesOfficeIdResponseChanges;
    officeId?: number;
    resourceId?: number;
};

export type PutOfficesOfficeIdResponseChanges = {
    name?: string;
};

/**
 * PutPasswordPreferencesTemplateRequest
 */
export type PutPasswordPreferencesTemplateRequest = {
    validationPolicyId?: number;
};

/**
 * PutPaymentTypesPaymentTypeIdRequest
 */
export type PutPaymentTypesPaymentTypeIdRequest = {
    codeName?: string;
    description?: string;
    isCashPayment?: boolean;
    isSystemDefined?: boolean;
    name?: string;
    position?: number;
};

/**
 * PutPaymentTypesPaymentTypeIdResponse
 */
export type PutPaymentTypesPaymentTypeIdResponse = {
    resourceId?: number;
};

/**
 * PutPermissionsRequest
 */
export type PutPermissionsRequest = {
    permissions?: {
        [key: string]: (boolean);
    };
};

export type PutProductsChanges = {
    description?: string;
    locale?: string;
    unitPrice?: number;
};

/**
 * PutProductsTypeProductIdRequest
 */
export type PutProductsTypeProductIdRequest = {
    description?: string;
    locale?: string;
    unitPrice?: number;
};

/**
 * PutProductsTypeProductIdResponse
 */
export type PutProductsTypeProductIdResponse = {
    changes?: PutProductsChanges;
    resourceId?: number;
};

/**
 * PutProvisioningCriteriaRequest
 */
export type PutProvisioningCriteriaRequest = {
    criteriaName?: string;
    loanProducts?: Array<LoanProductData>;
    provisioningcriteria?: Array<ProvisioningCriteriaDefinitionData>;
};

/**
 * PutProvisioningCriteriaResponse
 */
export type PutProvisioningCriteriaResponse = {
    changes?: PutProvisioningCriteriaResponseChanges;
    resourceId?: number;
};

export type PutProvisioningCriteriaResponseChanges = {
    criteriaName?: string;
};

/**
 * PutProvisioningEntriesRequest
 */
export type PutProvisioningEntriesRequest = {
    command?: string;
};

/**
 * PutProvisioningEntriesResponse
 */
export type PutProvisioningEntriesResponse = {
    resourceId?: number;
};

/**
 * PutRecurringDepositAccountsAccountIdRequest
 */
export type PutRecurringDepositAccountsAccountIdRequest = {
    depositAmount?: number;
    locale?: string;
};

/**
 * PutRecurringDepositAccountsAccountIdResponse
 */
export type PutRecurringDepositAccountsAccountIdResponse = {
    changes?: PutRecurringDepositAccountsChanges;
    clientId?: number;
    officeId?: number;
    resourceId?: number;
    savingsId?: number;
};

export type PutRecurringDepositAccountsChanges = {
    depositAmount?: number;
    locale?: string;
};

export type PutRecurringDepositProductsChanges = {
    description?: string;
    minDepositTerm?: number;
};

/**
 * PutRecurringDepositProductsRequest
 */
export type PutRecurringDepositProductsRequest = {
    description?: string;
    locale?: string;
    minDepositTerm?: number;
    minDepositTermTypeId?: number;
};

/**
 * PutRecurringDepositProductsResponse
 */
export type PutRecurringDepositProductsResponse = {
    changes?: PutRecurringDepositProductsChanges;
    resourceId?: number;
};

/**
 * PutReportMailingJobsRequest
 */
export type PutReportMailingJobsRequest = {
    dateFormat?: string;
    locale?: string;
    startDateTime?: string;
};

/**
 * PutReportMailingJobsResponse
 */
export type PutReportMailingJobsResponse = {
    changes?: PutReportMailingJobsResponseChanges;
    resourceId?: number;
};

export type PutReportMailingJobsResponseChanges = {
    startDateTime?: string;
};

/**
 * PutReportRequest
 */
export type PutReportRequest = {
    reportName?: string;
    reportParameters?: Array<ReportParameterData>;
};

/**
 * PutReportResponse
 */
export type PutReportResponse = {
    changes?: PutReportResponseChanges;
    resourceId?: number;
};

export type PutReportResponseChanges = {
    reportName?: string;
    reportParameters?: Array<ReportParameterData>;
};

/**
 * PutResourceTypeResourceIdNotesNoteIdResponse
 */
export type PutResourceTypeResourceIdNotesNoteIdResponse = {
    changes?: PutNotesChanges;
    clientId?: number;
    officeId?: number;
    resourceId?: number;
};

/**
 * PutRolesRoleIdPermissionsRequest
 */
export type PutRolesRoleIdPermissionsRequest = {
    permissions?: {
        [key: string]: (boolean);
    };
};

/**
 * PutRolesRoleIdPermissionsResponse
 */
export type PutRolesRoleIdPermissionsResponse = {
    changes?: PutRolesRoleIdPermissionsResponsePermissionsChanges;
    resourceId?: number;
};

export type PutRolesRoleIdPermissionsResponsePermissionsChanges = {
    permissions?: {
        [key: string]: (boolean);
    };
};

/**
 * PutRolesRoleIdRequest
 */
export type PutRolesRoleIdRequest = {
    description?: string;
};

/**
 * PutRolesRoleIdResponse
 */
export type PutRolesRoleIdResponse = {
    changes?: PutRolesRoleIdResponseChanges;
    resourceId?: number;
};

export type PutRolesRoleIdResponseChanges = {
    description?: string;
};

/**
 * PutSavingsAccountsAccountIdRequest
 */
export type PutSavingsAccountsAccountIdRequest = {
    locale?: string;
    nominalAnnualInterestRate?: number;
};

/**
 * PutSavingsAccountsAccountIdResponse
 */
export type PutSavingsAccountsAccountIdResponse = {
    changes?: PutSavingsAccountsChanges;
    clientId?: number;
    officeId?: number;
    resourceId?: number;
    savingsId?: number;
};

export type PutSavingsAccountsChanges = {
    locale?: string;
    nominalAnnualInterestRate?: number;
};

/**
 * PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest
 */
export type PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest = {
    amount?: number;
    dateFormat?: string;
    dueDate?: string;
    locale?: string;
};

/**
 * PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse
 */
export type PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse = {
    changes?: PutSavingsChanges;
    clientId?: number;
    officeId?: number;
    resourceId?: number;
    savingsId?: number;
};

export type PutSavingsChanges = {
    description?: string;
    interestRate?: number;
    locale?: string;
};

/**
 * PutSavingsProductsProductIdRequest
 */
export type PutSavingsProductsProductIdRequest = {
    description?: string;
    interestRate?: number;
    locale?: string;
};

/**
 * PutSavingsProductsProductIdResponse
 */
export type PutSavingsProductsProductIdResponse = {
    changes?: PutSavingsChanges;
    resourceId?: number;
};

export type PutSelfBeneficiariesChanges = {
    name?: string;
    transferLimit?: number;
};

/**
 * PutSelfBeneficiariesTPTBeneficiaryIdRequest
 */
export type PutSelfBeneficiariesTPTBeneficiaryIdRequest = {
    name?: string;
    transferLimit?: number;
};

/**
 * PutSelfBeneficiariesTPTBeneficiaryIdResponse
 */
export type PutSelfBeneficiariesTPTBeneficiaryIdResponse = {
    changes?: PutSelfBeneficiariesChanges;
    resourceId?: number;
};

export type PutSelfLoansChanges = {
    locale?: string;
    principal?: number;
};

/**
 * PutSelfLoansLoanIdRequest
 */
export type PutSelfLoansLoanIdRequest = {
    amortizationType?: number;
    dateFormat?: string;
    expectedDisbursementDate?: string;
    interestCalculationPeriodType?: number;
    interestRatePerPeriod?: number;
    interestType?: number;
    loanTermFrequency?: number;
    loanTermFrequencyType?: number;
    locale?: string;
    numberOfRepayments?: number;
    principal?: number;
    productId?: number;
    repaymentEvery?: number;
    repaymentFrequencyType?: number;
    transactionProcessingStrategyCode?: string;
};

/**
 * PutSelfLoansLoanIdResponse
 */
export type PutSelfLoansLoanIdResponse = {
    changes?: PutSelfLoansChanges;
    clientId?: number;
    loanId?: number;
    officeId?: number;
    resourceId?: number;
};

export type PutSelfUserChanges = {
    passwordEncoded?: string;
};

/**
 * PutSelfUserRequest
 */
export type PutSelfUserRequest = {
    password?: string;
    repeatPassword?: string;
};

/**
 * PutSelfUserResponse
 */
export type PutSelfUserResponse = {
    changes?: PutSelfUserChanges;
    officeId?: number;
    resourceId?: number;
};

/**
 * PutStaffRequest
 */
export type PutStaffRequest = {
    externalId?: string;
    isLoanOfficer?: boolean;
};

/**
 * PutStandingInstructionsStandingInstructionIdResponse
 */
export type PutStandingInstructionsStandingInstructionIdResponse = {
    changes?: PutUpdateStandingInstructionChanges;
    resourceId?: number;
};

export type PutTaxesComponentsChanges = {
    name?: string;
    percentage?: number;
    startDate?: string;
};

/**
 * PutTaxesComponentsTaxComponentIdRequest
 */
export type PutTaxesComponentsTaxComponentIdRequest = {
    dateFormat?: string;
    locale?: string;
    name?: string;
    percentage?: number;
    startDate?: string;
};

/**
 * PutTaxesComponentsTaxComponentIdResponse
 */
export type PutTaxesComponentsTaxComponentIdResponse = {
    changes?: PutTaxesComponentsChanges;
    resourceId?: number;
};

export type PutTaxesGroupChanges = {
    addComponents?: Array<(number)>;
    modifiedComponents?: Array<PutTaxesGroupModifiedComponents>;
    name?: string;
};

export type PutTaxesGroupModifiedComponents = {
    endDate?: string;
    taxComponentId?: number;
};

export type PutTaxesGroupTaxComponents = {
    endDate?: string;
    id?: number;
    taxComponentId?: number;
};

/**
 * PutTaxesGroupTaxGroupIdRequest
 */
export type PutTaxesGroupTaxGroupIdRequest = {
    dateFormat?: string;
    locale?: string;
    name?: string;
    taxComponents?: Array<PutTaxesGroupTaxComponents>;
};

/**
 * PutTaxesGroupTaxGroupIdResponse
 */
export type PutTaxesGroupTaxGroupIdResponse = {
    changes?: PutTaxesGroupChanges;
    resourceId?: number;
};

/**
 * PutTellersRequest
 */
export type PutTellersRequest = {
    dateFormat?: string;
    description?: string;
    endDate?: string;
    locale?: string;
    name?: string;
    officeId?: number;
    startDate?: string;
    status?: 'INVALID' | 'PENDING' | 'ACTIVE' | 'INACTIVE' | 'CLOSED';
};

/**
 * PutTellersResponse
 */
export type PutTellersResponse = {
    changes?: PutTellersResponseChanges;
    officeId?: number;
    resourceId?: number;
};

export type PutTellersResponseChanges = {
    dateFormat?: string;
    description?: string;
    endDate?: string;
    locale?: string;
    startDate?: string;
};

/**
 * PutTellersTellerIdCashiersCashierIdRequest
 */
export type PutTellersTellerIdCashiersCashierIdRequest = {
    dateFormat?: string;
    description?: string;
    endDate?: string;
    isFullDay?: boolean;
    locale?: string;
    staffId?: number;
    startDate?: string;
};

/**
 * PutTellersTellerIdCashiersCashierIdResponse
 */
export type PutTellersTellerIdCashiersCashierIdResponse = {
    changes?: PutTellersTellerIdCashiersCashierIdResponseChanges;
    resourceId?: number;
    subResourceId?: number;
};

export type PutTellersTellerIdCashiersCashierIdResponseChanges = {
    dateFormat?: string;
    description?: string;
    endDate?: string;
    locale?: string;
};

/**
 * PutTemplatesTemplateIdRequest
 */
export type PutTemplatesTemplateIdRequest = {
    entity?: number;
    id?: number;
    mappers?: Array<TemplateMapper>;
    name?: string;
    text?: string;
    type?: number;
};

/**
 * PutTemplatesTemplateIdResponse
 */
export type PutTemplatesTemplateIdResponse = {
    resourceId?: number;
};

export type PutUpdateStandingInstructionChanges = {
    recurrenceInterval?: number;
};

/**
 * PutUsersUserIdRequest
 */
export type PutUsersUserIdRequest = {
    clients?: Array<(number)>;
    email?: string;
    firstname?: string;
    isSelfServiceUser?: boolean;
    lastname?: string;
    officeId?: number;
    password?: string;
    repeatPassword?: string;
    roles?: Array<(number)>;
    sendPasswordToEmail?: boolean;
    staffId?: number;
};

/**
 * PutUsersUserIdResponse
 */
export type PutUsersUserIdResponse = {
    changes?: PutUsersUserIdResponseChanges;
    officeId?: number;
    resourceId?: number;
};

export type PutUsersUserIdResponseChanges = {
    firstname?: string;
};

/**
 * PutWorkingDaysRequest
 */
export type PutWorkingDaysRequest = {
    extendTermForDailyRepayments?: boolean;
    locale?: string;
    recurrence?: string;
    repaymentRescheduleType?: EnumOptionData;
};

/**
 * PutWorkingDaysResponse
 */
export type PutWorkingDaysResponse = {
    resourceId?: number;
};

export type Question = {
    componentKey?: string;
    description?: string;
    id?: number;
    key?: string;
    new?: boolean;
    responses?: Array<Response>;
    sequenceNo?: number;
    survey?: Survey;
    text?: string;
};

export type QuestionData = {
    componentKey?: string;
    description?: string;
    id?: number;
    key?: string;
    responseDatas?: Array<ResponseData>;
    sequenceNo?: number;
    text?: string;
};

export type Rate = {
    active?: boolean;
    approveUser?: AppUser;
    createdBy?: number;
    createdDate?: string;
    id?: number;
    lastModifiedBy?: number;
    lastModifiedDate?: string;
    name?: string;
    new?: boolean;
    percentage?: number;
    productApply?: number;
};

export type RateData = {
    active?: boolean;
    id?: number;
    name?: string;
    percentage?: number;
    productApply?: EnumOptionData;
};

export type RateRequest = {
    active?: boolean;
    locale?: string;
    name?: string;
    percentage?: number;
    productApply?: number;
};

export type RepaymentPeriod = {
    calculatedDueInterest: Money;
    calculatedDuePrincipal?: Money;
    capitalizedIncomePrincipal?: Money;
    creditedAmounts?: Money;
    creditedInterest?: Money;
    creditedPrincipal?: Money;
    currency?: MonetaryCurrency;
    dueDate?: string;
    dueInterest?: Money;
    duePrincipal?: Money;
    emi?: Money;
    emiPlusCreditedAmountsPlusFutureUnrecognizedInterest?: Money;
    firstInterestPeriod?: InterestPeriod;
    firstRepaymentPeriod?: boolean;
    fromDate?: string;
    fullyPaid?: boolean;
    futureUnrecognizedInterest?: Money;
    initialBalanceForEmiRecalculation?: Money;
    interestMoved?: boolean;
    interestPeriods?: Array<InterestPeriod>;
    lastInterestPeriod?: InterestPeriod;
    loanProductRelatedDetail?: LoanProductMinimumRepaymentScheduleRelatedDetail;
    mc?: {
        precision?: number;
        roundingMode?: 'UP' | 'DOWN' | 'CEILING' | 'FLOOR' | 'HALF_UP' | 'HALF_DOWN' | 'HALF_EVEN' | 'UNNECESSARY';
    };
    originalEmi?: Money;
    outstandingInterest?: Money;
    outstandingLoanBalance?: Money;
    outstandingPrincipal?: Money;
    paidInterest?: Money;
    paidPrincipal?: Money;
    previous?: RepaymentPeriod;
    rateFactorPlus1?: number;
    totalCapitalizedIncomeAmount?: Money;
    totalCreditedAmount?: Money;
    totalDisbursedAmount?: Money;
    totalPaidAmount?: Money;
    unrecognizedInterest?: Money;
    zero?: Money;
};

export type RepaymentTransactionRequest = {
    accountNumber?: string;
    bankNumber?: string;
    checkNumber?: string;
    loanId?: number;
    paymentTypeId?: number;
    receiptNumber?: string;
    routingCode?: string;
    transactionAmount?: number;
};

export type ReportData = {
    [key: string]: unknown;
};

export type ReportExportType = {
    key?: string;
    queryParameter?: string;
};

export type ReportMailingJobRunHistoryData = {
    endDateTime?: string;
    errorLog?: string;
    errorMessage?: string;
    id?: number;
    reportMailingJobId?: number;
    startDateTime?: string;
    status?: string;
};

export type ReportMailingJobTimelineData = {
    createdByFirstname?: string;
    createdByLastname?: string;
    createdByUsername?: string;
    createdOnDate?: string;
    updatedByFirstname?: string;
    updatedByLastname?: string;
    updatedByUsername?: string;
    updatedOnDate?: string;
};

export type ReportParameterData = {
    [key: string]: unknown;
};

export type RescheduleReasonsCodeValue = {
    active?: boolean;
    id?: number;
    mandatory?: boolean;
    name?: string;
};

export type RescheduleReasonsTimeline = {
    approvedByFirstname?: string;
    approvedByLastname?: string;
    approvedByUsername?: string;
    approvedOnDate?: string;
    submittedByFirstname?: string;
    submittedByLastname?: string;
    submittedByUsername?: string;
    submittedOnDate?: string;
};

export type Response = {
    id?: number;
    new?: boolean;
    question?: Question;
    sequenceNo?: number;
    text?: string;
    value?: number;
};

export type ResponseData = {
    id?: number;
    sequenceNo?: number;
    text?: string;
    value?: number;
};

export type ResultsetColumnHeaderData = {
    booleanDisplayType?: boolean;
    codeLookupDisplayType?: boolean;
    codeValueDisplayType?: boolean;
    columnCode?: string;
    columnDisplayType?: 'TEXT' | 'STRING' | 'INTEGER' | 'FLOAT' | 'DECIMAL' | 'DATE' | 'TIME' | 'DATETIME' | 'BOOLEAN' | 'BINARY' | 'CODELOOKUP' | 'CODEVALUE';
    columnLength?: number;
    columnName?: string;
    columnType?: 'BIT' | 'BOOLEAN' | 'SMALLINT' | 'TINYINT' | 'INTEGER' | 'MEDIUMINT' | 'BIGINT' | 'REAL' | 'FLOAT' | 'DOUBLE' | 'NUMERIC' | 'DECIMAL' | 'SERIAL' | 'SMALLSERIAL' | 'BIGSERIAL' | 'MONEY' | 'CHAR' | 'VARCHAR' | 'LONGVARCHAR' | 'TEXT' | 'TINYTEXT' | 'MEDIUMTEXT' | 'LONGTEXT' | 'JSON' | 'DATE' | 'TIME' | 'TIME_WITH_TIMEZONE' | 'TIMESTAMP' | 'DATETIME' | 'TIMESTAMP_WITH_TIMEZONE' | 'INTERVAL' | 'BINARY' | 'VARBINARY' | 'LONGVARBINARY' | 'BYTEA' | 'BLOB' | 'TINYBLOB' | 'MEDIUMBLOB' | 'LONGBLOB';
    columnValues?: Array<ResultsetColumnValueData>;
    dateDisplayType?: boolean;
    dateTimeDisplayType?: boolean;
    decimalDisplayType?: boolean;
    integerDisplayType?: boolean;
    isColumnIndexed?: boolean;
    isColumnNullable?: boolean;
    isColumnPrimaryKey?: boolean;
    isColumnUnique?: boolean;
    mandatory?: boolean;
    stringDisplayType?: boolean;
    textDisplayType?: boolean;
    timeDisplayType?: boolean;
};

export type columnDisplayType = 'TEXT' | 'STRING' | 'INTEGER' | 'FLOAT' | 'DECIMAL' | 'DATE' | 'TIME' | 'DATETIME' | 'BOOLEAN' | 'BINARY' | 'CODELOOKUP' | 'CODEVALUE';

export type columnType = 'BIT' | 'BOOLEAN' | 'SMALLINT' | 'TINYINT' | 'INTEGER' | 'MEDIUMINT' | 'BIGINT' | 'REAL' | 'FLOAT' | 'DOUBLE' | 'NUMERIC' | 'DECIMAL' | 'SERIAL' | 'SMALLSERIAL' | 'BIGSERIAL' | 'MONEY' | 'CHAR' | 'VARCHAR' | 'LONGVARCHAR' | 'TEXT' | 'TINYTEXT' | 'MEDIUMTEXT' | 'LONGTEXT' | 'JSON' | 'DATE' | 'TIME' | 'TIME_WITH_TIMEZONE' | 'TIMESTAMP' | 'DATETIME' | 'TIMESTAMP_WITH_TIMEZONE' | 'INTERVAL' | 'BINARY' | 'VARBINARY' | 'LONGVARBINARY' | 'BYTEA' | 'BLOB' | 'TINYBLOB' | 'MEDIUMBLOB' | 'LONGBLOB';

export type ResultsetColumnValueData = {
    [key: string]: unknown;
};

export type ResultsetRowData = {
    row?: Array<{
        [key: string]: unknown;
    }>;
};

export type RetrieveLoansPointInTimeExternalIdsRequest = {
    date?: DateParam;
    dateFormat?: string;
    externalIds?: Array<(string)>;
    locale?: string;
};

export type RetrieveLoansPointInTimeRequest = {
    date?: DateParam;
    dateFormat?: string;
    loanIds?: Array<(number)>;
    locale?: string;
};

export type Role = {
    disabled?: boolean;
    enabled?: boolean;
    id?: number;
    name?: string;
    new?: boolean;
    permissions?: Array<Permission>;
};

export type RoleData = {
    id?: number;
    name?: string;
};

export type RunReportsResponse = {
    columnHeaders?: Array<ResultsetColumnHeaderData>;
    data?: Array<ResultsetRowData>;
};

export type SavingDueTransactionRequest = {
    accountNumber?: string;
    bankNumber?: string;
    checkNumber?: string;
    depositAccountType?: number;
    paymentTypeId?: number;
    receiptNumber?: string;
    routingCode?: string;
    savingsId?: number;
    transactionAmount?: number;
};

export type SavingsAccountApplicationTimelineData = {
    activatedByFirstname?: string;
    activatedByLastname?: string;
    activatedByUsername?: string;
    activatedOnDate?: string;
    approvedByFirstname?: string;
    approvedByLastname?: string;
    approvedByUsername?: string;
    approvedOnDate?: string;
    closedByFirstname?: string;
    closedByLastname?: string;
    closedByUsername?: string;
    closedOnDate?: string;
    rejectedByFirstname?: string;
    rejectedByLastname?: string;
    rejectedByUsername?: string;
    rejectedOnDate?: string;
    submittedByFirstname?: string;
    submittedByLastname?: string;
    submittedByUsername?: string;
    submittedOnDate?: string;
    withdrawnByFirstname?: string;
    withdrawnByLastname?: string;
    withdrawnByUsername?: string;
    withdrawnOnDate?: string;
};

export type SavingsAccountChargeData = {
    accountId?: number;
    amount?: number;
    amountOrPercentage?: number;
    amountOutstanding?: number;
    amountPaid?: number;
    amountPercentageAppliedTo?: number;
    amountWaived?: number;
    amountWrittenOff?: number;
    annualFee?: boolean;
    chargeCalculationType?: EnumOptionData;
    chargeData?: ChargeData;
    chargeId?: number;
    chargeOptions?: Array<ChargeData>;
    chargeTimeType?: EnumOptionData;
    currency?: CurrencyData;
    dueDate?: string;
    feeCharge?: boolean;
    feeInterval?: number;
    feeOnMonthDay?: {
        dayOfMonth?: number;
        month?: 'JANUARY' | 'FEBRUARY' | 'MARCH' | 'APRIL' | 'MAY' | 'JUNE' | 'JULY' | 'AUGUST' | 'SEPTEMBER' | 'OCTOBER' | 'NOVEMBER' | 'DECEMBER';
        monthValue?: number;
    };
    freeWithdrawalChargeFrequency?: number;
    id?: number;
    inactivationDate?: string;
    isActive?: boolean;
    isFreeWithdrawal?: boolean;
    name?: string;
    penalty?: boolean;
    percentage?: number;
    restartFrequency?: number;
    restartFrequencyEnum?: number;
    savingsActivation?: boolean;
    withdrawalFee?: boolean;
};

export type SavingsAccountChargesPaidByData = {
    amount?: number;
    chargeId?: number;
    feeCharge?: boolean;
    penaltyCharge?: boolean;
    savingsAccountChargeData?: SavingsAccountChargeData;
};

export type SavingsAccountData = {
    accountNo?: string;
    accrualBasedAccountingEnabledOnSavingsProduct?: boolean;
    activatedOnDate?: string;
    activationLocalDate?: string;
    allowOverdraft?: boolean;
    annualFee?: SavingsAccountChargeData;
    cashBasedAccountingEnabledOnSavingsProduct?: boolean;
    chargeOptions?: Array<ChargeData>;
    charges?: Array<SavingsAccountChargeData>;
    clientData?: ClientData;
    clientId?: number;
    clientName?: string;
    currency?: CurrencyData;
    datatables?: Array<DatatableData>;
    dateFormat?: string;
    daysToDormancy?: number;
    daysToEscheat?: number;
    daysToInactive?: number;
    depositType?: EnumOptionData;
    depositTypeId?: number;
    enforceMinRequiredBalance?: boolean;
    existingReversedTransactionIds?: Array<(number)>;
    existingTransactionIds?: Array<(number)>;
    externalId?: string;
    fieldOfficerId?: number;
    fieldOfficerName?: string;
    fieldOfficerOptions?: Array<StaffData>;
    glAccountIdForInterestOnSavings?: number;
    glAccountIdForSavingsControl?: number;
    groupGeneralData?: GroupGeneralData;
    groupId?: number;
    groupName?: string;
    id?: number;
    interestCalculationDaysInYearType?: EnumOptionData;
    interestCalculationDaysInYearTypeId?: number;
    interestCalculationDaysInYearTypeOptions?: Array<EnumOptionData>;
    interestCalculationType?: EnumOptionData;
    interestCalculationTypeId?: number;
    interestCalculationTypeOptions?: Array<EnumOptionData>;
    interestCompoundingPeriodType?: EnumOptionData;
    interestCompoundingPeriodTypeId?: number;
    interestCompoundingPeriodTypeOptions?: Array<EnumOptionData>;
    interestPostingPeriodType?: EnumOptionData;
    interestPostingPeriodTypeId?: number;
    interestPostingPeriodTypeOptions?: Array<EnumOptionData>;
    isDormancyTrackingActive?: boolean;
    lastActiveTransactionDate?: string;
    lastSavingsAccountTransaction?: SavingsAccountTransactionData;
    lienAllowed?: boolean;
    locale?: string;
    lockedInUntilDate?: string;
    lockinPeriodFrequency?: number;
    lockinPeriodFrequencyType?: EnumOptionData;
    lockinPeriodFrequencyTypeId?: number;
    lockinPeriodFrequencyTypeOptions?: Array<EnumOptionData>;
    maxAllowedLienLimit?: number;
    minBalanceForInterestCalculation?: number;
    minOverdraftForInterestCalculation?: number;
    minRequiredBalance?: number;
    minRequiredOpeningBalance?: number;
    newSavingsAccountTransactionData?: Array<SavingsAccountTransactionData>;
    nominalAnnualInterestRate?: number;
    nominalAnnualInterestRateOverdraft?: number;
    officeId?: number;
    onHoldFunds?: number;
    overdraftLimit?: number;
    productId?: number;
    productOptions?: Array<SavingsProductData>;
    reasonForBlock?: string;
    rowIndex?: number;
    savingsAccountSummaryData?: SavingsAccountSummaryData;
    savingsAccountTransactionData?: Array<SavingsAccountTransactionData>;
    savingsAccountTransactionSummaryWrapper?: SavingsAccountTransactionDataSummaryWrapper;
    savingsAccountTransactionsWithPivotConfig?: Array<SavingsAccountTransactionData>;
    savingsAmountOnHold?: number;
    savingsHelper?: SavingsHelper;
    savingsProduct?: SavingsProductData;
    savingsProductData?: SavingsProductData;
    savingsProductId?: number;
    savingsProductName?: string;
    startInterestCalculationDate?: string;
    status?: SavingsAccountStatusEnumData;
    subStatus?: SavingsAccountSubStatusEnumData;
    submittedOnDate?: string;
    summary?: SavingsAccountSummaryData;
    taxGroup?: TaxGroupData;
    timeline?: SavingsAccountApplicationTimelineData;
    transactions?: Array<SavingsAccountTransactionData>;
    updatedTransactions?: Array<SavingsAccountTransactionData>;
    withHoldTax?: boolean;
    withdrawalFee?: SavingsAccountChargeData;
    withdrawalFeeForTransfers?: boolean;
    withdrawalFeeTypeOptions?: Array<EnumOptionData>;
};

export type SavingsAccountStatusEnumData = {
    active?: boolean;
    approved?: boolean;
    closed?: boolean;
    code?: string;
    id?: number;
    matured?: boolean;
    prematureClosed?: boolean;
    rejected?: boolean;
    submittedAndPendingApproval?: boolean;
    transferInProgress?: boolean;
    transferOnHold?: boolean;
    value?: string;
    withdrawnByApplicant?: boolean;
};

export type SavingsAccountSubStatusEnumData = {
    block?: boolean;
    blockCredit?: boolean;
    blockDebit?: boolean;
    code?: string;
    dormant?: boolean;
    escheat?: boolean;
    id?: number;
    inactive?: boolean;
    none?: boolean;
    value?: string;
};

export type SavingsAccountSummaryData = {
    accountBalance?: number;
    availableBalance?: number;
    currency?: CurrencyData;
    interestNotPosted?: number;
    interestPostedTillDate?: string;
    lastInterestCalculationDate?: string;
    prevInterestPostedTillDate?: string;
    runningBalanceOnInterestPostingTillDate?: number;
    runningBalanceOnPivotDate?: number;
    totalAnnualFees?: number;
    totalDeposits?: number;
    totalFeeCharge?: number;
    totalInterestEarned?: number;
    totalInterestPosted?: number;
    totalOverdraftInterestDerived?: number;
    totalPenaltyCharge?: number;
    totalWithdrawalFees?: number;
    totalWithdrawals?: number;
    totalWithholdTax?: number;
};

export type SavingsAccountTransactionData = {
    accountId?: number;
    accountNo?: string;
    accountNumber?: string;
    amount?: number;
    amountOnHold?: boolean;
    amountRelease?: boolean;
    annualFee?: boolean;
    annualFeeAndNotReversed?: boolean;
    balanceEndDate?: string;
    balanceNumberOfDays?: number;
    bankNumber?: string;
    chargeTransaction?: boolean;
    chargeTransactionAndNotReversed?: boolean;
    chargesPaidByData?: Array<SavingsAccountChargesPaidByData>;
    checkNumber?: string;
    credit?: boolean;
    cumulativeBalance?: number;
    currency?: CurrencyData;
    date?: string;
    dateFormat?: string;
    debit?: boolean;
    deposit?: boolean;
    depositAndNotReversed?: boolean;
    dividendPayoutAndNotReversed?: boolean;
    endOfBalanceLocalDate?: string;
    entryType?: 'CREDIT' | 'DEBIT';
    feeCharge?: boolean;
    feeChargeAndNotReversed?: boolean;
    id?: number;
    interestPosting?: boolean;
    interestPostingAndNotReversed?: boolean;
    interestedPostedAsOn?: boolean;
    isManualTransaction?: boolean;
    isReversal?: boolean;
    lienTransaction?: boolean;
    locale?: string;
    manualTransaction?: boolean;
    modifiedId?: number;
    notReversed?: boolean;
    note?: string;
    originalTransactionId?: number;
    outstandingChargeAmount?: number;
    overdraftAmount?: number;
    overdraftInterestAndNotReversed?: boolean;
    payCharge?: boolean;
    paymentDetailData?: PaymentDetailData;
    paymentTypeId?: number;
    paymentTypeOptions?: Array<PaymentTypeData>;
    penaltyCharge?: boolean;
    penaltyChargeAndNotReversed?: boolean;
    reasonForBlock?: string;
    receiptNumber?: string;
    refNo?: string;
    releaseTransactionId?: number;
    reversalTransaction?: boolean;
    reversed?: boolean;
    routingCode?: string;
    rowIndex?: number;
    runningBalance?: number;
    savingsAccountChargesPaid?: Array<SavingsAccountChargesPaidByData>;
    savingsAccountId?: number;
    submittedByUsername?: string;
    submittedOnDate?: string;
    taxDetails?: Array<TaxDetailsData>;
    transactionAmount?: number;
    transactionDate?: string;
    transactionType?: SavingsAccountTransactionEnumData;
    transfer?: AccountTransferData;
    waiveCharge?: boolean;
    waiveFeeCharge?: boolean;
    waiveFeeChargeAndNotReversed?: boolean;
    waivePenaltyCharge?: boolean;
    waivePenaltyChargeAndNotReversed?: boolean;
    withHoldTaxAndNotReversed?: boolean;
    withdrawal?: boolean;
    withdrawalFeeAndNotReversed?: boolean;
};

export type SavingsAccountTransactionDataSummaryWrapper = {
    [key: string]: unknown;
};

export type SavingsAccountTransactionEnumData = {
    accrual?: boolean;
    amountHold?: boolean;
    amountRelease?: boolean;
    annualFee?: boolean;
    approveTransfer?: boolean;
    chargeTransaction?: boolean;
    code?: string;
    credit?: boolean;
    debit?: boolean;
    deposit?: boolean;
    depositOrWithdrawal?: boolean;
    dividendPayout?: boolean;
    entryType?: 'CREDIT' | 'DEBIT';
    escheat?: boolean;
    feeDeduction?: boolean;
    id?: number;
    incomeFromInterest?: boolean;
    initiateTransfer?: boolean;
    interestPosting?: boolean;
    overDraftInterestPosting?: boolean;
    overdraftFee?: boolean;
    overdraftInterest?: boolean;
    payCharge?: boolean;
    rejectTransfer?: boolean;
    transactionTypeEnum?: 'INVALID' | 'DEPOSIT' | 'WITHDRAWAL' | 'INTEREST_POSTING' | 'WITHDRAWAL_FEE' | 'ANNUAL_FEE' | 'WAIVE_CHARGES' | 'PAY_CHARGE' | 'DIVIDEND_PAYOUT' | 'ACCRUAL' | 'INITIATE_TRANSFER' | 'APPROVE_TRANSFER' | 'WITHDRAW_TRANSFER' | 'REJECT_TRANSFER' | 'WRITTEN_OFF' | 'OVERDRAFT_INTEREST' | 'WITHHOLD_TAX' | 'ESCHEAT' | 'AMOUNT_HOLD' | 'AMOUNT_RELEASE';
    value?: string;
    withdrawTransfer?: boolean;
    withdrawal?: boolean;
    withdrawalFee?: boolean;
    withholdTax?: boolean;
    writtenoff?: boolean;
};

export type transactionTypeEnum = 'INVALID' | 'DEPOSIT' | 'WITHDRAWAL' | 'INTEREST_POSTING' | 'WITHDRAWAL_FEE' | 'ANNUAL_FEE' | 'WAIVE_CHARGES' | 'PAY_CHARGE' | 'DIVIDEND_PAYOUT' | 'ACCRUAL' | 'INITIATE_TRANSFER' | 'APPROVE_TRANSFER' | 'WITHDRAW_TRANSFER' | 'REJECT_TRANSFER' | 'WRITTEN_OFF' | 'OVERDRAFT_INTEREST' | 'WITHHOLD_TAX' | 'ESCHEAT' | 'AMOUNT_HOLD' | 'AMOUNT_RELEASE';

/**
 * SavingsAccountTransactionsSearchResponse
 */
export type SavingsAccountTransactionsSearchResponse = {
    content?: Array<GetSavingsAccountTransactionsPageItem>;
    total?: number;
};

export type SavingsHelper = {
    [key: string]: unknown;
};

export type SavingsProductData = {
    accrualBasedAccountingEnabled?: boolean;
    allowOverdraft?: boolean;
    cashBasedAccountingEnabled?: boolean;
    currency?: CurrencyData;
    depositAccountType?: string;
    id?: number;
    interestCalculationDaysInYearType?: EnumOptionData;
    interestCalculationType?: EnumOptionData;
    interestCompoundingPeriodType?: EnumOptionData;
    interestPostingPeriodType?: EnumOptionData;
    lockinPeriodFrequency?: number;
    lockinPeriodFrequencyType?: EnumOptionData;
    maxAllowedLienLimit?: number;
    minRequiredBalance?: number;
    minRequiredOpeningBalance?: number;
    name?: string;
    nominalAnnualInterestRate?: number;
    overdraftLimit?: number;
    periodicAccrualAccounting?: boolean;
    upfrontAccrualAccounting?: boolean;
    withdrawalFeeForTransfers?: boolean;
};

export type Scorecard = {
    appUser?: AppUser;
    client?: Client;
    createdOn?: string;
    id?: number;
    new?: boolean;
    question?: Question;
    response?: Response;
    survey?: Survey;
    value?: number;
};

export type ScorecardData = {
    clientId?: number;
    id?: number;
    scorecardValues?: Array<ScorecardValue>;
    surveyId?: number;
    surveyName?: string;
    userId?: number;
    username?: string;
};

export type ScorecardValue = {
    createdOn?: string;
    questionId?: number;
    responseId?: number;
    value?: number;
};

export type SearchData = {
    entityAccountNo?: string;
    entityExternalId?: string;
    entityId?: number;
    entityMobileNo?: string;
    entityName?: string;
    entityStatus?: EnumOptionData;
    entityType?: string;
    parentId?: number;
    parentName?: string;
    parentType?: string;
    subEntityType?: string;
};

export type ShareAccountApplicationTimelineData = {
    activatedByFirstname?: string;
    activatedByLastname?: string;
    activatedByUsername?: string;
    activatedDate?: string;
    approvedByFirstname?: string;
    approvedByLastname?: string;
    approvedByUsername?: string;
    approvedDate?: string;
    closedByFirstname?: string;
    closedByLastname?: string;
    closedByUsername?: string;
    closedDate?: string;
    rejectedByFirstname?: string;
    rejectedByLastname?: string;
    rejectedByUsername?: string;
    rejectedDate?: string;
    submittedByFirstname?: string;
    submittedByLastname?: string;
    submittedByUsername?: string;
    submittedOnDate?: string;
};

export type ShareAccountChargeData = {
    accountId?: number;
    amount?: number;
    amountOrPercentage?: number;
    amountOutstanding?: number;
    amountPaid?: number;
    amountPercentageAppliedTo?: number;
    amountWaived?: number;
    amountWrittenOff?: number;
    chargeCalculationType?: EnumOptionData;
    chargeId?: number;
    chargeOptions?: Array<ChargeData>;
    chargeTimeType?: EnumOptionData;
    currency?: CurrencyData;
    id?: number;
    isActive?: boolean;
    name?: string;
    percentage?: number;
};

export type ShareAccountData = {
    accountNo?: string;
    allowDividendCalculationForInactiveClients?: boolean;
    applicationDate?: string;
    chargeOptions?: Array<ChargeData>;
    charges?: Array<ShareAccountChargeData>;
    clientId?: number;
    clientName?: string;
    clientSavingsAccounts?: Array<SavingsAccountData>;
    currency?: CurrencyData;
    currentMarketPrice?: number;
    dateFormat?: string;
    defaultShares?: number;
    dividends?: Array<ShareAccountDividendData>;
    externalId?: string;
    id?: number;
    locale?: string;
    lockPeriodTypeEnum?: EnumOptionData;
    lockinPeriod?: number;
    lockinPeriodFrequency?: number;
    lockinPeriodFrequencyType?: number;
    lockinPeriodFrequencyTypeOptions?: Array<EnumOptionData>;
    minimumActivePeriod?: number;
    minimumActivePeriodFrequencyType?: number;
    minimumActivePeriodFrequencyTypeOptions?: Array<EnumOptionData>;
    minimumActivePeriodTypeEnum?: EnumOptionData;
    productId?: number;
    productName?: string;
    productOptions?: Array<ProductData>;
    purchasedShares?: Array<ShareAccountTransactionData>;
    requestedShares?: number;
    rowIndex?: number;
    savingsAccountId?: number;
    savingsAccountNumber?: string;
    status?: ShareAccountStatusEnumData;
    submittedDate?: string;
    summary?: ShareAccountSummaryData;
    timeline?: ShareAccountApplicationTimelineData;
};

export type ShareAccountDividendData = {
    accountData?: ShareAccountData;
    amount?: number;
    id?: number;
    postedDate?: string;
    savingsTransactionId?: number;
    status?: EnumOptionData;
};

export type ShareAccountStatusEnumData = {
    active?: boolean;
    approved?: boolean;
    closed?: boolean;
    code?: string;
    id?: number;
    rejected?: boolean;
    submittedAndPendingApproval?: boolean;
    value?: string;
};

export type ShareAccountSummaryData = {
    accountNo?: string;
    currency?: CurrencyData;
    externalId?: string;
    id?: number;
    productId?: number;
    productName?: string;
    shortProductName?: string;
    status?: ShareAccountStatusEnumData;
    timeline?: ShareAccountApplicationTimelineData;
    totalApprovedShares?: number;
    totalPendingForApprovalShares?: number;
};

export type ShareAccountTransactionData = {
    accountId?: number;
    amount?: number;
    amountPaid?: number;
    chargeAmount?: number;
    id?: number;
    numberOfShares?: number;
    purchasedDate?: string;
    purchasedPrice?: number;
    status?: EnumOptionData;
    type?: EnumOptionData;
};

export type SingleDebitOrCreditEntryCommand = {
    amount?: number;
    comments?: string;
    commentsChanged?: boolean;
    glAccountId?: number;
    glAccountIdChanged?: boolean;
    glAmountChanged?: boolean;
    parametersPassedInRequest?: Array<(string)>;
};

export type SmsBusinessRulesData = {
    reportDescription?: string;
    reportId?: number;
    reportName?: string;
    reportParamName?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    reportSubType?: string;
    reportType?: string;
};

export type SmsCampaignData = {
    businessRulesOptions?: Array<SmsBusinessRulesData>;
    campaignMessage?: string;
    campaignName?: string;
    campaignStatus?: EnumOptionData;
    campaignType?: EnumOptionData;
    campaignTypeOptions?: Array<EnumOptionData>;
    frequencyTypeOptions?: Array<EnumOptionData>;
    id?: number;
    lastTriggerDate?: string;
    months?: Array<EnumOptionData>;
    nextTriggerDate?: string;
    notification?: boolean;
    paramValue?: string;
    periodFrequencyOptions?: Array<EnumOptionData>;
    providerId?: number;
    recurrence?: string;
    recurrenceStartDate?: string;
    reportName?: string;
    runReportId?: number;
    smsCampaignTimeLine?: SmsCampaignTimeLine;
    smsProviderOptions?: Array<SmsProviderData>;
    triggerType?: EnumOptionData;
    triggerTypeOptions?: Array<EnumOptionData>;
    weekDays?: Array<EnumOptionData>;
};

export type SmsCampaignParamReq = {
    loanOfficerId?: number;
    officeId?: number;
    reportName?: string;
    transactionId?: number;
};

export type SmsCampaignPreviewDto = {
    message?: string;
    paramValue?: SmsCampaignParamReq;
};

export type SmsCampaignTimeLine = {
    activatedByUsername?: string;
    activatedOnDate?: string;
    closedByUsername?: string;
    closedOnDate?: string;
    submittedByUsername?: string;
    submittedOnDate?: string;
};

export type SmsCreationRequest = {
    campaignId?: number;
    clientId?: number;
    groupId?: number;
    message?: string;
    staffId?: number;
};

export type SmsData = {
    campaignName?: string;
    clientId?: number;
    groupId?: number;
    id?: number;
    message?: string;
    mobileNo?: string;
    providerId?: number;
    staffId?: number;
    status?: EnumOptionData;
};

export type SmsProviderData = {
    id?: number;
    phoneNo?: string;
    providerAppKey?: string;
    providerDescription?: string;
    providerName?: string;
    tenantId?: string;
};

export type SmsUpdateRequest = {
    message?: string;
};

export type Sort = {
    empty?: boolean;
    sorted?: boolean;
    unsorted?: boolean;
};

export type SortOrder = {
    direction?: 'ASC' | 'DESC';
    property?: string;
};

export type direction = 'ASC' | 'DESC';

export type Staff = {
    active?: boolean;
    displayName?: string;
    emailAddress?: string;
    externalId?: string;
    firstname?: string;
    id?: number;
    image?: Image;
    joiningDate?: string;
    lastname?: string;
    loanOfficer?: boolean;
    mobileNo?: string;
    new?: boolean;
    notActive?: boolean;
    notLoanOfficer?: boolean;
    office?: Office;
    organisationalRoleParentStaff?: Staff;
    organisationalRoleType?: number;
};

export type StaffAssignmentHistory = {
    createdBy?: number;
    createdDate?: string;
    currentRecord?: boolean;
    id?: number;
    lastModifiedBy?: number;
    lastModifiedDate?: string;
    new?: boolean;
    startDate?: string;
};

export type StaffData = {
    allowedOffices?: Array<OfficeData>;
    dateFormat?: string;
    displayName?: string;
    externalId?: string;
    firstname?: string;
    id?: number;
    isActive?: boolean;
    isLoanOfficer?: boolean;
    joiningDate?: string;
    lastname?: string;
    locale?: string;
    mobileNo?: string;
    officeId?: number;
    officeName?: string;
    rowIndex?: number;
};

export type StaffRequest = {
    dateFormat?: string;
    externalId?: string;
    firstname?: string;
    forceStatus?: boolean;
    isActive?: boolean;
    isLoanOfficer?: boolean;
    joiningDate?: string;
    lastname?: string;
    locale?: string;
    mobileNo?: string;
    officeId?: number;
};

export type StandingInstructionCreationRequest = {
    amount?: string;
    dateFormat?: string;
    fromAccountId?: string;
    fromAccountType?: string;
    fromClientId?: string;
    fromOfficeId?: string;
    instructionType?: string;
    locale?: string;
    monthDayFormat?: string;
    name?: string;
    priority?: string;
    recurrenceFrequency?: string;
    recurrenceInterval?: string;
    recurrenceOnMonthDay?: string;
    recurrenceType?: string;
    status?: string;
    toAccountId?: string;
    toAccountType?: string;
    toClientId?: string;
    toOfficeId?: string;
    transferType?: string;
    validFrom?: string;
    validTill?: string;
};

export type StandingInstructionData = {
    accountDetailId?: number;
    amount?: number;
    fromAccount?: PortfolioAccountData;
    fromAccountType?: 'INVALID' | 'LOAN' | 'SAVINGS';
    fromClient?: ClientData;
    id?: number;
    instructionType?: 'INVALID' | 'FIXED' | 'DUES';
    name?: string;
    recurrenceFrequency?: 'DAYS' | 'WEEKS' | 'MONTHS' | 'YEARS' | 'WHOLE_TERM' | 'INVALID';
    recurrenceInterval?: number;
    recurrenceOnDay?: number;
    recurrenceOnMonth?: number;
    recurrenceType?: 'INVALID' | 'PERIODIC' | 'AS_PER_DUES';
    toAccount?: PortfolioAccountData;
    toAccountType?: 'INVALID' | 'LOAN' | 'SAVINGS';
    toClient?: ClientData;
    transferType?: 'INVALID' | 'ACCOUNT_TRANSFER' | 'LOAN_REPAYMENT' | 'CHARGE_PAYMENT' | 'INTEREST_TRANSFER' | 'LOAN_DOWN_PAYMENT';
    validFrom?: string;
};

export type fromAccountType = 'INVALID' | 'LOAN' | 'SAVINGS';

export type instructionType = 'INVALID' | 'FIXED' | 'DUES';

export type recurrenceFrequency = 'DAYS' | 'WEEKS' | 'MONTHS' | 'YEARS' | 'WHOLE_TERM' | 'INVALID';

export type recurrenceType = 'INVALID' | 'PERIODIC' | 'AS_PER_DUES';

export type toAccountType = 'INVALID' | 'LOAN' | 'SAVINGS';

export type transferType = 'INVALID' | 'ACCOUNT_TRANSFER' | 'LOAN_REPAYMENT' | 'CHARGE_PAYMENT' | 'INTEREST_TRANSFER' | 'LOAN_DOWN_PAYMENT';

export type StandingInstructionHistoryData = {
    amount?: number;
    errorLog?: string;
    executionTime?: string;
    fromAccount?: PortfolioAccountData;
    fromAccountType?: EnumOptionData;
    fromClient?: ClientData;
    fromOffice?: OfficeData;
    name?: string;
    standingInstructionId?: number;
    status?: string;
    toAccount?: PortfolioAccountData;
    toAccountType?: EnumOptionData;
    toClient?: ClientData;
    toOffice?: OfficeData;
};

export type StandingInstructionUpdatesRequest = {
    amount?: string;
    dateFormat?: string;
    instructionType?: string;
    locale?: string;
    monthDayFormat?: string;
    name?: string;
    priority?: string;
    recurrenceFrequency?: string;
    recurrenceInterval?: string;
    recurrenceOnMonthDay?: string;
    recurrenceType?: string;
    status?: string;
    validFrom?: string;
    validTill?: string;
};

export type StringEnumOptionData = {
    code?: string;
    id?: string;
    value?: string;
};

export type SubjectName = {
    displayName?: string;
    firstName?: string;
    lastName?: string;
    middleName?: string;
};

export type Survey = {
    components?: Array<Component>;
    countryCode?: string;
    description?: string;
    id?: number;
    key?: string;
    name?: string;
    new?: boolean;
    questions?: Array<Question>;
    validFrom?: string;
    validTo?: string;
};

export type SurveyData = {
    componentDatas?: Array<ComponentData>;
    countryCode?: string;
    description?: string;
    id?: number;
    key?: string;
    name?: string;
    questionDatas?: Array<QuestionData>;
    validFrom?: string;
    validTo?: string;
};

export type TableQueryData = {
    query?: AdvancedQueryData;
    table?: string;
};

export type TaxComponent = {
    createdBy?: number;
    createdDate?: string;
    creditAccountType?: number;
    creditAcount?: GLAccount;
    debitAccountType?: number;
    debitAcount?: GLAccount;
    id?: number;
    lastModifiedBy?: number;
    lastModifiedDate?: string;
    new?: boolean;
    percentage?: number;
    taxComponentHistories?: Array<TaxComponentHistory>;
    taxGroupMappings?: Array<TaxGroupMappings>;
};

export type TaxComponentData = {
    creditAccount?: GLAccountData;
    creditAccountType?: EnumOptionData;
    debitAccount?: GLAccountData;
    debitAccountType?: EnumOptionData;
    glAccountOptions?: {
        [key: string]: Array<GLAccountData>;
    };
    glAccountTypeOptions?: Array<EnumOptionData>;
    id?: number;
    name?: string;
    percentage?: number;
    startDate?: string;
    taxComponentHistories?: Array<TaxComponentHistoryData>;
};

export type TaxComponentHistory = {
    createdBy?: number;
    createdDate?: string;
    id?: number;
    lastModifiedBy?: number;
    lastModifiedDate?: string;
    new?: boolean;
    percentage?: number;
};

export type TaxComponentHistoryData = {
    endDate?: string;
    percentage?: number;
    startDate?: string;
};

export type TaxDetailsData = {
    amount?: number;
    taxComponent?: TaxComponentData;
};

export type TaxGroup = {
    createdBy?: number;
    createdDate?: string;
    id?: number;
    lastModifiedBy?: number;
    lastModifiedDate?: string;
    name?: string;
    new?: boolean;
    taxGroupMappings?: Array<TaxGroupMappings>;
};

export type TaxGroupData = {
    id?: number;
    name?: string;
    taxAssociations?: Array<TaxGroupMappingsData>;
    taxComponents?: Array<TaxComponentData>;
};

export type TaxGroupMappings = {
    createdBy?: number;
    createdDate?: string;
    endDate?: string;
    id?: number;
    lastModifiedBy?: number;
    lastModifiedDate?: string;
    new?: boolean;
    taxComponent?: TaxComponent;
    taxGroup?: TaxGroup;
};

export type TaxGroupMappingsData = {
    endDate?: string;
    id?: number;
    startDate?: string;
    taxComponent?: TaxComponentData;
};

export type TellerData = {
    creditAccountId?: number;
    debitAccountId?: number;
    description?: string;
    endDate?: string;
    hasMappedCashiers?: boolean;
    hasTransactions?: boolean;
    id?: number;
    name?: string;
    officeId?: number;
    officeName?: string;
    officeOptions?: Array<OfficeData>;
    staffOptions?: Array<StaffData>;
    startDate?: string;
    status?: 'INVALID' | 'PENDING' | 'ACTIVE' | 'INACTIVE' | 'CLOSED';
};

export type TellerJournalData = {
    closingBalance?: number;
    day?: string;
    officeId?: number;
    openingBalance?: number;
    settledBalance?: number;
    sumPayments?: number;
    sumReceipts?: number;
    tellerId?: number;
};

export type TellerTransactionData = {
    amount?: number;
    cashierId?: number;
    clientId?: number;
    id?: number;
    officeId?: number;
    postingDate?: string;
    tellerId?: number;
    type?: EnumOptionData;
};

export type TemplateMapper = {
    id?: number;
    mapperkey?: string;
    mapperorder?: number;
    mappervalue?: string;
    new?: boolean;
};

export type TransactionDetailData = {
    noteData?: NoteData;
    paymentDetails?: PaymentDetailData;
    transactionId?: number;
    transactionType?: TransactionTypeEnumData;
};

export type TransactionDetails = {
    noteData?: NoteData;
    paymentDetails?: PaymentDetailData;
    transactionId?: number;
    transactionType?: EnumOptionType;
};

export type TransactionProcessingStrategyData = {
    code?: string;
    id?: number;
    name?: string;
};

export type TransactionType = 'disbursement' | 'repayment' | 'waiver' | 'repaymentAtDisbursement' | 'writeOff' | 'markedForRescheduling' | 'recoveryRepayment' | 'waiveCharges' | 'accrual' | 'initiateTransfer' | 'approveTransfer' | 'withdrawTransfer' | 'rejectTransfer' | 'refund' | 'chargePayment' | 'incomePosting' | 'creditBalanceRefund' | 'merchantIssuedRefund' | 'payoutRefund' | 'goodwillCredit' | 'chargeRefund' | 'chargeback' | 'chargeAdjustment' | 'chargeOff' | 'downPayment' | 'reAge' | 'reAmortize' | 'interestPaymentWaiver' | 'accrualActivity' | 'interestRefund' | 'accrualAdjustment' | 'capitalizedIncome' | 'capitalizedIncomeAmortization' | 'capitalizedIncomeAdjustment' | 'contractTermination' | 'capitalizedIncomeAmortizationAdjustment' | 'buyDownFeeAmortization' | 'buyDownFeeAmortizationAdjustment';

export type TransactionTypeEnumData = {
    code?: string;
    id?: number;
    value?: string;
};

export type UpdateChangesResponse = {
    accountNo?: number;
    amount?: number;
    bankName?: string;
    date?: string;
};

export type UpdateClientCollateralRequest = {
    locale?: string;
    quantity?: number;
};

/**
 * UpdatePostDatedCheckRequest
 */
export type UpdatePostDatedCheckRequest = {
    accountNo?: number;
    amount?: number;
    date?: string;
    dateFormat?: string;
    locale?: string;
    name?: string;
    repaymentDate?: string;
};

/**
 * UpdatePostDatedCheckResponse
 */
export type UpdatePostDatedCheckResponse = {
    changes?: UpdateChangesResponse;
    resourceId?: number;
};

/**
 * PutStaffResponse
 */
export type UpdateStaffResponse = {
    officeId?: number;
    resourceId?: number;
};

export type UploadRequest = {
    dateFormat?: string;
    locale?: string;
    uploadedInputStream?: (Blob | File);
};

export type WorkingDaysData = {
    extendTermForDailyRepayments?: boolean;
    extendTermForRepaymentsOnHolidays?: boolean;
    id?: number;
    recurrence?: string;
    repaymentRescheduleOptions?: Array<EnumOptionData>;
    repaymentRescheduleType?: EnumOptionData;
};

export type GetApplicationWadlResponse = unknown;

export type GetApplicationWadlByPathData = {
    path: string;
};

export type GetApplicationWadlByPathResponse = unknown;

export type PostV1CreditBureauIntegrationAddCreditReportData = {
    /**
     * creditBureauId
     */
    creditBureauId?: number;
    /**
     * Upload credit report
     */
    formData?: UploadRequest;
};

export type PostV1CreditBureauIntegrationAddCreditReportResponse = string;

export type PostV1CreditBureauIntegrationCreditReportData = {
    /**
     * Fetch credit report
     */
    requestBody?: {
        [key: string]: unknown;
    };
};

export type PostV1CreditBureauIntegrationCreditReportResponse = string;

export type GetV1CreditBureauIntegrationCreditReportByCreditBureauIdData = {
    /**
     * creditBureauId
     */
    creditBureauId: number;
};

export type GetV1CreditBureauIntegrationCreditReportByCreditBureauIdResponse = string;

export type DeleteV1CreditBureauIntegrationDeleteCreditReportByCreditBureauIdData = {
    /**
     * creditBureauId
     */
    creditBureauId: number;
};

export type DeleteV1CreditBureauIntegrationDeleteCreditReportByCreditBureauIdResponse = string;

export type PostV1CreditBureauIntegrationSaveCreditReportData = {
    /**
     * creditBureauId
     */
    creditBureauId?: number;
    /**
     * nationalId
     */
    nationalId?: string;
};

export type PostV1CreditBureauIntegrationSaveCreditReportResponse = string;

export type GetV1EchoResponse = string;

export type GetV1EmailResponse = string;

export type PostV1EmailData = {
    requestBody?: string;
};

export type PostV1EmailResponse = string;

export type GetV1EmailCampaignResponse = string;

export type PostV1EmailCampaignData = {
    requestBody?: string;
};

export type PostV1EmailCampaignResponse = string;

export type PostV1EmailCampaignPreviewData = {
    requestBody?: string;
};

export type PostV1EmailCampaignPreviewResponse = string;

export type GetV1EmailCampaignTemplateResponse = string;

export type GetV1EmailCampaignTemplateByResourceIdData = {
    resourceId: number;
};

export type GetV1EmailCampaignTemplateByResourceIdResponse = string;

export type DeleteV1EmailCampaignByResourceIdData = {
    resourceId: number;
};

export type DeleteV1EmailCampaignByResourceIdResponse = string;

export type GetV1EmailCampaignByResourceIdData = {
    resourceId: number;
};

export type GetV1EmailCampaignByResourceIdResponse = string;

export type PostV1EmailCampaignByResourceIdData = {
    command?: string;
    requestBody?: string;
    resourceId: number;
};

export type PostV1EmailCampaignByResourceIdResponse = string;

export type PutV1EmailCampaignByResourceIdData = {
    requestBody?: string;
    resourceId: number;
};

export type PutV1EmailCampaignByResourceIdResponse = string;

export type GetV1EmailConfigurationResponse = string;

export type PutV1EmailConfigurationData = {
    requestBody?: string;
};

export type PutV1EmailConfigurationResponse = string;

export type GetV1EmailFailedEmailData = {
    limit?: number;
    offset?: number;
    orderBy?: string;
    sortOrder?: string;
};

export type GetV1EmailFailedEmailResponse = string;

export type GetV1EmailMessageByStatusData = {
    dateFormat?: string;
    fromDate?: DateParam;
    limit?: number;
    locale?: string;
    offset?: number;
    orderBy?: string;
    sortOrder?: string;
    status?: number;
    toDate?: DateParam;
};

export type GetV1EmailMessageByStatusResponse = string;

export type GetV1EmailPendingEmailData = {
    limit?: number;
    offset?: number;
    orderBy?: string;
    sortOrder?: string;
};

export type GetV1EmailPendingEmailResponse = string;

export type GetV1EmailSentEmailData = {
    limit?: number;
    offset?: number;
    orderBy?: string;
    sortOrder?: string;
};

export type GetV1EmailSentEmailResponse = string;

export type DeleteV1EmailByResourceIdData = {
    resourceId: number;
};

export type DeleteV1EmailByResourceIdResponse = string;

export type GetV1EmailByResourceIdData = {
    resourceId: number;
};

export type GetV1EmailByResourceIdResponse = string;

export type PutV1EmailByResourceIdData = {
    requestBody?: string;
    resourceId: number;
};

export type PutV1EmailByResourceIdResponse = string;

export type GetV1InternalClientByClientIdAuditData = {
    clientId: number;
};

export type GetV1InternalClientByClientIdAuditResponse = string;

export type PostV1InternalCobFastForwardCobDateOfLoanByLoanIdData = {
    loanId: number;
    requestBody?: string;
};

export type PostV1InternalCobFastForwardCobDateOfLoanByLoanIdResponse = unknown;

export type GetV1InternalCobPartitionsByPartitionSizeData = {
    partitionSize: number;
};

export type GetV1InternalCobPartitionsByPartitionSizeResponse = string;

export type PutV1InternalConfigurationsNameByConfigNameValueByConfigValueData = {
    configName: string;
    configValue: number;
};

export type PutV1InternalConfigurationsNameByConfigNameValueByConfigValueResponse = unknown;

export type DeleteV1InternalExternaleventsResponse = unknown;

export type GetV1InternalExternaleventsData = {
    aggregateRootId?: number;
    category?: string;
    idempotencyKey?: string;
    type?: string;
};

export type GetV1InternalExternaleventsResponse = Array<ExternalEventResponse>;

export type GetV1InternalLoanStatusByStatusIdData = {
    statusId: number;
};

export type GetV1InternalLoanStatusByStatusIdResponse = Array<(number)>;

export type GetV1InternalLoanByLoanIdAdvancedPaymentAllocationRulesData = {
    loanId: number;
};

export type GetV1InternalLoanByLoanIdAdvancedPaymentAllocationRulesResponse = Array<AdvancedPaymentData>;

export type GetV1InternalLoanByLoanIdAuditData = {
    loanId: number;
};

export type GetV1InternalLoanByLoanIdAuditResponse = AuditData;

export type GetV1InternalLoanByLoanIdTransactionByTransactionIdAuditData = {
    loanId: number;
    transactionId: number;
};

export type GetV1InternalLoanByLoanIdTransactionByTransactionIdAuditResponse = AuditData;

export type PostV1InternalLoansByLoanIdPlaceLockByLockOwnerData = {
    loanId: number;
    lockOwner: string;
    requestBody?: string;
};

export type PostV1InternalLoansByLoanIdPlaceLockByLockOwnerResponse = unknown;

export type GetV1OfficetransactionsResponse = string;

export type PostV1OfficetransactionsData = {
    requestBody?: string;
};

export type PostV1OfficetransactionsResponse = string;

export type GetV1OfficetransactionsTemplateResponse = string;

export type DeleteV1OfficetransactionsByTransactionIdData = {
    transactionId: number;
};

export type DeleteV1OfficetransactionsByTransactionIdResponse = string;

export type GetV1SmscampaignsData = {
    limit?: number;
    offset?: number;
    orderBy?: string;
    sortOrder?: string;
};

export type GetV1SmscampaignsResponse = SmsCampaignData;

export type PostV1SmscampaignsData = {
    requestBody: CommandWrapper;
};

export type PostV1SmscampaignsResponse = CommandProcessingResult;

export type PostV1SmscampaignsPreviewData = {
    requestBody?: SmsCampaignPreviewDto;
};

export type PostV1SmscampaignsPreviewResponse = CampaignPreviewData;

export type GetV1SmscampaignsTemplateResponse = SmsCampaignData;

export type DeleteV1SmscampaignsByCampaignIdData = {
    campaignId: number;
};

export type DeleteV1SmscampaignsByCampaignIdResponse = CommandProcessingResult;

export type PostV1SmscampaignsByCampaignIdData = {
    campaignId: number;
    command?: string;
};

export type PostV1SmscampaignsByCampaignIdResponse = CommandProcessingResult;

export type PutV1SmscampaignsByCampaignIdData = {
    campaignId: number;
    requestBody: CommandWrapper;
};

export type PutV1SmscampaignsByCampaignIdResponse = CommandProcessingResult;

export type GetV1SmscampaignsByResourceIdData = {
    resourceId: number;
};

export type GetV1SmscampaignsByResourceIdResponse = SmsCampaignData;

export type GetV1TwofactorConfigureResponse = string;

export type PutV1TwofactorConfigureData = {
    requestBody?: string;
};

export type PutV1TwofactorConfigureResponse = string;

export type DeleteV1ByEntityByEntityIdImagesData = {
    entity: string;
    entityId: number;
};

export type DeleteV1ByEntityByEntityIdImagesResponse = CommandProcessingResult;

export type GetV1ByEntityByEntityIdImagesData = {
    accept?: string;
    entity: string;
    entityId: number;
    maxHeight?: number;
    maxWidth?: number;
    output?: string;
};

export type GetV1ByEntityByEntityIdImagesResponse = unknown;

export type PostV1ByEntityByEntityIdImagesData = {
    contentLength?: number;
    entity: string;
    entityId: number;
    /**
     * Upload new client image
     */
    formData?: UploadRequest;
};

export type PostV1ByEntityByEntityIdImagesResponse = CommandProcessingResult;

export type PutV1ByEntityByEntityIdImagesData = {
    contentLength?: number;
    entity: string;
    entityId: number;
    /**
     * Update client image
     */
    formData?: UploadRequest;
};

export type PutV1ByEntityByEntityIdImagesResponse = CommandProcessingResult;

export type GetV1CreditBureauConfigurationResponse = string;

export type GetV1CreditBureauConfigurationConfigByOrganisationCreditBureauIdData = {
    organisationCreditBureauId: number;
};

export type GetV1CreditBureauConfigurationConfigByOrganisationCreditBureauIdResponse = string;

export type PutV1CreditBureauConfigurationConfigurationByConfigurationIdData = {
    configurationId: number;
    requestBody?: string;
};

export type PutV1CreditBureauConfigurationConfigurationByConfigurationIdResponse = string;

export type PostV1CreditBureauConfigurationConfigurationByCreditBureauIdData = {
    creditBureauId: number;
    requestBody?: string;
};

export type PostV1CreditBureauConfigurationConfigurationByCreditBureauIdResponse = string;

export type GetV1CreditBureauConfigurationLoanProductResponse = string;

export type GetV1CreditBureauConfigurationLoanProductByLoanProductIdData = {
    loanProductId: number;
};

export type GetV1CreditBureauConfigurationLoanProductByLoanProductIdResponse = string;

export type GetV1CreditBureauConfigurationMappingsResponse = string;

export type PutV1CreditBureauConfigurationMappingsData = {
    requestBody?: string;
};

export type PutV1CreditBureauConfigurationMappingsResponse = string;

export type PostV1CreditBureauConfigurationMappingsByOrganisationCreditBureauIdData = {
    organisationCreditBureauId: number;
    requestBody?: string;
};

export type PostV1CreditBureauConfigurationMappingsByOrganisationCreditBureauIdResponse = string;

export type GetV1CreditBureauConfigurationOrganisationCreditBureauResponse = string;

export type PutV1CreditBureauConfigurationOrganisationCreditBureauData = {
    requestBody?: string;
};

export type PutV1CreditBureauConfigurationOrganisationCreditBureauResponse = string;

export type PostV1CreditBureauConfigurationOrganisationCreditBureauByOrganisationCreditBureauIdData = {
    organisationCreditBureauId: number;
    requestBody?: string;
};

export type PostV1CreditBureauConfigurationOrganisationCreditBureauByOrganisationCreditBureauIdResponse = string;

export type GetV1AccountingrulesResponse = Array<AccountingRuleData>;

export type PostV1AccountingrulesData = {
    requestBody?: AccountRuleRequest;
};

export type PostV1AccountingrulesResponse = PostAccountingRulesResponse;

export type GetV1AccountingrulesTemplateResponse = AccountingRuleData;

export type DeleteV1AccountingrulesByAccountingRuleIdData = {
    /**
     * accountingRuleId
     */
    accountingRuleId: number;
};

export type DeleteV1AccountingrulesByAccountingRuleIdResponse = DeleteAccountingRulesResponse;

export type GetV1AccountingrulesByAccountingRuleIdData = {
    /**
     * accountingRuleId
     */
    accountingRuleId: number;
};

export type GetV1AccountingrulesByAccountingRuleIdResponse = AccountingRuleData;

export type PutV1AccountingrulesByAccountingRuleIdData = {
    /**
     * accountingRuleId
     */
    accountingRuleId: number;
    requestBody?: AccountRuleRequest;
};

export type PutV1AccountingrulesByAccountingRuleIdResponse = PutAccountingRulesResponse;

export type GetV1AccountnumberformatsResponse = Array<GetAccountNumberFormatsIdResponse>;

export type PostV1AccountnumberformatsData = {
    requestBody?: PostAccountNumberFormatsRequest;
};

export type PostV1AccountnumberformatsResponse = PostAccountNumberFormatsResponse;

export type GetV1AccountnumberformatsTemplateResponse = GetAccountNumberFormatsResponseTemplate;

export type DeleteV1AccountnumberformatsByAccountNumberFormatIdData = {
    /**
     * accountNumberFormatId
     */
    accountNumberFormatId: number;
};

export type DeleteV1AccountnumberformatsByAccountNumberFormatIdResponse = DeleteAccountNumberFormatsResponse;

export type GetV1AccountnumberformatsByAccountNumberFormatIdData = {
    /**
     * accountNumberFormatId
     */
    accountNumberFormatId: number;
};

export type GetV1AccountnumberformatsByAccountNumberFormatIdResponse = GetAccountNumberFormatsIdResponse;

export type PutV1AccountnumberformatsByAccountNumberFormatIdData = {
    /**
     * accountNumberFormatId
     */
    accountNumberFormatId: number;
    requestBody: PutAccountNumberFormatsRequest;
};

export type PutV1AccountnumberformatsByAccountNumberFormatIdResponse = PutAccountNumberFormatsResponse;

export type GetV1AccountsByTypeData = {
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * type
     */
    type: string;
};

export type GetV1AccountsByTypeResponse = GetAccountsTypeResponse;

export type PostV1AccountsByTypeData = {
    requestBody: AccountRequest;
    /**
     * type
     */
    type: string;
};

export type PostV1AccountsByTypeResponse = PostAccountsTypeResponse;

export type GetV1AccountsByTypeDownloadtemplateData = {
    dateFormat?: string;
    officeId?: number;
    /**
     * type
     */
    type: string;
};

export type GetV1AccountsByTypeDownloadtemplateResponse = unknown;

export type GetV1AccountsByTypeTemplateData = {
    /**
     * clientId
     */
    clientId?: number;
    /**
     * productId
     */
    productId?: number;
    /**
     * type
     */
    type: string;
};

export type GetV1AccountsByTypeTemplateResponse = GetAccountsTypeTemplateResponse;

export type PostV1AccountsByTypeUploadtemplateData = {
    /**
     * Upload shared accounts template
     */
    formData?: UploadRequest;
    /**
     * type
     */
    type: string;
};

export type PostV1AccountsByTypeUploadtemplateResponse = number;

export type GetV1AccountsByTypeByAccountIdData = {
    /**
     * accountId
     */
    accountId: number;
    /**
     * type
     */
    type: string;
};

export type GetV1AccountsByTypeByAccountIdResponse = GetAccountsTypeAccountIdResponse;

export type PostV1AccountsByTypeByAccountIdData = {
    /**
     * accountId
     */
    accountId: number;
    /**
     * command
     */
    command?: string;
    requestBody: PostAccountsTypeAccountIdRequest;
    /**
     * type
     */
    type: string;
};

export type PostV1AccountsByTypeByAccountIdResponse = PostAccountsTypeAccountIdResponse;

export type PutV1AccountsByTypeByAccountIdData = {
    /**
     * accountId
     */
    accountId: number;
    requestBody: PutAccountsTypeAccountIdRequest;
    /**
     * type
     */
    type: string;
};

export type PutV1AccountsByTypeByAccountIdResponse = PutAccountsTypeAccountIdResponse;

export type GetV1AccounttransfersData = {
    /**
     * accountDetailId
     */
    accountDetailId?: number;
    /**
     * externalId
     */
    externalId?: string;
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * sortOrder
     */
    sortOrder?: string;
};

export type GetV1AccounttransfersResponse = GetAccountTransfersResponse;

export type PostV1AccounttransfersData = {
    requestBody: AccountTransferRequest;
};

export type PostV1AccounttransfersResponse = PostAccountTransfersResponse;

export type PostV1AccounttransfersRefundByTransferData = {
    requestBody: AccountTransferRequest;
};

export type PostV1AccounttransfersRefundByTransferResponse = PostAccountTransfersRefundByTransferResponse;

export type GetV1AccounttransfersTemplateData = {
    fromAccountId?: number;
    fromAccountType?: number;
    fromClientId?: number;
    fromOfficeId?: number;
    toAccountId?: number;
    toAccountType?: number;
    toClientId?: number;
    toOfficeId?: number;
};

export type GetV1AccounttransfersTemplateResponse = GetAccountTransfersTemplateResponse;

export type GetV1AccounttransfersTemplateRefundByTransferData = {
    fromAccountId?: number;
    fromAccountType?: number;
    fromClientId?: number;
    fromOfficeId?: number;
    toAccountId?: number;
    toAccountType?: number;
    toClientId?: number;
    toOfficeId?: number;
};

export type GetV1AccounttransfersTemplateRefundByTransferResponse = GetAccountTransfersTemplateRefundByTransferResponse;

export type GetV1AccounttransfersByTransferIdData = {
    /**
     * transferId
     */
    transferId: number;
};

export type GetV1AccounttransfersByTransferIdResponse = GetAccountTransfersPageItems;

export type GetV1AdhocqueryResponse = Array<AdHocData>;

export type PostV1AdhocqueryData = {
    requestBody?: AdHocRequest;
};

export type PostV1AdhocqueryResponse = CommandProcessingResult;

export type GetV1AdhocqueryTemplateResponse = AdHocData;

export type DeleteV1AdhocqueryByAdHocIdData = {
    /**
     * adHocId
     */
    adHocId: number;
};

export type DeleteV1AdhocqueryByAdHocIdResponse = CommandProcessingResult;

export type GetV1AdhocqueryByAdHocIdData = {
    /**
     * adHocId
     */
    adHocId: number;
};

export type GetV1AdhocqueryByAdHocIdResponse = AdHocData;

export type PutV1AdhocqueryByAdHocIdData = {
    /**
     * adHocId
     */
    adHocId: number;
    requestBody?: AdHocRequest;
};

export type PutV1AdhocqueryByAdHocIdResponse = CommandProcessingResult;

export type GetV1AuditsData = {
    actionName?: string;
    checkerDateTimeFrom?: string;
    checkerDateTimeTo?: string;
    checkerId?: number;
    clientId?: number;
    dateFormat?: string;
    entityName?: string;
    groupId?: number;
    /**
     * limit
     */
    limit?: number;
    loanId?: number;
    locale?: string;
    makerDateTimeFrom?: string;
    makerDateTimeTo?: string;
    makerId?: number;
    officeId?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * paged
     */
    paged?: boolean;
    processingResult?: string;
    resourceId?: number;
    savingsAccountId?: number;
    /**
     * sortOrder
     */
    sortOrder?: string;
    status?: string;
};

export type GetV1AuditsResponse = string;

export type GetV1AuditsSearchtemplateResponse = AuditSearchData;

export type GetV1AuditsByAuditIdData = {
    auditId: number;
};

export type GetV1AuditsByAuditIdResponse = AuditData;

export type PostV1AuthenticationData = {
    requestBody: PostAuthenticationRequest;
    returnClientList?: boolean;
};

export type PostV1AuthenticationResponse = PostAuthenticationResponse;

export type PostV1BatchesData = {
    /**
     * enclosingTransaction
     */
    enclosingTransaction?: boolean;
    requestBody: Array<BatchRequest>;
};

export type PostV1BatchesResponse = Array<BatchResponse>;

export type GetV1BusinessdateResponse = Array<BusinessDateResponse>;

export type PostV1BusinessdateData = {
    idempotencyKey?: string;
    requestBody?: BusinessDateUpdateRequest;
};

export type PostV1BusinessdateResponse = BusinessDateUpdateResponse;

export type GetV1BusinessdateByTypeData = {
    /**
     * type
     */
    type: string;
};

export type GetV1BusinessdateByTypeResponse = BusinessDateResponse;

export type GetV1CachesResponse = Array<CacheData>;

export type PutV1CachesData = {
    requestBody?: CacheSwitchRequest;
};

export type PutV1CachesResponse = CacheSwitchResponse;

export type GetV1CashiersData = {
    date?: string;
    officeId?: number;
    staffId?: number;
    tellerId?: number;
};

export type GetV1CashiersResponse = Array<CashierData>;

export type GetV1CashiersjournalData = {
    cashierId?: number;
    dateRange?: string;
    officeId?: number;
    tellerId?: number;
};

export type GetV1CashiersjournalResponse = Array<TellerJournalData>;

export type GetV1CentersData = {
    /**
     * dateFormat
     */
    dateFormat?: string;
    /**
     * externalId
     */
    externalId?: string;
    /**
     * limit
     */
    limit?: number;
    /**
     * locale
     */
    locale?: string;
    /**
     * meetingDate
     */
    meetingDate?: DateParam;
    /**
     * name
     */
    name?: string;
    /**
     * officeId
     */
    officeId?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * paged
     */
    paged?: boolean;
    /**
     * sortOrder
     */
    sortOrder?: string;
    /**
     * staffId
     */
    staffId?: number;
    /**
     * underHierarchy
     */
    underHierarchy?: string;
};

export type GetV1CentersResponse = GetCentersResponse;

export type PostV1CentersData = {
    requestBody: PostCentersRequest;
};

export type PostV1CentersResponse = PostCentersResponse;

export type GetV1CentersDownloadtemplateData = {
    dateFormat?: string;
    officeId?: number;
    staffId?: number;
};

export type GetV1CentersDownloadtemplateResponse = unknown;

export type GetV1CentersTemplateData = {
    /**
     * command
     */
    command?: string;
    /**
     * officeId
     */
    officeId?: number;
    /**
     * staffInSelectedOfficeOnly
     */
    staffInSelectedOfficeOnly?: boolean;
};

export type GetV1CentersTemplateResponse = GetCentersTemplateResponse;

export type PostV1CentersUploadtemplateData = {
    /**
     * Upload centers template
     */
    formData?: UploadRequest;
};

export type PostV1CentersUploadtemplateResponse = string;

export type DeleteV1CentersByCenterIdData = {
    /**
     * centerId
     */
    centerId: number;
};

export type DeleteV1CentersByCenterIdResponse = DeleteCentersCenterIdResponse;

export type GetV1CentersByCenterIdData = {
    /**
     * centerId
     */
    centerId: number;
    /**
     * staffInSelectedOfficeOnly
     */
    staffInSelectedOfficeOnly?: boolean;
};

export type GetV1CentersByCenterIdResponse = GetCentersCenterIdResponse;

export type PostV1CentersByCenterIdData = {
    /**
     * centerId
     */
    centerId: number;
    /**
     * command
     */
    command?: string;
    requestBody: PostCentersCenterIdRequest;
};

export type PostV1CentersByCenterIdResponse = PostCentersCenterIdResponse;

export type PutV1CentersByCenterIdData = {
    /**
     * centerId
     */
    centerId: number;
    requestBody: PutCentersCenterIdRequest;
};

export type PutV1CentersByCenterIdResponse = PutCentersCenterIdResponse;

export type GetV1CentersByCenterIdAccountsData = {
    /**
     * centerId
     */
    centerId: number;
};

export type GetV1CentersByCenterIdAccountsResponse = GetCentersCenterIdAccountsResponse;

export type GetV1ChargesResponse = Array<ChargeData>;

export type PostV1ChargesData = {
    requestBody: ChargeRequest;
};

export type PostV1ChargesResponse = PostChargesResponse;

export type GetV1ChargesTemplateResponse = ChargeData;

export type DeleteV1ChargesByChargeIdData = {
    /**
     * chargeId
     */
    chargeId: number;
};

export type DeleteV1ChargesByChargeIdResponse = DeleteChargesChargeIdResponse;

export type GetV1ChargesByChargeIdData = {
    /**
     * chargeId
     */
    chargeId: number;
};

export type GetV1ChargesByChargeIdResponse = GetChargesResponse;

export type PutV1ChargesByChargeIdData = {
    /**
     * chargeId
     */
    chargeId: number;
    requestBody: ChargeRequest;
};

export type PutV1ChargesByChargeIdResponse = PutChargesChargeIdResponse;

export type GetV1ClientAddressesTemplateResponse = AddressData;

export type GetV1ClientByClientidAddressesData = {
    /**
     * clientId
     */
    clientid: number;
    /**
     * status
     */
    status?: string;
    /**
     * type
     */
    type?: number;
};

export type GetV1ClientByClientidAddressesResponse = Array<AddressData>;

export type PostV1ClientByClientidAddressesData = {
    /**
     * clientId
     */
    clientid: number;
    requestBody: ClientAddressRequest;
    /**
     * type
     */
    type?: number;
};

export type PostV1ClientByClientidAddressesResponse = PostClientClientIdAddressesResponse;

export type PutV1ClientByClientidAddressesData = {
    /**
     * clientId
     */
    clientid: number;
    requestBody: ClientAddressRequest;
};

export type PutV1ClientByClientidAddressesResponse = PutClientClientIdAddressesResponse;

export type GetV1ClientsData = {
    /**
     * displayName
     */
    displayName?: string;
    /**
     * externalId
     */
    externalId?: string;
    /**
     * firstName
     */
    firstName?: string;
    /**
     * lastName
     */
    lastName?: string;
    legalForm?: number;
    /**
     * limit
     */
    limit?: number;
    /**
     * officeId
     */
    officeId?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * orphansOnly
     */
    orphansOnly?: boolean;
    /**
     * sortOrder
     */
    sortOrder?: string;
    /**
     * status
     */
    status?: string;
    /**
     * underHierarchy
     */
    underHierarchy?: string;
};

export type GetV1ClientsResponse = GetClientsResponse;

export type PostV1ClientsData = {
    requestBody: PostClientsRequest;
};

export type PostV1ClientsResponse = PostClientsResponse;

export type GetV1ClientsDownloadtemplateData = {
    dateFormat?: string;
    legalFormType?: string;
    officeId?: number;
    staffId?: number;
};

export type GetV1ClientsDownloadtemplateResponse = unknown;

export type DeleteV1ClientsExternalIdByExternalIdData = {
    /**
     * externalId
     */
    externalId: string;
};

export type DeleteV1ClientsExternalIdByExternalIdResponse = DeleteClientsClientIdResponse;

export type GetV1ClientsExternalIdByExternalIdData = {
    /**
     * externalId
     */
    externalId: string;
    /**
     * staffInSelectedOfficeOnly
     */
    staffInSelectedOfficeOnly?: boolean;
};

export type GetV1ClientsExternalIdByExternalIdResponse = GetClientsClientIdResponse;

export type PostV1ClientsExternalIdByExternalIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * externalId
     */
    externalId: string;
    requestBody: PostClientsClientIdRequest;
};

export type PostV1ClientsExternalIdByExternalIdResponse = PostClientsClientIdResponse;

export type PutV1ClientsExternalIdByExternalIdData = {
    /**
     * externalId
     */
    externalId: string;
    requestBody: PutClientsClientIdRequest;
};

export type PutV1ClientsExternalIdByExternalIdResponse = PutClientsClientIdResponse;

export type GetV1ClientsExternalIdByExternalIdAccountsData = {
    /**
     * externalId
     */
    externalId: string;
};

export type GetV1ClientsExternalIdByExternalIdAccountsResponse = GetClientsClientIdAccountsResponse;

export type GetV1ClientsExternalIdByExternalIdObligeedetailsData = {
    externalId: string;
};

export type GetV1ClientsExternalIdByExternalIdObligeedetailsResponse = GetClientObligeeDetailsResponse;

export type GetV1ClientsExternalIdByExternalIdTransferproposaldateData = {
    externalId: string;
};

export type GetV1ClientsExternalIdByExternalIdTransferproposaldateResponse = GetClientTransferProposalDateResponse;

export type GetV1ClientsTemplateData = {
    /**
     * commandParam
     */
    commandParam?: string;
    /**
     * officeId
     */
    officeId?: number;
    /**
     * staffInSelectedOfficeOnly
     */
    staffInSelectedOfficeOnly?: boolean;
};

export type GetV1ClientsTemplateResponse = GetClientsTemplateResponse;

export type PostV1ClientsUploadtemplateData = {
    /**
     * Upload client template
     */
    formData?: UploadRequest;
    legalFormType?: string;
};

export type PostV1ClientsUploadtemplateResponse = string;

export type DeleteV1ClientsByClientIdData = {
    /**
     * clientId
     */
    clientId: number;
};

export type DeleteV1ClientsByClientIdResponse = DeleteClientsClientIdResponse;

export type GetV1ClientsByClientIdData = {
    /**
     * clientId
     */
    clientId: number;
    /**
     * staffInSelectedOfficeOnly
     */
    staffInSelectedOfficeOnly?: boolean;
};

export type GetV1ClientsByClientIdResponse = GetClientsClientIdResponse;

export type PostV1ClientsByClientIdData = {
    /**
     * clientId
     */
    clientId: number;
    /**
     * command
     */
    command?: string;
    requestBody: PostClientsClientIdRequest;
};

export type PostV1ClientsByClientIdResponse = PostClientsClientIdResponse;

export type PutV1ClientsByClientIdData = {
    /**
     * clientId
     */
    clientId: number;
    requestBody: PutClientsClientIdRequest;
};

export type PutV1ClientsByClientIdResponse = PutClientsClientIdResponse;

export type GetV1ClientsByClientIdAccountsData = {
    /**
     * clientId
     */
    clientId: number;
};

export type GetV1ClientsByClientIdAccountsResponse = GetClientsClientIdAccountsResponse;

export type GetV1ClientsByClientIdObligeedetailsData = {
    clientId: number;
};

export type GetV1ClientsByClientIdObligeedetailsResponse = GetClientObligeeDetailsResponse;

export type GetV1ClientsByClientIdTransferproposaldateData = {
    clientId: number;
};

export type GetV1ClientsByClientIdTransferproposaldateResponse = GetClientTransferProposalDateResponse;

export type GetV1ClientsExternalIdByClientExternalIdTransactionsData = {
    /**
     * clientExternalId
     */
    clientExternalId: string;
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
};

export type GetV1ClientsExternalIdByClientExternalIdTransactionsResponse = GetClientsClientIdTransactionsResponse;

export type GetV1ClientsExternalIdByClientExternalIdTransactionsExternalIdByTransactionExternalIdData = {
    /**
     * clientExternalId
     */
    clientExternalId: string;
    /**
     * transactionExternalId
     */
    transactionExternalId: string;
};

export type GetV1ClientsExternalIdByClientExternalIdTransactionsExternalIdByTransactionExternalIdResponse = GetClientsClientIdTransactionsTransactionIdResponse;

export type PostV1ClientsExternalIdByClientExternalIdTransactionsExternalIdByTransactionExternalIdData = {
    /**
     * clientExternalId
     */
    clientExternalId: string;
    /**
     * command
     */
    command?: string;
    /**
     * transactionExternalId
     */
    transactionExternalId: string;
};

export type PostV1ClientsExternalIdByClientExternalIdTransactionsExternalIdByTransactionExternalIdResponse = PostClientsClientIdTransactionsTransactionIdResponse;

export type GetV1ClientsExternalIdByClientExternalIdTransactionsByTransactionIdData = {
    /**
     * clientExternalId
     */
    clientExternalId: string;
    /**
     * transactionId
     */
    transactionId: number;
};

export type GetV1ClientsExternalIdByClientExternalIdTransactionsByTransactionIdResponse = GetClientsClientIdTransactionsTransactionIdResponse;

export type PostV1ClientsExternalIdByClientExternalIdTransactionsByTransactionIdData = {
    /**
     * clientExternalId
     */
    clientExternalId: string;
    /**
     * command
     */
    command?: string;
    /**
     * transactionId
     */
    transactionId: number;
};

export type PostV1ClientsExternalIdByClientExternalIdTransactionsByTransactionIdResponse = PostClientsClientIdTransactionsTransactionIdResponse;

export type GetV1ClientsByClientIdTransactionsData = {
    /**
     * clientId
     */
    clientId: number;
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
};

export type GetV1ClientsByClientIdTransactionsResponse = GetClientsClientIdTransactionsResponse;

export type GetV1ClientsByClientIdTransactionsExternalIdByTransactionExternalIdData = {
    /**
     * clientId
     */
    clientId: number;
    /**
     * transactionExternalId
     */
    transactionExternalId: string;
};

export type GetV1ClientsByClientIdTransactionsExternalIdByTransactionExternalIdResponse = GetClientsClientIdTransactionsTransactionIdResponse;

export type PostV1ClientsByClientIdTransactionsExternalIdByTransactionExternalIdData = {
    /**
     * clientId
     */
    clientId: number;
    /**
     * command
     */
    command?: string;
    /**
     * transactionExternalId
     */
    transactionExternalId: string;
};

export type PostV1ClientsByClientIdTransactionsExternalIdByTransactionExternalIdResponse = PostClientsClientIdTransactionsTransactionIdResponse;

export type GetV1ClientsByClientIdTransactionsByTransactionIdData = {
    /**
     * clientId
     */
    clientId: number;
    /**
     * transactionId
     */
    transactionId: number;
};

export type GetV1ClientsByClientIdTransactionsByTransactionIdResponse = GetClientsClientIdTransactionsTransactionIdResponse;

export type PostV1ClientsByClientIdTransactionsByTransactionIdData = {
    /**
     * clientId
     */
    clientId: number;
    /**
     * command
     */
    command?: string;
    /**
     * transactionId
     */
    transactionId: number;
};

export type PostV1ClientsByClientIdTransactionsByTransactionIdResponse = PostClientsClientIdTransactionsTransactionIdResponse;

export type GetV1ClientsByClientIdChargesData = {
    /**
     * chargeStatus
     */
    chargeStatus?: string;
    /**
     * clientId
     */
    clientId: number;
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * pendingPayment
     */
    pendingPayment?: boolean;
};

export type GetV1ClientsByClientIdChargesResponse = GetClientsClientIdChargesResponse;

export type PostV1ClientsByClientIdChargesData = {
    /**
     * clientId
     */
    clientId: number;
    requestBody: PostClientsClientIdChargesRequest;
};

export type PostV1ClientsByClientIdChargesResponse = PostClientsClientIdChargesResponse;

export type GetV1ClientsByClientIdChargesTemplateData = {
    /**
     * clientId
     */
    clientId: number;
};

export type GetV1ClientsByClientIdChargesTemplateResponse = string;

export type DeleteV1ClientsByClientIdChargesByChargeIdData = {
    /**
     * chargeId
     */
    chargeId: number;
    /**
     * clientId
     */
    clientId: number;
};

export type DeleteV1ClientsByClientIdChargesByChargeIdResponse = DeleteClientsClientIdChargesChargeIdResponse;

export type GetV1ClientsByClientIdChargesByChargeIdData = {
    /**
     * chargeId
     */
    chargeId: number;
    /**
     * clientId
     */
    clientId: number;
};

export type GetV1ClientsByClientIdChargesByChargeIdResponse = GetClientsChargesPageItems;

export type PostV1ClientsByClientIdChargesByChargeIdData = {
    /**
     * chargeId
     */
    chargeId: number;
    /**
     * clientId
     */
    clientId: number;
    /**
     * command
     */
    command?: string;
    requestBody: PostClientsClientIdChargesChargeIdRequest;
};

export type PostV1ClientsByClientIdChargesByChargeIdResponse = PostClientsClientIdChargesChargeIdResponse;

export type GetV1ClientsByClientIdCollateralsData = {
    /**
     * clientId
     */
    clientId: number;
    /**
     * prodId
     */
    prodId?: number;
};

export type GetV1ClientsByClientIdCollateralsResponse = Array<ClientCollateralManagementData>;

export type PostV1ClientsByClientIdCollateralsData = {
    /**
     * clientId
     */
    clientId: number;
    requestBody: ClientCollateralRequest;
};

export type PostV1ClientsByClientIdCollateralsResponse = PostClientCollateralResponse;

export type GetV1ClientsByClientIdCollateralsTemplateData = {
    /**
     * clientId
     */
    clientId: number;
};

export type GetV1ClientsByClientIdCollateralsTemplateResponse = Array<LoanCollateralTemplateData>;

export type GetV1ClientsByClientIdCollateralsByClientCollateralIdData = {
    /**
     * clientCollateralId
     */
    clientCollateralId: number;
    /**
     * clientId
     */
    clientId: number;
};

export type GetV1ClientsByClientIdCollateralsByClientCollateralIdResponse = ClientCollateralManagementData;

export type DeleteV1ClientsByClientIdCollateralsByCollateralIdData = {
    /**
     * clientId
     */
    clientId: number;
    /**
     * collateralId
     */
    collateralId: number;
};

export type DeleteV1ClientsByClientIdCollateralsByCollateralIdResponse = DeleteClientCollateralResponse;

export type PutV1ClientsByClientIdCollateralsByCollateralIdData = {
    /**
     * clientId
     */
    clientId: number;
    /**
     * collateralId
     */
    collateralId: number;
    requestBody: UpdateClientCollateralRequest;
};

export type PutV1ClientsByClientIdCollateralsByCollateralIdResponse = PutClientCollateralResponse;

export type GetV1ClientsByClientIdFamilymembersData = {
    clientId: number;
};

export type GetV1ClientsByClientIdFamilymembersResponse = Array<ClientFamilyMembersData>;

export type PostV1ClientsByClientIdFamilymembersData = {
    clientId: number;
    requestBody?: ClientFamilyMemberRequest;
};

export type PostV1ClientsByClientIdFamilymembersResponse = CommandProcessingResult;

export type GetV1ClientsByClientIdFamilymembersTemplateData = {
    clientId: number;
};

export type GetV1ClientsByClientIdFamilymembersTemplateResponse = ClientFamilyMembersData;

export type DeleteV1ClientsByClientIdFamilymembersByFamilyMemberIdData = {
    /**
     * clientId
     */
    clientId: number;
    familyMemberId: number;
};

export type DeleteV1ClientsByClientIdFamilymembersByFamilyMemberIdResponse = CommandProcessingResult;

export type GetV1ClientsByClientIdFamilymembersByFamilyMemberIdData = {
    /**
     * clientId
     */
    clientId: number;
    familyMemberId: number;
};

export type GetV1ClientsByClientIdFamilymembersByFamilyMemberIdResponse = ClientFamilyMembersData;

export type PutV1ClientsByClientIdFamilymembersByFamilyMemberIdData = {
    /**
     * clientId
     */
    clientId: number;
    familyMemberId: number;
    requestBody?: ClientFamilyMemberRequest;
};

export type PutV1ClientsByClientIdFamilymembersByFamilyMemberIdResponse = CommandProcessingResult;

export type GetV1ClientsByClientIdIdentifiersData = {
    /**
     * clientId
     */
    clientId: number;
};

export type GetV1ClientsByClientIdIdentifiersResponse = Array<ClientIdentifierData>;

export type PostV1ClientsByClientIdIdentifiersData = {
    /**
     * clientId
     */
    clientId: number;
    requestBody: PostClientsClientIdIdentifiersRequest;
};

export type PostV1ClientsByClientIdIdentifiersResponse = PostClientsClientIdIdentifiersResponse;

export type GetV1ClientsByClientIdIdentifiersTemplateData = {
    /**
     * clientId
     */
    clientId: number;
};

export type GetV1ClientsByClientIdIdentifiersTemplateResponse = ClientIdentifierData;

export type DeleteV1ClientsByClientIdIdentifiersByIdentifierIdData = {
    /**
     * clientId
     */
    clientId: number;
    /**
     * identifierId
     */
    identifierId: number;
};

export type DeleteV1ClientsByClientIdIdentifiersByIdentifierIdResponse = DeleteClientsClientIdIdentifiersIdentifierIdResponse;

export type GetV1ClientsByClientIdIdentifiersByIdentifierIdData = {
    /**
     * clientId
     */
    clientId: number;
    /**
     * identifierId
     */
    identifierId: number;
};

export type GetV1ClientsByClientIdIdentifiersByIdentifierIdResponse = GetClientsClientIdIdentifiersResponse;

export type PutV1ClientsByClientIdIdentifiersByIdentifierIdData = {
    /**
     * clientId
     */
    clientId: number;
    /**
     * identifierId
     */
    identifierId: number;
    requestBody: ClientIdentifierRequest;
};

export type PutV1ClientsByClientIdIdentifiersByIdentifierIdResponse = PutClientsClientIdIdentifiersIdentifierIdResponse;

export type GetV1CodesResponse = Array<GetCodesResponse>;

export type PostV1CodesData = {
    requestBody: PostCodesRequest;
};

export type PostV1CodesResponse = PostCodesResponse;

export type DeleteV1CodesByCodeIdData = {
    /**
     * codeId
     */
    codeId: number;
};

export type DeleteV1CodesByCodeIdResponse = DeleteCodesResponse;

export type GetV1CodesByCodeIdData = {
    /**
     * codeId
     */
    codeId: number;
};

export type GetV1CodesByCodeIdResponse = GetCodesResponse;

export type PutV1CodesByCodeIdData = {
    /**
     * codeId
     */
    codeId: number;
    requestBody: PutCodesRequest;
};

export type PutV1CodesByCodeIdResponse = PutCodesResponse;

export type GetV1CodesByCodeIdCodevaluesData = {
    /**
     * codeId
     */
    codeId: number;
};

export type GetV1CodesByCodeIdCodevaluesResponse = Array<GetCodeValuesDataResponse>;

export type PostV1CodesByCodeIdCodevaluesData = {
    /**
     * codeId
     */
    codeId: number;
    requestBody: PostCodeValuesDataRequest;
};

export type PostV1CodesByCodeIdCodevaluesResponse = PostCodeValueDataResponse;

export type DeleteV1CodesByCodeIdCodevaluesByCodeValueIdData = {
    /**
     * codeId
     */
    codeId: number;
    /**
     * codeValueId
     */
    codeValueId: number;
};

export type DeleteV1CodesByCodeIdCodevaluesByCodeValueIdResponse = DeleteCodeValueDataResponse;

export type GetV1CodesByCodeIdCodevaluesByCodeValueIdData = {
    /**
     * codeId
     */
    codeId: number;
    /**
     * codeValueId
     */
    codeValueId: number;
};

export type GetV1CodesByCodeIdCodevaluesByCodeValueIdResponse = GetCodeValuesDataResponse;

export type PutV1CodesByCodeIdCodevaluesByCodeValueIdData = {
    /**
     * codeId
     */
    codeId: number;
    /**
     * codeValueId
     */
    codeValueId: number;
    requestBody: PutCodeValuesDataRequest;
};

export type PutV1CodesByCodeIdCodevaluesByCodeValueIdResponse = PutCodeValueDataResponse;

export type GetV1CollateralManagementResponse = Array<CollateralManagementData>;

export type PostV1CollateralManagementData = {
    requestBody: CollateralManagementProductRequest;
};

export type PostV1CollateralManagementResponse = PostCollateralManagementProductResponse;

export type GetV1CollateralManagementTemplateResponse = Array<CurrencyData>;

export type DeleteV1CollateralManagementByCollateralIdData = {
    /**
     * collateralId
     */
    collateralId: number;
};

export type DeleteV1CollateralManagementByCollateralIdResponse = DeleteCollateralProductResponse;

export type GetV1CollateralManagementByCollateralIdData = {
    /**
     * collateralId
     */
    collateralId: number;
};

export type GetV1CollateralManagementByCollateralIdResponse = CollateralManagementData;

export type PutV1CollateralManagementByCollateralIdData = {
    /**
     * collateralId
     */
    collateralId: number;
    requestBody: CollateralProductRequest;
};

export type PutV1CollateralManagementByCollateralIdResponse = PutCollateralProductResponse;

export type PostV1CollectionsheetData = {
    /**
     * command
     */
    command?: string;
    requestBody: CollectionSheetRequest;
};

export type PostV1CollectionsheetResponse = PostCollectionSheetResponse;

export type GetV1ConfigurationsData = {
    /**
     * survey
     */
    survey?: boolean;
};

export type GetV1ConfigurationsResponse = GetGlobalConfigurationsResponse;

export type PutV1ConfigurationsNameByConfigNameData = {
    /**
     * configName
     */
    configName: string;
    requestBody: PutGlobalConfigurationsRequest;
};

export type PutV1ConfigurationsNameByConfigNameResponse = PutGlobalConfigurationsResponse;

export type GetV1ConfigurationsNameByNameData = {
    /**
     * name
     */
    name: string;
};

export type GetV1ConfigurationsNameByNameResponse = GlobalConfigurationPropertyData;

export type GetV1ConfigurationsByConfigIdData = {
    /**
     * configId
     */
    configId: number;
};

export type GetV1ConfigurationsByConfigIdResponse = GlobalConfigurationPropertyData;

export type PutV1ConfigurationsByConfigIdData = {
    /**
     * configId
     */
    configId: number;
    requestBody: PutGlobalConfigurationsRequest;
};

export type PutV1ConfigurationsByConfigIdResponse = PutGlobalConfigurationsResponse;

export type GetV1CurrenciesResponse = CurrencyConfigurationData;

export type PutV1CurrenciesData = {
    requestBody?: CurrencyUpdateRequest;
};

export type PutV1CurrenciesResponse = CurrencyUpdateResponse;

export type GetV1DatatablesData = {
    /**
     * apptable
     */
    apptable?: string;
};

export type GetV1DatatablesResponse = Array<GetDataTablesResponse>;

export type PostV1DatatablesData = {
    requestBody: PostDataTablesRequest;
};

export type PostV1DatatablesResponse = PostDataTablesResponse;

export type PostV1DatatablesDeregisterByDatatableData = {
    /**
     * datatable
     */
    datatable: string;
};

export type PostV1DatatablesDeregisterByDatatableResponse = PutDataTablesResponse;

export type PostV1DatatablesRegisterByDatatableByApptableData = {
    /**
     * apptable
     */
    apptable: string;
    /**
     * datatable
     */
    datatable: string;
    requestBody?: PostDataTablesRegisterDatatableAppTable;
};

export type PostV1DatatablesRegisterByDatatableByApptableResponse = PutDataTablesResponse;

export type DeleteV1DatatablesByDatatableNameData = {
    /**
     * datatableName
     */
    datatableName: string;
};

export type DeleteV1DatatablesByDatatableNameResponse = DeleteDataTablesResponse;

export type PutV1DatatablesByDatatableNameData = {
    /**
     * datatableName
     */
    datatableName: string;
    requestBody: PutDataTablesRequest;
};

export type PutV1DatatablesByDatatableNameResponse = PutDataTablesResponse;

export type GetV1DatatablesByDatatableData = {
    /**
     * datatable
     */
    datatable: string;
};

export type GetV1DatatablesByDatatableResponse = GetDataTablesResponse;

export type GetV1DatatablesByDatatableQueryData = {
    /**
     * columnFilter
     */
    columnFilter?: string;
    /**
     * datatable
     */
    datatable: string;
    /**
     * resultColumns
     */
    resultColumns?: string;
    /**
     * valueFilter
     */
    valueFilter?: string;
};

export type GetV1DatatablesByDatatableQueryResponse = string;

export type PostV1DatatablesByDatatableQueryData = {
    /**
     * datatable
     */
    datatable: string;
    requestBody?: PagedLocalRequestAdvancedQueryData;
};

export type PostV1DatatablesByDatatableQueryResponse = string;

export type DeleteV1DatatablesByDatatableByApptableIdData = {
    /**
     * apptableId
     */
    apptableId: number;
    /**
     * datatable
     */
    datatable: string;
};

export type DeleteV1DatatablesByDatatableByApptableIdResponse = DeleteDataTablesDatatableAppTableIdResponse;

export type GetV1DatatablesByDatatableByApptableIdData = {
    /**
     * apptableId
     */
    apptableId: number;
    /**
     * datatable
     */
    datatable: string;
    /**
     * order
     */
    order?: string;
};

export type GetV1DatatablesByDatatableByApptableIdResponse = string;

export type PostV1DatatablesByDatatableByApptableIdData = {
    /**
     * apptableId
     */
    apptableId: number;
    /**
     * datatable
     */
    datatable: string;
    /**
     * {
     * "BusinessDescription": "Livestock sales",
     * "Comment": "First comment made",
     * "Education_cv": "Primary",
     * "Gender_cd": 6,
     * "HighestRatePaid": 8.5,
     * "NextVisit": "01 October 2012",
     * "YearsinBusiness": 5,
     * "dateFormat": "dd MMMM yyyy",
     * "locale": "en"
     * }
     */
    requestBody: string;
};

export type PostV1DatatablesByDatatableByApptableIdResponse = PostDataTablesAppTableIdResponse;

export type PutV1DatatablesByDatatableByApptableIdData = {
    /**
     * apptableId
     */
    apptableId: number;
    /**
     * datatable
     */
    datatable: string;
    requestBody: string;
};

export type PutV1DatatablesByDatatableByApptableIdResponse = PutDataTablesAppTableIdResponse;

export type DeleteV1DatatablesByDatatableByApptableIdByDatatableIdData = {
    /**
     * apptableId
     */
    apptableId: number;
    /**
     * datatable
     */
    datatable: string;
    /**
     * datatableId
     */
    datatableId: number;
};

export type DeleteV1DatatablesByDatatableByApptableIdByDatatableIdResponse = DeleteDataTablesDatatableAppTableIdDatatableIdResponse;

export type GetV1DatatablesByDatatableByApptableIdByDatatableIdData = {
    apptableId: number;
    datatable: string;
    datatableId: number;
    /**
     * Optional flag to format the response
     */
    genericResultSet?: boolean;
    order?: string;
};

export type GetV1DatatablesByDatatableByApptableIdByDatatableIdResponse = string;

export type PutV1DatatablesByDatatableByApptableIdByDatatableIdData = {
    /**
     * apptableId
     */
    apptableId: number;
    /**
     * datatable
     */
    datatable: string;
    /**
     * datatableId
     */
    datatableId: number;
    requestBody: string;
};

export type PutV1DatatablesByDatatableByApptableIdByDatatableIdResponse = PutDataTablesAppTableIdDatatableIdResponse;

export type GetV1DelinquencyBucketsResponse = Array<DelinquencyBucketData>;

export type PostV1DelinquencyBucketsData = {
    requestBody: DelinquencyBucketRequest;
};

export type PostV1DelinquencyBucketsResponse = PostDelinquencyBucketResponse;

export type DeleteV1DelinquencyBucketsByDelinquencyBucketIdData = {
    /**
     * delinquencyBucketId
     */
    delinquencyBucketId: number;
};

export type DeleteV1DelinquencyBucketsByDelinquencyBucketIdResponse = DeleteDelinquencyBucketResponse;

export type GetV1DelinquencyBucketsByDelinquencyBucketIdData = {
    /**
     * delinquencyBucketId
     */
    delinquencyBucketId: number;
};

export type GetV1DelinquencyBucketsByDelinquencyBucketIdResponse = DelinquencyBucketData;

export type PutV1DelinquencyBucketsByDelinquencyBucketIdData = {
    /**
     * delinquencyBucketId
     */
    delinquencyBucketId: number;
    requestBody: DelinquencyBucketRequest;
};

export type PutV1DelinquencyBucketsByDelinquencyBucketIdResponse = PutDelinquencyBucketResponse;

export type GetV1DelinquencyRangesResponse = Array<DelinquencyRangeData>;

export type PostV1DelinquencyRangesData = {
    requestBody: DelinquencyRangeRequest;
};

export type PostV1DelinquencyRangesResponse = PostDelinquencyRangeResponse;

export type DeleteV1DelinquencyRangesByDelinquencyRangeIdData = {
    /**
     * delinquencyRangeId
     */
    delinquencyRangeId: number;
};

export type DeleteV1DelinquencyRangesByDelinquencyRangeIdResponse = DeleteDelinquencyRangeResponse;

export type GetV1DelinquencyRangesByDelinquencyRangeIdData = {
    /**
     * delinquencyRangeId
     */
    delinquencyRangeId: number;
};

export type GetV1DelinquencyRangesByDelinquencyRangeIdResponse = DelinquencyRangeData;

export type PutV1DelinquencyRangesByDelinquencyRangeIdData = {
    /**
     * delinquencyRangeId
     */
    delinquencyRangeId: number;
    requestBody: DelinquencyRangeRequest;
};

export type PutV1DelinquencyRangesByDelinquencyRangeIdResponse = PutDelinquencyRangeResponse;

export type GetV1EntityDatatableChecksData = {
    /**
     * entity
     */
    entity?: string;
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * productId
     */
    productId?: number;
    /**
     * status
     */
    status?: number;
};

export type GetV1EntityDatatableChecksResponse = Array<GetEntityDatatableChecksResponse>;

export type PostV1EntityDatatableChecksData = {
    requestBody: PostEntityDatatableChecksTemplateRequest;
};

export type PostV1EntityDatatableChecksResponse = PostEntityDatatableChecksTemplateResponse;

export type GetV1EntityDatatableChecksTemplateResponse = GetEntityDatatableChecksTemplateResponse;

export type DeleteV1EntityDatatableChecksByEntityDatatableCheckIdData = {
    /**
     * entityDatatableCheckId
     */
    entityDatatableCheckId: number;
};

export type DeleteV1EntityDatatableChecksByEntityDatatableCheckIdResponse = DeleteEntityDatatableChecksTemplateResponse;

export type GetV1EntitytoentitymappingResponse = string;

export type DeleteV1EntitytoentitymappingByMapIdData = {
    mapId: number;
};

export type DeleteV1EntitytoentitymappingByMapIdResponse = string;

export type GetV1EntitytoentitymappingByMapIdData = {
    mapId: number;
};

export type GetV1EntitytoentitymappingByMapIdResponse = string;

export type PutV1EntitytoentitymappingByMapIdData = {
    mapId: number;
    requestBody?: string;
};

export type PutV1EntitytoentitymappingByMapIdResponse = string;

export type GetV1EntitytoentitymappingByMapIdByFromIdByToIdData = {
    fromId: number;
    mapId: number;
    toId: number;
};

export type GetV1EntitytoentitymappingByMapIdByFromIdByToIdResponse = string;

export type PostV1EntitytoentitymappingByRelIdData = {
    relId: number;
    requestBody?: string;
};

export type PostV1EntitytoentitymappingByRelIdResponse = string;

export type GetV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesData = {
    /**
     * attributeKey
     */
    attributeKey?: string;
    /**
     * loanProductId
     */
    loanProductId: number;
};

export type GetV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesResponse = PageExternalTransferLoanProductAttributesData;

export type PostV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesData = {
    /**
     * loanProductId
     */
    loanProductId: number;
    requestBody: PostExternalAssetOwnerLoanProductAttributeRequest;
};

export type PostV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesResponse = CommandProcessingResult;

export type PutV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesByIdData = {
    /**
     * attributeId
     */
    id: number;
    /**
     * loanProductId
     */
    loanProductId: number;
    requestBody: PutExternalAssetOwnerLoanProductAttributeRequest;
};

export type PutV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesByIdResponse = CommandProcessingResult;

export type GetV1ExternalAssetOwnersOwnersExternalIdByOwnerExternalIdJournalEntriesData = {
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * ownerExternalId
     */
    ownerExternalId: string;
};

export type GetV1ExternalAssetOwnersOwnersExternalIdByOwnerExternalIdJournalEntriesResponse = ExternalOwnerJournalEntryData;

export type PostV1ExternalAssetOwnersSearchData = {
    requestBody?: PagedRequestExternalAssetOwnerSearchRequest;
};

export type PostV1ExternalAssetOwnersSearchResponse = PageExternalTransferData;

export type GetV1ExternalAssetOwnersTransfersData = {
    /**
     * limit
     */
    limit?: number;
    /**
     * loanExternalId
     */
    loanExternalId?: string;
    /**
     * loanId
     */
    loanId?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * transferExternalId
     */
    transferExternalId?: string;
};

export type GetV1ExternalAssetOwnersTransfersResponse = PageExternalTransferData;

export type GetV1ExternalAssetOwnersTransfersActiveTransferData = {
    /**
     * loanExternalId
     */
    loanExternalId?: string;
    /**
     * loanId
     */
    loanId?: number;
    /**
     * transferExternalId
     */
    transferExternalId?: string;
};

export type GetV1ExternalAssetOwnersTransfersActiveTransferResponse = ExternalTransferData;

export type PostV1ExternalAssetOwnersTransfersExternalIdByExternalIdData = {
    /**
     * command
     */
    command?: string;
    externalId: string;
};

export type PostV1ExternalAssetOwnersTransfersExternalIdByExternalIdResponse = PostInitiateTransferResponse;

export type PostV1ExternalAssetOwnersTransfersLoansExternalIdByLoanExternalIdData = {
    /**
     * command
     */
    command?: string;
    loanExternalId: string;
    requestBody: ExternalAssetOwnerRequest;
};

export type PostV1ExternalAssetOwnersTransfersLoansExternalIdByLoanExternalIdResponse = PostInitiateTransferResponse;

export type PostV1ExternalAssetOwnersTransfersLoansByLoanIdData = {
    /**
     * command
     */
    command?: string;
    loanId: number;
    requestBody: ExternalAssetOwnerRequest;
};

export type PostV1ExternalAssetOwnersTransfersLoansByLoanIdResponse = PostInitiateTransferResponse;

export type PostV1ExternalAssetOwnersTransfersByIdData = {
    /**
     * command
     */
    command?: string;
    id: number;
};

export type PostV1ExternalAssetOwnersTransfersByIdResponse = PostInitiateTransferResponse;

export type GetV1ExternalAssetOwnersTransfersByTransferIdJournalEntriesData = {
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * transferId
     */
    transferId: number;
};

export type GetV1ExternalAssetOwnersTransfersByTransferIdJournalEntriesResponse = ExternalOwnerTransferJournalEntryData;

export type GetV1ExternaleventsConfigurationResponse = ExternalEventConfigurationResponse;

export type PutV1ExternaleventsConfigurationData = {
    idempotencyKey?: string;
    requestBody?: ExternalEventConfigurationUpdateRequest;
};

export type PutV1ExternaleventsConfigurationResponse = ExternalEventConfigurationUpdateResponse;

export type GetV1ExternalserviceByServicenameData = {
    /**
     * servicename
     */
    servicename: string;
};

export type GetV1ExternalserviceByServicenameResponse = ExternalServicesPropertiesData;

export type PutV1ExternalserviceByServicenameData = {
    requestBody: PutExternalServiceRequest;
    /**
     * servicename
     */
    servicename: string;
};

export type PutV1ExternalserviceByServicenameResponse = unknown;

export type GetV1FieldconfigurationByEntityData = {
    /**
     * entity
     */
    entity: string;
};

export type GetV1FieldconfigurationByEntityResponse = Array<FieldConfigurationData>;

export type GetV1FinancialactivityaccountsResponse = Array<GetFinancialActivityAccountsResponse>;

export type PostV1FinancialactivityaccountsData = {
    requestBody?: PostFinancialActivityAccountsRequest;
};

export type PostV1FinancialactivityaccountsResponse = PostFinancialActivityAccountsResponse;

export type GetV1FinancialactivityaccountsTemplateResponse = FinancialActivityAccountData;

export type DeleteV1FinancialactivityaccountsByMappingIdData = {
    /**
     * mappingId
     */
    mappingId: number;
};

export type DeleteV1FinancialactivityaccountsByMappingIdResponse = DeleteFinancialActivityAccountsResponse;

export type GetV1FinancialactivityaccountsByMappingIdData = {
    /**
     * mappingId
     */
    mappingId: number;
};

export type GetV1FinancialactivityaccountsByMappingIdResponse = GetFinancialActivityAccountsResponse;

export type PutV1FinancialactivityaccountsByMappingIdData = {
    /**
     * mappingId
     */
    mappingId: number;
    requestBody?: PostFinancialActivityAccountsRequest;
};

export type PutV1FinancialactivityaccountsByMappingIdResponse = PutFinancialActivityAccountsResponse;

export type GetV1FixeddepositaccountsData = {
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * paged
     */
    paged?: boolean;
    /**
     * sortOrder
     */
    sortOrder?: string;
};

export type GetV1FixeddepositaccountsResponse = Array<GetFixedDepositAccountsResponse>;

export type PostV1FixeddepositaccountsData = {
    requestBody: PostFixedDepositAccountsRequest;
};

export type PostV1FixeddepositaccountsResponse = PostFixedDepositAccountsResponse;

export type GetV1FixeddepositaccountsCalculateFdInterestData = {
    /**
     * annualInterestRate
     */
    annualInterestRate?: number;
    /**
     * interestCompoundingPeriodInMonths
     */
    interestCompoundingPeriodInMonths?: number;
    /**
     * interestPostingPeriodInMonths
     */
    interestPostingPeriodInMonths?: number;
    /**
     * BigDecimal principalAmount
     */
    principalAmount?: number;
    /**
     * tenureInMonths
     */
    tenureInMonths?: number;
};

export type GetV1FixeddepositaccountsCalculateFdInterestResponse = CalculateFixedDepositInterestResponse;

export type GetV1FixeddepositaccountsDownloadtemplateData = {
    dateFormat?: string;
    officeId?: number;
    staffId?: number;
};

export type GetV1FixeddepositaccountsDownloadtemplateResponse = unknown;

export type GetV1FixeddepositaccountsTemplateData = {
    /**
     * clientId
     */
    clientId?: number;
    /**
     * groupId
     */
    groupId?: number;
    /**
     * productId
     */
    productId?: number;
    /**
     * staffInSelectedOfficeOnly
     */
    staffInSelectedOfficeOnly?: boolean;
};

export type GetV1FixeddepositaccountsTemplateResponse = GetFixedDepositAccountsTemplateResponse;

export type GetV1FixeddepositaccountsTransactionDownloadtemplateData = {
    dateFormat?: string;
    officeId?: number;
};

export type GetV1FixeddepositaccountsTransactionDownloadtemplateResponse = unknown;

export type PostV1FixeddepositaccountsTransactionUploadtemplateData = {
    /**
     * Upload fixed deposit transaction template
     */
    formData?: UploadRequest;
};

export type PostV1FixeddepositaccountsTransactionUploadtemplateResponse = string;

export type PostV1FixeddepositaccountsUploadtemplateData = {
    /**
     * Upload fixed deposit template
     */
    formData?: UploadRequest;
};

export type PostV1FixeddepositaccountsUploadtemplateResponse = string;

export type DeleteV1FixeddepositaccountsByAccountIdData = {
    /**
     * accountId
     */
    accountId: number;
};

export type DeleteV1FixeddepositaccountsByAccountIdResponse = DeleteFixedDepositAccountsAccountIdResponse;

export type GetV1FixeddepositaccountsByAccountIdData = {
    /**
     * accountId
     */
    accountId: number;
    /**
     * chargeStatus
     */
    chargeStatus?: string;
    /**
     * staffInSelectedOfficeOnly
     */
    staffInSelectedOfficeOnly?: boolean;
};

export type GetV1FixeddepositaccountsByAccountIdResponse = GetFixedDepositAccountsAccountIdResponse;

export type PostV1FixeddepositaccountsByAccountIdData = {
    /**
     * accountId
     */
    accountId: number;
    /**
     * command
     */
    command?: string;
    requestBody: PostFixedDepositAccountsAccountIdRequest;
};

export type PostV1FixeddepositaccountsByAccountIdResponse = PostFixedDepositAccountsAccountIdResponse;

export type PutV1FixeddepositaccountsByAccountIdData = {
    /**
     * accountId
     */
    accountId: number;
    requestBody: PutFixedDepositAccountsAccountIdRequest;
};

export type PutV1FixeddepositaccountsByAccountIdResponse = PutFixedDepositAccountsAccountIdResponse;

export type GetV1FixeddepositaccountsByAccountIdTemplateData = {
    /**
     * accountId
     */
    accountId: number;
    /**
     * command
     */
    command?: string;
};

export type GetV1FixeddepositaccountsByAccountIdTemplateResponse = string;

export type PostV1FixeddepositaccountsByFixedDepositAccountIdTransactionsData = {
    command?: string;
    fixedDepositAccountId: number;
    requestBody?: string;
};

export type PostV1FixeddepositaccountsByFixedDepositAccountIdTransactionsResponse = string;

export type GetV1FixeddepositaccountsByFixedDepositAccountIdTransactionsTemplateData = {
    fixedDepositAccountId: number;
};

export type GetV1FixeddepositaccountsByFixedDepositAccountIdTransactionsTemplateResponse = string;

export type GetV1FixeddepositaccountsByFixedDepositAccountIdTransactionsByTransactionIdData = {
    fixedDepositAccountId: number;
    transactionId: number;
};

export type GetV1FixeddepositaccountsByFixedDepositAccountIdTransactionsByTransactionIdResponse = string;

export type PostV1FixeddepositaccountsByFixedDepositAccountIdTransactionsByTransactionIdData = {
    command?: string;
    fixedDepositAccountId: number;
    requestBody?: string;
    transactionId: number;
};

export type PostV1FixeddepositaccountsByFixedDepositAccountIdTransactionsByTransactionIdResponse = string;

export type GetV1FixeddepositproductsResponse = Array<GetFixedDepositProductsResponse>;

export type PostV1FixeddepositproductsData = {
    requestBody: PostFixedDepositProductsRequest;
};

export type PostV1FixeddepositproductsResponse = PostFixedDepositProductsResponse;

export type GetV1FixeddepositproductsTemplateResponse = string;

export type DeleteV1FixeddepositproductsByProductIdData = {
    /**
     * productId
     */
    productId: number;
};

export type DeleteV1FixeddepositproductsByProductIdResponse = DeleteFixedDepositProductsProductIdResponse;

export type GetV1FixeddepositproductsByProductIdData = {
    /**
     * productId
     */
    productId: number;
};

export type GetV1FixeddepositproductsByProductIdResponse = GetFixedDepositProductsProductIdResponse;

export type PutV1FixeddepositproductsByProductIdData = {
    /**
     * productId
     */
    productId: number;
    requestBody: PutFixedDepositProductsProductIdRequest;
};

export type PutV1FixeddepositproductsByProductIdResponse = PutFixedDepositProductsProductIdResponse;

export type GetV1FloatingratesResponse = Array<GetFloatingRatesResponse>;

export type PostV1FloatingratesData = {
    requestBody: FloatingRateRequest;
};

export type PostV1FloatingratesResponse = PostFloatingRatesResponse;

export type GetV1FloatingratesByFloatingRateIdData = {
    /**
     * floatingRateId
     */
    floatingRateId: number;
};

export type GetV1FloatingratesByFloatingRateIdResponse = FloatingRateData;

export type PutV1FloatingratesByFloatingRateIdData = {
    /**
     * floatingRateId
     */
    floatingRateId: number;
    requestBody: FloatingRateRequest;
};

export type PutV1FloatingratesByFloatingRateIdResponse = PutFloatingRatesFloatingRateIdResponse;

export type GetV1FundsResponse = Array<FundData>;

export type PostV1FundsData = {
    requestBody: FundRequest;
};

export type PostV1FundsResponse = PostFundsResponse;

export type GetV1FundsByFundIdData = {
    /**
     * fundId
     */
    fundId: number;
};

export type GetV1FundsByFundIdResponse = FundData;

export type PutV1FundsByFundIdData = {
    /**
     * fundId
     */
    fundId: number;
    requestBody: FundRequest;
};

export type PutV1FundsByFundIdResponse = PutFundsFundIdResponse;

export type GetV1GlaccountsData = {
    /**
     * disabled
     */
    disabled?: boolean;
    /**
     * fetchRunningBalance
     */
    fetchRunningBalance?: boolean;
    /**
     * manualEntriesAllowed
     */
    manualEntriesAllowed?: boolean;
    /**
     * searchParam
     */
    searchParam?: string;
    /**
     * type
     */
    type?: number;
    /**
     * usage
     */
    usage?: number;
};

export type GetV1GlaccountsResponse = Array<GetGLAccountsResponse>;

export type PostV1GlaccountsData = {
    requestBody?: PostGLAccountsRequest;
};

export type PostV1GlaccountsResponse = PostGLAccountsResponse;

export type GetV1GlaccountsDownloadtemplateData = {
    dateFormat?: string;
};

export type GetV1GlaccountsDownloadtemplateResponse = unknown;

export type GetV1GlaccountsTemplateData = {
    /**
     * type
     */
    type?: number;
};

export type GetV1GlaccountsTemplateResponse = GetGLAccountsTemplateResponse;

export type PostV1GlaccountsUploadtemplateData = {
    /**
     * Upload GL accounts template
     */
    formData?: UploadRequest;
};

export type PostV1GlaccountsUploadtemplateResponse = number;

export type DeleteV1GlaccountsByGlAccountIdData = {
    /**
     * glAccountId
     */
    glAccountId: number;
};

export type DeleteV1GlaccountsByGlAccountIdResponse = DeleteGLAccountsResponse;

export type GetV1GlaccountsByGlAccountIdData = {
    /**
     * fetchRunningBalance
     */
    fetchRunningBalance?: boolean;
    /**
     * glAccountId
     */
    glAccountId: number;
};

export type GetV1GlaccountsByGlAccountIdResponse = GetGLAccountsResponse;

export type PutV1GlaccountsByGlAccountIdData = {
    /**
     * glAccountId
     */
    glAccountId: number;
    requestBody?: PutGLAccountsRequest;
};

export type PutV1GlaccountsByGlAccountIdResponse = PutGLAccountsResponse;

export type GetV1GlclosuresData = {
    officeId?: number;
};

export type GetV1GlclosuresResponse = Array<GetGlClosureResponse>;

export type PostV1GlclosuresData = {
    requestBody: PostGlClosuresRequest;
};

export type PostV1GlclosuresResponse = PostGlClosuresResponse;

export type DeleteV1GlclosuresByGlClosureIdData = {
    /**
     * glclosureId
     */
    glClosureId: number;
};

export type DeleteV1GlclosuresByGlClosureIdResponse = DeleteGlClosuresResponse;

export type GetV1GlclosuresByGlClosureIdData = {
    /**
     * glClosureId
     */
    glClosureId: number;
};

export type GetV1GlclosuresByGlClosureIdResponse = GetGlClosureResponse;

export type PutV1GlclosuresByGlClosureIdData = {
    /**
     * glClosureId
     */
    glClosureId: number;
    requestBody?: PutGlClosuresRequest;
};

export type PutV1GlclosuresByGlClosureIdResponse = PutGlClosuresResponse;

export type GetV1GrouplevelsResponse = Array<GroupLevelData>;

export type GetV1GroupsData = {
    /**
     * externalId
     */
    externalId?: string;
    /**
     * limit
     */
    limit?: number;
    /**
     * name
     */
    name?: string;
    /**
     * officeId
     */
    officeId?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * orphansOnly
     */
    orphansOnly?: boolean;
    /**
     * paged
     */
    paged?: boolean;
    /**
     * sortOrder
     */
    sortOrder?: string;
    /**
     * staffId
     */
    staffId?: number;
    /**
     * underHierarchy
     */
    underHierarchy?: string;
};

export type GetV1GroupsResponse = GetGroupsResponse;

export type PostV1GroupsData = {
    requestBody: PostGroupsRequest;
};

export type PostV1GroupsResponse = PostGroupsResponse;

export type GetV1GroupsDownloadtemplateData = {
    dateFormat?: string;
    officeId?: number;
    staffId?: number;
};

export type GetV1GroupsDownloadtemplateResponse = unknown;

export type GetV1GroupsTemplateData = {
    /**
     * center
     */
    center?: boolean;
    /**
     * centerId
     */
    centerId?: number;
    /**
     * command
     */
    command?: string;
    /**
     * officeId
     */
    officeId?: number;
    /**
     * staffInSelectedOfficeOnly
     */
    staffInSelectedOfficeOnly?: boolean;
};

export type GetV1GroupsTemplateResponse = GetGroupsTemplateResponse;

export type PostV1GroupsUploadtemplateData = {
    /**
     * Upload group template
     */
    formData?: UploadRequest;
};

export type PostV1GroupsUploadtemplateResponse = string;

export type DeleteV1GroupsByGroupIdData = {
    /**
     * groupId
     */
    groupId: number;
};

export type DeleteV1GroupsByGroupIdResponse = DeleteGroupsGroupIdResponse;

export type GetV1GroupsByGroupIdData = {
    /**
     * groupId
     */
    groupId: number;
    /**
     * roleId
     */
    roleId?: number;
    /**
     * staffInSelectedOfficeOnly
     */
    staffInSelectedOfficeOnly?: boolean;
};

export type GetV1GroupsByGroupIdResponse = GetGroupsGroupIdResponse;

export type PostV1GroupsByGroupIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * groupId
     */
    groupId: number;
    requestBody: PostGroupsGroupIdRequest;
    /**
     * roleId
     */
    roleId?: number;
};

export type PostV1GroupsByGroupIdResponse = PostGroupsGroupIdResponse;

export type PutV1GroupsByGroupIdData = {
    /**
     * groupId
     */
    groupId: number;
    requestBody: PutGroupsGroupIdRequest;
};

export type PutV1GroupsByGroupIdResponse = PutGroupsGroupIdResponse;

export type GetV1GroupsByGroupIdAccountsData = {
    /**
     * groupId
     */
    groupId: number;
};

export type GetV1GroupsByGroupIdAccountsResponse = GetGroupsGroupIdAccountsResponse;

export type PostV1GroupsByGroupIdCommandUnassignStaffData = {
    /**
     * groupId
     */
    groupId: number;
    requestBody: PostGroupsGroupIdCommandUnassignStaffRequest;
};

export type PostV1GroupsByGroupIdCommandUnassignStaffResponse = PostGroupsGroupIdCommandUnassignStaffResponse;

export type GetV1GroupsByGroupIdGlimaccountsData = {
    groupId: number;
    parentLoanAccountNo?: string;
};

export type GetV1GroupsByGroupIdGlimaccountsResponse = string;

export type GetV1GroupsByGroupIdGsimaccountsData = {
    groupId: number;
    parentGsimAccountNo?: string;
    parentGsimId?: number;
};

export type GetV1GroupsByGroupIdGsimaccountsResponse = string;

export type GetV1HolidaysData = {
    /**
     * dateFormat
     */
    dateFormat?: string;
    /**
     * fromDate
     */
    fromDate?: DateParam;
    /**
     * locale
     */
    locale?: string;
    /**
     * officeId
     */
    officeId?: number;
    /**
     * toDate
     */
    toDate?: DateParam;
};

export type GetV1HolidaysResponse = Array<GetHolidaysResponse>;

export type PostV1HolidaysData = {
    requestBody: PostHolidaysRequest;
};

export type PostV1HolidaysResponse = PostHolidaysResponse;

export type GetV1HolidaysTemplateResponse = string;

export type DeleteV1HolidaysByHolidayIdData = {
    /**
     * holidayId
     */
    holidayId: number;
};

export type DeleteV1HolidaysByHolidayIdResponse = DeleteHolidaysHolidayIdResponse;

export type GetV1HolidaysByHolidayIdData = {
    /**
     * holidayId
     */
    holidayId: number;
};

export type GetV1HolidaysByHolidayIdResponse = GetHolidaysResponse;

export type PostV1HolidaysByHolidayIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * holidayId
     */
    holidayId: number;
    requestBody: PostHolidaysHolidayIdRequest;
};

export type PostV1HolidaysByHolidayIdResponse = PostHolidaysHolidayIdResponse;

export type PutV1HolidaysByHolidayIdData = {
    /**
     * holidayId
     */
    holidayId: number;
    requestBody: PutHolidaysHolidayIdRequest;
};

export type PutV1HolidaysByHolidayIdResponse = PutHolidaysHolidayIdResponse;

export type GetV1HooksResponse = Array<GetHookResponse>;

export type PostV1HooksData = {
    requestBody: PostHookRequest;
};

export type PostV1HooksResponse = PostHookResponse;

export type GetV1HooksTemplateResponse = GetHookTemplateResponse;

export type DeleteV1HooksByHookIdData = {
    /**
     * hookId
     */
    hookId: number;
};

export type DeleteV1HooksByHookIdResponse = DeleteHookResponse;

export type GetV1HooksByHookIdData = {
    /**
     * hookId
     */
    hookId: number;
};

export type GetV1HooksByHookIdResponse = GetHookResponse;

export type PutV1HooksByHookIdData = {
    /**
     * hookId
     */
    hookId: number;
    requestBody: PutHookRequest;
};

export type PutV1HooksByHookIdResponse = PutHookResponse;

export type GetV1ImportsData = {
    entityType?: string;
};

export type GetV1ImportsResponse = string;

export type GetV1ImportsDownloadOutputTemplateData = {
    importDocumentId?: string;
};

export type GetV1ImportsDownloadOutputTemplateResponse = unknown;

export type GetV1ImportsGetOutputTemplateLocationData = {
    importDocumentId?: string;
};

export type GetV1ImportsGetOutputTemplateLocationResponse = string;

export type PutV1InstanceModeData = {
    requestBody: ChangeInstanceModeRequest;
};

export type PutV1InstanceModeResponse = unknown;

export type GetV1InterestratechartsData = {
    /**
     * productId
     */
    productId?: number;
};

export type GetV1InterestratechartsResponse = Array<GetInterestRateChartsResponse>;

export type PostV1InterestratechartsData = {
    requestBody: PostInterestRateChartsRequest;
};

export type PostV1InterestratechartsResponse = PostInterestRateChartsResponse;

export type GetV1InterestratechartsTemplateResponse = GetInterestRateChartsTemplateResponse;

export type DeleteV1InterestratechartsByChartIdData = {
    /**
     * chartId
     */
    chartId: number;
};

export type DeleteV1InterestratechartsByChartIdResponse = DeleteInterestRateChartsChartIdResponse;

export type GetV1InterestratechartsByChartIdData = {
    /**
     * chartId
     */
    chartId: number;
};

export type GetV1InterestratechartsByChartIdResponse = GetInterestRateChartsResponse;

export type PutV1InterestratechartsByChartIdData = {
    /**
     * chartId
     */
    chartId: number;
    requestBody: PutInterestRateChartsChartIdRequest;
};

export type PutV1InterestratechartsByChartIdResponse = PutInterestRateChartsChartIdResponse;

export type GetV1InterestratechartsByChartIdChartslabsData = {
    /**
     * chartId
     */
    chartId: number;
};

export type GetV1InterestratechartsByChartIdChartslabsResponse = Array<InterestRateChartSlabData>;

export type PostV1InterestratechartsByChartIdChartslabsData = {
    /**
     * chartId
     */
    chartId: number;
    requestBody: InterestRateChartStabRequest;
};

export type PostV1InterestratechartsByChartIdChartslabsResponse = PostInterestRateChartsChartIdChartSlabsResponse;

export type GetV1InterestratechartsByChartIdChartslabsTemplateData = {
    /**
     * chartId
     */
    chartId: number;
};

export type GetV1InterestratechartsByChartIdChartslabsTemplateResponse = InterestRateChartSlabData;

export type DeleteV1InterestratechartsByChartIdChartslabsByChartSlabIdData = {
    /**
     * chartId
     */
    chartId: number;
    /**
     * chartSlabId
     */
    chartSlabId: number;
};

export type DeleteV1InterestratechartsByChartIdChartslabsByChartSlabIdResponse = DeleteInterestRateChartsChartIdChartSlabsResponse;

export type GetV1InterestratechartsByChartIdChartslabsByChartSlabIdData = {
    /**
     * chartId
     */
    chartId: number;
    /**
     * chartSlabId
     */
    chartSlabId: number;
};

export type GetV1InterestratechartsByChartIdChartslabsByChartSlabIdResponse = InterestRateChartSlabData;

export type PutV1InterestratechartsByChartIdChartslabsByChartSlabIdData = {
    /**
     * chartId
     */
    chartId: number;
    /**
     * chartSlabId
     */
    chartSlabId: number;
    requestBody: InterestRateChartStabRequest;
};

export type PutV1InterestratechartsByChartIdChartslabsByChartSlabIdResponse = PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse;

export type GetV1InternalLoanProgressiveByLoanIdModelData = {
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1InternalLoanProgressiveByLoanIdModelResponse = ProgressiveLoanInterestScheduleModel;

export type PostV1InternalLoanProgressiveByLoanIdModelData = {
    /**
     * loanId
     */
    loanId: number;
};

export type PostV1InternalLoanProgressiveByLoanIdModelResponse = ProgressiveLoanInterestScheduleModel;

export type GetV1InteroperationAccountsByAccountIdData = {
    /**
     * accountId
     */
    accountId: string;
};

export type GetV1InteroperationAccountsByAccountIdResponse = InteropAccountData;

export type GetV1InteroperationAccountsByAccountIdIdentifiersData = {
    /**
     * accountId
     */
    accountId: string;
};

export type GetV1InteroperationAccountsByAccountIdIdentifiersResponse = InteropIdentifiersResponseData;

export type GetV1InteroperationAccountsByAccountIdKycData = {
    /**
     * accountId
     */
    accountId: string;
};

export type GetV1InteroperationAccountsByAccountIdKycResponse = InteropKycResponseData;

export type GetV1InteroperationAccountsByAccountIdTransactionsData = {
    /**
     * accountId
     */
    accountId: string;
    /**
     * credit
     */
    credit?: boolean;
    /**
     * debit
     */
    debit?: boolean;
    /**
     * fromBookingDateTime
     */
    fromBookingDateTime?: string;
    /**
     * toBookingDateTime
     */
    toBookingDateTime?: string;
};

export type GetV1InteroperationAccountsByAccountIdTransactionsResponse = InteropTransactionsData;

export type GetV1InteroperationHealthResponse = unknown;

export type DeleteV1InteroperationPartiesByIdTypeByIdValueData = {
    /**
     * idType
     */
    idType: 'MSISDN' | 'EMAIL' | 'PERSONAL_ID' | 'BUSINESS' | 'DEVICE' | 'ACCOUNT_ID' | 'IBAN' | 'ALIAS' | 'BBAN';
    /**
     * idValue
     */
    idValue: string;
    requestBody: InteropIdentifierRequestData;
};

export type DeleteV1InteroperationPartiesByIdTypeByIdValueResponse = InteropIdentifierAccountResponseData;

export type GetV1InteroperationPartiesByIdTypeByIdValueData = {
    /**
     * idType
     */
    idType: 'MSISDN' | 'EMAIL' | 'PERSONAL_ID' | 'BUSINESS' | 'DEVICE' | 'ACCOUNT_ID' | 'IBAN' | 'ALIAS' | 'BBAN';
    /**
     * idValue
     */
    idValue: string;
};

export type GetV1InteroperationPartiesByIdTypeByIdValueResponse = InteropIdentifierAccountResponseData;

export type PostV1InteroperationPartiesByIdTypeByIdValueData = {
    /**
     * idType
     */
    idType: 'MSISDN' | 'EMAIL' | 'PERSONAL_ID' | 'BUSINESS' | 'DEVICE' | 'ACCOUNT_ID' | 'IBAN' | 'ALIAS' | 'BBAN';
    /**
     * idValue
     */
    idValue: string;
    requestBody: InteropIdentifierRequestData;
};

export type PostV1InteroperationPartiesByIdTypeByIdValueResponse = InteropIdentifierAccountResponseData;

export type DeleteV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeData = {
    /**
     * idType
     */
    idType: 'MSISDN' | 'EMAIL' | 'PERSONAL_ID' | 'BUSINESS' | 'DEVICE' | 'ACCOUNT_ID' | 'IBAN' | 'ALIAS' | 'BBAN';
    /**
     * idValue
     */
    idValue: string;
    requestBody: InteropIdentifierRequestData;
    /**
     * subIdOrType
     */
    subIdOrType: string;
};

export type DeleteV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeResponse = InteropIdentifierAccountResponseData;

export type GetV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeData = {
    /**
     * idType
     */
    idType: 'MSISDN' | 'EMAIL' | 'PERSONAL_ID' | 'BUSINESS' | 'DEVICE' | 'ACCOUNT_ID' | 'IBAN' | 'ALIAS' | 'BBAN';
    /**
     * idValue
     */
    idValue: string;
    /**
     * subIdOrType
     */
    subIdOrType: string;
};

export type GetV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeResponse = InteropIdentifierAccountResponseData;

export type PostV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeData = {
    /**
     * idType
     */
    idType: 'MSISDN' | 'EMAIL' | 'PERSONAL_ID' | 'BUSINESS' | 'DEVICE' | 'ACCOUNT_ID' | 'IBAN' | 'ALIAS' | 'BBAN';
    /**
     * idValue
     */
    idValue: string;
    requestBody: InteropIdentifierRequestData;
    /**
     * subIdOrType
     */
    subIdOrType: string;
};

export type PostV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeResponse = InteropIdentifierAccountResponseData;

export type PostV1InteroperationQuotesData = {
    requestBody: InteropQuoteRequestData;
};

export type PostV1InteroperationQuotesResponse = InteropQuoteResponseData;

export type PostV1InteroperationRequestsData = {
    requestBody: InteropTransactionRequestData;
};

export type PostV1InteroperationRequestsResponse = InteropTransactionRequestResponseData;

export type PostV1InteroperationTransactionsByAccountIdDisburseData = {
    /**
     * accountId
     */
    accountId: string;
};

export type PostV1InteroperationTransactionsByAccountIdDisburseResponse = string;

export type PostV1InteroperationTransactionsByAccountIdLoanrepaymentData = {
    /**
     * accountId
     */
    accountId: string;
};

export type PostV1InteroperationTransactionsByAccountIdLoanrepaymentResponse = string;

export type GetV1InteroperationTransactionsByTransactionCodeQuotesByQuoteCodeData = {
    /**
     * quoteCode
     */
    quoteCode: string;
    /**
     * transactionCode
     */
    transactionCode: string;
};

export type GetV1InteroperationTransactionsByTransactionCodeQuotesByQuoteCodeResponse = InteropQuoteResponseData;

export type GetV1InteroperationTransactionsByTransactionCodeRequestsByRequestCodeData = {
    /**
     * requestCode
     */
    requestCode: string;
    /**
     * transactionCode
     */
    transactionCode: string;
};

export type GetV1InteroperationTransactionsByTransactionCodeRequestsByRequestCodeResponse = InteropTransactionRequestResponseData;

export type GetV1InteroperationTransactionsByTransactionCodeTransfersByTransferCodeData = {
    /**
     * transactionCode
     */
    transactionCode: string;
    /**
     * transferCode
     */
    transferCode: string;
};

export type GetV1InteroperationTransactionsByTransactionCodeTransfersByTransferCodeResponse = InteropTransferResponseData;

export type PostV1InteroperationTransfersData = {
    /**
     * action
     */
    action?: string;
    requestBody: InteropTransferRequestData;
};

export type PostV1InteroperationTransfersResponse = InteropTransferResponseData;

export type GetV1JobsResponse = Array<GetJobsResponse>;

export type GetV1JobsShortNameByShortNameData = {
    /**
     * short-name
     */
    shortName: string;
};

export type GetV1JobsShortNameByShortNameResponse = GetJobsResponse;

export type PostV1JobsShortNameByShortNameData = {
    /**
     * command
     */
    command?: string;
    requestBody?: ExecuteJobRequest;
    /**
     * short-name
     */
    shortName: string;
};

export type PostV1JobsShortNameByShortNameResponse = unknown;

export type PutV1JobsShortNameByShortNameData = {
    requestBody: PutJobsJobIDRequest;
    /**
     * short-name
     */
    shortName: string;
};

export type PutV1JobsShortNameByShortNameResponse = unknown;

export type GetV1JobsShortNameByShortNameRunhistoryData = {
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * short-name
     */
    shortName: string;
    /**
     * sortOrder
     */
    sortOrder?: string;
};

export type GetV1JobsShortNameByShortNameRunhistoryResponse = GetJobsJobIDJobRunHistoryResponse;

export type GetV1JobsByJobIdData = {
    /**
     * jobId
     */
    jobId: number;
};

export type GetV1JobsByJobIdResponse = GetJobsResponse;

export type PostV1JobsByJobIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * jobId
     */
    jobId: number;
    requestBody?: ExecuteJobRequest;
};

export type PostV1JobsByJobIdResponse = unknown;

export type PutV1JobsByJobIdData = {
    /**
     * jobId
     */
    jobId: number;
    requestBody: PutJobsJobIDRequest;
};

export type PutV1JobsByJobIdResponse = unknown;

export type GetV1JobsByJobIdRunhistoryData = {
    /**
     * jobId
     */
    jobId: number;
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * sortOrder
     */
    sortOrder?: string;
};

export type GetV1JobsByJobIdRunhistoryResponse = GetJobsJobIDJobRunHistoryResponse;

export type GetV1JobsNamesResponse = ConfiguredJobNamesDTO;

export type GetV1JobsByJobNameAvailableStepsData = {
    /**
     * jobName
     */
    jobName: string;
};

export type GetV1JobsByJobNameAvailableStepsResponse = JobBusinessStepDetail;

export type GetV1JobsByJobNameStepsData = {
    /**
     * jobName
     */
    jobName: string;
};

export type GetV1JobsByJobNameStepsResponse = JobBusinessStepConfigData;

export type PutV1JobsByJobNameStepsData = {
    /**
     * jobName
     */
    jobName: string;
    requestBody?: BusinessStepRequest;
};

export type PutV1JobsByJobNameStepsResponse = void;

export type PostV1JobsByJobNameInlineData = {
    /**
     * jobName
     */
    jobName: string;
    requestBody?: InlineJobRequest;
};

export type PostV1JobsByJobNameInlineResponse = InlineJobResponse;

export type GetV1JournalentriesData = {
    /**
     * dateFormat
     */
    dateFormat?: string;
    /**
     * entityType
     */
    entityType?: number;
    /**
     * fromDate
     */
    fromDate?: DateParam;
    /**
     * glAccountId
     */
    glAccountId?: number;
    /**
     * limit
     */
    limit?: number;
    /**
     * loanId
     */
    loanId?: number;
    /**
     * locale
     */
    locale?: string;
    /**
     * manualEntriesOnly
     */
    manualEntriesOnly?: boolean;
    /**
     * officeId
     */
    officeId?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * runningBalance
     */
    runningBalance?: boolean;
    /**
     * savingsId
     */
    savingsId?: number;
    /**
     * sortOrder
     */
    sortOrder?: string;
    /**
     * submittedOnDateFrom
     */
    submittedOnDateFrom?: DateParam;
    /**
     * submittedOnDateTo
     */
    submittedOnDateTo?: DateParam;
    /**
     * toDate
     */
    toDate?: DateParam;
    /**
     * transactionDetails
     */
    transactionDetails?: boolean;
    /**
     * transactionId
     */
    transactionId?: string;
};

export type GetV1JournalentriesResponse = GetJournalEntriesTransactionIdResponse;

export type PostV1JournalentriesData = {
    /**
     * command
     */
    command?: string;
    requestBody?: JournalEntryCommand;
};

export type PostV1JournalentriesResponse = PostJournalEntriesResponse;

export type GetV1JournalentriesDownloadtemplateData = {
    dateFormat?: string;
    officeId?: number;
};

export type GetV1JournalentriesDownloadtemplateResponse = unknown;

export type GetV1JournalentriesOpeningbalanceData = {
    currencyCode?: string;
    officeId?: number;
};

export type GetV1JournalentriesOpeningbalanceResponse = string;

export type GetV1JournalentriesProvisioningData = {
    entryId?: number;
    limit?: number;
    offset?: number;
};

export type GetV1JournalentriesProvisioningResponse = string;

export type PostV1JournalentriesUploadtemplateData = {
    /**
     * Upload journal entries template
     */
    formData?: UploadRequest;
};

export type PostV1JournalentriesUploadtemplateResponse = string;

export type GetV1JournalentriesByJournalEntryIdData = {
    /**
     * journalEntryId
     */
    journalEntryId: number;
    /**
     * runningBalance
     */
    runningBalance?: boolean;
    /**
     * transactionDetails
     */
    transactionDetails?: boolean;
};

export type GetV1JournalentriesByJournalEntryIdResponse = JournalEntryTransactionItem;

export type PostV1JournalentriesByTransactionIdData = {
    /**
     * command
     */
    command?: string;
    requestBody?: PostJournalEntriesTransactionIdRequest;
    /**
     * transactionId
     */
    transactionId: string;
};

export type PostV1JournalentriesByTransactionIdResponse = PostJournalEntriesTransactionIdResponse;

export type GetV1LikelihoodByPpiNameData = {
    ppiName: string;
};

export type GetV1LikelihoodByPpiNameResponse = string;

export type GetV1LikelihoodByPpiNameByLikelihoodIdData = {
    likelihoodId: number;
    ppiName: string;
};

export type GetV1LikelihoodByPpiNameByLikelihoodIdResponse = string;

export type PutV1LikelihoodByPpiNameByLikelihoodIdData = {
    likelihoodId: number;
    ppiName: string;
    requestBody?: string;
};

export type PutV1LikelihoodByPpiNameByLikelihoodIdResponse = string;

export type GetV1LoanCollateralManagementByCollateralIdData = {
    /**
     * collateralId
     */
    collateralId: number;
};

export type GetV1LoanCollateralManagementByCollateralIdResponse = LoanCollateralResponseData;

export type DeleteV1LoanCollateralManagementByIdData = {
    /**
     * loan collateral id
     */
    id: number;
    /**
     * loanId
     */
    loanId: number;
};

export type DeleteV1LoanCollateralManagementByIdResponse = CommandProcessingResult;

export type GetV1LoanproductsResponse = Array<GetLoanProductsResponse>;

export type PostV1LoanproductsData = {
    requestBody: PostLoanProductsRequest;
};

export type PostV1LoanproductsResponse = PostLoanProductsResponse;

export type GetV1LoanproductsExternalIdByExternalProductIdData = {
    /**
     * externalProductId
     */
    externalProductId: string;
};

export type GetV1LoanproductsExternalIdByExternalProductIdResponse = GetLoanProductsProductIdResponse;

export type PutV1LoanproductsExternalIdByExternalProductIdData = {
    /**
     * externalProductId
     */
    externalProductId: string;
    requestBody: PutLoanProductsProductIdRequest;
};

export type PutV1LoanproductsExternalIdByExternalProductIdResponse = PutLoanProductsProductIdResponse;

export type GetV1LoanproductsTemplateData = {
    /**
     * isProductMixTemplate
     */
    isProductMixTemplate?: boolean;
};

export type GetV1LoanproductsTemplateResponse = GetLoanProductsTemplateResponse;

export type GetV1LoanproductsByProductIdData = {
    /**
     * productId
     */
    productId: number;
};

export type GetV1LoanproductsByProductIdResponse = GetLoanProductsProductIdResponse;

export type PutV1LoanproductsByProductIdData = {
    /**
     * productId
     */
    productId: number;
    requestBody: PutLoanProductsProductIdRequest;
};

export type PutV1LoanproductsByProductIdResponse = PutLoanProductsProductIdResponse;

export type DeleteV1LoanproductsByProductIdProductmixData = {
    productId: number;
};

export type DeleteV1LoanproductsByProductIdProductmixResponse = CommandProcessingResult;

export type GetV1LoanproductsByProductIdProductmixData = {
    productId: number;
};

export type GetV1LoanproductsByProductIdProductmixResponse = string;

export type PostV1LoanproductsByProductIdProductmixData = {
    productId: number;
    requestBody?: ProductMixRequest;
};

export type PostV1LoanproductsByProductIdProductmixResponse = CommandProcessingResult;

export type PutV1LoanproductsByProductIdProductmixData = {
    productId: number;
    requestBody?: ProductMixRequest;
};

export type PutV1LoanproductsByProductIdProductmixResponse = CommandProcessingResult;

export type GetV1LoansData = {
    /**
     * accountNo
     */
    accountNo?: string;
    /**
     * associations
     */
    associations?: string;
    /**
     * clientId
     */
    clientId?: number;
    /**
     * externalId
     */
    externalId?: string;
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * sortOrder
     */
    sortOrder?: string;
    /**
     * status
     */
    status?: string;
};

export type GetV1LoansResponse = GetLoansResponse;

export type PostV1LoansData = {
    /**
     * command
     */
    command?: string;
    requestBody: PostLoansRequest;
};

export type PostV1LoansResponse = PostLoansResponse;

export type GetV1LoansDownloadtemplateData = {
    dateFormat?: string;
    officeId?: number;
    staffId?: number;
};

export type GetV1LoansDownloadtemplateResponse = unknown;

export type DeleteV1LoansExternalIdByLoanExternalIdData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
};

export type DeleteV1LoansExternalIdByLoanExternalIdResponse = DeleteLoansLoanIdResponse;

export type GetV1LoansExternalIdByLoanExternalIdData = {
    /**
     * Loan object relations to be included in the response
     */
    associations?: string;
    /**
     * Optional Loan object relation list to be filtered in the response
     */
    exclude?: string;
    /**
     * Optional Loan attribute list to be in the response
     */
    fields?: string;
    /**
     * loanExternalId
     */
    loanExternalId: string;
    /**
     * staffInSelectedOfficeOnly
     */
    staffInSelectedOfficeOnly?: boolean;
};

export type GetV1LoansExternalIdByLoanExternalIdResponse = GetLoansLoanIdResponse;

export type PostV1LoansExternalIdByLoanExternalIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * loanExternalId
     */
    loanExternalId: string;
    requestBody: PostLoansLoanIdRequest;
};

export type PostV1LoansExternalIdByLoanExternalIdResponse = PostLoansLoanIdResponse;

export type PutV1LoansExternalIdByLoanExternalIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * loanExternalId
     */
    loanExternalId: string;
    requestBody: PutLoansLoanIdRequest;
};

export type PutV1LoansExternalIdByLoanExternalIdResponse = PutLoansLoanIdResponse;

export type GetV1LoansExternalIdByLoanExternalIdApprovedAmountData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
};

export type GetV1LoansExternalIdByLoanExternalIdApprovedAmountResponse = Array<LoanApprovedAmountHistoryData>;

export type PutV1LoansExternalIdByLoanExternalIdApprovedAmountData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
    requestBody: PutLoansApprovedAmountRequest;
};

export type PutV1LoansExternalIdByLoanExternalIdApprovedAmountResponse = PutLoansApprovedAmountResponse;

export type PutV1LoansExternalIdByLoanExternalIdAvailableDisbursementAmountData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
    requestBody: PutLoansAvailableDisbursementAmountRequest;
};

export type PutV1LoansExternalIdByLoanExternalIdAvailableDisbursementAmountResponse = PutLoansAvailableDisbursementAmountResponse;

export type GetV1LoansExternalIdByLoanExternalIdDelinquencyActionsData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
};

export type GetV1LoansExternalIdByLoanExternalIdDelinquencyActionsResponse = Array<GetDelinquencyActionsResponse>;

export type PostV1LoansExternalIdByLoanExternalIdDelinquencyActionsData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
    requestBody: PostLoansDelinquencyActionRequest;
};

export type PostV1LoansExternalIdByLoanExternalIdDelinquencyActionsResponse = PostLoansDelinquencyActionResponse;

export type GetV1LoansExternalIdByLoanExternalIdDelinquencytagsData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
};

export type GetV1LoansExternalIdByLoanExternalIdDelinquencytagsResponse = Array<GetDelinquencyTagHistoryResponse>;

export type GetV1LoansExternalIdByLoanExternalIdTemplateData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
    /**
     * templateType
     */
    templateType?: string;
};

export type GetV1LoansExternalIdByLoanExternalIdTemplateResponse = GetLoansApprovalTemplateResponse;

export type GetV1LoansGlimAccountByGlimIdData = {
    glimId: number;
};

export type GetV1LoansGlimAccountByGlimIdResponse = string;

export type PostV1LoansGlimAccountByGlimIdData = {
    command?: string;
    glimId: number;
    requestBody: PostLoansLoanIdRequest;
};

export type PostV1LoansGlimAccountByGlimIdResponse = PostLoansLoanIdResponse;

export type GetV1LoansRepaymentsDownloadtemplateData = {
    dateFormat?: string;
    officeId?: number;
};

export type GetV1LoansRepaymentsDownloadtemplateResponse = unknown;

export type PostV1LoansRepaymentsUploadtemplateData = {
    /**
     * Upload Loan repayments template
     */
    formData?: UploadRequest;
};

export type PostV1LoansRepaymentsUploadtemplateResponse = string;

export type GetV1LoansTemplateData = {
    /**
     * activeOnly
     */
    activeOnly?: boolean;
    /**
     * clientId
     */
    clientId?: number;
    /**
     * groupId
     */
    groupId?: number;
    /**
     * productId
     */
    productId?: number;
    /**
     * staffInSelectedOfficeOnly
     */
    staffInSelectedOfficeOnly?: boolean;
    /**
     * templateType
     */
    templateType?: string;
};

export type GetV1LoansTemplateResponse = GetLoansTemplateResponse;

export type PostV1LoansUploadtemplateData = {
    /**
     * Upload Loan template
     */
    formData?: UploadRequest;
};

export type PostV1LoansUploadtemplateResponse = string;

export type DeleteV1LoansByLoanIdData = {
    /**
     * loanId
     */
    loanId: number;
};

export type DeleteV1LoansByLoanIdResponse = DeleteLoansLoanIdResponse;

export type GetV1LoansByLoanIdData = {
    /**
     * Loan object relations to be included in the response
     */
    associations?: string;
    /**
     * Optional Loan object relation list to be filtered in the response
     */
    exclude?: string;
    /**
     * Optional Loan attribute list to be in the response
     */
    fields?: string;
    /**
     * loanId
     */
    loanId: number;
    /**
     * staffInSelectedOfficeOnly
     */
    staffInSelectedOfficeOnly?: boolean;
};

export type GetV1LoansByLoanIdResponse = GetLoansLoanIdResponse;

export type PostV1LoansByLoanIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * loanId
     */
    loanId: number;
    requestBody: PostLoansLoanIdRequest;
};

export type PostV1LoansByLoanIdResponse = PostLoansLoanIdResponse;

export type PutV1LoansByLoanIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * loanId
     */
    loanId: number;
    requestBody: PutLoansLoanIdRequest;
};

export type PutV1LoansByLoanIdResponse = PutLoansLoanIdResponse;

export type GetV1LoansByLoanIdApprovedAmountData = {
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1LoansByLoanIdApprovedAmountResponse = Array<LoanApprovedAmountHistoryData>;

export type PutV1LoansByLoanIdApprovedAmountData = {
    /**
     * loanId
     */
    loanId: number;
    requestBody: PutLoansApprovedAmountRequest;
};

export type PutV1LoansByLoanIdApprovedAmountResponse = PutLoansApprovedAmountResponse;

export type PutV1LoansByLoanIdAvailableDisbursementAmountData = {
    /**
     * loanId
     */
    loanId: number;
    requestBody: PutLoansAvailableDisbursementAmountRequest;
};

export type PutV1LoansByLoanIdAvailableDisbursementAmountResponse = PutLoansAvailableDisbursementAmountResponse;

export type GetV1LoansByLoanIdDelinquencyActionsData = {
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1LoansByLoanIdDelinquencyActionsResponse = Array<GetDelinquencyActionsResponse>;

export type PostV1LoansByLoanIdDelinquencyActionsData = {
    /**
     * loanId
     */
    loanId: number;
    requestBody: PostLoansDelinquencyActionRequest;
};

export type PostV1LoansByLoanIdDelinquencyActionsResponse = PostLoansDelinquencyActionResponse;

export type GetV1LoansByLoanIdDelinquencytagsData = {
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1LoansByLoanIdDelinquencytagsResponse = Array<GetDelinquencyTagHistoryResponse>;

export type GetV1LoansByLoanIdTemplateData = {
    /**
     * loanId
     */
    loanId: number;
    /**
     * templateType
     */
    templateType?: string;
};

export type GetV1LoansByLoanIdTemplateResponse = GetLoansApprovalTemplateResponse;

export type GetV1LoansAtDateExternalIdByLoanExternalIdData = {
    /**
     * date
     */
    date: DateParam;
    /**
     * dateFormat
     */
    dateFormat?: string;
    /**
     * loanExternalId
     */
    loanExternalId: string;
    /**
     * locale
     */
    locale?: string;
};

export type GetV1LoansAtDateExternalIdByLoanExternalIdResponse = LoanPointInTimeData;

export type PostV1LoansAtDateSearchData = {
    requestBody?: RetrieveLoansPointInTimeRequest;
};

export type PostV1LoansAtDateSearchResponse = Array<LoanPointInTimeData>;

export type PostV1LoansAtDateSearchExternalIdData = {
    requestBody?: RetrieveLoansPointInTimeExternalIdsRequest;
};

export type PostV1LoansAtDateSearchExternalIdResponse = Array<LoanPointInTimeData>;

export type GetV1LoansAtDateByLoanIdData = {
    /**
     * date
     */
    date: DateParam;
    /**
     * dateFormat
     */
    dateFormat?: string;
    /**
     * loanId
     */
    loanId: number;
    /**
     * locale
     */
    locale?: string;
};

export type GetV1LoansAtDateByLoanIdResponse = LoanPointInTimeData;

export type PostV1LoansCatchUpResponse = unknown;

export type GetV1LoansIsCatchUpRunningResponse = IsCatchUpRunningDTO;

export type GetV1LoansOldestCobClosedResponse = OldestCOBProcessedLoanDTO;

export type GetV1LoansExternalIdByLoanExternalIdBuydownFeesData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
};

export type GetV1LoansExternalIdByLoanExternalIdBuydownFeesResponse = Array<BuyDownFeeAmortizationDetails>;

export type GetV1LoansByLoanIdBuydownFeesData = {
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1LoansByLoanIdBuydownFeesResponse = Array<BuyDownFeeAmortizationDetails>;

export type GetV1LoansExternalIdByLoanExternalIdCapitalizedIncomesData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
};

export type GetV1LoansExternalIdByLoanExternalIdCapitalizedIncomesResponse = Array<CapitalizedIncomeDetails>;

export type GetV1LoansExternalIdByLoanExternalIdDeferredincomeData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
};

export type GetV1LoansExternalIdByLoanExternalIdDeferredincomeResponse = LoanCapitalizedIncomeData;

export type GetV1LoansByLoanIdCapitalizedIncomesData = {
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1LoansByLoanIdCapitalizedIncomesResponse = Array<CapitalizedIncomeDetails>;

export type GetV1LoansByLoanIdDeferredincomeData = {
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1LoansByLoanIdDeferredincomeResponse = LoanCapitalizedIncomeData;

export type GetV1LoansExternalIdByLoanExternalIdChargesData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
};

export type GetV1LoansExternalIdByLoanExternalIdChargesResponse = Array<GetLoansLoanIdChargesChargeIdResponse>;

export type PostV1LoansExternalIdByLoanExternalIdChargesData = {
    /**
     * command
     */
    command?: string;
    /**
     * loanExternalId
     */
    loanExternalId: string;
    requestBody: PostLoansLoanIdChargesRequest;
};

export type PostV1LoansExternalIdByLoanExternalIdChargesResponse = PostLoansLoanIdChargesResponse;

export type DeleteV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdData = {
    /**
     * loanChargeExternalId
     */
    loanChargeExternalId: string;
    /**
     * loanExternalId
     */
    loanExternalId: string;
};

export type DeleteV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdResponse = DeleteLoansLoanIdChargesChargeIdResponse;

export type GetV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdData = {
    /**
     * loanChargeExternalId
     */
    loanChargeExternalId: string;
    /**
     * loanExternalId
     */
    loanExternalId: string;
};

export type GetV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdResponse = GetLoansLoanIdChargesChargeIdResponse;

export type PostV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * loanChargeExternalId
     */
    loanChargeExternalId: string;
    /**
     * loanExternalId
     */
    loanExternalId: string;
    requestBody: PostLoansLoanIdChargesChargeIdRequest;
};

export type PostV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdResponse = PostLoansLoanIdChargesChargeIdResponse;

export type PutV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdData = {
    /**
     * loanChargeExternalId
     */
    loanChargeExternalId: string;
    /**
     * loanExternalId
     */
    loanExternalId: string;
    requestBody: PutLoansLoanIdChargesChargeIdRequest;
};

export type PutV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdResponse = PutLoansLoanIdChargesChargeIdResponse;

export type GetV1LoansExternalIdByLoanExternalIdChargesTemplateData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
};

export type GetV1LoansExternalIdByLoanExternalIdChargesTemplateResponse = GetLoansLoanIdChargesTemplateResponse;

export type DeleteV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdData = {
    /**
     * loanChargeId
     */
    loanChargeId: number;
    /**
     * loanExternalId
     */
    loanExternalId: string;
};

export type DeleteV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdResponse = DeleteLoansLoanIdChargesChargeIdResponse;

export type GetV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdData = {
    /**
     * loanChargeId
     */
    loanChargeId: number;
    /**
     * loanExternalId
     */
    loanExternalId: string;
};

export type GetV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdResponse = GetLoansLoanIdChargesChargeIdResponse;

export type PostV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * loanChargeId
     */
    loanChargeId: number;
    /**
     * loanExternalId
     */
    loanExternalId: string;
    requestBody: PostLoansLoanIdChargesChargeIdRequest;
};

export type PostV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdResponse = PostLoansLoanIdChargesChargeIdResponse;

export type PutV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdData = {
    /**
     * loanChargeId
     */
    loanChargeId: number;
    /**
     * loanExternalId
     */
    loanExternalId: string;
    requestBody: PutLoansLoanIdChargesChargeIdRequest;
};

export type PutV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdResponse = PutLoansLoanIdChargesChargeIdResponse;

export type GetV1LoansByLoanIdChargesData = {
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1LoansByLoanIdChargesResponse = Array<GetLoansLoanIdChargesChargeIdResponse>;

export type PostV1LoansByLoanIdChargesData = {
    /**
     * command
     */
    command?: string;
    /**
     * loanId
     */
    loanId: number;
    requestBody: PostLoansLoanIdChargesRequest;
};

export type PostV1LoansByLoanIdChargesResponse = PostLoansLoanIdChargesResponse;

export type DeleteV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdData = {
    /**
     * loanChargeExternalId
     */
    loanChargeExternalId: string;
    /**
     * loanId
     */
    loanId: number;
};

export type DeleteV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdResponse = DeleteLoansLoanIdChargesChargeIdResponse;

export type GetV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdData = {
    /**
     * loanChargeExternalId
     */
    loanChargeExternalId: string;
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdResponse = GetLoansLoanIdChargesChargeIdResponse;

export type PostV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * loanChargeExternalId
     */
    loanChargeExternalId: string;
    /**
     * loanId
     */
    loanId: number;
    requestBody: PostLoansLoanIdChargesChargeIdRequest;
};

export type PostV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdResponse = PostLoansLoanIdChargesChargeIdResponse;

export type PutV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdData = {
    /**
     * loanChargeExternalId
     */
    loanChargeExternalId: string;
    /**
     * loanId
     */
    loanId: number;
    requestBody: PutLoansLoanIdChargesChargeIdRequest;
};

export type PutV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdResponse = PutLoansLoanIdChargesChargeIdResponse;

export type GetV1LoansByLoanIdChargesTemplateData = {
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1LoansByLoanIdChargesTemplateResponse = GetLoansLoanIdChargesTemplateResponse;

export type DeleteV1LoansByLoanIdChargesByLoanChargeIdData = {
    /**
     * loanChargeId
     */
    loanChargeId: number;
    /**
     * loanId
     */
    loanId: number;
};

export type DeleteV1LoansByLoanIdChargesByLoanChargeIdResponse = DeleteLoansLoanIdChargesChargeIdResponse;

export type GetV1LoansByLoanIdChargesByLoanChargeIdData = {
    /**
     * loanChargeId
     */
    loanChargeId: number;
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1LoansByLoanIdChargesByLoanChargeIdResponse = GetLoansLoanIdChargesChargeIdResponse;

export type PostV1LoansByLoanIdChargesByLoanChargeIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * loanChargeId
     */
    loanChargeId: number;
    /**
     * loanId
     */
    loanId: number;
    requestBody: PostLoansLoanIdChargesChargeIdRequest;
};

export type PostV1LoansByLoanIdChargesByLoanChargeIdResponse = PostLoansLoanIdChargesChargeIdResponse;

export type PutV1LoansByLoanIdChargesByLoanChargeIdData = {
    /**
     * loanChargeId
     */
    loanChargeId: number;
    /**
     * loanId
     */
    loanId: number;
    requestBody: PutLoansLoanIdChargesChargeIdRequest;
};

export type PutV1LoansByLoanIdChargesByLoanChargeIdResponse = PutLoansLoanIdChargesChargeIdResponse;

export type GetV1LoansExternalIdByLoanExternalIdInterestPausesData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
};

export type GetV1LoansExternalIdByLoanExternalIdInterestPausesResponse = Array<InterestPauseResponseDto>;

export type PostV1LoansExternalIdByLoanExternalIdInterestPausesData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
    requestBody: InterestPauseRequestDto;
};

export type PostV1LoansExternalIdByLoanExternalIdInterestPausesResponse = CommandProcessingResult;

export type DeleteV1LoansExternalIdByLoanExternalIdInterestPausesByVariationIdData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
    /**
     * variationId
     */
    variationId: number;
};

export type DeleteV1LoansExternalIdByLoanExternalIdInterestPausesByVariationIdResponse = void;

export type PutV1LoansExternalIdByLoanExternalIdInterestPausesByVariationIdData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
    requestBody: InterestPauseRequestDto;
    /**
     * variationId
     */
    variationId: number;
};

export type PutV1LoansExternalIdByLoanExternalIdInterestPausesByVariationIdResponse = CommandProcessingResult;

export type GetV1LoansByLoanIdInterestPausesData = {
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1LoansByLoanIdInterestPausesResponse = Array<InterestPauseResponseDto>;

export type PostV1LoansByLoanIdInterestPausesData = {
    /**
     * loanId
     */
    loanId: number;
    requestBody: InterestPauseRequestDto;
};

export type PostV1LoansByLoanIdInterestPausesResponse = CommandProcessingResult;

export type DeleteV1LoansByLoanIdInterestPausesByVariationIdData = {
    /**
     * loanId
     */
    loanId: number;
    /**
     * variationId
     */
    variationId: number;
};

export type DeleteV1LoansByLoanIdInterestPausesByVariationIdResponse = void;

export type PutV1LoansByLoanIdInterestPausesByVariationIdData = {
    /**
     * loanId
     */
    loanId: number;
    requestBody: InterestPauseRequestDto;
    /**
     * variationId
     */
    variationId: number;
};

export type PutV1LoansByLoanIdInterestPausesByVariationIdResponse = CommandProcessingResult;

export type GetV1LoansExternalIdByLoanExternalIdTransactionsData = {
    /**
     * excludedTypes
     */
    excludedTypes?: Array<TransactionType>;
    /**
     * loanId
     */
    loanExternalId: string;
    /**
     * page
     */
    page?: number;
    /**
     * size
     */
    size?: number;
    /**
     * sort
     */
    sort?: string;
};

export type GetV1LoansExternalIdByLoanExternalIdTransactionsResponse = GetLoansLoanIdTransactionsResponse;

export type PostV1LoansExternalIdByLoanExternalIdTransactionsData = {
    /**
     * command
     */
    command?: string;
    /**
     * loanExternalId
     */
    loanExternalId: string;
    requestBody: PostLoansLoanIdTransactionsRequest;
};

export type PostV1LoansExternalIdByLoanExternalIdTransactionsResponse = PostLoansLoanIdTransactionsResponse;

export type GetV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByExternalTransactionIdData = {
    /**
     * externalTransactionId
     */
    externalTransactionId: string;
    /**
     * Optional Loan Transaction attribute list to be in the response
     */
    fields?: string;
    /**
     * loanExternalId
     */
    loanExternalId: string;
};

export type GetV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByExternalTransactionIdResponse = GetLoansLoanIdTransactionsTransactionIdResponse;

export type PostV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByExternalTransactionIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * externalTransactionId
     */
    externalTransactionId: string;
    /**
     * loanExternalId
     */
    loanExternalId: string;
    requestBody: PostLoansLoanIdTransactionsTransactionIdRequest;
};

export type PostV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByExternalTransactionIdResponse = PostLoansLoanIdTransactionsResponse;

export type PutV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByTransactionExternalIdData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
    requestBody: PutChargeTransactionChangesRequest;
    /**
     * transactionExternalId
     */
    transactionExternalId: string;
};

export type PutV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByTransactionExternalIdResponse = PutChargeTransactionChangesResponse;

export type GetV1LoansExternalIdByLoanExternalIdTransactionsTemplateData = {
    /**
     * command
     */
    command?: string;
    /**
     * dateFormat
     */
    dateFormat?: string;
    /**
     * loanExternalId
     */
    loanExternalId: string;
    /**
     * locale
     */
    locale?: string;
    /**
     * transactionDate
     */
    transactionDate?: DateParam;
    /**
     * transactionId
     */
    transactionId?: number;
};

export type GetV1LoansExternalIdByLoanExternalIdTransactionsTemplateResponse = GetLoansLoanIdTransactionsTemplateResponse;

export type GetV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdData = {
    /**
     * Optional Loan Transaction attribute list to be in the response
     */
    fields?: string;
    /**
     * loanExternalId
     */
    loanExternalId: string;
    /**
     * transactionId
     */
    transactionId: number;
};

export type GetV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdResponse = GetLoansLoanIdTransactionsTransactionIdResponse;

export type PostV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * loanExternalId
     */
    loanExternalId: string;
    requestBody: PostLoansLoanIdTransactionsTransactionIdRequest;
    /**
     * transactionId
     */
    transactionId: number;
};

export type PostV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdResponse = PostLoansLoanIdTransactionsResponse;

export type PutV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdData = {
    /**
     * loanExternalId
     */
    loanExternalId: string;
    requestBody: PutChargeTransactionChangesRequest;
    /**
     * transactionId
     */
    transactionId: number;
};

export type PutV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdResponse = PutChargeTransactionChangesResponse;

export type GetV1LoansByLoanIdTransactionsData = {
    /**
     * excludedTypes
     */
    excludedTypes?: Array<TransactionType>;
    /**
     * loanId
     */
    loanId: number;
    /**
     * page
     */
    page?: number;
    /**
     * size
     */
    size?: number;
    /**
     * sort
     */
    sort?: string;
};

export type GetV1LoansByLoanIdTransactionsResponse = GetLoansLoanIdTransactionsResponse;

export type PostV1LoansByLoanIdTransactionsData = {
    /**
     * command
     */
    command?: string;
    /**
     * loanId
     */
    loanId: number;
    requestBody: PostLoansLoanIdTransactionsRequest;
};

export type PostV1LoansByLoanIdTransactionsResponse = PostLoansLoanIdTransactionsResponse;

export type GetV1LoansByLoanIdTransactionsExternalIdByExternalTransactionIdData = {
    /**
     * externalTransactionId
     */
    externalTransactionId: string;
    /**
     * Optional Loan Transaction attribute list to be in the response
     */
    fields?: string;
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1LoansByLoanIdTransactionsExternalIdByExternalTransactionIdResponse = GetLoansLoanIdTransactionsTransactionIdResponse;

export type PostV1LoansByLoanIdTransactionsExternalIdByExternalTransactionIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * externalTransactionId
     */
    externalTransactionId: string;
    /**
     * loanId
     */
    loanId: number;
    requestBody: PostLoansLoanIdTransactionsTransactionIdRequest;
};

export type PostV1LoansByLoanIdTransactionsExternalIdByExternalTransactionIdResponse = PostLoansLoanIdTransactionsResponse;

export type PutV1LoansByLoanIdTransactionsExternalIdByTransactionExternalIdData = {
    /**
     * loanId
     */
    loanId: number;
    requestBody: PutChargeTransactionChangesRequest;
    /**
     * transactionExternalId
     */
    transactionExternalId: string;
};

export type PutV1LoansByLoanIdTransactionsExternalIdByTransactionExternalIdResponse = PutChargeTransactionChangesResponse;

export type GetV1LoansByLoanIdTransactionsTemplateData = {
    /**
     * command
     */
    command?: string;
    /**
     * dateFormat
     */
    dateFormat?: string;
    /**
     * loanId
     */
    loanId: number;
    /**
     * locale
     */
    locale?: string;
    /**
     * transactionDate
     */
    transactionDate?: DateParam;
    /**
     * transactionId
     */
    transactionId?: number;
};

export type GetV1LoansByLoanIdTransactionsTemplateResponse = GetLoansLoanIdTransactionsTemplateResponse;

export type GetV1LoansByLoanIdTransactionsByTransactionIdData = {
    /**
     * Optional Loan Transaction attribute list to be in the response
     */
    fields?: string;
    /**
     * loanId
     */
    loanId: number;
    /**
     * transactionId
     */
    transactionId: number;
};

export type GetV1LoansByLoanIdTransactionsByTransactionIdResponse = GetLoansLoanIdTransactionsTransactionIdResponse;

export type PostV1LoansByLoanIdTransactionsByTransactionIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * loanId
     */
    loanId: number;
    requestBody: PostLoansLoanIdTransactionsTransactionIdRequest;
    /**
     * transactionId
     */
    transactionId: number;
};

export type PostV1LoansByLoanIdTransactionsByTransactionIdResponse = PostLoansLoanIdTransactionsResponse;

export type PutV1LoansByLoanIdTransactionsByTransactionIdData = {
    /**
     * loanId
     */
    loanId: number;
    requestBody: PutChargeTransactionChangesRequest;
    /**
     * transactionId
     */
    transactionId: number;
};

export type PutV1LoansByLoanIdTransactionsByTransactionIdResponse = PutChargeTransactionChangesResponse;

export type PostV1LoansLoanreassignmentData = {
    requestBody?: string;
};

export type PostV1LoansLoanreassignmentResponse = string;

export type GetV1LoansLoanreassignmentTemplateData = {
    fromLoanOfficerId?: number;
    officeId?: number;
};

export type GetV1LoansLoanreassignmentTemplateResponse = string;

export type GetV1LoansLockedData = {
    limit?: number;
    page?: number;
};

export type GetV1LoansLockedResponse = LoanAccountLockResponseDTO;

export type GetV1LoansByLoanIdCollateralsData = {
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1LoansByLoanIdCollateralsResponse = Array<CollateralData>;

export type PostV1LoansByLoanIdCollateralsData = {
    /**
     * loanId
     */
    loanId: number;
    requestBody: LoansLoanIdCollateralsRequest;
};

export type PostV1LoansByLoanIdCollateralsResponse = PostLoansLoanIdCollateralsResponse;

export type GetV1LoansByLoanIdCollateralsTemplateData = {
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1LoansByLoanIdCollateralsTemplateResponse = CollateralData;

export type DeleteV1LoansByLoanIdCollateralsByCollateralIdData = {
    /**
     * collateralId
     */
    collateralId: number;
    /**
     * loanId
     */
    loanId: number;
};

export type DeleteV1LoansByLoanIdCollateralsByCollateralIdResponse = DeleteLoansLoanIdCollateralsCollateralIdResponse;

export type GetV1LoansByLoanIdCollateralsByCollateralIdData = {
    /**
     * collateralId
     */
    collateralId: number;
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1LoansByLoanIdCollateralsByCollateralIdResponse = GetLoansLoanIdCollateralsResponse;

export type PutV1LoansByLoanIdCollateralsByCollateralIdData = {
    /**
     * collateralId
     */
    collateralId: number;
    /**
     * loanId
     */
    loanId: number;
    requestBody: LoansLoandIdCollateralsCollateralIdRequest;
};

export type PutV1LoansByLoanIdCollateralsByCollateralIdResponse = PutLoansLoanIdCollateralsCollateralIdResponse;

export type PutV1LoansByLoanIdDisbursementsEditDisbursementsData = {
    loanId: number;
    requestBody: PostAddAndDeleteDisbursementDetailRequest;
};

export type PutV1LoansByLoanIdDisbursementsEditDisbursementsResponse = string;

export type GetV1LoansByLoanIdDisbursementsByDisbursementIdData = {
    disbursementId: number;
    loanId: number;
};

export type GetV1LoansByLoanIdDisbursementsByDisbursementIdResponse = string;

export type PutV1LoansByLoanIdDisbursementsByDisbursementIdData = {
    disbursementId: number;
    loanId: number;
    requestBody?: string;
};

export type PutV1LoansByLoanIdDisbursementsByDisbursementIdResponse = string;

export type GetV1LoansByLoanIdGuarantorsData = {
    loanId: number;
};

export type GetV1LoansByLoanIdGuarantorsResponse = Array<GuarantorData>;

export type PostV1LoansByLoanIdGuarantorsData = {
    loanId: number;
    requestBody?: GuarantorsRequest;
};

export type PostV1LoansByLoanIdGuarantorsResponse = CommandProcessingResult;

export type GetV1LoansByLoanIdGuarantorsAccountsTemplateData = {
    clientId?: number;
    loanId: number;
};

export type GetV1LoansByLoanIdGuarantorsAccountsTemplateResponse = GuarantorData;

export type GetV1LoansByLoanIdGuarantorsDownloadtemplateData = {
    dateFormat?: string;
    loanId: number;
    officeId?: number;
};

export type GetV1LoansByLoanIdGuarantorsDownloadtemplateResponse = unknown;

export type GetV1LoansByLoanIdGuarantorsTemplateData = {
    loanId: number;
};

export type GetV1LoansByLoanIdGuarantorsTemplateResponse = GuarantorData;

export type PostV1LoansByLoanIdGuarantorsUploadtemplateData = {
    /**
     * Upload guarantor template
     */
    formData?: UploadRequest;
    loanId: number;
};

export type PostV1LoansByLoanIdGuarantorsUploadtemplateResponse = string;

export type DeleteV1LoansByLoanIdGuarantorsByGuarantorIdData = {
    guarantorFundingId?: number;
    guarantorId: number;
    loanId: number;
};

export type DeleteV1LoansByLoanIdGuarantorsByGuarantorIdResponse = CommandProcessingResult;

export type GetV1LoansByLoanIdGuarantorsByGuarantorIdData = {
    guarantorId: number;
    loanId: number;
};

export type GetV1LoansByLoanIdGuarantorsByGuarantorIdResponse = GuarantorData;

export type PutV1LoansByLoanIdGuarantorsByGuarantorIdData = {
    guarantorId: number;
    loanId: number;
    requestBody?: GuarantorsRequest;
};

export type PutV1LoansByLoanIdGuarantorsByGuarantorIdResponse = CommandProcessingResult;

export type GetV1LoansByLoanIdPostdatedchecksData = {
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1LoansByLoanIdPostdatedchecksResponse = Array<GetPostDatedChecks>;

export type GetV1LoansByLoanIdPostdatedchecksByInstallmentIdData = {
    /**
     * installmentId
     */
    installmentId: number;
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1LoansByLoanIdPostdatedchecksByInstallmentIdResponse = Array<GetPostDatedChecks>;

export type DeleteV1LoansByLoanIdPostdatedchecksByPostDatedCheckIdData = {
    /**
     * loanId
     */
    loanId: number;
    /**
     * postDatedCheckId
     */
    postDatedCheckId: number;
};

export type DeleteV1LoansByLoanIdPostdatedchecksByPostDatedCheckIdResponse = Array<DeletePostDatedCheck>;

export type PutV1LoansByLoanIdPostdatedchecksByPostDatedCheckIdData = {
    /**
     * editType
     */
    editType?: string;
    /**
     * loanId
     */
    loanId: number;
    /**
     * postDatedCheckId
     */
    postDatedCheckId: number;
    requestBody: UpdatePostDatedCheckRequest;
};

export type PutV1LoansByLoanIdPostdatedchecksByPostDatedCheckIdResponse = Array<UpdatePostDatedCheckResponse>;

export type PostV1LoansByLoanIdScheduleData = {
    /**
     * command
     */
    command?: string;
    /**
     * loanId
     */
    loanId: number;
    requestBody: PostLoansLoanIdScheduleRequest;
};

export type PostV1LoansByLoanIdScheduleResponse = PostLoansLoanIdScheduleResponse;

export type GetV1MakercheckersData = {
    actionName?: string;
    clientId?: number;
    entityName?: string;
    groupId?: number;
    loanid?: number;
    makerDateTimeFrom?: string;
    makerDateTimeTo?: string;
    makerId?: number;
    officeId?: number;
    resourceId?: number;
    savingsAccountId?: number;
};

export type GetV1MakercheckersResponse = Array<AuditData>;

export type GetV1MakercheckersSearchtemplateResponse = AuditSearchData;

export type DeleteV1MakercheckersByAuditIdData = {
    /**
     * auditId
     */
    auditId: number;
};

export type DeleteV1MakercheckersByAuditIdResponse = PostMakerCheckersResponse;

export type PostV1MakercheckersByAuditIdData = {
    /**
     * auditId
     */
    auditId: number;
    /**
     * command
     */
    command?: string;
};

export type PostV1MakercheckersByAuditIdResponse = PostMakerCheckersResponse;

export type GetV1MixmappingResponse = MixTaxonomyMappingData;

export type PutV1MixmappingData = {
    requestBody?: MixTaxonomyRequest;
};

export type PutV1MixmappingResponse = string;

export type GetV1MixreportData = {
    currency?: string;
    endDate?: string;
    startDate?: string;
};

export type GetV1MixreportResponse = string;

export type GetV1MixtaxonomyResponse = Array<MixTaxonomyData>;

export type GetV1NotificationsData = {
    /**
     * isRead
     */
    isRead?: boolean;
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * sortOrder
     */
    sortOrder?: string;
};

export type GetV1NotificationsResponse = GetNotificationsResponse;

export type PutV1NotificationsResponse = unknown;

export type GetV1OfficesData = {
    /**
     * includeAllOffices
     */
    includeAllOffices?: boolean;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * sortOrder
     */
    sortOrder?: string;
};

export type GetV1OfficesResponse = Array<GetOfficesResponse>;

export type PostV1OfficesData = {
    requestBody: PostOfficesRequest;
};

export type PostV1OfficesResponse = PostOfficesResponse;

export type GetV1OfficesDownloadtemplateData = {
    dateFormat?: string;
};

export type GetV1OfficesDownloadtemplateResponse = unknown;

export type GetV1OfficesExternalIdByExternalIdData = {
    /**
     * externalId
     */
    externalId: string;
};

export type GetV1OfficesExternalIdByExternalIdResponse = GetOfficesResponse;

export type PutV1OfficesExternalIdByExternalIdData = {
    /**
     * externalId
     */
    externalId: string;
    requestBody: PutOfficesOfficeIdRequest;
};

export type PutV1OfficesExternalIdByExternalIdResponse = PutOfficesOfficeIdResponse;

export type GetV1OfficesTemplateResponse = GetOfficesTemplateResponse;

export type PostV1OfficesUploadtemplateData = {
    /**
     * Upload office template
     */
    formData?: UploadRequest;
};

export type PostV1OfficesUploadtemplateResponse = string;

export type GetV1OfficesByOfficeIdData = {
    /**
     * officeId
     */
    officeId: number;
};

export type GetV1OfficesByOfficeIdResponse = GetOfficesResponse;

export type PutV1OfficesByOfficeIdData = {
    /**
     * officeId
     */
    officeId: number;
    requestBody: PutOfficesOfficeIdRequest;
};

export type PutV1OfficesByOfficeIdResponse = PutOfficesOfficeIdResponse;

export type GetV1PasswordpreferencesResponse = GetPasswordPreferencesTemplateResponse;

export type PutV1PasswordpreferencesData = {
    requestBody: PutPasswordPreferencesTemplateRequest;
};

export type PutV1PasswordpreferencesResponse = unknown;

export type GetV1PasswordpreferencesTemplateResponse = Array<GetPasswordPreferencesTemplateResponse>;

export type GetV1PaymenttypesData = {
    /**
     * onlyWithCode
     */
    onlyWithCode?: boolean;
};

export type GetV1PaymenttypesResponse = Array<PaymentTypeData>;

export type PostV1PaymenttypesData = {
    requestBody: PaymentTypeRequest;
};

export type PostV1PaymenttypesResponse = PostPaymentTypesResponse;

export type DeleteV1PaymenttypesByPaymentTypeIdData = {
    /**
     * paymentTypeId
     */
    paymentTypeId: number;
};

export type DeleteV1PaymenttypesByPaymentTypeIdResponse = DeletePaymentTypesPaymentTypeIdResponse;

export type GetV1PaymenttypesByPaymentTypeIdData = {
    /**
     * paymentTypeId
     */
    paymentTypeId: number;
};

export type GetV1PaymenttypesByPaymentTypeIdResponse = PaymentTypeData;

export type PutV1PaymenttypesByPaymentTypeIdData = {
    /**
     * paymentTypeId
     */
    paymentTypeId: number;
    requestBody: PutPaymentTypesPaymentTypeIdRequest;
};

export type PutV1PaymenttypesByPaymentTypeIdResponse = PutPaymentTypesPaymentTypeIdResponse;

export type GetV1PermissionsResponse = Array<GetPermissionsResponse>;

export type PutV1PermissionsData = {
    requestBody: PutPermissionsRequest;
};

export type PutV1PermissionsResponse = CommandProcessingResult;

export type GetV1PovertyLineByPpiNameData = {
    ppiName: string;
};

export type GetV1PovertyLineByPpiNameResponse = string;

export type GetV1PovertyLineByPpiNameByLikelihoodIdData = {
    likelihoodId: number;
    ppiName: string;
};

export type GetV1PovertyLineByPpiNameByLikelihoodIdResponse = string;

export type GetV1ProductsByTypeData = {
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * type
     */
    type: string;
};

export type GetV1ProductsByTypeResponse = GetProductsTypeResponse;

export type PostV1ProductsByTypeData = {
    requestBody: PostProductsTypeRequest;
    /**
     * type
     */
    type: string;
};

export type PostV1ProductsByTypeResponse = PostProductsTypeResponse;

export type GetV1ProductsByTypeTemplateData = {
    /**
     * type
     */
    type: string;
};

export type GetV1ProductsByTypeTemplateResponse = string;

export type GetV1ProductsByTypeByProductIdData = {
    /**
     * productId
     */
    productId: number;
    /**
     * type
     */
    type: string;
};

export type GetV1ProductsByTypeByProductIdResponse = GetProductsTypeProductIdResponse;

export type PostV1ProductsByTypeByProductIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * productId
     */
    productId: number;
    /**
     * type
     */
    type: string;
};

export type PostV1ProductsByTypeByProductIdResponse = string;

export type PutV1ProductsByTypeByProductIdData = {
    /**
     * productId
     */
    productId: number;
    requestBody: PutProductsTypeProductIdRequest;
    /**
     * type
     */
    type: string;
};

export type PutV1ProductsByTypeByProductIdResponse = PutProductsTypeProductIdResponse;

export type GetV1ProvisioningcategoryResponse = Array<ProvisioningCategoryData>;

export type PostV1ProvisioningcategoryData = {
    requestBody?: string;
};

export type PostV1ProvisioningcategoryResponse = CommandProcessingResult;

export type DeleteV1ProvisioningcategoryByCategoryIdData = {
    categoryId: number;
};

export type DeleteV1ProvisioningcategoryByCategoryIdResponse = CommandProcessingResult;

export type PutV1ProvisioningcategoryByCategoryIdData = {
    categoryId: number;
    requestBody?: string;
};

export type PutV1ProvisioningcategoryByCategoryIdResponse = CommandProcessingResult;

export type GetV1ProvisioningcriteriaResponse = Array<GetProvisioningCriteriaResponse>;

export type PostV1ProvisioningcriteriaData = {
    requestBody: PostProvisioningCriteriaRequest;
};

export type PostV1ProvisioningcriteriaResponse = PostProvisioningCriteriaResponse;

export type GetV1ProvisioningcriteriaTemplateResponse = ProvisioningCriteriaData;

export type DeleteV1ProvisioningcriteriaByCriteriaIdData = {
    /**
     * criteriaId
     */
    criteriaId: number;
};

export type DeleteV1ProvisioningcriteriaByCriteriaIdResponse = DeleteProvisioningCriteriaResponse;

export type GetV1ProvisioningcriteriaByCriteriaIdData = {
    /**
     * criteriaId
     */
    criteriaId: number;
};

export type GetV1ProvisioningcriteriaByCriteriaIdResponse = GetProvisioningCriteriaCriteriaIdResponse;

export type PutV1ProvisioningcriteriaByCriteriaIdData = {
    /**
     * criteriaId
     */
    criteriaId: number;
    requestBody: PutProvisioningCriteriaRequest;
};

export type PutV1ProvisioningcriteriaByCriteriaIdResponse = PutProvisioningCriteriaResponse;

export type GetV1ProvisioningentriesData = {
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
};

export type GetV1ProvisioningentriesResponse = PageProvisioningEntryData;

export type PostV1ProvisioningentriesData = {
    requestBody?: ProvisionEntryRequest;
};

export type PostV1ProvisioningentriesResponse = PostProvisioningEntriesResponse;

export type GetV1ProvisioningentriesEntriesData = {
    categoryId?: number;
    entryId?: number;
    limit?: number;
    officeId?: number;
    offset?: number;
    productId?: number;
};

export type GetV1ProvisioningentriesEntriesResponse = PageLoanProductProvisioningEntryData;

export type GetV1ProvisioningentriesByEntryIdData = {
    /**
     * entryId
     */
    entryId: number;
};

export type GetV1ProvisioningentriesByEntryIdResponse = ProvisioningEntryData;

export type PostV1ProvisioningentriesByEntryIdData = {
    /**
     * command=createjournalentry
     * command=recreateprovisioningentry
     */
    command?: string;
    /**
     * entryId
     */
    entryId: number;
    requestBody?: PutProvisioningEntriesRequest;
};

export type PostV1ProvisioningentriesByEntryIdResponse = PutProvisioningEntriesResponse;

export type GetV1RatesResponse = Array<RateData>;

export type PostV1RatesData = {
    requestBody?: RateRequest;
};

export type PostV1RatesResponse = CommandProcessingResult;

export type GetV1RatesByRateIdData = {
    rateId: number;
};

export type GetV1RatesByRateIdResponse = RateData;

export type PutV1RatesByRateIdData = {
    rateId: number;
    requestBody?: RateRequest;
};

export type PutV1RatesByRateIdResponse = CommandProcessingResult;

export type GetV1RecurringdepositaccountsData = {
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * paged
     */
    paged?: boolean;
    /**
     * sortOrder
     */
    sortOrder?: string;
};

export type GetV1RecurringdepositaccountsResponse = Array<GetRecurringDepositAccountsResponse>;

export type PostV1RecurringdepositaccountsData = {
    requestBody: PostRecurringDepositAccountsRequest;
};

export type PostV1RecurringdepositaccountsResponse = PostRecurringDepositAccountsResponse;

export type GetV1RecurringdepositaccountsDownloadtemplateData = {
    dateFormat?: string;
    officeId?: number;
    staffId?: number;
};

export type GetV1RecurringdepositaccountsDownloadtemplateResponse = unknown;

export type GetV1RecurringdepositaccountsTemplateData = {
    /**
     * clientId
     */
    clientId?: number;
    /**
     * groupId
     */
    groupId?: number;
    /**
     * productId
     */
    productId?: number;
    /**
     * staffInSelectedOfficeOnly
     */
    staffInSelectedOfficeOnly?: boolean;
};

export type GetV1RecurringdepositaccountsTemplateResponse = GetRecurringDepositAccountsTemplateResponse;

export type GetV1RecurringdepositaccountsTransactionsDownloadtemplateData = {
    dateFormat?: string;
    officeId?: number;
};

export type GetV1RecurringdepositaccountsTransactionsDownloadtemplateResponse = unknown;

export type PostV1RecurringdepositaccountsTransactionsUploadtemplateData = {
    /**
     * Upload recurring deposit transactions template
     */
    formData?: UploadRequest;
};

export type PostV1RecurringdepositaccountsTransactionsUploadtemplateResponse = string;

export type PostV1RecurringdepositaccountsUploadtemplateData = {
    /**
     * Upload recurring deposit template
     */
    formData?: UploadRequest;
};

export type PostV1RecurringdepositaccountsUploadtemplateResponse = string;

export type DeleteV1RecurringdepositaccountsByAccountIdData = {
    /**
     * accountId
     */
    accountId: number;
};

export type DeleteV1RecurringdepositaccountsByAccountIdResponse = DeleteRecurringDepositAccountsResponse;

export type GetV1RecurringdepositaccountsByAccountIdData = {
    /**
     * accountId
     */
    accountId: number;
    /**
     * chargeStatus
     */
    chargeStatus?: string;
    /**
     * staffInSelectedOfficeOnly
     */
    staffInSelectedOfficeOnly?: boolean;
};

export type GetV1RecurringdepositaccountsByAccountIdResponse = GetRecurringDepositAccountsAccountIdResponse;

export type PostV1RecurringdepositaccountsByAccountIdData = {
    /**
     * accountId
     */
    accountId: number;
    /**
     * command
     */
    command?: string;
    requestBody: PostRecurringDepositAccountsAccountIdRequest;
};

export type PostV1RecurringdepositaccountsByAccountIdResponse = PostRecurringDepositAccountsAccountIdResponse;

export type PutV1RecurringdepositaccountsByAccountIdData = {
    /**
     * accountId
     */
    accountId: number;
    requestBody: PutRecurringDepositAccountsAccountIdRequest;
};

export type PutV1RecurringdepositaccountsByAccountIdResponse = PutRecurringDepositAccountsAccountIdResponse;

export type GetV1RecurringdepositaccountsByAccountIdTemplateData = {
    /**
     * accountId
     */
    accountId: number;
    /**
     * command
     */
    command?: string;
};

export type GetV1RecurringdepositaccountsByAccountIdTemplateResponse = string;

export type PostV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsData = {
    /**
     * command
     */
    command?: string;
    /**
     * recurringDepositAccountId
     */
    recurringDepositAccountId: number;
    requestBody: PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest;
};

export type PostV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsResponse = PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsResponse;

export type GetV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsTemplateData = {
    /**
     * command
     */
    command?: string;
    /**
     * recurringDepositAccountId
     */
    recurringDepositAccountId: number;
};

export type GetV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsTemplateResponse = GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTemplateResponse;

export type GetV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsByTransactionIdData = {
    /**
     * recurringDepositAccountId
     */
    recurringDepositAccountId: number;
    /**
     * transactionId
     */
    transactionId: number;
};

export type GetV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsByTransactionIdResponse = GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse;

export type PostV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsByTransactionIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * recurringDepositAccountId
     */
    recurringDepositAccountId: number;
    requestBody: PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest;
    /**
     * transactionId
     */
    transactionId: number;
};

export type PostV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsByTransactionIdResponse = PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse;

export type GetV1RecurringdepositproductsResponse = Array<GetRecurringDepositProductsResponse>;

export type PostV1RecurringdepositproductsData = {
    requestBody: PostRecurringDepositProductsRequest;
};

export type PostV1RecurringdepositproductsResponse = PostRecurringDepositProductsResponse;

export type GetV1RecurringdepositproductsTemplateResponse = string;

export type DeleteV1RecurringdepositproductsByProductIdData = {
    /**
     * productId
     */
    productId: number;
};

export type DeleteV1RecurringdepositproductsByProductIdResponse = DeleteRecurringDepositProductsProductIdResponse;

export type GetV1RecurringdepositproductsByProductIdData = {
    /**
     * productId
     */
    productId: number;
};

export type GetV1RecurringdepositproductsByProductIdResponse = GetRecurringDepositProductsProductIdResponse;

export type PutV1RecurringdepositproductsByProductIdData = {
    /**
     * productId
     */
    productId: number;
    requestBody: PutRecurringDepositProductsRequest;
};

export type PutV1RecurringdepositproductsByProductIdResponse = PutRecurringDepositProductsResponse;

export type GetV1ReportmailingjobrunhistoryData = {
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * reportMailingJobId
     */
    reportMailingJobId?: number;
    /**
     * sortOrder
     */
    sortOrder?: string;
};

export type GetV1ReportmailingjobrunhistoryResponse = ReportMailingJobRunHistoryData;

export type GetV1ReportmailingjobsData = {
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * sortOrder
     */
    sortOrder?: string;
};

export type GetV1ReportmailingjobsResponse = Array<GetReportMailingJobsResponse>;

export type PostV1ReportmailingjobsData = {
    requestBody: PostReportMailingJobsRequest;
};

export type PostV1ReportmailingjobsResponse = PostReportMailingJobsResponse;

export type GetV1ReportmailingjobsTemplateResponse = GetReportMailingJobsTemplate;

export type DeleteV1ReportmailingjobsByEntityIdData = {
    /**
     * entityId
     */
    entityId: number;
};

export type DeleteV1ReportmailingjobsByEntityIdResponse = DeleteReportMailingJobsResponse;

export type GetV1ReportmailingjobsByEntityIdData = {
    /**
     * entityId
     */
    entityId: number;
};

export type GetV1ReportmailingjobsByEntityIdResponse = GetReportMailingJobsResponse;

export type PutV1ReportmailingjobsByEntityIdData = {
    /**
     * entityId
     */
    entityId: number;
    requestBody: PutReportMailingJobsRequest;
};

export type PutV1ReportmailingjobsByEntityIdResponse = PutReportMailingJobsResponse;

export type GetV1ReportsResponse = Array<GetReportsResponse>;

export type PostV1ReportsData = {
    requestBody: PostRepostRequest;
};

export type PostV1ReportsResponse = PostReportsResponse;

export type GetV1ReportsTemplateResponse = GetReportsTemplateResponse;

export type DeleteV1ReportsByIdData = {
    /**
     * id
     */
    id: number;
};

export type DeleteV1ReportsByIdResponse = DeleteReportsResponse;

export type GetV1ReportsByIdData = {
    /**
     * id
     */
    id: number;
};

export type GetV1ReportsByIdResponse = GetReportsResponse;

export type PutV1ReportsByIdData = {
    /**
     * id
     */
    id: number;
    requestBody: PutReportRequest;
};

export type PutV1ReportsByIdResponse = PutReportResponse;

export type GetV1RescheduleloansData = {
    command?: string;
    loanId?: number;
};

export type GetV1RescheduleloansResponse = Array<GetLoanRescheduleRequestResponse>;

export type PostV1RescheduleloansData = {
    requestBody: PostCreateRescheduleLoansRequest;
};

export type PostV1RescheduleloansResponse = PostCreateRescheduleLoansResponse;

export type GetV1RescheduleloansTemplateResponse = GetRescheduleReasonsTemplateResponse;

export type GetV1RescheduleloansByScheduleIdData = {
    command?: string;
    scheduleId: number;
};

export type GetV1RescheduleloansByScheduleIdResponse = GetLoanRescheduleRequestResponse;

export type PostV1RescheduleloansByScheduleIdData = {
    command?: string;
    requestBody: PostUpdateRescheduleLoansRequest;
    scheduleId: number;
};

export type PostV1RescheduleloansByScheduleIdResponse = PostUpdateRescheduleLoansResponse;

export type GetV1RolesResponse = Array<GetRolesResponse>;

export type PostV1RolesData = {
    requestBody: PostRolesRequest;
};

export type PostV1RolesResponse = PostRolesResponse;

export type DeleteV1RolesByRoleIdData = {
    /**
     * roleId
     */
    roleId: number;
};

export type DeleteV1RolesByRoleIdResponse = DeleteRolesRoleIdResponse;

export type GetV1RolesByRoleIdData = {
    /**
     * roleId
     */
    roleId: number;
};

export type GetV1RolesByRoleIdResponse = GetRolesRoleIdResponse;

export type PostV1RolesByRoleIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * roleId
     */
    roleId: number;
};

export type PostV1RolesByRoleIdResponse = PostRolesRoleIdResponse;

export type PutV1RolesByRoleIdData = {
    requestBody: PutRolesRoleIdRequest;
    /**
     * roleId
     */
    roleId: number;
};

export type PutV1RolesByRoleIdResponse = PutRolesRoleIdResponse;

export type GetV1RolesByRoleIdPermissionsData = {
    /**
     * roleId
     */
    roleId: number;
};

export type GetV1RolesByRoleIdPermissionsResponse = GetRolesRoleIdPermissionsResponse;

export type PutV1RolesByRoleIdPermissionsData = {
    requestBody: PutRolesRoleIdPermissionsRequest;
    /**
     * roleId
     */
    roleId: number;
};

export type PutV1RolesByRoleIdPermissionsResponse = PutRolesRoleIdPermissionsResponse;

export type PostV1RunaccrualsData = {
    requestBody: PostRunaccrualsRequest;
};

export type PostV1RunaccrualsResponse = unknown;

export type GetV1RunreportsAvailableExportsByReportNameData = {
    /**
     * isSelfServiceUserReport
     */
    isSelfServiceUserReport?: boolean;
    /**
     * reportName
     */
    reportName: string;
};

export type GetV1RunreportsAvailableExportsByReportNameResponse = Array<ReportExportType>;

export type GetV1RunreportsByReportNameData = {
    /**
     * isSelfServiceUserReport
     */
    isSelfServiceUserReport?: boolean;
    /**
     * reportName
     */
    reportName: string;
};

export type GetV1RunreportsByReportNameResponse = RunReportsResponse;

export type GetV1SavingsaccountsData = {
    /**
     * externalId
     */
    externalId?: string;
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * sortOrder
     */
    sortOrder?: string;
};

export type GetV1SavingsaccountsResponse = GetSavingsAccountsResponse;

export type PostV1SavingsaccountsData = {
    requestBody: PostSavingsAccountsRequest;
};

export type PostV1SavingsaccountsResponse = PostSavingsAccountsResponse;

export type GetV1SavingsaccountsDownloadtemplateData = {
    dateFormat?: string;
    officeId?: number;
    staffId?: number;
};

export type GetV1SavingsaccountsDownloadtemplateResponse = unknown;

export type DeleteV1SavingsaccountsExternalIdByExternalIdData = {
    /**
     * externalId
     */
    externalId: string;
};

export type DeleteV1SavingsaccountsExternalIdByExternalIdResponse = DeleteSavingsAccountsAccountIdResponse;

export type GetV1SavingsaccountsExternalIdByExternalIdData = {
    associations?: string;
    chargeStatus?: string;
    externalId: string;
    staffInSelectedOfficeOnly?: boolean;
};

export type GetV1SavingsaccountsExternalIdByExternalIdResponse = SavingsAccountData;

export type PostV1SavingsaccountsExternalIdByExternalIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * externalId
     */
    externalId: string;
    requestBody: PostSavingsAccountsAccountIdRequest;
};

export type PostV1SavingsaccountsExternalIdByExternalIdResponse = PostSavingsAccountsAccountIdResponse;

export type PutV1SavingsaccountsExternalIdByExternalIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * externalId
     */
    externalId: string;
    requestBody: PutSavingsAccountsAccountIdRequest;
};

export type PutV1SavingsaccountsExternalIdByExternalIdResponse = PutSavingsAccountsAccountIdResponse;

export type PostV1SavingsaccountsGsimData = {
    requestBody?: string;
};

export type PostV1SavingsaccountsGsimResponse = string;

export type PutV1SavingsaccountsGsimByParentAccountIdData = {
    parentAccountId: number;
    requestBody?: string;
};

export type PutV1SavingsaccountsGsimByParentAccountIdResponse = string;

export type PostV1SavingsaccountsGsimcommandsByParentAccountIdData = {
    command?: string;
    parentAccountId: number;
    requestBody?: string;
};

export type PostV1SavingsaccountsGsimcommandsByParentAccountIdResponse = string;

export type GetV1SavingsaccountsTemplateData = {
    /**
     * clientId
     */
    clientId?: number;
    /**
     * groupId
     */
    groupId?: number;
    /**
     * productId
     */
    productId?: number;
    /**
     * staffInSelectedOfficeOnly
     */
    staffInSelectedOfficeOnly?: boolean;
};

export type GetV1SavingsaccountsTemplateResponse = GetSavingsAccountsTemplateResponse;

export type GetV1SavingsaccountsTransactionsDownloadtemplateData = {
    dateFormat?: string;
    officeId?: number;
};

export type GetV1SavingsaccountsTransactionsDownloadtemplateResponse = unknown;

export type PostV1SavingsaccountsTransactionsUploadtemplateData = {
    /**
     * Upload savings transaction template
     */
    formData?: UploadRequest;
};

export type PostV1SavingsaccountsTransactionsUploadtemplateResponse = string;

export type PostV1SavingsaccountsUploadtemplateData = {
    /**
     * Upload savings template
     */
    formData?: UploadRequest;
};

export type PostV1SavingsaccountsUploadtemplateResponse = string;

export type DeleteV1SavingsaccountsByAccountIdData = {
    /**
     * accountId
     */
    accountId: number;
};

export type DeleteV1SavingsaccountsByAccountIdResponse = DeleteSavingsAccountsAccountIdResponse;

export type GetV1SavingsaccountsByAccountIdData = {
    accountId: number;
    associations?: string;
    chargeStatus?: string;
    staffInSelectedOfficeOnly?: boolean;
};

export type GetV1SavingsaccountsByAccountIdResponse = SavingsAccountData;

export type PostV1SavingsaccountsByAccountIdData = {
    /**
     * accountId
     */
    accountId: number;
    /**
     * command
     */
    command?: string;
    requestBody: PostSavingsAccountsAccountIdRequest;
};

export type PostV1SavingsaccountsByAccountIdResponse = PostSavingsAccountsAccountIdResponse;

export type PutV1SavingsaccountsByAccountIdData = {
    /**
     * accountId
     */
    accountId: number;
    /**
     * command
     */
    command?: string;
    requestBody: PutSavingsAccountsAccountIdRequest;
};

export type PutV1SavingsaccountsByAccountIdResponse = PutSavingsAccountsAccountIdResponse;

export type GetV1SavingsaccountsBySavingsAccountIdChargesData = {
    /**
     * chargeStatus
     */
    chargeStatus?: string;
    /**
     * savingsAccountId
     */
    savingsAccountId: number;
};

export type GetV1SavingsaccountsBySavingsAccountIdChargesResponse = Array<GetSavingsAccountsSavingsAccountIdChargesResponse>;

export type PostV1SavingsaccountsBySavingsAccountIdChargesData = {
    requestBody: PostSavingsAccountsSavingsAccountIdChargesRequest;
    /**
     * savingsAccountId
     */
    savingsAccountId: number;
};

export type PostV1SavingsaccountsBySavingsAccountIdChargesResponse = PostSavingsAccountsSavingsAccountIdChargesResponse;

export type GetV1SavingsaccountsBySavingsAccountIdChargesTemplateData = {
    /**
     * savingsAccountId
     */
    savingsAccountId: number;
};

export type GetV1SavingsaccountsBySavingsAccountIdChargesTemplateResponse = GetSavingsAccountsSavingsAccountIdChargesTemplateResponse;

export type DeleteV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdData = {
    /**
     * savingsAccountChargeId
     */
    savingsAccountChargeId: number;
    /**
     * savingsAccountId
     */
    savingsAccountId: number;
};

export type DeleteV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdResponse = DeleteSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse;

export type GetV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdData = {
    /**
     * savingsAccountChargeId
     */
    savingsAccountChargeId: number;
    /**
     * savingsAccountId
     */
    savingsAccountId: number;
};

export type GetV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdResponse = GetSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse;

export type PostV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdData = {
    /**
     * command
     */
    command?: string;
    requestBody: PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest;
    /**
     * savingsAccountChargeId
     */
    savingsAccountChargeId: number;
    /**
     * savingsAccountId
     */
    savingsAccountId: number;
};

export type PostV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdResponse = PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse;

export type PutV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdData = {
    requestBody: PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest;
    /**
     * savingsAccountChargeId
     */
    savingsAccountChargeId: number;
    /**
     * savingsAccountId
     */
    savingsAccountId: number;
};

export type PutV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdResponse = PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse;

export type GetV1SavingsaccountsBySavingsIdOnholdtransactionsData = {
    guarantorFundingId?: number;
    limit?: number;
    offset?: number;
    orderBy?: string;
    savingsId: number;
    sortOrder?: string;
};

export type GetV1SavingsaccountsBySavingsIdOnholdtransactionsResponse = string;

export type PostV1SavingsaccountsBySavingsIdTransactionsData = {
    command?: string;
    requestBody: PostSavingsAccountTransactionsRequest;
    savingsId: number;
};

export type PostV1SavingsaccountsBySavingsIdTransactionsResponse = PostSavingsAccountTransactionsResponse;

export type PostV1SavingsaccountsBySavingsIdTransactionsQueryData = {
    requestBody?: PagedLocalRequestAdvancedQueryRequest;
    /**
     * savingsId
     */
    savingsId: number;
};

export type PostV1SavingsaccountsBySavingsIdTransactionsQueryResponse = string;

export type GetV1SavingsaccountsBySavingsIdTransactionsSearchData = {
    /**
     * credit
     */
    credit?: boolean;
    /**
     * date format
     */
    dateFormat?: string;
    /**
     * debit
     */
    debit?: boolean;
    /**
     * minimum transaction amount (inclusive)
     */
    fromAmount?: number;
    /**
     * minimum value date (inclusive)
     */
    fromDate?: string;
    /**
     * minimum booking date (inclusive)
     */
    fromSubmittedDate?: string;
    /**
     * limit
     */
    limit?: number;
    /**
     * locale
     */
    locale?: string;
    /**
     * offset
     */
    offset?: number;
    /**
     * sort properties
     */
    orderBy?: string;
    /**
     * savings account id
     */
    savingsId: number;
    /**
     * sort direction
     */
    sortOrder?: 'ASC' | 'DESC';
    /**
     * maximum transaction amount (inclusive)
     */
    toAmount?: number;
    /**
     * maximum value date (inclusive)
     */
    toDate?: string;
    /**
     * maximum booking date (inclusive)
     */
    toSubmittedDate?: string;
    /**
     * transaction types
     */
    types?: string;
};

export type GetV1SavingsaccountsBySavingsIdTransactionsSearchResponse = SavingsAccountTransactionsSearchResponse;

export type GetV1SavingsaccountsBySavingsIdTransactionsTemplateData = {
    savingsId: number;
};

export type GetV1SavingsaccountsBySavingsIdTransactionsTemplateResponse = string;

export type GetV1SavingsaccountsBySavingsIdTransactionsByTransactionIdData = {
    savingsId: number;
    transactionId: number;
};

export type GetV1SavingsaccountsBySavingsIdTransactionsByTransactionIdResponse = string;

export type PostV1SavingsaccountsBySavingsIdTransactionsByTransactionIdData = {
    command?: string;
    requestBody: PostSavingsAccountBulkReversalTransactionsRequest;
    savingsId: number;
    transactionId: number;
};

export type PostV1SavingsaccountsBySavingsIdTransactionsByTransactionIdResponse = Array<PostSavingsAccountBulkReversalTransactionsRequest>;

export type GetV1SavingsproductsResponse = Array<GetSavingsProductsResponse>;

export type PostV1SavingsproductsData = {
    requestBody: PostSavingsProductsRequest;
};

export type PostV1SavingsproductsResponse = PostSavingsProductsResponse;

export type GetV1SavingsproductsTemplateResponse = GetSavingsProductsTemplateResponse;

export type DeleteV1SavingsproductsByProductIdData = {
    /**
     * productId
     */
    productId: number;
};

export type DeleteV1SavingsproductsByProductIdResponse = DeleteSavingsProductsProductIdResponse;

export type GetV1SavingsproductsByProductIdData = {
    /**
     * productId
     */
    productId: number;
};

export type GetV1SavingsproductsByProductIdResponse = GetSavingsProductsProductIdResponse;

export type PutV1SavingsproductsByProductIdData = {
    /**
     * productId
     */
    productId: number;
    requestBody: PutSavingsProductsProductIdRequest;
};

export type PutV1SavingsproductsByProductIdResponse = PutSavingsProductsProductIdResponse;

export type GetV1SchedulerResponse = GetSchedulerResponse;

export type PostV1SchedulerData = {
    /**
     * command
     */
    command?: string;
};

export type PostV1SchedulerResponse = unknown;

export type GetV1SearchData = {
    /**
     * exactMatch
     */
    exactMatch?: boolean;
    /**
     * query
     */
    query?: string;
    /**
     * resource
     */
    resource?: string;
};

export type GetV1SearchResponse = Array<GetSearchResponse>;

export type PostV1SearchAdvanceData = {
    requestBody: PostAdhocQuerySearchRequest;
};

export type PostV1SearchAdvanceResponse = Array<AdHocSearchQueryData>;

export type GetV1SearchTemplateResponse = AdHocSearchQueryData;

export type PostV1SelfAccounttransfersData = {
    requestBody?: AccountTransferRequest;
    type?: string;
};

export type PostV1SelfAccounttransfersResponse = Array<PostNewTransferResponse>;

export type GetV1SelfAccounttransfersTemplateData = {
    type?: string;
};

export type GetV1SelfAccounttransfersTemplateResponse = Array<GetAccountTransferTemplateResponse>;

export type PostV1SelfAuthenticationData = {
    requestBody: PostAuthenticationRequest;
};

export type PostV1SelfAuthenticationResponse = PostSelfAuthenticationResponse;

export type GetV1SelfBeneficiariesTptResponse = Array<GetSelfBeneficiariesTPTResponse>;

export type PostV1SelfBeneficiariesTptData = {
    requestBody: PostSelfBeneficiariesTPTRequest;
};

export type PostV1SelfBeneficiariesTptResponse = PostSelfBeneficiariesTPTResponse;

export type GetV1SelfBeneficiariesTptTemplateResponse = GetSelfBeneficiariesTPTTemplateResponse;

export type DeleteV1SelfBeneficiariesTptByBeneficiaryIdData = {
    beneficiaryId: number;
};

export type DeleteV1SelfBeneficiariesTptByBeneficiaryIdResponse = DeleteSelfBeneficiariesTPTBeneficiaryIdResponse;

export type PutV1SelfBeneficiariesTptByBeneficiaryIdData = {
    /**
     * beneficiaryId
     */
    beneficiaryId: number;
    requestBody: PutSelfBeneficiariesTPTBeneficiaryIdRequest;
};

export type PutV1SelfBeneficiariesTptByBeneficiaryIdResponse = PutSelfBeneficiariesTPTBeneficiaryIdResponse;

export type GetV1SelfClientsData = {
    /**
     * displayName
     */
    displayName?: string;
    /**
     * firstName
     */
    firstName?: string;
    /**
     * lastName
     */
    lastName?: string;
    legalForm?: number;
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * sortOrder
     */
    sortOrder?: string;
    /**
     * status
     */
    status?: string;
};

export type GetV1SelfClientsResponse = GetSelfClientsResponse;

export type GetV1SelfClientsByClientIdData = {
    /**
     * clientId
     */
    clientId: number;
};

export type GetV1SelfClientsByClientIdResponse = GetSelfClientsClientIdResponse;

export type GetV1SelfClientsByClientIdAccountsData = {
    /**
     * clientId
     */
    clientId: number;
};

export type GetV1SelfClientsByClientIdAccountsResponse = GetSelfClientsClientIdAccountsResponse;

export type GetV1SelfClientsByClientIdChargesData = {
    /**
     * chargeStatus
     */
    chargeStatus?: string;
    /**
     * clientId
     */
    clientId: number;
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * pendingPayment
     */
    pendingPayment?: boolean;
};

export type GetV1SelfClientsByClientIdChargesResponse = GetSelfClientsClientIdChargesResponse;

export type GetV1SelfClientsByClientIdChargesByChargeIdData = {
    /**
     * chargeId
     */
    chargeId: number;
    /**
     * clientId
     */
    clientId: number;
};

export type GetV1SelfClientsByClientIdChargesByChargeIdResponse = GetSelfClientsClientIdChargesChargeIdResponse;

export type DeleteV1SelfClientsByClientIdImagesData = {
    clientId: number;
};

export type DeleteV1SelfClientsByClientIdImagesResponse = CommandProcessingResult;

export type GetV1SelfClientsByClientIdImagesData = {
    /**
     * clientId
     */
    clientId: number;
    maxHeight?: number;
    maxWidth?: number;
    output?: string;
};

export type GetV1SelfClientsByClientIdImagesResponse = unknown;

export type PostV1SelfClientsByClientIdImagesData = {
    clientId: number;
    contentLength?: number;
    /**
     * Add new client image
     */
    formData?: UploadRequest;
};

export type PostV1SelfClientsByClientIdImagesResponse = CommandProcessingResult;

export type GetV1SelfClientsByClientIdObligeedetailsData = {
    clientId: number;
};

export type GetV1SelfClientsByClientIdObligeedetailsResponse = string;

export type GetV1SelfClientsByClientIdTransactionsData = {
    /**
     * clientId
     */
    clientId: number;
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
};

export type GetV1SelfClientsByClientIdTransactionsResponse = GetSelfClientsClientIdTransactionsResponse;

export type GetV1SelfClientsByClientIdTransactionsByTransactionIdData = {
    /**
     * clientId
     */
    clientId: number;
    /**
     * transactionId
     */
    transactionId: number;
};

export type GetV1SelfClientsByClientIdTransactionsByTransactionIdResponse = GetSelfClientsClientIdTransactionsTransactionIdResponse;

export type GetV1SelfDeviceRegistrationResponse = string;

export type PostV1SelfDeviceRegistrationData = {
    requestBody?: string;
};

export type PostV1SelfDeviceRegistrationResponse = string;

export type GetV1SelfDeviceRegistrationClientByClientIdData = {
    clientId: number;
};

export type GetV1SelfDeviceRegistrationClientByClientIdResponse = string;

export type DeleteV1SelfDeviceRegistrationByIdData = {
    id: number;
};

export type DeleteV1SelfDeviceRegistrationByIdResponse = string;

export type GetV1SelfDeviceRegistrationByIdData = {
    id: number;
};

export type GetV1SelfDeviceRegistrationByIdResponse = string;

export type PutV1SelfDeviceRegistrationByIdData = {
    id: number;
    requestBody?: string;
};

export type PutV1SelfDeviceRegistrationByIdResponse = string;

export type GetV1SelfLoanproductsData = {
    clientId?: number;
};

export type GetV1SelfLoanproductsResponse = string;

export type GetV1SelfLoanproductsByProductIdData = {
    clientId?: number;
    productId: number;
};

export type GetV1SelfLoanproductsByProductIdResponse = string;

export type PostV1SelfLoansData = {
    /**
     * command
     */
    command?: string;
    requestBody: PostSelfLoansRequest;
};

export type PostV1SelfLoansResponse = PostSelfLoansResponse;

export type GetV1SelfLoansTemplateData = {
    /**
     * clientId
     */
    clientId?: number;
    /**
     * productId
     */
    productId?: number;
    /**
     * templateType
     */
    templateType?: string;
};

export type GetV1SelfLoansTemplateResponse = GetSelfLoansTemplateResponse;

export type GetV1SelfLoansByLoanIdData = {
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1SelfLoansByLoanIdResponse = GetSelfLoansLoanIdResponse;

export type PostV1SelfLoansByLoanIdData = {
    /**
     * command
     */
    command?: string;
    /**
     * loanId
     */
    loanId: number;
    requestBody: PostSelfLoansLoanIdRequest;
};

export type PostV1SelfLoansByLoanIdResponse = PostSelfLoansLoanIdResponse;

export type PutV1SelfLoansByLoanIdData = {
    /**
     * loanId
     */
    loanId: number;
    requestBody: PutSelfLoansLoanIdRequest;
};

export type PutV1SelfLoansByLoanIdResponse = PutSelfLoansLoanIdResponse;

export type GetV1SelfLoansByLoanIdChargesData = {
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1SelfLoansByLoanIdChargesResponse = Array<GetSelfLoansLoanIdChargesResponse>;

export type GetV1SelfLoansByLoanIdChargesByChargeIdData = {
    /**
     * chargeId
     */
    chargeId: number;
    /**
     * loanId
     */
    loanId: number;
};

export type GetV1SelfLoansByLoanIdChargesByChargeIdResponse = GetSelfLoansLoanIdChargesResponse;

export type GetV1SelfLoansByLoanIdGuarantorsData = {
    loanId: number;
};

export type GetV1SelfLoansByLoanIdGuarantorsResponse = Array<GuarantorData>;

export type GetV1SelfLoansByLoanIdTransactionsByTransactionIdData = {
    /**
     * Optional Loan Transaction attribute list to be in the response
     */
    fields?: string;
    /**
     * loanId
     */
    loanId: number;
    /**
     * transactionId
     */
    transactionId: number;
};

export type GetV1SelfLoansByLoanIdTransactionsByTransactionIdResponse = GetSelfLoansLoanIdTransactionsTransactionIdResponse;

export type GetV1SelfPocketsResponse = GetAccountsLinkedToPocketResponse;

export type PostV1SelfPocketsData = {
    /**
     * command
     */
    command?: string;
    requestBody?: string;
};

export type PostV1SelfPocketsResponse = PostLinkDelinkAccountsToFromPocketResponse;

export type GetV1SelfProductsShareData = {
    clientId?: number;
    limit?: number;
    offset?: number;
};

export type GetV1SelfProductsShareResponse = string;

export type GetV1SelfProductsShareByProductIdData = {
    clientId?: number;
    productId: number;
    type: string;
};

export type GetV1SelfProductsShareByProductIdResponse = string;

export type PostV1SelfRegistrationData = {
    requestBody?: string;
};

export type PostV1SelfRegistrationResponse = string;

export type PostV1SelfRegistrationUserData = {
    requestBody?: string;
};

export type PostV1SelfRegistrationUserResponse = string;

export type GetV1SelfRunreportsByReportNameData = {
    /**
     * reportName
     */
    reportName: string;
};

export type GetV1SelfRunreportsByReportNameResponse = GetRunReportResponse;

export type PostV1SelfSavingsaccountsData = {
    command?: string;
    requestBody?: string;
};

export type PostV1SelfSavingsaccountsResponse = string;

export type GetV1SelfSavingsaccountsTemplateData = {
    clientId?: number;
    productId?: number;
};

export type GetV1SelfSavingsaccountsTemplateResponse = string;

export type GetV1SelfSavingsaccountsByAccountIdData = {
    /**
     * accountId
     */
    accountId: number;
    /**
     * associations
     */
    associations?: string;
    /**
     * chargeStatus
     */
    chargeStatus?: string;
};

export type GetV1SelfSavingsaccountsByAccountIdResponse = GetSelfSavingsAccountsResponse;

export type PutV1SelfSavingsaccountsByAccountIdData = {
    accountId: number;
    command?: string;
    requestBody?: string;
};

export type PutV1SelfSavingsaccountsByAccountIdResponse = string;

export type GetV1SelfSavingsaccountsByAccountIdChargesData = {
    /**
     * accountId
     */
    accountId: number;
    /**
     * chargeStatus
     */
    chargeStatus?: string;
};

export type GetV1SelfSavingsaccountsByAccountIdChargesResponse = Array<GetSelfSavingsAccountsAccountIdChargesResponse>;

export type GetV1SelfSavingsaccountsByAccountIdChargesBySavingsAccountChargeIdData = {
    /**
     * accountId
     */
    accountId: number;
    /**
     * savingsAccountChargeId
     */
    savingsAccountChargeId: number;
};

export type GetV1SelfSavingsaccountsByAccountIdChargesBySavingsAccountChargeIdResponse = GetSelfSavingsAccountsAccountIdChargesSavingsAccountChargeIdResponse;

export type GetV1SelfSavingsaccountsByAccountIdTransactionsByTransactionIdData = {
    /**
     * accountId
     */
    accountId: number;
    /**
     * transactionId
     */
    transactionId: number;
};

export type GetV1SelfSavingsaccountsByAccountIdTransactionsByTransactionIdResponse = GetSelfSavingsAccountsAccountIdTransactionsTransactionIdResponse;

export type GetV1SelfSavingsproductsData = {
    clientId?: number;
};

export type GetV1SelfSavingsproductsResponse = string;

export type GetV1SelfSavingsproductsByProductIdData = {
    clientId?: number;
    productId: number;
};

export type GetV1SelfSavingsproductsByProductIdResponse = string;

export type PostV1SelfShareaccountsData = {
    requestBody?: AccountRequest;
};

export type PostV1SelfShareaccountsResponse = Array<PostNewShareApplicationResponse>;

export type GetV1SelfShareaccountsTemplateData = {
    clientId?: number;
    productId?: number;
};

export type GetV1SelfShareaccountsTemplateResponse = Array<GetShareAccountsClientIdProductIdResponse>;

export type GetV1SelfShareaccountsByAccountIdData = {
    accountId: number;
};

export type GetV1SelfShareaccountsByAccountIdResponse = string;

export type GetV1SelfSurveysResponse = Array<SurveyData>;

export type GetV1SelfSurveysScorecardsClientsByClientIdData = {
    clientId: number;
};

export type GetV1SelfSurveysScorecardsClientsByClientIdResponse = Array<ScorecardData>;

export type PostV1SelfSurveysScorecardsBySurveyIdData = {
    requestBody?: ScorecardData;
    surveyId: number;
};

export type PostV1SelfSurveysScorecardsBySurveyIdResponse = unknown;

export type PutV1SelfUserData = {
    requestBody: PutSelfUserRequest;
};

export type PutV1SelfUserResponse = PutSelfUserResponse;

export type GetV1SelfUserdetailsResponse = GetSelfUserDetailsResponse;

export type GetV1ShareproductByProductIdDividendData = {
    limit?: number;
    offset?: number;
    orderBy?: string;
    productId: number;
    sortOrder?: string;
    status?: number;
};

export type GetV1ShareproductByProductIdDividendResponse = string;

export type PostV1ShareproductByProductIdDividendData = {
    productId: number;
    requestBody?: string;
};

export type PostV1ShareproductByProductIdDividendResponse = string;

export type DeleteV1ShareproductByProductIdDividendByDividendIdData = {
    dividendId: number;
    productId: number;
};

export type DeleteV1ShareproductByProductIdDividendByDividendIdResponse = string;

export type GetV1ShareproductByProductIdDividendByDividendIdData = {
    accountNo?: string;
    dividendId: number;
    limit?: number;
    offset?: number;
    orderBy?: string;
    productId: number;
    sortOrder?: string;
};

export type GetV1ShareproductByProductIdDividendByDividendIdResponse = string;

export type PutV1ShareproductByProductIdDividendByDividendIdData = {
    command?: string;
    dividendId: number;
    productId: number;
    requestBody?: string;
};

export type PutV1ShareproductByProductIdDividendByDividendIdResponse = string;

export type GetV1SmsResponse = Array<SmsData>;

export type PostV1SmsData = {
    requestBody?: SmsCreationRequest;
};

export type PostV1SmsResponse = CommandProcessingResult;

export type GetV1SmsByCampaignIdMessageByStatusData = {
    campaignId: number;
    dateFormat?: string;
    fromDate?: DateParam;
    limit?: number;
    locale?: string;
    offset?: number;
    orderBy?: string;
    sortOrder?: string;
    status?: number;
    toDate?: DateParam;
};

export type GetV1SmsByCampaignIdMessageByStatusResponse = PageSmsData;

export type DeleteV1SmsByResourceIdData = {
    resourceId: number;
};

export type DeleteV1SmsByResourceIdResponse = CommandProcessingResult;

export type GetV1SmsByResourceIdData = {
    resourceId: number;
};

export type GetV1SmsByResourceIdResponse = SmsData;

export type PutV1SmsByResourceIdData = {
    requestBody?: SmsUpdateRequest;
    resourceId: number;
};

export type PutV1SmsByResourceIdResponse = CommandProcessingResult;

export type GetV1StaffData = {
    /**
     * loanOfficersOnly
     */
    loanOfficersOnly?: boolean;
    /**
     * officeId
     */
    officeId?: number;
    /**
     * staffInOfficeHierarchy
     */
    staffInOfficeHierarchy?: boolean;
    /**
     * status
     */
    status?: string;
};

export type GetV1StaffResponse = Array<StaffData>;

export type PostV1StaffData = {
    requestBody: StaffRequest;
};

export type PostV1StaffResponse = CreateStaffResponse;

export type GetV1StaffDownloadtemplateData = {
    dateFormat?: string;
    officeId?: number;
};

export type GetV1StaffDownloadtemplateResponse = unknown;

export type PostV1StaffUploadtemplateData = {
    /**
     * Upload staff template
     */
    formData?: UploadRequest;
};

export type PostV1StaffUploadtemplateResponse = number;

export type GetV1StaffByStaffIdData = {
    /**
     * staffId
     */
    staffId: number;
};

export type GetV1StaffByStaffIdResponse = StaffData;

export type PutV1StaffByStaffIdData = {
    requestBody: PutStaffRequest;
    /**
     * staffId
     */
    staffId: number;
};

export type PutV1StaffByStaffIdResponse = UpdateStaffResponse;

export type GetV1StandinginstructionrunhistoryData = {
    /**
     * clientId
     */
    clientId?: number;
    /**
     * clientName
     */
    clientName?: string;
    /**
     * dateFormat
     */
    dateFormat?: string;
    /**
     * externalId
     */
    externalId?: string;
    /**
     * fromAccountId
     */
    fromAccountId?: number;
    /**
     * fromAccountType
     */
    fromAccountType?: number;
    /**
     * fromDate
     */
    fromDate?: DateParam;
    /**
     * limit
     */
    limit?: number;
    /**
     * locale
     */
    locale?: string;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * sortOrder
     */
    sortOrder?: string;
    /**
     * toDate
     */
    toDate?: DateParam;
    /**
     * transferType
     */
    transferType?: number;
};

export type GetV1StandinginstructionrunhistoryResponse = GetStandingInstructionRunHistoryResponse;

export type GetV1StandinginstructionsData = {
    /**
     * clientId
     */
    clientId?: number;
    /**
     * clientName
     */
    clientName?: string;
    /**
     * externalId
     */
    externalId?: string;
    /**
     * fromAccountId
     */
    fromAccountId?: number;
    /**
     * fromAccountType
     */
    fromAccountType?: number;
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * sortOrder
     */
    sortOrder?: string;
    /**
     * transferType
     */
    transferType?: number;
};

export type GetV1StandinginstructionsResponse = GetStandingInstructionsResponse;

export type PostV1StandinginstructionsData = {
    requestBody: StandingInstructionCreationRequest;
};

export type PostV1StandinginstructionsResponse = PostStandingInstructionsResponse;

export type GetV1StandinginstructionsTemplateData = {
    fromAccountId?: number;
    fromAccountType?: number;
    fromClientId?: number;
    fromOfficeId?: number;
    toAccountId?: number;
    toAccountType?: number;
    toClientId?: number;
    toOfficeId?: number;
    transferType?: number;
};

export type GetV1StandinginstructionsTemplateResponse = GetStandingInstructionsTemplateResponse;

export type GetV1StandinginstructionsByStandingInstructionIdData = {
    /**
     * externalId
     */
    externalId?: string;
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * sortOrder
     */
    sortOrder?: string;
    /**
     * standingInstructionId
     */
    standingInstructionId: number;
};

export type GetV1StandinginstructionsByStandingInstructionIdResponse = GetStandingInstructionsStandingInstructionIdResponse;

export type PutV1StandinginstructionsByStandingInstructionIdData = {
    /**
     * command
     */
    command?: string;
    requestBody?: StandingInstructionUpdatesRequest;
    /**
     * standingInstructionId
     */
    standingInstructionId: number;
};

export type PutV1StandinginstructionsByStandingInstructionIdResponse = PutStandingInstructionsStandingInstructionIdResponse;

export type GetV1SurveyResponse = Array<GetSurveyResponse>;

export type PutV1SurveyRegisterBySurveyNameByApptableData = {
    apptable: string;
    requestBody?: string;
    surveyName: string;
};

export type PutV1SurveyRegisterBySurveyNameByApptableResponse = string;

export type GetV1SurveyBySurveyNameData = {
    /**
     * surveyName
     */
    surveyName: string;
};

export type GetV1SurveyBySurveyNameResponse = GetSurveyResponse;

export type PostV1SurveyBySurveyNameByApptableIdData = {
    /**
     * apptableId
     */
    apptableId: number;
    requestBody: PostSurveySurveyNameApptableIdRequest;
    /**
     * surveyName
     */
    surveyName: string;
};

export type PostV1SurveyBySurveyNameByApptableIdResponse = PostSurveySurveyNameApptableIdResponse;

export type GetV1SurveyBySurveyNameByClientIdData = {
    clientId: number;
    surveyName: string;
};

export type GetV1SurveyBySurveyNameByClientIdResponse = string;

export type GetV1SurveyBySurveyNameByClientIdByEntryIdData = {
    clientId: number;
    entryId: number;
    surveyName: string;
};

export type GetV1SurveyBySurveyNameByClientIdByEntryIdResponse = string;

export type DeleteV1SurveyBySurveyNameByClientIdByFulfilledIdData = {
    clientId: number;
    fulfilledId: number;
    surveyName: string;
};

export type DeleteV1SurveyBySurveyNameByClientIdByFulfilledIdResponse = string;

export type GetV1SurveysData = {
    isActive?: boolean;
};

export type GetV1SurveysResponse = Array<SurveyData>;

export type PostV1SurveysData = {
    /**
     * Create survey
     */
    requestBody?: SurveyData;
};

export type PostV1SurveysResponse = unknown;

export type GetV1SurveysByIdData = {
    /**
     * Enter id
     */
    id: number;
};

export type GetV1SurveysByIdResponse = SurveyData;

export type PostV1SurveysByIdData = {
    command?: string;
    id: number;
};

export type PostV1SurveysByIdResponse = unknown;

export type PutV1SurveysByIdData = {
    id: number;
    requestBody?: SurveyData;
};

export type PutV1SurveysByIdResponse = string;

export type GetV1SurveysScorecardsClientsByClientIdData = {
    clientId: number;
};

export type GetV1SurveysScorecardsClientsByClientIdResponse = Array<ScorecardData>;

export type GetV1SurveysScorecardsBySurveyIdData = {
    /**
     * Enter surveyId
     */
    surveyId: number;
};

export type GetV1SurveysScorecardsBySurveyIdResponse = Array<Scorecard>;

export type PostV1SurveysScorecardsBySurveyIdData = {
    /**
     * scorecardData
     */
    requestBody?: ScorecardData;
    /**
     * Enter surveyId
     */
    surveyId: number;
};

export type PostV1SurveysScorecardsBySurveyIdResponse = unknown;

export type GetV1SurveysScorecardsBySurveyIdClientsByClientIdData = {
    /**
     * Enter clientId
     */
    clientId: number;
    /**
     * Enter surveyId
     */
    surveyId: number;
};

export type GetV1SurveysScorecardsBySurveyIdClientsByClientIdResponse = Array<ScorecardData>;

export type GetV1SurveysBySurveyIdLookuptablesData = {
    /**
     * Enter surveyId
     */
    surveyId: number;
};

export type GetV1SurveysBySurveyIdLookuptablesResponse = Array<LookupTableData>;

export type PostV1SurveysBySurveyIdLookuptablesData = {
    requestBody?: LookupTableData;
    /**
     * Enter surveyId
     */
    surveyId: number;
};

export type PostV1SurveysBySurveyIdLookuptablesResponse = unknown;

export type GetV1SurveysBySurveyIdLookuptablesByKeyData = {
    /**
     * Enter key
     */
    key: string;
    /**
     * Enter surveyId
     */
    surveyId: number;
};

export type GetV1SurveysBySurveyIdLookuptablesByKeyResponse = LookupTableData;

export type GetV1TaxesComponentResponse = Array<GetTaxesComponentsResponse>;

export type PostV1TaxesComponentData = {
    requestBody: PostTaxesComponentsRequest;
};

export type PostV1TaxesComponentResponse = PostTaxesComponentsResponse;

export type GetV1TaxesComponentTemplateResponse = TaxComponentData;

export type GetV1TaxesComponentByTaxComponentIdData = {
    /**
     * taxComponentId
     */
    taxComponentId: number;
};

export type GetV1TaxesComponentByTaxComponentIdResponse = GetTaxesComponentsResponse;

export type PutV1TaxesComponentByTaxComponentIdData = {
    requestBody: PutTaxesComponentsTaxComponentIdRequest;
    /**
     * taxComponentId
     */
    taxComponentId: number;
};

export type PutV1TaxesComponentByTaxComponentIdResponse = PutTaxesComponentsTaxComponentIdResponse;

export type GetV1TaxesGroupResponse = Array<GetTaxesGroupResponse>;

export type PostV1TaxesGroupData = {
    requestBody: PostTaxesGroupRequest;
};

export type PostV1TaxesGroupResponse = PostTaxesGroupResponse;

export type GetV1TaxesGroupTemplateResponse = TaxGroupData;

export type GetV1TaxesGroupByTaxGroupIdData = {
    /**
     * taxGroupId
     */
    taxGroupId: number;
};

export type GetV1TaxesGroupByTaxGroupIdResponse = GetTaxesGroupResponse;

export type PutV1TaxesGroupByTaxGroupIdData = {
    requestBody: PutTaxesGroupTaxGroupIdRequest;
    /**
     * taxGroupId
     */
    taxGroupId: number;
};

export type PutV1TaxesGroupByTaxGroupIdResponse = PutTaxesGroupTaxGroupIdResponse;

export type GetV1TellersData = {
    /**
     * officeId
     */
    officeId?: number;
};

export type GetV1TellersResponse = Array<GetTellersResponse>;

export type PostV1TellersData = {
    requestBody: PostTellersRequest;
};

export type PostV1TellersResponse = PostTellersResponse;

export type DeleteV1TellersByTellerIdData = {
    /**
     * tellerId
     */
    tellerId: number;
};

export type DeleteV1TellersByTellerIdResponse = CommandProcessingResult;

export type GetV1TellersByTellerIdData = {
    /**
     * tellerId
     */
    tellerId: number;
};

export type GetV1TellersByTellerIdResponse = GetTellersResponse;

export type PutV1TellersByTellerIdData = {
    requestBody: PutTellersRequest;
    /**
     * tellerId
     */
    tellerId: number;
};

export type PutV1TellersByTellerIdResponse = PutTellersResponse;

export type GetV1TellersByTellerIdCashiersData = {
    /**
     * fromdate
     */
    fromdate?: string;
    /**
     * tellerId
     */
    tellerId: number;
    /**
     * todate
     */
    todate?: string;
};

export type GetV1TellersByTellerIdCashiersResponse = GetTellersTellerIdCashiersResponse;

export type PostV1TellersByTellerIdCashiersData = {
    requestBody: PostTellersTellerIdCashiersRequest;
    /**
     * tellerId
     */
    tellerId: number;
};

export type PostV1TellersByTellerIdCashiersResponse = PostTellersTellerIdCashiersResponse;

export type GetV1TellersByTellerIdCashiersTemplateData = {
    /**
     * tellerId
     */
    tellerId: number;
};

export type GetV1TellersByTellerIdCashiersTemplateResponse = GetTellersTellerIdCashiersTemplateResponse;

export type DeleteV1TellersByTellerIdCashiersByCashierIdData = {
    /**
     * cashierId
     */
    cashierId: number;
    /**
     * tellerId
     */
    tellerId: number;
};

export type DeleteV1TellersByTellerIdCashiersByCashierIdResponse = DeleteTellersTellerIdCashiersCashierIdResponse;

export type GetV1TellersByTellerIdCashiersByCashierIdData = {
    /**
     * cashierId
     */
    cashierId: number;
    /**
     * tellerId
     */
    tellerId: number;
};

export type GetV1TellersByTellerIdCashiersByCashierIdResponse = GetTellersTellerIdCashiersCashierIdResponse;

export type PutV1TellersByTellerIdCashiersByCashierIdData = {
    /**
     * cashierId
     */
    cashierId: number;
    requestBody: PutTellersTellerIdCashiersCashierIdRequest;
    /**
     * tellerId
     */
    tellerId: number;
};

export type PutV1TellersByTellerIdCashiersByCashierIdResponse = PutTellersTellerIdCashiersCashierIdResponse;

export type PostV1TellersByTellerIdCashiersByCashierIdAllocateData = {
    /**
     * cashierId
     */
    cashierId: number;
    requestBody: PostTellersTellerIdCashiersCashierIdAllocateRequest;
    /**
     * tellerId
     */
    tellerId: number;
};

export type PostV1TellersByTellerIdCashiersByCashierIdAllocateResponse = PostTellersTellerIdCashiersCashierIdAllocateResponse;

export type PostV1TellersByTellerIdCashiersByCashierIdSettleData = {
    /**
     * cashierId
     */
    cashierId: number;
    requestBody: PostTellersTellerIdCashiersCashierIdSettleRequest;
    /**
     * tellerId
     */
    tellerId: number;
};

export type PostV1TellersByTellerIdCashiersByCashierIdSettleResponse = PostTellersTellerIdCashiersCashierIdSettleResponse;

export type GetV1TellersByTellerIdCashiersByCashierIdSummaryandtransactionsData = {
    /**
     * cashierId
     */
    cashierId: number;
    /**
     * currencyCode
     */
    currencyCode?: string;
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * sortOrder
     */
    sortOrder?: string;
    /**
     * tellerId
     */
    tellerId: number;
};

export type GetV1TellersByTellerIdCashiersByCashierIdSummaryandtransactionsResponse = GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse;

export type GetV1TellersByTellerIdCashiersByCashierIdTransactionsData = {
    /**
     * cashierId
     */
    cashierId: number;
    /**
     * currencyCode
     */
    currencyCode?: string;
    /**
     * limit
     */
    limit?: number;
    /**
     * offset
     */
    offset?: number;
    /**
     * orderBy
     */
    orderBy?: string;
    /**
     * sortOrder
     */
    sortOrder?: string;
    /**
     * tellerId
     */
    tellerId: number;
};

export type GetV1TellersByTellerIdCashiersByCashierIdTransactionsResponse = GetTellersTellerIdCashiersCashiersIdTransactionsResponse;

export type GetV1TellersByTellerIdCashiersByCashierIdTransactionsTemplateData = {
    /**
     * cashierId
     */
    cashierId: number;
    /**
     * tellerId
     */
    tellerId: number;
};

export type GetV1TellersByTellerIdCashiersByCashierIdTransactionsTemplateResponse = GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse;

export type GetV1TellersByTellerIdJournalsData = {
    /**
     * cashierId
     */
    cashierId?: number;
    /**
     * dateRange
     */
    dateRange?: string;
    /**
     * tellerId
     */
    tellerId: number;
};

export type GetV1TellersByTellerIdJournalsResponse = Array<TellerJournalData>;

export type GetV1TellersByTellerIdTransactionsData = {
    /**
     * dateRange
     */
    dateRange?: string;
    /**
     * tellerId
     */
    tellerId: number;
};

export type GetV1TellersByTellerIdTransactionsResponse = Array<TellerTransactionData>;

export type GetV1TellersByTellerIdTransactionsByTransactionIdData = {
    /**
     * tellerId
     */
    tellerId: number;
    /**
     * transactionId
     */
    transactionId: number;
};

export type GetV1TellersByTellerIdTransactionsByTransactionIdResponse = TellerTransactionData;

export type GetV1TemplatesData = {
    /**
     * entityId
     */
    entityId?: number;
    /**
     * typeId
     */
    typeId?: number;
};

export type GetV1TemplatesResponse = GetTemplatesResponse;

export type PostV1TemplatesData = {
    requestBody: PostTemplatesRequest;
};

export type PostV1TemplatesResponse = PostTemplatesResponse;

export type GetV1TemplatesTemplateResponse = GetTemplatesTemplateResponse;

export type DeleteV1TemplatesByTemplateIdData = {
    /**
     * templateId
     */
    templateId: number;
};

export type DeleteV1TemplatesByTemplateIdResponse = DeleteTemplatesTemplateIdResponse;

export type GetV1TemplatesByTemplateIdData = {
    /**
     * templateId
     */
    templateId: number;
};

export type GetV1TemplatesByTemplateIdResponse = GetTemplatesTemplateIdResponse;

export type PostV1TemplatesByTemplateIdData = {
    requestBody?: string;
    templateId: number;
};

export type PostV1TemplatesByTemplateIdResponse = string;

export type PutV1TemplatesByTemplateIdData = {
    requestBody: PutTemplatesTemplateIdRequest;
    /**
     * templateId
     */
    templateId: number;
};

export type PutV1TemplatesByTemplateIdResponse = PutTemplatesTemplateIdResponse;

export type GetV1TemplatesByTemplateIdTemplateData = {
    templateId: number;
};

export type GetV1TemplatesByTemplateIdTemplateResponse = string;

export type GetV1TwofactorResponse = string;

export type PostV1TwofactorData = {
    deliveryMethod?: string;
    extendedToken?: boolean;
};

export type PostV1TwofactorResponse = string;

export type PostV1TwofactorInvalidateData = {
    requestBody?: string;
};

export type PostV1TwofactorInvalidateResponse = string;

export type PostV1TwofactorValidateData = {
    token?: string;
};

export type PostV1TwofactorValidateResponse = string;

export type GetV1UserdetailsResponse = GetUserDetailsResponse;

export type GetV1UsersResponse = Array<GetUsersResponse>;

export type PostV1UsersData = {
    requestBody: PostUsersRequest;
};

export type PostV1UsersResponse = PostUsersResponse;

export type GetV1UsersDownloadtemplateData = {
    dateFormat?: string;
    officeId?: number;
    staffId?: number;
};

export type GetV1UsersDownloadtemplateResponse = unknown;

export type GetV1UsersTemplateResponse = GetUsersTemplateResponse;

export type PostV1UsersUploadtemplateData = {
    /**
     * Upload users template
     */
    formData?: UploadRequest;
};

export type PostV1UsersUploadtemplateResponse = string;

export type DeleteV1UsersByUserIdData = {
    /**
     * userId
     */
    userId: number;
};

export type DeleteV1UsersByUserIdResponse = DeleteUsersUserIdResponse;

export type GetV1UsersByUserIdData = {
    /**
     * userId
     */
    userId: number;
};

export type GetV1UsersByUserIdResponse = GetUsersUserIdResponse;

export type PutV1UsersByUserIdData = {
    requestBody: PutUsersUserIdRequest;
    /**
     * userId
     */
    userId: number;
};

export type PutV1UsersByUserIdResponse = PutUsersUserIdResponse;

export type PostV1UsersByUserIdPwdData = {
    requestBody: ChangePwdUsersUserIdRequest;
    /**
     * userId
     */
    userId: number;
};

export type PostV1UsersByUserIdPwdResponse = ChangePwdUsersUserIdResponse;

export type GetV1WorkingdaysResponse = WorkingDaysData;

export type PutV1WorkingdaysData = {
    requestBody: PutWorkingDaysRequest;
};

export type PutV1WorkingdaysResponse = PutWorkingDaysResponse;

export type GetV1WorkingdaysTemplateResponse = GetWorkingDaysTemplateResponse;

export type GetV1ByEntityTypeByEntityIdCalendarsData = {
    calendarType?: string;
    entityId: number;
    entityType: string;
};

export type GetV1ByEntityTypeByEntityIdCalendarsResponse = Array<CalendarData>;

export type PostV1ByEntityTypeByEntityIdCalendarsData = {
    entityId: number;
    entityType: string;
    requestBody?: CalendarRequest;
};

export type PostV1ByEntityTypeByEntityIdCalendarsResponse = CommandProcessingResult;

export type GetV1ByEntityTypeByEntityIdCalendarsTemplateData = {
    entityId: number;
    entityType: string;
};

export type GetV1ByEntityTypeByEntityIdCalendarsTemplateResponse = CalendarData;

export type DeleteV1ByEntityTypeByEntityIdCalendarsByCalendarIdData = {
    calendarId: number;
    entityId: number;
    entityType: string;
};

export type DeleteV1ByEntityTypeByEntityIdCalendarsByCalendarIdResponse = CommandProcessingResult;

export type GetV1ByEntityTypeByEntityIdCalendarsByCalendarIdData = {
    calendarId: number;
    entityId: number;
    entityType: string;
};

export type GetV1ByEntityTypeByEntityIdCalendarsByCalendarIdResponse = CalendarData;

export type PutV1ByEntityTypeByEntityIdCalendarsByCalendarIdData = {
    calendarId: number;
    entityId: number;
    entityType: string;
    requestBody?: string;
};

export type PutV1ByEntityTypeByEntityIdCalendarsByCalendarIdResponse = CommandProcessingResult;

export type GetV1ByEntityTypeByEntityIdDocumentsData = {
    /**
     * entityId
     */
    entityId: number;
    /**
     * entityType
     */
    entityType: string;
};

export type GetV1ByEntityTypeByEntityIdDocumentsResponse = Array<DocumentData>;

export type PostV1ByEntityTypeByEntityIdDocumentsData = {
    /**
     * Content-Length
     */
    contentLength?: number;
    /**
     * entityId
     */
    entityId: number;
    /**
     * entityType
     */
    entityType: string;
    /**
     * Create document
     */
    formData?: DocumentUploadRequest;
};

export type PostV1ByEntityTypeByEntityIdDocumentsResponse = PostEntityTypeEntityIdDocumentsResponse;

export type DeleteV1ByEntityTypeByEntityIdDocumentsByDocumentIdData = {
    /**
     * documentId
     */
    documentId: number;
    /**
     * entityId
     */
    entityId: number;
    /**
     * entityType
     */
    entityType: string;
};

export type DeleteV1ByEntityTypeByEntityIdDocumentsByDocumentIdResponse = DeleteEntityTypeEntityIdDocumentsResponse;

export type GetV1ByEntityTypeByEntityIdDocumentsByDocumentIdData = {
    /**
     * documentId
     */
    documentId: number;
    /**
     * entityId
     */
    entityId: number;
    /**
     * entityType
     */
    entityType: string;
};

export type GetV1ByEntityTypeByEntityIdDocumentsByDocumentIdResponse = DocumentData;

export type PutV1ByEntityTypeByEntityIdDocumentsByDocumentIdData = {
    /**
     * Content-Length
     */
    contentLength?: number;
    /**
     * documentId
     */
    documentId: number;
    /**
     * entityId
     */
    entityId: number;
    /**
     * entityType
     */
    entityType: string;
    /**
     * Update document
     */
    formData?: DocumentUploadRequest;
};

export type PutV1ByEntityTypeByEntityIdDocumentsByDocumentIdResponse = PutEntityTypeEntityIdDocumentsResponse;

export type GetV1ByEntityTypeByEntityIdDocumentsByDocumentIdAttachmentData = {
    /**
     * documentId
     */
    documentId: number;
    /**
     * entityId
     */
    entityId: number;
    /**
     * entityType
     */
    entityType: string;
};

export type GetV1ByEntityTypeByEntityIdDocumentsByDocumentIdAttachmentResponse = unknown;

export type GetV1ByEntityTypeByEntityIdMeetingsData = {
    entityId: number;
    entityType: string;
    limit?: number;
};

export type GetV1ByEntityTypeByEntityIdMeetingsResponse = string;

export type PostV1ByEntityTypeByEntityIdMeetingsData = {
    entityId: number;
    entityType: string;
    requestBody?: string;
};

export type PostV1ByEntityTypeByEntityIdMeetingsResponse = string;

export type GetV1ByEntityTypeByEntityIdMeetingsTemplateData = {
    calendarId?: number;
    entityId: number;
    entityType: string;
};

export type GetV1ByEntityTypeByEntityIdMeetingsTemplateResponse = string;

export type DeleteV1ByEntityTypeByEntityIdMeetingsByMeetingIdData = {
    entityId: number;
    entityType: string;
    meetingId: number;
};

export type DeleteV1ByEntityTypeByEntityIdMeetingsByMeetingIdResponse = string;

export type GetV1ByEntityTypeByEntityIdMeetingsByMeetingIdData = {
    entityId: number;
    entityType: string;
    meetingId: number;
};

export type GetV1ByEntityTypeByEntityIdMeetingsByMeetingIdResponse = string;

export type PostV1ByEntityTypeByEntityIdMeetingsByMeetingIdData = {
    command?: string;
    entityId: number;
    entityType: string;
    meetingId: number;
    requestBody?: string;
};

export type PostV1ByEntityTypeByEntityIdMeetingsByMeetingIdResponse = string;

export type PutV1ByEntityTypeByEntityIdMeetingsByMeetingIdData = {
    entityId: number;
    entityType: string;
    meetingId: number;
    requestBody?: string;
};

export type PutV1ByEntityTypeByEntityIdMeetingsByMeetingIdResponse = string;

export type GetV1ByResourceTypeByResourceIdNotesData = {
    /**
     * resourceId
     */
    resourceId: number;
    /**
     * resourceType
     */
    resourceType: string;
};

export type GetV1ByResourceTypeByResourceIdNotesResponse = Array<NoteData>;

export type PostV1ByResourceTypeByResourceIdNotesData = {
    requestBody: NoteRequest;
    /**
     * resourceId
     */
    resourceId: number;
    /**
     * resourceType
     */
    resourceType: string;
};

export type PostV1ByResourceTypeByResourceIdNotesResponse = PostResourceTypeResourceIdNotesResponse;

export type DeleteV1ByResourceTypeByResourceIdNotesByNoteIdData = {
    /**
     * noteId
     */
    noteId: number;
    /**
     * resourceId
     */
    resourceId: number;
    /**
     * resourceType
     */
    resourceType: string;
};

export type DeleteV1ByResourceTypeByResourceIdNotesByNoteIdResponse = DeleteResourceTypeResourceIdNotesNoteIdResponse;

export type GetV1ByResourceTypeByResourceIdNotesByNoteIdData = {
    /**
     * noteId
     */
    noteId: number;
    /**
     * resourceId
     */
    resourceId: number;
    /**
     * resourceType
     */
    resourceType: string;
};

export type GetV1ByResourceTypeByResourceIdNotesByNoteIdResponse = NoteData;

export type PutV1ByResourceTypeByResourceIdNotesByNoteIdData = {
    /**
     * noteId
     */
    noteId: number;
    requestBody: NoteRequest;
    /**
     * resourceId
     */
    resourceId: number;
    /**
     * resourceType
     */
    resourceType: string;
};

export type PutV1ByResourceTypeByResourceIdNotesByNoteIdResponse = PutResourceTypeResourceIdNotesNoteIdResponse;

export type PostV2ClientsSearchData = {
    requestBody?: PagedRequestClientTextSearch;
};

export type PostV2ClientsSearchResponse = PageClientSearchData;

export type $OpenApiTs = {
    '/application.wadl': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/application.wadl/{path}': {
        get: {
            req: GetApplicationWadlByPathData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/creditBureauIntegration/addCreditReport': {
        post: {
            req: PostV1CreditBureauIntegrationAddCreditReportData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/creditBureauIntegration/creditReport': {
        post: {
            req: PostV1CreditBureauIntegrationCreditReportData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/creditBureauIntegration/creditReport/{creditBureauId}': {
        get: {
            req: GetV1CreditBureauIntegrationCreditReportByCreditBureauIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/creditBureauIntegration/deleteCreditReport/{creditBureauId}': {
        delete: {
            req: DeleteV1CreditBureauIntegrationDeleteCreditReportByCreditBureauIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/creditBureauIntegration/saveCreditReport': {
        post: {
            req: PostV1CreditBureauIntegrationSaveCreditReportData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/echo': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/email': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        post: {
            req: PostV1EmailData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/email/campaign': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        post: {
            req: PostV1EmailCampaignData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/email/campaign/preview': {
        post: {
            req: PostV1EmailCampaignPreviewData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/email/campaign/template': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/email/campaign/template/{resourceId}': {
        get: {
            req: GetV1EmailCampaignTemplateByResourceIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/email/campaign/{resourceId}': {
        delete: {
            req: DeleteV1EmailCampaignByResourceIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        get: {
            req: GetV1EmailCampaignByResourceIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        post: {
            req: PostV1EmailCampaignByResourceIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        put: {
            req: PutV1EmailCampaignByResourceIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/email/configuration': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        put: {
            req: PutV1EmailConfigurationData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/email/failedEmail': {
        get: {
            req: GetV1EmailFailedEmailData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/email/messageByStatus': {
        get: {
            req: GetV1EmailMessageByStatusData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/email/pendingEmail': {
        get: {
            req: GetV1EmailPendingEmailData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/email/sentEmail': {
        get: {
            req: GetV1EmailSentEmailData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/email/{resourceId}': {
        delete: {
            req: DeleteV1EmailByResourceIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        get: {
            req: GetV1EmailByResourceIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        put: {
            req: PutV1EmailByResourceIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/internal/client/{clientId}/audit': {
        get: {
            req: GetV1InternalClientByClientIdAuditData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/internal/cob/fast-forward-cob-date-of-loan/{loanId}': {
        post: {
            req: PostV1InternalCobFastForwardCobDateOfLoanByLoanIdData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/internal/cob/partitions/{partitionSize}': {
        get: {
            req: GetV1InternalCobPartitionsByPartitionSizeData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/internal/configurations/name/{configName}/value/{configValue}': {
        put: {
            req: PutV1InternalConfigurationsNameByConfigNameValueByConfigValueData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/internal/externalevents': {
        delete: {
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
        get: {
            req: GetV1InternalExternaleventsData;
            res: {
                /**
                 * default response
                 */
                default: Array<ExternalEventResponse>;
            };
        };
    };
    '/v1/internal/loan/status/{statusId}': {
        get: {
            req: GetV1InternalLoanStatusByStatusIdData;
            res: {
                /**
                 * default response
                 */
                default: Array<(number)>;
            };
        };
    };
    '/v1/internal/loan/{loanId}/advanced-payment-allocation-rules': {
        get: {
            req: GetV1InternalLoanByLoanIdAdvancedPaymentAllocationRulesData;
            res: {
                /**
                 * default response
                 */
                default: Array<AdvancedPaymentData>;
            };
        };
    };
    '/v1/internal/loan/{loanId}/audit': {
        get: {
            req: GetV1InternalLoanByLoanIdAuditData;
            res: {
                /**
                 * default response
                 */
                default: AuditData;
            };
        };
    };
    '/v1/internal/loan/{loanId}/transaction/{transactionId}/audit': {
        get: {
            req: GetV1InternalLoanByLoanIdTransactionByTransactionIdAuditData;
            res: {
                /**
                 * default response
                 */
                default: AuditData;
            };
        };
    };
    '/v1/internal/loans/{loanId}/place-lock/{lockOwner}': {
        post: {
            req: PostV1InternalLoansByLoanIdPlaceLockByLockOwnerData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/officetransactions': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        post: {
            req: PostV1OfficetransactionsData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/officetransactions/template': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/officetransactions/{transactionId}': {
        delete: {
            req: DeleteV1OfficetransactionsByTransactionIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/smscampaigns': {
        get: {
            req: GetV1SmscampaignsData;
            res: {
                /**
                 * OK
                 */
                200: SmsCampaignData;
            };
        };
        post: {
            req: PostV1SmscampaignsData;
            res: {
                /**
                 * OK
                 */
                200: CommandProcessingResult;
            };
        };
    };
    '/v1/smscampaigns/preview': {
        post: {
            req: PostV1SmscampaignsPreviewData;
            res: {
                /**
                 * default response
                 */
                default: CampaignPreviewData;
            };
        };
    };
    '/v1/smscampaigns/template': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: SmsCampaignData;
            };
        };
    };
    '/v1/smscampaigns/{campaignId}': {
        delete: {
            req: DeleteV1SmscampaignsByCampaignIdData;
            res: {
                /**
                 * OK
                 */
                200: CommandProcessingResult;
            };
        };
        post: {
            req: PostV1SmscampaignsByCampaignIdData;
            res: {
                /**
                 * OK
                 */
                200: CommandProcessingResult;
            };
        };
        put: {
            req: PutV1SmscampaignsByCampaignIdData;
            res: {
                /**
                 * OK
                 */
                200: CommandProcessingResult;
            };
        };
    };
    '/v1/smscampaigns/{resourceId}': {
        get: {
            req: GetV1SmscampaignsByResourceIdData;
            res: {
                /**
                 * OK
                 */
                200: SmsCampaignData;
            };
        };
    };
    '/v1/twofactor/configure': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        put: {
            req: PutV1TwofactorConfigureData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/{entity}/{entityId}/images': {
        delete: {
            req: DeleteV1ByEntityByEntityIdImagesData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
        get: {
            req: GetV1ByEntityByEntityIdImagesData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
        post: {
            req: PostV1ByEntityByEntityIdImagesData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
        put: {
            req: PutV1ByEntityByEntityIdImagesData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/CreditBureauConfiguration': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/CreditBureauConfiguration/config/{organisationCreditBureauId}': {
        get: {
            req: GetV1CreditBureauConfigurationConfigByOrganisationCreditBureauIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/CreditBureauConfiguration/configuration/{configurationId}': {
        put: {
            req: PutV1CreditBureauConfigurationConfigurationByConfigurationIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/CreditBureauConfiguration/configuration/{creditBureauId}': {
        post: {
            req: PostV1CreditBureauConfigurationConfigurationByCreditBureauIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/CreditBureauConfiguration/loanProduct': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/CreditBureauConfiguration/loanProduct/{loanProductId}': {
        get: {
            req: GetV1CreditBureauConfigurationLoanProductByLoanProductIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/CreditBureauConfiguration/mappings': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        put: {
            req: PutV1CreditBureauConfigurationMappingsData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/CreditBureauConfiguration/mappings/{organisationCreditBureauId}': {
        post: {
            req: PostV1CreditBureauConfigurationMappingsByOrganisationCreditBureauIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/CreditBureauConfiguration/organisationCreditBureau': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        put: {
            req: PutV1CreditBureauConfigurationOrganisationCreditBureauData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/CreditBureauConfiguration/organisationCreditBureau/{organisationCreditBureauId}': {
        post: {
            req: PostV1CreditBureauConfigurationOrganisationCreditBureauByOrganisationCreditBureauIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/accountingrules': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: Array<AccountingRuleData>;
            };
        };
        post: {
            req: PostV1AccountingrulesData;
            res: {
                /**
                 * OK
                 */
                200: PostAccountingRulesResponse;
            };
        };
    };
    '/v1/accountingrules/template': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: AccountingRuleData;
            };
        };
    };
    '/v1/accountingrules/{accountingRuleId}': {
        delete: {
            req: DeleteV1AccountingrulesByAccountingRuleIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteAccountingRulesResponse;
            };
        };
        get: {
            req: GetV1AccountingrulesByAccountingRuleIdData;
            res: {
                /**
                 * default response
                 */
                default: AccountingRuleData;
            };
        };
        put: {
            req: PutV1AccountingrulesByAccountingRuleIdData;
            res: {
                /**
                 * OK
                 */
                200: PutAccountingRulesResponse;
            };
        };
    };
    '/v1/accountnumberformats': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetAccountNumberFormatsIdResponse>;
            };
        };
        post: {
            req: PostV1AccountnumberformatsData;
            res: {
                /**
                 * OK
                 */
                200: PostAccountNumberFormatsResponse;
            };
        };
    };
    '/v1/accountnumberformats/template': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: GetAccountNumberFormatsResponseTemplate;
            };
        };
    };
    '/v1/accountnumberformats/{accountNumberFormatId}': {
        delete: {
            req: DeleteV1AccountnumberformatsByAccountNumberFormatIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteAccountNumberFormatsResponse;
            };
        };
        get: {
            req: GetV1AccountnumberformatsByAccountNumberFormatIdData;
            res: {
                /**
                 * OK
                 */
                200: GetAccountNumberFormatsIdResponse;
            };
        };
        put: {
            req: PutV1AccountnumberformatsByAccountNumberFormatIdData;
            res: {
                /**
                 * OK
                 */
                200: PutAccountNumberFormatsResponse;
            };
        };
    };
    '/v1/accounts/{type}': {
        get: {
            req: GetV1AccountsByTypeData;
            res: {
                /**
                 * OK
                 */
                200: GetAccountsTypeResponse;
            };
        };
        post: {
            req: PostV1AccountsByTypeData;
            res: {
                /**
                 * OK
                 */
                200: PostAccountsTypeResponse;
            };
        };
    };
    '/v1/accounts/{type}/downloadtemplate': {
        get: {
            req: GetV1AccountsByTypeDownloadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/accounts/{type}/template': {
        get: {
            req: GetV1AccountsByTypeTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetAccountsTypeTemplateResponse;
            };
        };
    };
    '/v1/accounts/{type}/uploadtemplate': {
        post: {
            req: PostV1AccountsByTypeUploadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: number;
            };
        };
    };
    '/v1/accounts/{type}/{accountId}': {
        get: {
            req: GetV1AccountsByTypeByAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: GetAccountsTypeAccountIdResponse;
            };
        };
        post: {
            req: PostV1AccountsByTypeByAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: PostAccountsTypeAccountIdResponse;
            };
        };
        put: {
            req: PutV1AccountsByTypeByAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: PutAccountsTypeAccountIdResponse;
            };
        };
    };
    '/v1/accounttransfers': {
        get: {
            req: GetV1AccounttransfersData;
            res: {
                /**
                 * OK
                 */
                200: GetAccountTransfersResponse;
            };
        };
        post: {
            req: PostV1AccounttransfersData;
            res: {
                /**
                 * OK
                 */
                200: PostAccountTransfersResponse;
            };
        };
    };
    '/v1/accounttransfers/refundByTransfer': {
        post: {
            req: PostV1AccounttransfersRefundByTransferData;
            res: {
                /**
                 * OK
                 */
                200: PostAccountTransfersRefundByTransferResponse;
            };
        };
    };
    '/v1/accounttransfers/template': {
        get: {
            req: GetV1AccounttransfersTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetAccountTransfersTemplateResponse;
            };
        };
    };
    '/v1/accounttransfers/templateRefundByTransfer': {
        get: {
            req: GetV1AccounttransfersTemplateRefundByTransferData;
            res: {
                /**
                 * OK
                 */
                200: GetAccountTransfersTemplateRefundByTransferResponse;
            };
        };
    };
    '/v1/accounttransfers/{transferId}': {
        get: {
            req: GetV1AccounttransfersByTransferIdData;
            res: {
                /**
                 * OK
                 */
                200: GetAccountTransfersPageItems;
            };
        };
    };
    '/v1/adhocquery': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: Array<AdHocData>;
            };
        };
        post: {
            req: PostV1AdhocqueryData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/adhocquery/template': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: AdHocData;
            };
        };
    };
    '/v1/adhocquery/{adHocId}': {
        delete: {
            req: DeleteV1AdhocqueryByAdHocIdData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
        get: {
            req: GetV1AdhocqueryByAdHocIdData;
            res: {
                /**
                 * default response
                 */
                default: AdHocData;
            };
        };
        put: {
            req: PutV1AdhocqueryByAdHocIdData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/audits': {
        get: {
            req: GetV1AuditsData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/audits/searchtemplate': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: AuditSearchData;
            };
        };
    };
    '/v1/audits/{auditId}': {
        get: {
            req: GetV1AuditsByAuditIdData;
            res: {
                /**
                 * default response
                 */
                default: AuditData;
            };
        };
    };
    '/v1/authentication': {
        post: {
            req: PostV1AuthenticationData;
            res: {
                /**
                 * OK
                 */
                200: PostAuthenticationResponse;
                /**
                 * Unauthenticated. Please login
                 */
                400: unknown;
            };
        };
    };
    '/v1/batches': {
        post: {
            req: PostV1BatchesData;
            res: {
                /**
                 * Success
                 */
                200: Array<BatchResponse>;
            };
        };
    };
    '/v1/businessdate': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: Array<BusinessDateResponse>;
            };
        };
        post: {
            req: PostV1BusinessdateData;
            res: {
                /**
                 * default response
                 */
                default: BusinessDateUpdateResponse;
            };
        };
    };
    '/v1/businessdate/{type}': {
        get: {
            req: GetV1BusinessdateByTypeData;
            res: {
                /**
                 * default response
                 */
                default: BusinessDateResponse;
            };
        };
    };
    '/v1/caches': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: Array<CacheData>;
            };
        };
        put: {
            req: PutV1CachesData;
            res: {
                /**
                 * default response
                 */
                default: CacheSwitchResponse;
            };
        };
    };
    '/v1/cashiers': {
        get: {
            req: GetV1CashiersData;
            res: {
                /**
                 * default response
                 */
                default: Array<CashierData>;
            };
        };
    };
    '/v1/cashiersjournal': {
        get: {
            req: GetV1CashiersjournalData;
            res: {
                /**
                 * default response
                 */
                default: Array<TellerJournalData>;
            };
        };
    };
    '/v1/centers': {
        get: {
            req: GetV1CentersData;
            res: {
                /**
                 * OK
                 */
                200: GetCentersResponse;
            };
        };
        post: {
            req: PostV1CentersData;
            res: {
                /**
                 * OK
                 */
                200: PostCentersResponse;
            };
        };
    };
    '/v1/centers/downloadtemplate': {
        get: {
            req: GetV1CentersDownloadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/centers/template': {
        get: {
            req: GetV1CentersTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetCentersTemplateResponse;
            };
        };
    };
    '/v1/centers/uploadtemplate': {
        post: {
            req: PostV1CentersUploadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/centers/{centerId}': {
        delete: {
            req: DeleteV1CentersByCenterIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteCentersCenterIdResponse;
            };
        };
        get: {
            req: GetV1CentersByCenterIdData;
            res: {
                /**
                 * OK
                 */
                200: GetCentersCenterIdResponse;
            };
        };
        post: {
            req: PostV1CentersByCenterIdData;
            res: {
                /**
                 * OK
                 */
                200: PostCentersCenterIdResponse;
            };
        };
        put: {
            req: PutV1CentersByCenterIdData;
            res: {
                /**
                 * OK
                 */
                200: PutCentersCenterIdResponse;
            };
        };
    };
    '/v1/centers/{centerId}/accounts': {
        get: {
            req: GetV1CentersByCenterIdAccountsData;
            res: {
                /**
                 * OK
                 */
                200: GetCentersCenterIdAccountsResponse;
            };
        };
    };
    '/v1/charges': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: Array<ChargeData>;
            };
        };
        post: {
            req: PostV1ChargesData;
            res: {
                /**
                 * OK
                 */
                200: PostChargesResponse;
            };
        };
    };
    '/v1/charges/template': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: ChargeData;
            };
        };
    };
    '/v1/charges/{chargeId}': {
        delete: {
            req: DeleteV1ChargesByChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteChargesChargeIdResponse;
            };
        };
        get: {
            req: GetV1ChargesByChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: GetChargesResponse;
            };
        };
        put: {
            req: PutV1ChargesByChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: PutChargesChargeIdResponse;
            };
        };
    };
    '/v1/client/addresses/template': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: AddressData;
            };
        };
    };
    '/v1/client/{clientid}/addresses': {
        get: {
            req: GetV1ClientByClientidAddressesData;
            res: {
                /**
                 * default response
                 */
                default: Array<AddressData>;
            };
        };
        post: {
            req: PostV1ClientByClientidAddressesData;
            res: {
                /**
                 * OK
                 */
                200: PostClientClientIdAddressesResponse;
            };
        };
        put: {
            req: PutV1ClientByClientidAddressesData;
            res: {
                /**
                 * OK
                 */
                200: PutClientClientIdAddressesResponse;
            };
        };
    };
    '/v1/clients': {
        get: {
            req: GetV1ClientsData;
            res: {
                /**
                 * OK
                 */
                200: GetClientsResponse;
            };
        };
        post: {
            req: PostV1ClientsData;
            res: {
                /**
                 * OK
                 */
                200: PostClientsResponse;
            };
        };
    };
    '/v1/clients/downloadtemplate': {
        get: {
            req: GetV1ClientsDownloadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/clients/external-id/{externalId}': {
        delete: {
            req: DeleteV1ClientsExternalIdByExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteClientsClientIdResponse;
            };
        };
        get: {
            req: GetV1ClientsExternalIdByExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: GetClientsClientIdResponse;
            };
        };
        post: {
            req: PostV1ClientsExternalIdByExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: PostClientsClientIdResponse;
            };
        };
        put: {
            req: PutV1ClientsExternalIdByExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: PutClientsClientIdResponse;
            };
        };
    };
    '/v1/clients/external-id/{externalId}/accounts': {
        get: {
            req: GetV1ClientsExternalIdByExternalIdAccountsData;
            res: {
                /**
                 * OK
                 */
                200: GetClientsClientIdAccountsResponse;
                /**
                 * Bad Request
                 */
                400: unknown;
            };
        };
    };
    '/v1/clients/external-id/{externalId}/obligeedetails': {
        get: {
            req: GetV1ClientsExternalIdByExternalIdObligeedetailsData;
            res: {
                /**
                 * OK
                 */
                200: GetClientObligeeDetailsResponse;
                /**
                 * Bad Request
                 */
                400: unknown;
            };
        };
    };
    '/v1/clients/external-id/{externalId}/transferproposaldate': {
        get: {
            req: GetV1ClientsExternalIdByExternalIdTransferproposaldateData;
            res: {
                /**
                 * OK
                 */
                200: GetClientTransferProposalDateResponse;
                /**
                 * Bad Request
                 */
                400: unknown;
            };
        };
    };
    '/v1/clients/template': {
        get: {
            req: GetV1ClientsTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetClientsTemplateResponse;
            };
        };
    };
    '/v1/clients/uploadtemplate': {
        post: {
            req: PostV1ClientsUploadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/clients/{clientId}': {
        delete: {
            req: DeleteV1ClientsByClientIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteClientsClientIdResponse;
            };
        };
        get: {
            req: GetV1ClientsByClientIdData;
            res: {
                /**
                 * OK
                 */
                200: GetClientsClientIdResponse;
            };
        };
        post: {
            req: PostV1ClientsByClientIdData;
            res: {
                /**
                 * OK
                 */
                200: PostClientsClientIdResponse;
            };
        };
        put: {
            req: PutV1ClientsByClientIdData;
            res: {
                /**
                 * OK
                 */
                200: PutClientsClientIdResponse;
            };
        };
    };
    '/v1/clients/{clientId}/accounts': {
        get: {
            req: GetV1ClientsByClientIdAccountsData;
            res: {
                /**
                 * OK
                 */
                200: GetClientsClientIdAccountsResponse;
                /**
                 * Bad Request
                 */
                400: unknown;
            };
        };
    };
    '/v1/clients/{clientId}/obligeedetails': {
        get: {
            req: GetV1ClientsByClientIdObligeedetailsData;
            res: {
                /**
                 * OK
                 */
                200: GetClientObligeeDetailsResponse;
                /**
                 * Bad Request
                 */
                400: unknown;
            };
        };
    };
    '/v1/clients/{clientId}/transferproposaldate': {
        get: {
            req: GetV1ClientsByClientIdTransferproposaldateData;
            res: {
                /**
                 * OK
                 */
                200: GetClientTransferProposalDateResponse;
                /**
                 * Bad Request
                 */
                400: unknown;
            };
        };
    };
    '/v1/clients/external-id/{clientExternalId}/transactions': {
        get: {
            req: GetV1ClientsExternalIdByClientExternalIdTransactionsData;
            res: {
                /**
                 * OK
                 */
                200: GetClientsClientIdTransactionsResponse;
            };
        };
    };
    '/v1/clients/external-id/{clientExternalId}/transactions/external-id/{transactionExternalId}': {
        get: {
            req: GetV1ClientsExternalIdByClientExternalIdTransactionsExternalIdByTransactionExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: GetClientsClientIdTransactionsTransactionIdResponse;
            };
        };
        post: {
            req: PostV1ClientsExternalIdByClientExternalIdTransactionsExternalIdByTransactionExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: PostClientsClientIdTransactionsTransactionIdResponse;
            };
        };
    };
    '/v1/clients/external-id/{clientExternalId}/transactions/{transactionId}': {
        get: {
            req: GetV1ClientsExternalIdByClientExternalIdTransactionsByTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: GetClientsClientIdTransactionsTransactionIdResponse;
            };
        };
        post: {
            req: PostV1ClientsExternalIdByClientExternalIdTransactionsByTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: PostClientsClientIdTransactionsTransactionIdResponse;
            };
        };
    };
    '/v1/clients/{clientId}/transactions': {
        get: {
            req: GetV1ClientsByClientIdTransactionsData;
            res: {
                /**
                 * OK
                 */
                200: GetClientsClientIdTransactionsResponse;
            };
        };
    };
    '/v1/clients/{clientId}/transactions/external-id/{transactionExternalId}': {
        get: {
            req: GetV1ClientsByClientIdTransactionsExternalIdByTransactionExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: GetClientsClientIdTransactionsTransactionIdResponse;
            };
        };
        post: {
            req: PostV1ClientsByClientIdTransactionsExternalIdByTransactionExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: PostClientsClientIdTransactionsTransactionIdResponse;
            };
        };
    };
    '/v1/clients/{clientId}/transactions/{transactionId}': {
        get: {
            req: GetV1ClientsByClientIdTransactionsByTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: GetClientsClientIdTransactionsTransactionIdResponse;
            };
        };
        post: {
            req: PostV1ClientsByClientIdTransactionsByTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: PostClientsClientIdTransactionsTransactionIdResponse;
            };
        };
    };
    '/v1/clients/{clientId}/charges': {
        get: {
            req: GetV1ClientsByClientIdChargesData;
            res: {
                /**
                 * OK
                 */
                200: GetClientsClientIdChargesResponse;
            };
        };
        post: {
            req: PostV1ClientsByClientIdChargesData;
            res: {
                /**
                 * OK
                 */
                200: PostClientsClientIdChargesResponse;
            };
        };
    };
    '/v1/clients/{clientId}/charges/template': {
        get: {
            req: GetV1ClientsByClientIdChargesTemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/clients/{clientId}/charges/{chargeId}': {
        delete: {
            req: DeleteV1ClientsByClientIdChargesByChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteClientsClientIdChargesChargeIdResponse;
            };
        };
        get: {
            req: GetV1ClientsByClientIdChargesByChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: GetClientsChargesPageItems;
            };
        };
        post: {
            req: PostV1ClientsByClientIdChargesByChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: PostClientsClientIdChargesChargeIdResponse;
            };
        };
    };
    '/v1/clients/{clientId}/collaterals': {
        get: {
            req: GetV1ClientsByClientIdCollateralsData;
            res: {
                /**
                 * default response
                 */
                default: Array<ClientCollateralManagementData>;
            };
        };
        post: {
            req: PostV1ClientsByClientIdCollateralsData;
            res: {
                /**
                 * OK
                 */
                200: PostClientCollateralResponse;
            };
        };
    };
    '/v1/clients/{clientId}/collaterals/template': {
        get: {
            req: GetV1ClientsByClientIdCollateralsTemplateData;
            res: {
                /**
                 * default response
                 */
                default: Array<LoanCollateralTemplateData>;
            };
        };
    };
    '/v1/clients/{clientId}/collaterals/{clientCollateralId}': {
        get: {
            req: GetV1ClientsByClientIdCollateralsByClientCollateralIdData;
            res: {
                /**
                 * default response
                 */
                default: ClientCollateralManagementData;
            };
        };
    };
    '/v1/clients/{clientId}/collaterals/{collateralId}': {
        delete: {
            req: DeleteV1ClientsByClientIdCollateralsByCollateralIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteClientCollateralResponse;
            };
        };
        put: {
            req: PutV1ClientsByClientIdCollateralsByCollateralIdData;
            res: {
                /**
                 * OK
                 */
                200: PutClientCollateralResponse;
            };
        };
    };
    '/v1/clients/{clientId}/familymembers': {
        get: {
            req: GetV1ClientsByClientIdFamilymembersData;
            res: {
                /**
                 * default response
                 */
                default: Array<ClientFamilyMembersData>;
            };
        };
        post: {
            req: PostV1ClientsByClientIdFamilymembersData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/clients/{clientId}/familymembers/template': {
        get: {
            req: GetV1ClientsByClientIdFamilymembersTemplateData;
            res: {
                /**
                 * default response
                 */
                default: ClientFamilyMembersData;
            };
        };
    };
    '/v1/clients/{clientId}/familymembers/{familyMemberId}': {
        delete: {
            req: DeleteV1ClientsByClientIdFamilymembersByFamilyMemberIdData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
        get: {
            req: GetV1ClientsByClientIdFamilymembersByFamilyMemberIdData;
            res: {
                /**
                 * default response
                 */
                default: ClientFamilyMembersData;
            };
        };
        put: {
            req: PutV1ClientsByClientIdFamilymembersByFamilyMemberIdData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/clients/{clientId}/identifiers': {
        get: {
            req: GetV1ClientsByClientIdIdentifiersData;
            res: {
                /**
                 * default response
                 */
                default: Array<ClientIdentifierData>;
            };
        };
        post: {
            req: PostV1ClientsByClientIdIdentifiersData;
            res: {
                /**
                 * OK
                 */
                200: PostClientsClientIdIdentifiersResponse;
            };
        };
    };
    '/v1/clients/{clientId}/identifiers/template': {
        get: {
            req: GetV1ClientsByClientIdIdentifiersTemplateData;
            res: {
                /**
                 * default response
                 */
                default: ClientIdentifierData;
            };
        };
    };
    '/v1/clients/{clientId}/identifiers/{identifierId}': {
        delete: {
            req: DeleteV1ClientsByClientIdIdentifiersByIdentifierIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteClientsClientIdIdentifiersIdentifierIdResponse;
            };
        };
        get: {
            req: GetV1ClientsByClientIdIdentifiersByIdentifierIdData;
            res: {
                /**
                 * OK
                 */
                200: GetClientsClientIdIdentifiersResponse;
            };
        };
        put: {
            req: PutV1ClientsByClientIdIdentifiersByIdentifierIdData;
            res: {
                /**
                 * OK
                 */
                200: PutClientsClientIdIdentifiersIdentifierIdResponse;
            };
        };
    };
    '/v1/codes': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetCodesResponse>;
            };
        };
        post: {
            req: PostV1CodesData;
            res: {
                /**
                 * OK
                 */
                200: PostCodesResponse;
            };
        };
    };
    '/v1/codes/{codeId}': {
        delete: {
            req: DeleteV1CodesByCodeIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteCodesResponse;
            };
        };
        get: {
            req: GetV1CodesByCodeIdData;
            res: {
                /**
                 * OK
                 */
                200: GetCodesResponse;
            };
        };
        put: {
            req: PutV1CodesByCodeIdData;
            res: {
                /**
                 * OK
                 */
                200: PutCodesResponse;
            };
        };
    };
    '/v1/codes/{codeId}/codevalues': {
        get: {
            req: GetV1CodesByCodeIdCodevaluesData;
            res: {
                /**
                 * A List of code values for a given code
                 */
                200: Array<GetCodeValuesDataResponse>;
            };
        };
        post: {
            req: PostV1CodesByCodeIdCodevaluesData;
            res: {
                /**
                 * OK
                 */
                200: PostCodeValueDataResponse;
            };
        };
    };
    '/v1/codes/{codeId}/codevalues/{codeValueId}': {
        delete: {
            req: DeleteV1CodesByCodeIdCodevaluesByCodeValueIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteCodeValueDataResponse;
            };
        };
        get: {
            req: GetV1CodesByCodeIdCodevaluesByCodeValueIdData;
            res: {
                /**
                 * OK
                 */
                200: GetCodeValuesDataResponse;
            };
        };
        put: {
            req: PutV1CodesByCodeIdCodevaluesByCodeValueIdData;
            res: {
                /**
                 * OK
                 */
                200: PutCodeValueDataResponse;
            };
        };
    };
    '/v1/collateral-management': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: Array<CollateralManagementData>;
            };
        };
        post: {
            req: PostV1CollateralManagementData;
            res: {
                /**
                 * OK
                 */
                200: PostCollateralManagementProductResponse;
            };
        };
    };
    '/v1/collateral-management/template': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: Array<CurrencyData>;
            };
        };
    };
    '/v1/collateral-management/{collateralId}': {
        delete: {
            req: DeleteV1CollateralManagementByCollateralIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteCollateralProductResponse;
            };
        };
        get: {
            req: GetV1CollateralManagementByCollateralIdData;
            res: {
                /**
                 * default response
                 */
                default: CollateralManagementData;
            };
        };
        put: {
            req: PutV1CollateralManagementByCollateralIdData;
            res: {
                /**
                 * OK
                 */
                200: PutCollateralProductResponse;
            };
        };
    };
    '/v1/collectionsheet': {
        post: {
            req: PostV1CollectionsheetData;
            res: {
                /**
                 * OK
                 */
                200: PostCollectionSheetResponse;
            };
        };
    };
    '/v1/configurations': {
        get: {
            req: GetV1ConfigurationsData;
            res: {
                /**
                 * List of example \n response \nsurveys response   \ngiven below
                 */
                200: GetGlobalConfigurationsResponse;
            };
        };
    };
    '/v1/configurations/name/{configName}': {
        put: {
            req: PutV1ConfigurationsNameByConfigNameData;
            res: {
                /**
                 * OK
                 */
                200: PutGlobalConfigurationsResponse;
            };
        };
    };
    '/v1/configurations/name/{name}': {
        get: {
            req: GetV1ConfigurationsNameByNameData;
            res: {
                /**
                 * OK
                 */
                200: GlobalConfigurationPropertyData;
            };
        };
    };
    '/v1/configurations/{configId}': {
        get: {
            req: GetV1ConfigurationsByConfigIdData;
            res: {
                /**
                 * OK
                 */
                200: GlobalConfigurationPropertyData;
            };
        };
        put: {
            req: PutV1ConfigurationsByConfigIdData;
            res: {
                /**
                 * OK
                 */
                200: PutGlobalConfigurationsResponse;
            };
        };
    };
    '/v1/currencies': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: CurrencyConfigurationData;
            };
        };
        put: {
            req: PutV1CurrenciesData;
            res: {
                /**
                 * default response
                 */
                default: CurrencyUpdateResponse;
            };
        };
    };
    '/v1/datatables': {
        get: {
            req: GetV1DatatablesData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetDataTablesResponse>;
            };
        };
        post: {
            req: PostV1DatatablesData;
            res: {
                /**
                 * OK
                 */
                200: PostDataTablesResponse;
            };
        };
    };
    '/v1/datatables/deregister/{datatable}': {
        post: {
            req: PostV1DatatablesDeregisterByDatatableData;
            res: {
                /**
                 * OK
                 */
                200: PutDataTablesResponse;
            };
        };
    };
    '/v1/datatables/register/{datatable}/{apptable}': {
        post: {
            req: PostV1DatatablesRegisterByDatatableByApptableData;
            res: {
                /**
                 * OK
                 */
                200: PutDataTablesResponse;
            };
        };
    };
    '/v1/datatables/{datatableName}': {
        delete: {
            req: DeleteV1DatatablesByDatatableNameData;
            res: {
                /**
                 * OK
                 */
                200: DeleteDataTablesResponse;
            };
        };
        put: {
            req: PutV1DatatablesByDatatableNameData;
            res: {
                /**
                 * OK
                 */
                200: PutDataTablesResponse;
            };
        };
    };
    '/v1/datatables/{datatable}': {
        get: {
            req: GetV1DatatablesByDatatableData;
            res: {
                /**
                 * OK
                 */
                200: GetDataTablesResponse;
            };
        };
    };
    '/v1/datatables/{datatable}/query': {
        get: {
            req: GetV1DatatablesByDatatableQueryData;
            res: {
                /**
                 * OK
                 */
                200: string;
            };
        };
        post: {
            req: PostV1DatatablesByDatatableQueryData;
            res: {
                /**
                 * OK
                 */
                200: string;
            };
        };
    };
    '/v1/datatables/{datatable}/{apptableId}': {
        delete: {
            req: DeleteV1DatatablesByDatatableByApptableIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteDataTablesDatatableAppTableIdResponse;
            };
        };
        get: {
            req: GetV1DatatablesByDatatableByApptableIdData;
            res: {
                /**
                 * OK
                 */
                200: string;
            };
        };
        post: {
            req: PostV1DatatablesByDatatableByApptableIdData;
            res: {
                /**
                 * OK
                 */
                200: PostDataTablesAppTableIdResponse;
            };
        };
        put: {
            req: PutV1DatatablesByDatatableByApptableIdData;
            res: {
                /**
                 * OK
                 */
                200: PutDataTablesAppTableIdResponse;
            };
        };
    };
    '/v1/datatables/{datatable}/{apptableId}/{datatableId}': {
        delete: {
            req: DeleteV1DatatablesByDatatableByApptableIdByDatatableIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteDataTablesDatatableAppTableIdDatatableIdResponse;
            };
        };
        get: {
            req: GetV1DatatablesByDatatableByApptableIdByDatatableIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        put: {
            req: PutV1DatatablesByDatatableByApptableIdByDatatableIdData;
            res: {
                /**
                 * OK
                 */
                200: PutDataTablesAppTableIdDatatableIdResponse;
            };
        };
    };
    '/v1/delinquency/buckets': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: Array<DelinquencyBucketData>;
            };
        };
        post: {
            req: PostV1DelinquencyBucketsData;
            res: {
                /**
                 * OK
                 */
                200: PostDelinquencyBucketResponse;
            };
        };
    };
    '/v1/delinquency/buckets/{delinquencyBucketId}': {
        delete: {
            req: DeleteV1DelinquencyBucketsByDelinquencyBucketIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteDelinquencyBucketResponse;
            };
        };
        get: {
            req: GetV1DelinquencyBucketsByDelinquencyBucketIdData;
            res: {
                /**
                 * default response
                 */
                default: DelinquencyBucketData;
            };
        };
        put: {
            req: PutV1DelinquencyBucketsByDelinquencyBucketIdData;
            res: {
                /**
                 * OK
                 */
                200: PutDelinquencyBucketResponse;
            };
        };
    };
    '/v1/delinquency/ranges': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: Array<DelinquencyRangeData>;
            };
        };
        post: {
            req: PostV1DelinquencyRangesData;
            res: {
                /**
                 * OK
                 */
                200: PostDelinquencyRangeResponse;
            };
        };
    };
    '/v1/delinquency/ranges/{delinquencyRangeId}': {
        delete: {
            req: DeleteV1DelinquencyRangesByDelinquencyRangeIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteDelinquencyRangeResponse;
            };
        };
        get: {
            req: GetV1DelinquencyRangesByDelinquencyRangeIdData;
            res: {
                /**
                 * default response
                 */
                default: DelinquencyRangeData;
            };
        };
        put: {
            req: PutV1DelinquencyRangesByDelinquencyRangeIdData;
            res: {
                /**
                 * OK
                 */
                200: PutDelinquencyRangeResponse;
            };
        };
    };
    '/v1/entityDatatableChecks': {
        get: {
            req: GetV1EntityDatatableChecksData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetEntityDatatableChecksResponse>;
            };
        };
        post: {
            req: PostV1EntityDatatableChecksData;
            res: {
                /**
                 * OK
                 */
                200: PostEntityDatatableChecksTemplateResponse;
            };
        };
    };
    '/v1/entityDatatableChecks/template': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: GetEntityDatatableChecksTemplateResponse;
            };
        };
    };
    '/v1/entityDatatableChecks/{entityDatatableCheckId}': {
        delete: {
            req: DeleteV1EntityDatatableChecksByEntityDatatableCheckIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteEntityDatatableChecksTemplateResponse;
            };
        };
    };
    '/v1/entitytoentitymapping': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/entitytoentitymapping/{mapId}': {
        delete: {
            req: DeleteV1EntitytoentitymappingByMapIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        get: {
            req: GetV1EntitytoentitymappingByMapIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        put: {
            req: PutV1EntitytoentitymappingByMapIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/entitytoentitymapping/{mapId}/{fromId}/{toId}': {
        get: {
            req: GetV1EntitytoentitymappingByMapIdByFromIdByToIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/entitytoentitymapping/{relId}': {
        post: {
            req: PostV1EntitytoentitymappingByRelIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/external-asset-owners/loan-product/{loanProductId}/attributes': {
        get: {
            req: GetV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesData;
            res: {
                /**
                 * default response
                 */
                default: PageExternalTransferLoanProductAttributesData;
            };
        };
        post: {
            req: PostV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/external-asset-owners/loan-product/{loanProductId}/attributes/{id}': {
        put: {
            req: PutV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesByIdData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/external-asset-owners/owners/external-id/{ownerExternalId}/journal-entries': {
        get: {
            req: GetV1ExternalAssetOwnersOwnersExternalIdByOwnerExternalIdJournalEntriesData;
            res: {
                /**
                 * default response
                 */
                default: ExternalOwnerJournalEntryData;
            };
        };
    };
    '/v1/external-asset-owners/search': {
        post: {
            req: PostV1ExternalAssetOwnersSearchData;
            res: {
                /**
                 * default response
                 */
                default: PageExternalTransferData;
            };
        };
    };
    '/v1/external-asset-owners/transfers': {
        get: {
            req: GetV1ExternalAssetOwnersTransfersData;
            res: {
                /**
                 * default response
                 */
                default: PageExternalTransferData;
            };
        };
    };
    '/v1/external-asset-owners/transfers/active-transfer': {
        get: {
            req: GetV1ExternalAssetOwnersTransfersActiveTransferData;
            res: {
                /**
                 * default response
                 */
                default: ExternalTransferData;
            };
        };
    };
    '/v1/external-asset-owners/transfers/external-id/{externalId}': {
        post: {
            req: PostV1ExternalAssetOwnersTransfersExternalIdByExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: PostInitiateTransferResponse;
                /**
                 * Transfer cannot be initiated
                 */
                403: unknown;
            };
        };
    };
    '/v1/external-asset-owners/transfers/loans/external-id/{loanExternalId}': {
        post: {
            req: PostV1ExternalAssetOwnersTransfersLoansExternalIdByLoanExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: PostInitiateTransferResponse;
                /**
                 * Transfer cannot be initiated
                 */
                403: unknown;
            };
        };
    };
    '/v1/external-asset-owners/transfers/loans/{loanId}': {
        post: {
            req: PostV1ExternalAssetOwnersTransfersLoansByLoanIdData;
            res: {
                /**
                 * OK
                 */
                200: PostInitiateTransferResponse;
                /**
                 * Transfer cannot be initiated
                 */
                403: unknown;
            };
        };
    };
    '/v1/external-asset-owners/transfers/{id}': {
        post: {
            req: PostV1ExternalAssetOwnersTransfersByIdData;
            res: {
                /**
                 * OK
                 */
                200: PostInitiateTransferResponse;
                /**
                 * Transfer cannot be initiated
                 */
                403: unknown;
            };
        };
    };
    '/v1/external-asset-owners/transfers/{transferId}/journal-entries': {
        get: {
            req: GetV1ExternalAssetOwnersTransfersByTransferIdJournalEntriesData;
            res: {
                /**
                 * default response
                 */
                default: ExternalOwnerTransferJournalEntryData;
            };
        };
    };
    '/v1/externalevents/configuration': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: ExternalEventConfigurationResponse;
            };
        };
        put: {
            req: PutV1ExternaleventsConfigurationData;
            res: {
                /**
                 * default response
                 */
                default: ExternalEventConfigurationUpdateResponse;
            };
        };
    };
    '/v1/externalservice/{servicename}': {
        get: {
            req: GetV1ExternalserviceByServicenameData;
            res: {
                /**
                 * OK
                 */
                200: ExternalServicesPropertiesData;
            };
        };
        put: {
            req: PutV1ExternalserviceByServicenameData;
            res: {
                /**
                 * OK
                 */
                200: unknown;
            };
        };
    };
    '/v1/fieldconfiguration/{entity}': {
        get: {
            req: GetV1FieldconfigurationByEntityData;
            res: {
                /**
                 * default response
                 */
                default: Array<FieldConfigurationData>;
            };
        };
    };
    '/v1/financialactivityaccounts': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetFinancialActivityAccountsResponse>;
            };
        };
        post: {
            req: PostV1FinancialactivityaccountsData;
            res: {
                /**
                 * OK
                 */
                200: PostFinancialActivityAccountsResponse;
            };
        };
    };
    '/v1/financialactivityaccounts/template': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: FinancialActivityAccountData;
            };
        };
    };
    '/v1/financialactivityaccounts/{mappingId}': {
        delete: {
            req: DeleteV1FinancialactivityaccountsByMappingIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteFinancialActivityAccountsResponse;
            };
        };
        get: {
            req: GetV1FinancialactivityaccountsByMappingIdData;
            res: {
                /**
                 * OK
                 */
                200: GetFinancialActivityAccountsResponse;
            };
        };
        put: {
            req: PutV1FinancialactivityaccountsByMappingIdData;
            res: {
                /**
                 * OK
                 */
                200: PutFinancialActivityAccountsResponse;
            };
        };
    };
    '/v1/fixeddepositaccounts': {
        get: {
            req: GetV1FixeddepositaccountsData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetFixedDepositAccountsResponse>;
            };
        };
        post: {
            req: PostV1FixeddepositaccountsData;
            res: {
                /**
                 * OK
                 */
                200: PostFixedDepositAccountsResponse;
            };
        };
    };
    '/v1/fixeddepositaccounts/calculate-fd-interest': {
        get: {
            req: GetV1FixeddepositaccountsCalculateFdInterestData;
            res: {
                /**
                 * OK
                 */
                200: CalculateFixedDepositInterestResponse;
            };
        };
    };
    '/v1/fixeddepositaccounts/downloadtemplate': {
        get: {
            req: GetV1FixeddepositaccountsDownloadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/fixeddepositaccounts/template': {
        get: {
            req: GetV1FixeddepositaccountsTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetFixedDepositAccountsTemplateResponse;
            };
        };
    };
    '/v1/fixeddepositaccounts/transaction/downloadtemplate': {
        get: {
            req: GetV1FixeddepositaccountsTransactionDownloadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/fixeddepositaccounts/transaction/uploadtemplate': {
        post: {
            req: PostV1FixeddepositaccountsTransactionUploadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/fixeddepositaccounts/uploadtemplate': {
        post: {
            req: PostV1FixeddepositaccountsUploadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/fixeddepositaccounts/{accountId}': {
        delete: {
            req: DeleteV1FixeddepositaccountsByAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteFixedDepositAccountsAccountIdResponse;
            };
        };
        get: {
            req: GetV1FixeddepositaccountsByAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: GetFixedDepositAccountsAccountIdResponse;
            };
        };
        post: {
            req: PostV1FixeddepositaccountsByAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: PostFixedDepositAccountsAccountIdResponse;
            };
        };
        put: {
            req: PutV1FixeddepositaccountsByAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: PutFixedDepositAccountsAccountIdResponse;
            };
        };
    };
    '/v1/fixeddepositaccounts/{accountId}/template': {
        get: {
            req: GetV1FixeddepositaccountsByAccountIdTemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/fixeddepositaccounts/{fixedDepositAccountId}/transactions': {
        post: {
            req: PostV1FixeddepositaccountsByFixedDepositAccountIdTransactionsData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/fixeddepositaccounts/{fixedDepositAccountId}/transactions/template': {
        get: {
            req: GetV1FixeddepositaccountsByFixedDepositAccountIdTransactionsTemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/fixeddepositaccounts/{fixedDepositAccountId}/transactions/{transactionId}': {
        get: {
            req: GetV1FixeddepositaccountsByFixedDepositAccountIdTransactionsByTransactionIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        post: {
            req: PostV1FixeddepositaccountsByFixedDepositAccountIdTransactionsByTransactionIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/fixeddepositproducts': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetFixedDepositProductsResponse>;
            };
        };
        post: {
            req: PostV1FixeddepositproductsData;
            res: {
                /**
                 * OK
                 */
                200: PostFixedDepositProductsResponse;
            };
        };
    };
    '/v1/fixeddepositproducts/template': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/fixeddepositproducts/{productId}': {
        delete: {
            req: DeleteV1FixeddepositproductsByProductIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteFixedDepositProductsProductIdResponse;
            };
        };
        get: {
            req: GetV1FixeddepositproductsByProductIdData;
            res: {
                /**
                 * OK
                 */
                200: GetFixedDepositProductsProductIdResponse;
            };
        };
        put: {
            req: PutV1FixeddepositproductsByProductIdData;
            res: {
                /**
                 * OK
                 */
                200: PutFixedDepositProductsProductIdResponse;
            };
        };
    };
    '/v1/floatingrates': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetFloatingRatesResponse>;
            };
        };
        post: {
            req: PostV1FloatingratesData;
            res: {
                /**
                 * OK
                 */
                200: PostFloatingRatesResponse;
            };
        };
    };
    '/v1/floatingrates/{floatingRateId}': {
        get: {
            req: GetV1FloatingratesByFloatingRateIdData;
            res: {
                /**
                 * default response
                 */
                default: FloatingRateData;
            };
        };
        put: {
            req: PutV1FloatingratesByFloatingRateIdData;
            res: {
                /**
                 * OK
                 */
                200: PutFloatingRatesFloatingRateIdResponse;
            };
        };
    };
    '/v1/funds': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: Array<FundData>;
            };
        };
        post: {
            req: PostV1FundsData;
            res: {
                /**
                 * OK
                 */
                200: PostFundsResponse;
            };
        };
    };
    '/v1/funds/{fundId}': {
        get: {
            req: GetV1FundsByFundIdData;
            res: {
                /**
                 * default response
                 */
                default: FundData;
            };
        };
        put: {
            req: PutV1FundsByFundIdData;
            res: {
                /**
                 * OK
                 */
                200: PutFundsFundIdResponse;
            };
        };
    };
    '/v1/glaccounts': {
        get: {
            req: GetV1GlaccountsData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetGLAccountsResponse>;
            };
        };
        post: {
            req: PostV1GlaccountsData;
            res: {
                /**
                 * OK
                 */
                200: PostGLAccountsResponse;
            };
        };
    };
    '/v1/glaccounts/downloadtemplate': {
        get: {
            req: GetV1GlaccountsDownloadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/glaccounts/template': {
        get: {
            req: GetV1GlaccountsTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetGLAccountsTemplateResponse;
            };
        };
    };
    '/v1/glaccounts/uploadtemplate': {
        post: {
            req: PostV1GlaccountsUploadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: number;
            };
        };
    };
    '/v1/glaccounts/{glAccountId}': {
        delete: {
            req: DeleteV1GlaccountsByGlAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteGLAccountsResponse;
            };
        };
        get: {
            req: GetV1GlaccountsByGlAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: GetGLAccountsResponse;
            };
        };
        put: {
            req: PutV1GlaccountsByGlAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: PutGLAccountsResponse;
            };
        };
    };
    '/v1/glclosures': {
        get: {
            req: GetV1GlclosuresData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetGlClosureResponse>;
            };
        };
        post: {
            req: PostV1GlclosuresData;
            res: {
                /**
                 * OK
                 */
                200: PostGlClosuresResponse;
            };
        };
    };
    '/v1/glclosures/{glClosureId}': {
        delete: {
            req: DeleteV1GlclosuresByGlClosureIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteGlClosuresResponse;
            };
        };
        get: {
            req: GetV1GlclosuresByGlClosureIdData;
            res: {
                /**
                 * OK
                 */
                200: GetGlClosureResponse;
            };
        };
        put: {
            req: PutV1GlclosuresByGlClosureIdData;
            res: {
                /**
                 * OK
                 */
                200: PutGlClosuresResponse;
            };
        };
    };
    '/v1/grouplevels': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: Array<GroupLevelData>;
            };
        };
    };
    '/v1/groups': {
        get: {
            req: GetV1GroupsData;
            res: {
                /**
                 * OK
                 */
                200: GetGroupsResponse;
            };
        };
        post: {
            req: PostV1GroupsData;
            res: {
                /**
                 * OK
                 */
                200: PostGroupsResponse;
            };
        };
    };
    '/v1/groups/downloadtemplate': {
        get: {
            req: GetV1GroupsDownloadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/groups/template': {
        get: {
            req: GetV1GroupsTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetGroupsTemplateResponse;
            };
        };
    };
    '/v1/groups/uploadtemplate': {
        post: {
            req: PostV1GroupsUploadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/groups/{groupId}': {
        delete: {
            req: DeleteV1GroupsByGroupIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteGroupsGroupIdResponse;
            };
        };
        get: {
            req: GetV1GroupsByGroupIdData;
            res: {
                /**
                 * OK
                 */
                200: GetGroupsGroupIdResponse;
            };
        };
        post: {
            req: PostV1GroupsByGroupIdData;
            res: {
                /**
                 * OK
                 */
                200: PostGroupsGroupIdResponse;
            };
        };
        put: {
            req: PutV1GroupsByGroupIdData;
            res: {
                /**
                 * OK
                 */
                200: PutGroupsGroupIdResponse;
            };
        };
    };
    '/v1/groups/{groupId}/accounts': {
        get: {
            req: GetV1GroupsByGroupIdAccountsData;
            res: {
                /**
                 * OK
                 */
                200: GetGroupsGroupIdAccountsResponse;
            };
        };
    };
    '/v1/groups/{groupId}/command/unassign_staff': {
        post: {
            req: PostV1GroupsByGroupIdCommandUnassignStaffData;
            res: {
                /**
                 * OK
                 */
                200: PostGroupsGroupIdCommandUnassignStaffResponse;
            };
        };
    };
    '/v1/groups/{groupId}/glimaccounts': {
        get: {
            req: GetV1GroupsByGroupIdGlimaccountsData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/groups/{groupId}/gsimaccounts': {
        get: {
            req: GetV1GroupsByGroupIdGsimaccountsData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/holidays': {
        get: {
            req: GetV1HolidaysData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetHolidaysResponse>;
            };
        };
        post: {
            req: PostV1HolidaysData;
            res: {
                /**
                 * OK
                 */
                200: PostHolidaysResponse;
            };
        };
    };
    '/v1/holidays/template': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/holidays/{holidayId}': {
        delete: {
            req: DeleteV1HolidaysByHolidayIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteHolidaysHolidayIdResponse;
            };
        };
        get: {
            req: GetV1HolidaysByHolidayIdData;
            res: {
                /**
                 * OK
                 */
                200: GetHolidaysResponse;
            };
        };
        post: {
            req: PostV1HolidaysByHolidayIdData;
            res: {
                /**
                 * OK
                 */
                200: PostHolidaysHolidayIdResponse;
            };
        };
        put: {
            req: PutV1HolidaysByHolidayIdData;
            res: {
                /**
                 * OK
                 */
                200: PutHolidaysHolidayIdResponse;
            };
        };
    };
    '/v1/hooks': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetHookResponse>;
            };
        };
        post: {
            req: PostV1HooksData;
            res: {
                /**
                 * OK
                 */
                200: PostHookResponse;
            };
        };
    };
    '/v1/hooks/template': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: GetHookTemplateResponse;
            };
        };
    };
    '/v1/hooks/{hookId}': {
        delete: {
            req: DeleteV1HooksByHookIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteHookResponse;
            };
        };
        get: {
            req: GetV1HooksByHookIdData;
            res: {
                /**
                 * OK
                 */
                200: GetHookResponse;
            };
        };
        put: {
            req: PutV1HooksByHookIdData;
            res: {
                /**
                 * OK
                 */
                200: PutHookResponse;
            };
        };
    };
    '/v1/imports': {
        get: {
            req: GetV1ImportsData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/imports/downloadOutputTemplate': {
        get: {
            req: GetV1ImportsDownloadOutputTemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/imports/getOutputTemplateLocation': {
        get: {
            req: GetV1ImportsGetOutputTemplateLocationData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/instance-mode': {
        put: {
            req: PutV1InstanceModeData;
            res: {
                /**
                 * OK
                 */
                200: unknown;
            };
        };
    };
    '/v1/interestratecharts': {
        get: {
            req: GetV1InterestratechartsData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetInterestRateChartsResponse>;
            };
        };
        post: {
            req: PostV1InterestratechartsData;
            res: {
                /**
                 * OK
                 */
                200: PostInterestRateChartsResponse;
            };
        };
    };
    '/v1/interestratecharts/template': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: GetInterestRateChartsTemplateResponse;
            };
        };
    };
    '/v1/interestratecharts/{chartId}': {
        delete: {
            req: DeleteV1InterestratechartsByChartIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteInterestRateChartsChartIdResponse;
            };
        };
        get: {
            req: GetV1InterestratechartsByChartIdData;
            res: {
                /**
                 * OK
                 */
                200: GetInterestRateChartsResponse;
            };
        };
        put: {
            req: PutV1InterestratechartsByChartIdData;
            res: {
                /**
                 * OK
                 */
                200: PutInterestRateChartsChartIdResponse;
            };
        };
    };
    '/v1/interestratecharts/{chartId}/chartslabs': {
        get: {
            req: GetV1InterestratechartsByChartIdChartslabsData;
            res: {
                /**
                 * default response
                 */
                default: Array<InterestRateChartSlabData>;
            };
        };
        post: {
            req: PostV1InterestratechartsByChartIdChartslabsData;
            res: {
                /**
                 * OK
                 */
                200: PostInterestRateChartsChartIdChartSlabsResponse;
            };
        };
    };
    '/v1/interestratecharts/{chartId}/chartslabs/template': {
        get: {
            req: GetV1InterestratechartsByChartIdChartslabsTemplateData;
            res: {
                /**
                 * default response
                 */
                default: InterestRateChartSlabData;
            };
        };
    };
    '/v1/interestratecharts/{chartId}/chartslabs/{chartSlabId}': {
        delete: {
            req: DeleteV1InterestratechartsByChartIdChartslabsByChartSlabIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteInterestRateChartsChartIdChartSlabsResponse;
            };
        };
        get: {
            req: GetV1InterestratechartsByChartIdChartslabsByChartSlabIdData;
            res: {
                /**
                 * default response
                 */
                default: InterestRateChartSlabData;
            };
        };
        put: {
            req: PutV1InterestratechartsByChartIdChartslabsByChartSlabIdData;
            res: {
                /**
                 * OK
                 */
                200: PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse;
            };
        };
    };
    '/v1/internal/loan/progressive/{loanId}/model': {
        get: {
            req: GetV1InternalLoanProgressiveByLoanIdModelData;
            res: {
                /**
                 * default response
                 */
                default: ProgressiveLoanInterestScheduleModel;
            };
        };
        post: {
            req: PostV1InternalLoanProgressiveByLoanIdModelData;
            res: {
                /**
                 * default response
                 */
                default: ProgressiveLoanInterestScheduleModel;
            };
        };
    };
    '/v1/interoperation/accounts/{accountId}': {
        get: {
            req: GetV1InteroperationAccountsByAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: InteropAccountData;
            };
        };
    };
    '/v1/interoperation/accounts/{accountId}/identifiers': {
        get: {
            req: GetV1InteroperationAccountsByAccountIdIdentifiersData;
            res: {
                /**
                 * OK
                 */
                200: InteropIdentifiersResponseData;
            };
        };
    };
    '/v1/interoperation/accounts/{accountId}/kyc': {
        get: {
            req: GetV1InteroperationAccountsByAccountIdKycData;
            res: {
                /**
                 * OK
                 */
                200: InteropKycResponseData;
            };
        };
    };
    '/v1/interoperation/accounts/{accountId}/transactions': {
        get: {
            req: GetV1InteroperationAccountsByAccountIdTransactionsData;
            res: {
                /**
                 * OK
                 */
                200: InteropTransactionsData;
            };
        };
    };
    '/v1/interoperation/health': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: unknown;
            };
        };
    };
    '/v1/interoperation/parties/{idType}/{idValue}': {
        delete: {
            req: DeleteV1InteroperationPartiesByIdTypeByIdValueData;
            res: {
                /**
                 * OK
                 */
                200: InteropIdentifierAccountResponseData;
            };
        };
        get: {
            req: GetV1InteroperationPartiesByIdTypeByIdValueData;
            res: {
                /**
                 * OK
                 */
                200: InteropIdentifierAccountResponseData;
            };
        };
        post: {
            req: PostV1InteroperationPartiesByIdTypeByIdValueData;
            res: {
                /**
                 * OK
                 */
                200: InteropIdentifierAccountResponseData;
            };
        };
    };
    '/v1/interoperation/parties/{idType}/{idValue}/{subIdOrType}': {
        delete: {
            req: DeleteV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeData;
            res: {
                /**
                 * OK
                 */
                200: InteropIdentifierAccountResponseData;
            };
        };
        get: {
            req: GetV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeData;
            res: {
                /**
                 * OK
                 */
                200: InteropIdentifierAccountResponseData;
            };
        };
        post: {
            req: PostV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeData;
            res: {
                /**
                 * OK
                 */
                200: InteropIdentifierAccountResponseData;
            };
        };
    };
    '/v1/interoperation/quotes': {
        post: {
            req: PostV1InteroperationQuotesData;
            res: {
                /**
                 * OK
                 */
                200: InteropQuoteResponseData;
            };
        };
    };
    '/v1/interoperation/requests': {
        post: {
            req: PostV1InteroperationRequestsData;
            res: {
                /**
                 * OK
                 */
                200: InteropTransactionRequestResponseData;
            };
        };
    };
    '/v1/interoperation/transactions/{accountId}/disburse': {
        post: {
            req: PostV1InteroperationTransactionsByAccountIdDisburseData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/interoperation/transactions/{accountId}/loanrepayment': {
        post: {
            req: PostV1InteroperationTransactionsByAccountIdLoanrepaymentData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/interoperation/transactions/{transactionCode}/quotes/{quoteCode}': {
        get: {
            req: GetV1InteroperationTransactionsByTransactionCodeQuotesByQuoteCodeData;
            res: {
                /**
                 * OK
                 */
                200: InteropQuoteResponseData;
            };
        };
    };
    '/v1/interoperation/transactions/{transactionCode}/requests/{requestCode}': {
        get: {
            req: GetV1InteroperationTransactionsByTransactionCodeRequestsByRequestCodeData;
            res: {
                /**
                 * OK
                 */
                200: InteropTransactionRequestResponseData;
            };
        };
    };
    '/v1/interoperation/transactions/{transactionCode}/transfers/{transferCode}': {
        get: {
            req: GetV1InteroperationTransactionsByTransactionCodeTransfersByTransferCodeData;
            res: {
                /**
                 * OK
                 */
                200: InteropTransferResponseData;
            };
        };
    };
    '/v1/interoperation/transfers': {
        post: {
            req: PostV1InteroperationTransfersData;
            res: {
                /**
                 * OK
                 */
                200: InteropTransferResponseData;
            };
        };
    };
    '/v1/jobs': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetJobsResponse>;
            };
        };
    };
    '/v1/jobs/short-name/{shortName}': {
        get: {
            req: GetV1JobsShortNameByShortNameData;
            res: {
                /**
                 * OK
                 */
                200: GetJobsResponse;
            };
        };
        post: {
            req: PostV1JobsShortNameByShortNameData;
            res: {
                /**
                 * POST: jobs/short-name/SA_PINT?command=executeJob
                 */
                200: unknown;
            };
        };
        put: {
            req: PutV1JobsShortNameByShortNameData;
            res: {
                /**
                 * OK
                 */
                200: unknown;
            };
        };
    };
    '/v1/jobs/short-name/{shortName}/runhistory': {
        get: {
            req: GetV1JobsShortNameByShortNameRunhistoryData;
            res: {
                /**
                 * OK
                 */
                200: GetJobsJobIDJobRunHistoryResponse;
            };
        };
    };
    '/v1/jobs/{jobId}': {
        get: {
            req: GetV1JobsByJobIdData;
            res: {
                /**
                 * OK
                 */
                200: GetJobsResponse;
            };
        };
        post: {
            req: PostV1JobsByJobIdData;
            res: {
                /**
                 * POST: jobs/1?command=executeJob
                 */
                200: unknown;
            };
        };
        put: {
            req: PutV1JobsByJobIdData;
            res: {
                /**
                 * OK
                 */
                200: unknown;
            };
        };
    };
    '/v1/jobs/{jobId}/runhistory': {
        get: {
            req: GetV1JobsByJobIdRunhistoryData;
            res: {
                /**
                 * OK
                 */
                200: GetJobsJobIDJobRunHistoryResponse;
            };
        };
    };
    '/v1/jobs/names': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: ConfiguredJobNamesDTO;
            };
        };
    };
    '/v1/jobs/{jobName}/available-steps': {
        get: {
            req: GetV1JobsByJobNameAvailableStepsData;
            res: {
                /**
                 * default response
                 */
                default: JobBusinessStepDetail;
            };
        };
    };
    '/v1/jobs/{jobName}/steps': {
        get: {
            req: GetV1JobsByJobNameStepsData;
            res: {
                /**
                 * default response
                 */
                default: JobBusinessStepConfigData;
            };
        };
        put: {
            req: PutV1JobsByJobNameStepsData;
            res: {
                /**
                 * NO_CONTENT
                 */
                204: void;
            };
        };
    };
    '/v1/jobs/{jobName}/inline': {
        post: {
            req: PostV1JobsByJobNameInlineData;
            res: {
                /**
                 * OK
                 */
                200: InlineJobResponse;
                /**
                 * Request body item size validation error
                 */
                400: unknown;
            };
        };
    };
    '/v1/journalentries': {
        get: {
            req: GetV1JournalentriesData;
            res: {
                /**
                 * OK
                 */
                200: GetJournalEntriesTransactionIdResponse;
            };
        };
        post: {
            req: PostV1JournalentriesData;
            res: {
                /**
                 * OK
                 */
                200: PostJournalEntriesResponse;
            };
        };
    };
    '/v1/journalentries/downloadtemplate': {
        get: {
            req: GetV1JournalentriesDownloadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/journalentries/openingbalance': {
        get: {
            req: GetV1JournalentriesOpeningbalanceData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/journalentries/provisioning': {
        get: {
            req: GetV1JournalentriesProvisioningData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/journalentries/uploadtemplate': {
        post: {
            req: PostV1JournalentriesUploadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/journalentries/{journalEntryId}': {
        get: {
            req: GetV1JournalentriesByJournalEntryIdData;
            res: {
                /**
                 * OK
                 */
                200: JournalEntryTransactionItem;
            };
        };
    };
    '/v1/journalentries/{transactionId}': {
        post: {
            req: PostV1JournalentriesByTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: PostJournalEntriesTransactionIdResponse;
            };
        };
    };
    '/v1/likelihood/{ppiName}': {
        get: {
            req: GetV1LikelihoodByPpiNameData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/likelihood/{ppiName}/{likelihoodId}': {
        get: {
            req: GetV1LikelihoodByPpiNameByLikelihoodIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        put: {
            req: PutV1LikelihoodByPpiNameByLikelihoodIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/loan-collateral-management/{collateralId}': {
        get: {
            req: GetV1LoanCollateralManagementByCollateralIdData;
            res: {
                /**
                 * default response
                 */
                default: LoanCollateralResponseData;
            };
        };
    };
    '/v1/loan-collateral-management/{id}': {
        delete: {
            req: DeleteV1LoanCollateralManagementByIdData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/loanproducts': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetLoanProductsResponse>;
            };
        };
        post: {
            req: PostV1LoanproductsData;
            res: {
                /**
                 * OK
                 */
                200: PostLoanProductsResponse;
            };
        };
    };
    '/v1/loanproducts/external-id/{externalProductId}': {
        get: {
            req: GetV1LoanproductsExternalIdByExternalProductIdData;
            res: {
                /**
                 * OK
                 */
                200: GetLoanProductsProductIdResponse;
            };
        };
        put: {
            req: PutV1LoanproductsExternalIdByExternalProductIdData;
            res: {
                /**
                 * OK
                 */
                200: PutLoanProductsProductIdResponse;
            };
        };
    };
    '/v1/loanproducts/template': {
        get: {
            req: GetV1LoanproductsTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetLoanProductsTemplateResponse;
            };
        };
    };
    '/v1/loanproducts/{productId}': {
        get: {
            req: GetV1LoanproductsByProductIdData;
            res: {
                /**
                 * OK
                 */
                200: GetLoanProductsProductIdResponse;
            };
        };
        put: {
            req: PutV1LoanproductsByProductIdData;
            res: {
                /**
                 * OK
                 */
                200: PutLoanProductsProductIdResponse;
            };
        };
    };
    '/v1/loanproducts/{productId}/productmix': {
        delete: {
            req: DeleteV1LoanproductsByProductIdProductmixData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
        get: {
            req: GetV1LoanproductsByProductIdProductmixData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        post: {
            req: PostV1LoanproductsByProductIdProductmixData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
        put: {
            req: PutV1LoanproductsByProductIdProductmixData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/loans': {
        get: {
            req: GetV1LoansData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansResponse;
            };
        };
        post: {
            req: PostV1LoansData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansResponse;
            };
        };
    };
    '/v1/loans/downloadtemplate': {
        get: {
            req: GetV1LoansDownloadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}': {
        delete: {
            req: DeleteV1LoansExternalIdByLoanExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteLoansLoanIdResponse;
            };
        };
        get: {
            req: GetV1LoansExternalIdByLoanExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansLoanIdResponse;
            };
        };
        post: {
            req: PostV1LoansExternalIdByLoanExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansLoanIdResponse;
            };
        };
        put: {
            req: PutV1LoansExternalIdByLoanExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: PutLoansLoanIdResponse;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/approved-amount': {
        get: {
            req: GetV1LoansExternalIdByLoanExternalIdApprovedAmountData;
            res: {
                /**
                 * default response
                 */
                default: Array<LoanApprovedAmountHistoryData>;
            };
        };
        put: {
            req: PutV1LoansExternalIdByLoanExternalIdApprovedAmountData;
            res: {
                /**
                 * OK
                 */
                200: PutLoansApprovedAmountResponse;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/available-disbursement-amount': {
        put: {
            req: PutV1LoansExternalIdByLoanExternalIdAvailableDisbursementAmountData;
            res: {
                /**
                 * OK
                 */
                200: PutLoansAvailableDisbursementAmountResponse;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/delinquency-actions': {
        get: {
            req: GetV1LoansExternalIdByLoanExternalIdDelinquencyActionsData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetDelinquencyActionsResponse>;
            };
        };
        post: {
            req: PostV1LoansExternalIdByLoanExternalIdDelinquencyActionsData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansDelinquencyActionResponse;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/delinquencytags': {
        get: {
            req: GetV1LoansExternalIdByLoanExternalIdDelinquencytagsData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetDelinquencyTagHistoryResponse>;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/template': {
        get: {
            req: GetV1LoansExternalIdByLoanExternalIdTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansApprovalTemplateResponse;
            };
        };
    };
    '/v1/loans/glimAccount/{glimId}': {
        get: {
            req: GetV1LoansGlimAccountByGlimIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        post: {
            req: PostV1LoansGlimAccountByGlimIdData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansLoanIdResponse;
            };
        };
    };
    '/v1/loans/repayments/downloadtemplate': {
        get: {
            req: GetV1LoansRepaymentsDownloadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/loans/repayments/uploadtemplate': {
        post: {
            req: PostV1LoansRepaymentsUploadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/loans/template': {
        get: {
            req: GetV1LoansTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansTemplateResponse;
            };
        };
    };
    '/v1/loans/uploadtemplate': {
        post: {
            req: PostV1LoansUploadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/loans/{loanId}': {
        delete: {
            req: DeleteV1LoansByLoanIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteLoansLoanIdResponse;
            };
        };
        get: {
            req: GetV1LoansByLoanIdData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansLoanIdResponse;
            };
        };
        post: {
            req: PostV1LoansByLoanIdData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansLoanIdResponse;
            };
        };
        put: {
            req: PutV1LoansByLoanIdData;
            res: {
                /**
                 * OK
                 */
                200: PutLoansLoanIdResponse;
            };
        };
    };
    '/v1/loans/{loanId}/approved-amount': {
        get: {
            req: GetV1LoansByLoanIdApprovedAmountData;
            res: {
                /**
                 * default response
                 */
                default: Array<LoanApprovedAmountHistoryData>;
            };
        };
        put: {
            req: PutV1LoansByLoanIdApprovedAmountData;
            res: {
                /**
                 * OK
                 */
                200: PutLoansApprovedAmountResponse;
            };
        };
    };
    '/v1/loans/{loanId}/available-disbursement-amount': {
        put: {
            req: PutV1LoansByLoanIdAvailableDisbursementAmountData;
            res: {
                /**
                 * OK
                 */
                200: PutLoansAvailableDisbursementAmountResponse;
            };
        };
    };
    '/v1/loans/{loanId}/delinquency-actions': {
        get: {
            req: GetV1LoansByLoanIdDelinquencyActionsData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetDelinquencyActionsResponse>;
            };
        };
        post: {
            req: PostV1LoansByLoanIdDelinquencyActionsData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansDelinquencyActionResponse;
            };
        };
    };
    '/v1/loans/{loanId}/delinquencytags': {
        get: {
            req: GetV1LoansByLoanIdDelinquencytagsData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetDelinquencyTagHistoryResponse>;
            };
        };
    };
    '/v1/loans/{loanId}/template': {
        get: {
            req: GetV1LoansByLoanIdTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansApprovalTemplateResponse;
            };
        };
    };
    '/v1/loans/at-date/external-id/{loanExternalId}': {
        get: {
            req: GetV1LoansAtDateExternalIdByLoanExternalIdData;
            res: {
                /**
                 * default response
                 */
                default: LoanPointInTimeData;
            };
        };
    };
    '/v1/loans/at-date/search': {
        post: {
            req: PostV1LoansAtDateSearchData;
            res: {
                /**
                 * default response
                 */
                default: Array<LoanPointInTimeData>;
            };
        };
    };
    '/v1/loans/at-date/search/external-id': {
        post: {
            req: PostV1LoansAtDateSearchExternalIdData;
            res: {
                /**
                 * default response
                 */
                default: Array<LoanPointInTimeData>;
            };
        };
    };
    '/v1/loans/at-date/{loanId}': {
        get: {
            req: GetV1LoansAtDateByLoanIdData;
            res: {
                /**
                 * default response
                 */
                default: LoanPointInTimeData;
            };
        };
    };
    '/v1/loans/catch-up': {
        post: {
            res: {
                /**
                 * All loans are up to date
                 */
                200: unknown;
                /**
                 * Catch Up has been started
                 */
                202: unknown;
                /**
                 * Catch Up is already running
                 */
                400: unknown;
            };
        };
    };
    '/v1/loans/is-catch-up-running': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: IsCatchUpRunningDTO;
            };
        };
    };
    '/v1/loans/oldest-cob-closed': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: OldestCOBProcessedLoanDTO;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/buydown-fees': {
        get: {
            req: GetV1LoansExternalIdByLoanExternalIdBuydownFeesData;
            res: {
                /**
                 * OK
                 */
                200: Array<BuyDownFeeAmortizationDetails>;
            };
        };
    };
    '/v1/loans/{loanId}/buydown-fees': {
        get: {
            req: GetV1LoansByLoanIdBuydownFeesData;
            res: {
                /**
                 * OK
                 */
                200: Array<BuyDownFeeAmortizationDetails>;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/capitalized-incomes': {
        get: {
            req: GetV1LoansExternalIdByLoanExternalIdCapitalizedIncomesData;
            res: {
                /**
                 * default response
                 */
                default: Array<CapitalizedIncomeDetails>;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/deferredincome': {
        get: {
            req: GetV1LoansExternalIdByLoanExternalIdDeferredincomeData;
            res: {
                /**
                 * OK
                 */
                200: LoanCapitalizedIncomeData;
            };
        };
    };
    '/v1/loans/{loanId}/capitalized-incomes': {
        get: {
            req: GetV1LoansByLoanIdCapitalizedIncomesData;
            res: {
                /**
                 * default response
                 */
                default: Array<CapitalizedIncomeDetails>;
            };
        };
    };
    '/v1/loans/{loanId}/deferredincome': {
        get: {
            req: GetV1LoansByLoanIdDeferredincomeData;
            res: {
                /**
                 * default response
                 */
                default: LoanCapitalizedIncomeData;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/charges': {
        get: {
            req: GetV1LoansExternalIdByLoanExternalIdChargesData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetLoansLoanIdChargesChargeIdResponse>;
            };
        };
        post: {
            req: PostV1LoansExternalIdByLoanExternalIdChargesData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansLoanIdChargesResponse;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/charges/external-id/{loanChargeExternalId}': {
        delete: {
            req: DeleteV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteLoansLoanIdChargesChargeIdResponse;
            };
        };
        get: {
            req: GetV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansLoanIdChargesChargeIdResponse;
            };
        };
        post: {
            req: PostV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansLoanIdChargesChargeIdResponse;
            };
        };
        put: {
            req: PutV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: PutLoansLoanIdChargesChargeIdResponse;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/charges/template': {
        get: {
            req: GetV1LoansExternalIdByLoanExternalIdChargesTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansLoanIdChargesTemplateResponse;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/charges/{loanChargeId}': {
        delete: {
            req: DeleteV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteLoansLoanIdChargesChargeIdResponse;
            };
        };
        get: {
            req: GetV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansLoanIdChargesChargeIdResponse;
            };
        };
        post: {
            req: PostV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansLoanIdChargesChargeIdResponse;
            };
        };
        put: {
            req: PutV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: PutLoansLoanIdChargesChargeIdResponse;
            };
        };
    };
    '/v1/loans/{loanId}/charges': {
        get: {
            req: GetV1LoansByLoanIdChargesData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetLoansLoanIdChargesChargeIdResponse>;
            };
        };
        post: {
            req: PostV1LoansByLoanIdChargesData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansLoanIdChargesResponse;
            };
        };
    };
    '/v1/loans/{loanId}/charges/external-id/{loanChargeExternalId}': {
        delete: {
            req: DeleteV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteLoansLoanIdChargesChargeIdResponse;
            };
        };
        get: {
            req: GetV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansLoanIdChargesChargeIdResponse;
            };
        };
        post: {
            req: PostV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansLoanIdChargesChargeIdResponse;
            };
        };
        put: {
            req: PutV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: PutLoansLoanIdChargesChargeIdResponse;
            };
        };
    };
    '/v1/loans/{loanId}/charges/template': {
        get: {
            req: GetV1LoansByLoanIdChargesTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansLoanIdChargesTemplateResponse;
            };
        };
    };
    '/v1/loans/{loanId}/charges/{loanChargeId}': {
        delete: {
            req: DeleteV1LoansByLoanIdChargesByLoanChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteLoansLoanIdChargesChargeIdResponse;
            };
        };
        get: {
            req: GetV1LoansByLoanIdChargesByLoanChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansLoanIdChargesChargeIdResponse;
            };
        };
        post: {
            req: PostV1LoansByLoanIdChargesByLoanChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansLoanIdChargesChargeIdResponse;
            };
        };
        put: {
            req: PutV1LoansByLoanIdChargesByLoanChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: PutLoansLoanIdChargesChargeIdResponse;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/interest-pauses': {
        get: {
            req: GetV1LoansExternalIdByLoanExternalIdInterestPausesData;
            res: {
                /**
                 * List of interest pause periods
                 */
                200: Array<InterestPauseResponseDto>;
            };
        };
        post: {
            req: PostV1LoansExternalIdByLoanExternalIdInterestPausesData;
            res: {
                /**
                 * Command successfully processed
                 */
                200: CommandProcessingResult;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/interest-pauses/{variationId}': {
        delete: {
            req: DeleteV1LoansExternalIdByLoanExternalIdInterestPausesByVariationIdData;
            res: {
                /**
                 * No Content
                 */
                204: void;
            };
        };
        put: {
            req: PutV1LoansExternalIdByLoanExternalIdInterestPausesByVariationIdData;
            res: {
                /**
                 * Command successfully processed
                 */
                200: CommandProcessingResult;
            };
        };
    };
    '/v1/loans/{loanId}/interest-pauses': {
        get: {
            req: GetV1LoansByLoanIdInterestPausesData;
            res: {
                /**
                 * List of interest pause periods
                 */
                200: Array<InterestPauseResponseDto>;
            };
        };
        post: {
            req: PostV1LoansByLoanIdInterestPausesData;
            res: {
                /**
                 * Command successfully processed
                 */
                200: CommandProcessingResult;
            };
        };
    };
    '/v1/loans/{loanId}/interest-pauses/{variationId}': {
        delete: {
            req: DeleteV1LoansByLoanIdInterestPausesByVariationIdData;
            res: {
                /**
                 * No Content
                 */
                204: void;
            };
        };
        put: {
            req: PutV1LoansByLoanIdInterestPausesByVariationIdData;
            res: {
                /**
                 * Command successfully processed
                 */
                200: CommandProcessingResult;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/transactions': {
        get: {
            req: GetV1LoansExternalIdByLoanExternalIdTransactionsData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansLoanIdTransactionsResponse;
            };
        };
        post: {
            req: PostV1LoansExternalIdByLoanExternalIdTransactionsData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansLoanIdTransactionsResponse;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/transactions/external-id/{externalTransactionId}': {
        get: {
            req: GetV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByExternalTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansLoanIdTransactionsTransactionIdResponse;
            };
        };
        post: {
            req: PostV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByExternalTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansLoanIdTransactionsResponse;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/transactions/external-id/{transactionExternalId}': {
        put: {
            req: PutV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByTransactionExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: PutChargeTransactionChangesResponse;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/transactions/template': {
        get: {
            req: GetV1LoansExternalIdByLoanExternalIdTransactionsTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansLoanIdTransactionsTemplateResponse;
            };
        };
    };
    '/v1/loans/external-id/{loanExternalId}/transactions/{transactionId}': {
        get: {
            req: GetV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansLoanIdTransactionsTransactionIdResponse;
            };
        };
        post: {
            req: PostV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansLoanIdTransactionsResponse;
            };
        };
        put: {
            req: PutV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: PutChargeTransactionChangesResponse;
            };
        };
    };
    '/v1/loans/{loanId}/transactions': {
        get: {
            req: GetV1LoansByLoanIdTransactionsData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansLoanIdTransactionsResponse;
            };
        };
        post: {
            req: PostV1LoansByLoanIdTransactionsData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansLoanIdTransactionsResponse;
            };
        };
    };
    '/v1/loans/{loanId}/transactions/external-id/{externalTransactionId}': {
        get: {
            req: GetV1LoansByLoanIdTransactionsExternalIdByExternalTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansLoanIdTransactionsTransactionIdResponse;
            };
        };
        post: {
            req: PostV1LoansByLoanIdTransactionsExternalIdByExternalTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansLoanIdTransactionsResponse;
            };
        };
    };
    '/v1/loans/{loanId}/transactions/external-id/{transactionExternalId}': {
        put: {
            req: PutV1LoansByLoanIdTransactionsExternalIdByTransactionExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: PutChargeTransactionChangesResponse;
            };
        };
    };
    '/v1/loans/{loanId}/transactions/template': {
        get: {
            req: GetV1LoansByLoanIdTransactionsTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansLoanIdTransactionsTemplateResponse;
            };
        };
    };
    '/v1/loans/{loanId}/transactions/{transactionId}': {
        get: {
            req: GetV1LoansByLoanIdTransactionsByTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansLoanIdTransactionsTransactionIdResponse;
            };
        };
        post: {
            req: PostV1LoansByLoanIdTransactionsByTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansLoanIdTransactionsResponse;
            };
        };
        put: {
            req: PutV1LoansByLoanIdTransactionsByTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: PutChargeTransactionChangesResponse;
            };
        };
    };
    '/v1/loans/loanreassignment': {
        post: {
            req: PostV1LoansLoanreassignmentData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/loans/loanreassignment/template': {
        get: {
            req: GetV1LoansLoanreassignmentTemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/loans/locked': {
        get: {
            req: GetV1LoansLockedData;
            res: {
                /**
                 * default response
                 */
                default: LoanAccountLockResponseDTO;
            };
        };
    };
    '/v1/loans/{loanId}/collaterals': {
        get: {
            req: GetV1LoansByLoanIdCollateralsData;
            res: {
                /**
                 * default response
                 */
                default: Array<CollateralData>;
            };
        };
        post: {
            req: PostV1LoansByLoanIdCollateralsData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansLoanIdCollateralsResponse;
            };
        };
    };
    '/v1/loans/{loanId}/collaterals/template': {
        get: {
            req: GetV1LoansByLoanIdCollateralsTemplateData;
            res: {
                /**
                 * default response
                 */
                default: CollateralData;
            };
        };
    };
    '/v1/loans/{loanId}/collaterals/{collateralId}': {
        delete: {
            req: DeleteV1LoansByLoanIdCollateralsByCollateralIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteLoansLoanIdCollateralsCollateralIdResponse;
            };
        };
        get: {
            req: GetV1LoansByLoanIdCollateralsByCollateralIdData;
            res: {
                /**
                 * OK
                 */
                200: GetLoansLoanIdCollateralsResponse;
            };
        };
        put: {
            req: PutV1LoansByLoanIdCollateralsByCollateralIdData;
            res: {
                /**
                 * OK
                 */
                200: PutLoansLoanIdCollateralsCollateralIdResponse;
            };
        };
    };
    '/v1/loans/{loanId}/disbursements/editDisbursements': {
        put: {
            req: PutV1LoansByLoanIdDisbursementsEditDisbursementsData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/loans/{loanId}/disbursements/{disbursementId}': {
        get: {
            req: GetV1LoansByLoanIdDisbursementsByDisbursementIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        put: {
            req: PutV1LoansByLoanIdDisbursementsByDisbursementIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/loans/{loanId}/guarantors': {
        get: {
            req: GetV1LoansByLoanIdGuarantorsData;
            res: {
                /**
                 * default response
                 */
                default: Array<GuarantorData>;
            };
        };
        post: {
            req: PostV1LoansByLoanIdGuarantorsData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/loans/{loanId}/guarantors/accounts/template': {
        get: {
            req: GetV1LoansByLoanIdGuarantorsAccountsTemplateData;
            res: {
                /**
                 * default response
                 */
                default: GuarantorData;
            };
        };
    };
    '/v1/loans/{loanId}/guarantors/downloadtemplate': {
        get: {
            req: GetV1LoansByLoanIdGuarantorsDownloadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/loans/{loanId}/guarantors/template': {
        get: {
            req: GetV1LoansByLoanIdGuarantorsTemplateData;
            res: {
                /**
                 * default response
                 */
                default: GuarantorData;
            };
        };
    };
    '/v1/loans/{loanId}/guarantors/uploadtemplate': {
        post: {
            req: PostV1LoansByLoanIdGuarantorsUploadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/loans/{loanId}/guarantors/{guarantorId}': {
        delete: {
            req: DeleteV1LoansByLoanIdGuarantorsByGuarantorIdData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
        get: {
            req: GetV1LoansByLoanIdGuarantorsByGuarantorIdData;
            res: {
                /**
                 * default response
                 */
                default: GuarantorData;
            };
        };
        put: {
            req: PutV1LoansByLoanIdGuarantorsByGuarantorIdData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/loans/{loanId}/postdatedchecks': {
        get: {
            req: GetV1LoansByLoanIdPostdatedchecksData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetPostDatedChecks>;
            };
        };
    };
    '/v1/loans/{loanId}/postdatedchecks/{installmentId}': {
        get: {
            req: GetV1LoansByLoanIdPostdatedchecksByInstallmentIdData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetPostDatedChecks>;
            };
        };
    };
    '/v1/loans/{loanId}/postdatedchecks/{postDatedCheckId}': {
        delete: {
            req: DeleteV1LoansByLoanIdPostdatedchecksByPostDatedCheckIdData;
            res: {
                /**
                 * OK
                 */
                200: Array<DeletePostDatedCheck>;
            };
        };
        put: {
            req: PutV1LoansByLoanIdPostdatedchecksByPostDatedCheckIdData;
            res: {
                /**
                 * OK
                 */
                200: Array<UpdatePostDatedCheckResponse>;
            };
        };
    };
    '/v1/loans/{loanId}/schedule': {
        post: {
            req: PostV1LoansByLoanIdScheduleData;
            res: {
                /**
                 * OK
                 */
                200: PostLoansLoanIdScheduleResponse;
            };
        };
    };
    '/v1/makercheckers': {
        get: {
            req: GetV1MakercheckersData;
            res: {
                /**
                 * default response
                 */
                default: Array<AuditData>;
            };
        };
    };
    '/v1/makercheckers/searchtemplate': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: AuditSearchData;
            };
        };
    };
    '/v1/makercheckers/{auditId}': {
        delete: {
            req: DeleteV1MakercheckersByAuditIdData;
            res: {
                /**
                 * OK
                 */
                200: PostMakerCheckersResponse;
            };
        };
        post: {
            req: PostV1MakercheckersByAuditIdData;
            res: {
                /**
                 * OK
                 */
                200: PostMakerCheckersResponse;
            };
        };
    };
    '/v1/mixmapping': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: MixTaxonomyMappingData;
            };
        };
        put: {
            req: PutV1MixmappingData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/mixreport': {
        get: {
            req: GetV1MixreportData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/mixtaxonomy': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: Array<MixTaxonomyData>;
            };
        };
    };
    '/v1/notifications': {
        get: {
            req: GetV1NotificationsData;
            res: {
                /**
                 * OK
                 */
                200: GetNotificationsResponse;
            };
        };
        put: {
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/offices': {
        get: {
            req: GetV1OfficesData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetOfficesResponse>;
            };
        };
        post: {
            req: PostV1OfficesData;
            res: {
                /**
                 * OK
                 */
                200: PostOfficesResponse;
            };
        };
    };
    '/v1/offices/downloadtemplate': {
        get: {
            req: GetV1OfficesDownloadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/offices/external-id/{externalId}': {
        get: {
            req: GetV1OfficesExternalIdByExternalIdData;
            res: {
                /**
                 * default response
                 */
                default: GetOfficesResponse;
            };
        };
        put: {
            req: PutV1OfficesExternalIdByExternalIdData;
            res: {
                /**
                 * default response
                 */
                default: PutOfficesOfficeIdResponse;
            };
        };
    };
    '/v1/offices/template': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: GetOfficesTemplateResponse;
            };
        };
    };
    '/v1/offices/uploadtemplate': {
        post: {
            req: PostV1OfficesUploadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/offices/{officeId}': {
        get: {
            req: GetV1OfficesByOfficeIdData;
            res: {
                /**
                 * OK
                 */
                200: GetOfficesResponse;
            };
        };
        put: {
            req: PutV1OfficesByOfficeIdData;
            res: {
                /**
                 * OK
                 */
                200: PutOfficesOfficeIdResponse;
            };
        };
    };
    '/v1/passwordpreferences': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: GetPasswordPreferencesTemplateResponse;
            };
        };
        put: {
            req: PutV1PasswordpreferencesData;
            res: {
                /**
                 * OK
                 */
                200: unknown;
            };
        };
    };
    '/v1/passwordpreferences/template': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetPasswordPreferencesTemplateResponse>;
            };
        };
    };
    '/v1/paymenttypes': {
        get: {
            req: GetV1PaymenttypesData;
            res: {
                /**
                 * default response
                 */
                default: Array<PaymentTypeData>;
            };
        };
        post: {
            req: PostV1PaymenttypesData;
            res: {
                /**
                 * OK
                 */
                200: PostPaymentTypesResponse;
            };
        };
    };
    '/v1/paymenttypes/{paymentTypeId}': {
        delete: {
            req: DeleteV1PaymenttypesByPaymentTypeIdData;
            res: {
                /**
                 * OK
                 */
                200: DeletePaymentTypesPaymentTypeIdResponse;
            };
        };
        get: {
            req: GetV1PaymenttypesByPaymentTypeIdData;
            res: {
                /**
                 * default response
                 */
                default: PaymentTypeData;
            };
        };
        put: {
            req: PutV1PaymenttypesByPaymentTypeIdData;
            res: {
                /**
                 * OK
                 */
                200: PutPaymentTypesPaymentTypeIdResponse;
            };
        };
    };
    '/v1/permissions': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetPermissionsResponse>;
            };
        };
        put: {
            req: PutV1PermissionsData;
            res: {
                /**
                 * OK
                 */
                200: CommandProcessingResult;
            };
        };
    };
    '/v1/povertyLine/{ppiName}': {
        get: {
            req: GetV1PovertyLineByPpiNameData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/povertyLine/{ppiName}/{likelihoodId}': {
        get: {
            req: GetV1PovertyLineByPpiNameByLikelihoodIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/products/{type}': {
        get: {
            req: GetV1ProductsByTypeData;
            res: {
                /**
                 * OK
                 */
                200: GetProductsTypeResponse;
            };
        };
        post: {
            req: PostV1ProductsByTypeData;
            res: {
                /**
                 * OK
                 */
                200: PostProductsTypeResponse;
            };
        };
    };
    '/v1/products/{type}/template': {
        get: {
            req: GetV1ProductsByTypeTemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/products/{type}/{productId}': {
        get: {
            req: GetV1ProductsByTypeByProductIdData;
            res: {
                /**
                 * OK
                 */
                200: GetProductsTypeProductIdResponse;
            };
        };
        post: {
            req: PostV1ProductsByTypeByProductIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        put: {
            req: PutV1ProductsByTypeByProductIdData;
            res: {
                /**
                 * OK
                 */
                200: PutProductsTypeProductIdResponse;
            };
        };
    };
    '/v1/provisioningcategory': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: Array<ProvisioningCategoryData>;
            };
        };
        post: {
            req: PostV1ProvisioningcategoryData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/provisioningcategory/{categoryId}': {
        delete: {
            req: DeleteV1ProvisioningcategoryByCategoryIdData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
        put: {
            req: PutV1ProvisioningcategoryByCategoryIdData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/provisioningcriteria': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetProvisioningCriteriaResponse>;
            };
        };
        post: {
            req: PostV1ProvisioningcriteriaData;
            res: {
                /**
                 * OK
                 */
                200: PostProvisioningCriteriaResponse;
            };
        };
    };
    '/v1/provisioningcriteria/template': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: ProvisioningCriteriaData;
            };
        };
    };
    '/v1/provisioningcriteria/{criteriaId}': {
        delete: {
            req: DeleteV1ProvisioningcriteriaByCriteriaIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteProvisioningCriteriaResponse;
            };
        };
        get: {
            req: GetV1ProvisioningcriteriaByCriteriaIdData;
            res: {
                /**
                 * OK
                 */
                200: GetProvisioningCriteriaCriteriaIdResponse;
            };
        };
        put: {
            req: PutV1ProvisioningcriteriaByCriteriaIdData;
            res: {
                /**
                 * OK
                 */
                200: PutProvisioningCriteriaResponse;
            };
        };
    };
    '/v1/provisioningentries': {
        get: {
            req: GetV1ProvisioningentriesData;
            res: {
                /**
                 * default response
                 */
                default: PageProvisioningEntryData;
            };
        };
        post: {
            req: PostV1ProvisioningentriesData;
            res: {
                /**
                 * OK
                 */
                200: PostProvisioningEntriesResponse;
            };
        };
    };
    '/v1/provisioningentries/entries': {
        get: {
            req: GetV1ProvisioningentriesEntriesData;
            res: {
                /**
                 * default response
                 */
                default: PageLoanProductProvisioningEntryData;
            };
        };
    };
    '/v1/provisioningentries/{entryId}': {
        get: {
            req: GetV1ProvisioningentriesByEntryIdData;
            res: {
                /**
                 * default response
                 */
                default: ProvisioningEntryData;
            };
        };
        post: {
            req: PostV1ProvisioningentriesByEntryIdData;
            res: {
                /**
                 * OK
                 */
                200: PutProvisioningEntriesResponse;
            };
        };
    };
    '/v1/rates': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: Array<RateData>;
            };
        };
        post: {
            req: PostV1RatesData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/rates/{rateId}': {
        get: {
            req: GetV1RatesByRateIdData;
            res: {
                /**
                 * default response
                 */
                default: RateData;
            };
        };
        put: {
            req: PutV1RatesByRateIdData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/recurringdepositaccounts': {
        get: {
            req: GetV1RecurringdepositaccountsData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetRecurringDepositAccountsResponse>;
            };
        };
        post: {
            req: PostV1RecurringdepositaccountsData;
            res: {
                /**
                 * OK
                 */
                200: PostRecurringDepositAccountsResponse;
            };
        };
    };
    '/v1/recurringdepositaccounts/downloadtemplate': {
        get: {
            req: GetV1RecurringdepositaccountsDownloadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/recurringdepositaccounts/template': {
        get: {
            req: GetV1RecurringdepositaccountsTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetRecurringDepositAccountsTemplateResponse;
            };
        };
    };
    '/v1/recurringdepositaccounts/transactions/downloadtemplate': {
        get: {
            req: GetV1RecurringdepositaccountsTransactionsDownloadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/recurringdepositaccounts/transactions/uploadtemplate': {
        post: {
            req: PostV1RecurringdepositaccountsTransactionsUploadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/recurringdepositaccounts/uploadtemplate': {
        post: {
            req: PostV1RecurringdepositaccountsUploadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/recurringdepositaccounts/{accountId}': {
        delete: {
            req: DeleteV1RecurringdepositaccountsByAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteRecurringDepositAccountsResponse;
            };
        };
        get: {
            req: GetV1RecurringdepositaccountsByAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: GetRecurringDepositAccountsAccountIdResponse;
            };
        };
        post: {
            req: PostV1RecurringdepositaccountsByAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: PostRecurringDepositAccountsAccountIdResponse;
            };
        };
        put: {
            req: PutV1RecurringdepositaccountsByAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: PutRecurringDepositAccountsAccountIdResponse;
            };
        };
    };
    '/v1/recurringdepositaccounts/{accountId}/template': {
        get: {
            req: GetV1RecurringdepositaccountsByAccountIdTemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/recurringdepositaccounts/{recurringDepositAccountId}/transactions': {
        post: {
            req: PostV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsData;
            res: {
                /**
                 * OK
                 */
                200: PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsResponse;
            };
        };
    };
    '/v1/recurringdepositaccounts/{recurringDepositAccountId}/transactions/template': {
        get: {
            req: GetV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTemplateResponse;
            };
        };
    };
    '/v1/recurringdepositaccounts/{recurringDepositAccountId}/transactions/{transactionId}': {
        get: {
            req: GetV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsByTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse;
            };
        };
        post: {
            req: PostV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsByTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse;
            };
        };
    };
    '/v1/recurringdepositproducts': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetRecurringDepositProductsResponse>;
            };
        };
        post: {
            req: PostV1RecurringdepositproductsData;
            res: {
                /**
                 * OK
                 */
                200: PostRecurringDepositProductsResponse;
            };
        };
    };
    '/v1/recurringdepositproducts/template': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/recurringdepositproducts/{productId}': {
        delete: {
            req: DeleteV1RecurringdepositproductsByProductIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteRecurringDepositProductsProductIdResponse;
            };
        };
        get: {
            req: GetV1RecurringdepositproductsByProductIdData;
            res: {
                /**
                 * OK
                 */
                200: GetRecurringDepositProductsProductIdResponse;
            };
        };
        put: {
            req: PutV1RecurringdepositproductsByProductIdData;
            res: {
                /**
                 * OK
                 */
                200: PutRecurringDepositProductsResponse;
            };
        };
    };
    '/v1/reportmailingjobrunhistory': {
        get: {
            req: GetV1ReportmailingjobrunhistoryData;
            res: {
                /**
                 * OK
                 */
                200: ReportMailingJobRunHistoryData;
            };
        };
    };
    '/v1/reportmailingjobs': {
        get: {
            req: GetV1ReportmailingjobsData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetReportMailingJobsResponse>;
            };
        };
        post: {
            req: PostV1ReportmailingjobsData;
            res: {
                /**
                 * OK
                 */
                200: PostReportMailingJobsResponse;
            };
        };
    };
    '/v1/reportmailingjobs/template': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: GetReportMailingJobsTemplate;
            };
        };
    };
    '/v1/reportmailingjobs/{entityId}': {
        delete: {
            req: DeleteV1ReportmailingjobsByEntityIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteReportMailingJobsResponse;
            };
        };
        get: {
            req: GetV1ReportmailingjobsByEntityIdData;
            res: {
                /**
                 * OK
                 */
                200: GetReportMailingJobsResponse;
            };
        };
        put: {
            req: PutV1ReportmailingjobsByEntityIdData;
            res: {
                /**
                 * OK
                 */
                200: PutReportMailingJobsResponse;
            };
        };
    };
    '/v1/reports': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetReportsResponse>;
            };
        };
        post: {
            req: PostV1ReportsData;
            res: {
                /**
                 * OK
                 */
                200: PostReportsResponse;
            };
        };
    };
    '/v1/reports/template': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: GetReportsTemplateResponse;
            };
        };
    };
    '/v1/reports/{id}': {
        delete: {
            req: DeleteV1ReportsByIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteReportsResponse;
            };
        };
        get: {
            req: GetV1ReportsByIdData;
            res: {
                /**
                 * OK
                 */
                200: GetReportsResponse;
            };
        };
        put: {
            req: PutV1ReportsByIdData;
            res: {
                /**
                 * OK
                 */
                200: PutReportResponse;
            };
        };
    };
    '/v1/rescheduleloans': {
        get: {
            req: GetV1RescheduleloansData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetLoanRescheduleRequestResponse>;
            };
        };
        post: {
            req: PostV1RescheduleloansData;
            res: {
                /**
                 * OK
                 */
                200: PostCreateRescheduleLoansResponse;
            };
        };
    };
    '/v1/rescheduleloans/template': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: GetRescheduleReasonsTemplateResponse;
            };
        };
    };
    '/v1/rescheduleloans/{scheduleId}': {
        get: {
            req: GetV1RescheduleloansByScheduleIdData;
            res: {
                /**
                 * OK
                 */
                200: GetLoanRescheduleRequestResponse;
            };
        };
        post: {
            req: PostV1RescheduleloansByScheduleIdData;
            res: {
                /**
                 * OK
                 */
                200: PostUpdateRescheduleLoansResponse;
            };
        };
    };
    '/v1/roles': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetRolesResponse>;
            };
        };
        post: {
            req: PostV1RolesData;
            res: {
                /**
                 * OK
                 */
                200: PostRolesResponse;
            };
        };
    };
    '/v1/roles/{roleId}': {
        delete: {
            req: DeleteV1RolesByRoleIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteRolesRoleIdResponse;
            };
        };
        get: {
            req: GetV1RolesByRoleIdData;
            res: {
                /**
                 * OK
                 */
                200: GetRolesRoleIdResponse;
            };
        };
        post: {
            req: PostV1RolesByRoleIdData;
            res: {
                /**
                 * OK
                 */
                200: PostRolesRoleIdResponse;
            };
        };
        put: {
            req: PutV1RolesByRoleIdData;
            res: {
                /**
                 * OK
                 */
                200: PutRolesRoleIdResponse;
            };
        };
    };
    '/v1/roles/{roleId}/permissions': {
        get: {
            req: GetV1RolesByRoleIdPermissionsData;
            res: {
                /**
                 * OK
                 */
                200: GetRolesRoleIdPermissionsResponse;
            };
        };
        put: {
            req: PutV1RolesByRoleIdPermissionsData;
            res: {
                /**
                 * OK
                 */
                200: PutRolesRoleIdPermissionsResponse;
            };
        };
    };
    '/v1/runaccruals': {
        post: {
            req: PostV1RunaccrualsData;
            res: {
                /**
                 * OK
                 */
                200: unknown;
            };
        };
    };
    '/v1/runreports/availableExports/{reportName}': {
        get: {
            req: GetV1RunreportsAvailableExportsByReportNameData;
            res: {
                /**
                 * OK
                 */
                200: Array<ReportExportType>;
            };
        };
    };
    '/v1/runreports/{reportName}': {
        get: {
            req: GetV1RunreportsByReportNameData;
            res: {
                /**
                 * OK
                 */
                200: RunReportsResponse;
            };
        };
    };
    '/v1/savingsaccounts': {
        get: {
            req: GetV1SavingsaccountsData;
            res: {
                /**
                 * OK
                 */
                200: GetSavingsAccountsResponse;
            };
        };
        post: {
            req: PostV1SavingsaccountsData;
            res: {
                /**
                 * OK
                 */
                200: PostSavingsAccountsResponse;
            };
        };
    };
    '/v1/savingsaccounts/downloadtemplate': {
        get: {
            req: GetV1SavingsaccountsDownloadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/savingsaccounts/external-id/{externalId}': {
        delete: {
            req: DeleteV1SavingsaccountsExternalIdByExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteSavingsAccountsAccountIdResponse;
            };
        };
        get: {
            req: GetV1SavingsaccountsExternalIdByExternalIdData;
            res: {
                /**
                 * default response
                 */
                default: SavingsAccountData;
            };
        };
        post: {
            req: PostV1SavingsaccountsExternalIdByExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: PostSavingsAccountsAccountIdResponse;
            };
        };
        put: {
            req: PutV1SavingsaccountsExternalIdByExternalIdData;
            res: {
                /**
                 * OK
                 */
                200: PutSavingsAccountsAccountIdResponse;
            };
        };
    };
    '/v1/savingsaccounts/gsim': {
        post: {
            req: PostV1SavingsaccountsGsimData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/savingsaccounts/gsim/{parentAccountId}': {
        put: {
            req: PutV1SavingsaccountsGsimByParentAccountIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/savingsaccounts/gsimcommands/{parentAccountId}': {
        post: {
            req: PostV1SavingsaccountsGsimcommandsByParentAccountIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/savingsaccounts/template': {
        get: {
            req: GetV1SavingsaccountsTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetSavingsAccountsTemplateResponse;
            };
        };
    };
    '/v1/savingsaccounts/transactions/downloadtemplate': {
        get: {
            req: GetV1SavingsaccountsTransactionsDownloadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/savingsaccounts/transactions/uploadtemplate': {
        post: {
            req: PostV1SavingsaccountsTransactionsUploadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/savingsaccounts/uploadtemplate': {
        post: {
            req: PostV1SavingsaccountsUploadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/savingsaccounts/{accountId}': {
        delete: {
            req: DeleteV1SavingsaccountsByAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteSavingsAccountsAccountIdResponse;
            };
        };
        get: {
            req: GetV1SavingsaccountsByAccountIdData;
            res: {
                /**
                 * default response
                 */
                default: SavingsAccountData;
            };
        };
        post: {
            req: PostV1SavingsaccountsByAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: PostSavingsAccountsAccountIdResponse;
            };
        };
        put: {
            req: PutV1SavingsaccountsByAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: PutSavingsAccountsAccountIdResponse;
            };
        };
    };
    '/v1/savingsaccounts/{savingsAccountId}/charges': {
        get: {
            req: GetV1SavingsaccountsBySavingsAccountIdChargesData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetSavingsAccountsSavingsAccountIdChargesResponse>;
            };
        };
        post: {
            req: PostV1SavingsaccountsBySavingsAccountIdChargesData;
            res: {
                /**
                 * OK
                 */
                200: PostSavingsAccountsSavingsAccountIdChargesResponse;
            };
        };
    };
    '/v1/savingsaccounts/{savingsAccountId}/charges/template': {
        get: {
            req: GetV1SavingsaccountsBySavingsAccountIdChargesTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetSavingsAccountsSavingsAccountIdChargesTemplateResponse;
            };
        };
    };
    '/v1/savingsaccounts/{savingsAccountId}/charges/{savingsAccountChargeId}': {
        delete: {
            req: DeleteV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse;
            };
        };
        get: {
            req: GetV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: GetSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse;
            };
        };
        post: {
            req: PostV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse;
            };
        };
        put: {
            req: PutV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse;
            };
        };
    };
    '/v1/savingsaccounts/{savingsId}/onholdtransactions': {
        get: {
            req: GetV1SavingsaccountsBySavingsIdOnholdtransactionsData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/savingsaccounts/{savingsId}/transactions': {
        post: {
            req: PostV1SavingsaccountsBySavingsIdTransactionsData;
            res: {
                /**
                 * OK
                 */
                200: PostSavingsAccountTransactionsResponse;
            };
        };
    };
    '/v1/savingsaccounts/{savingsId}/transactions/query': {
        post: {
            req: PostV1SavingsaccountsBySavingsIdTransactionsQueryData;
            res: {
                /**
                 * OK
                 */
                200: string;
            };
        };
    };
    '/v1/savingsaccounts/{savingsId}/transactions/search': {
        get: {
            req: GetV1SavingsaccountsBySavingsIdTransactionsSearchData;
            res: {
                /**
                 * OK
                 */
                200: SavingsAccountTransactionsSearchResponse;
            };
        };
    };
    '/v1/savingsaccounts/{savingsId}/transactions/template': {
        get: {
            req: GetV1SavingsaccountsBySavingsIdTransactionsTemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/savingsaccounts/{savingsId}/transactions/{transactionId}': {
        get: {
            req: GetV1SavingsaccountsBySavingsIdTransactionsByTransactionIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        post: {
            req: PostV1SavingsaccountsBySavingsIdTransactionsByTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: Array<PostSavingsAccountBulkReversalTransactionsRequest>;
            };
        };
    };
    '/v1/savingsproducts': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetSavingsProductsResponse>;
            };
        };
        post: {
            req: PostV1SavingsproductsData;
            res: {
                /**
                 * OK
                 */
                200: PostSavingsProductsResponse;
            };
        };
    };
    '/v1/savingsproducts/template': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: GetSavingsProductsTemplateResponse;
            };
        };
    };
    '/v1/savingsproducts/{productId}': {
        delete: {
            req: DeleteV1SavingsproductsByProductIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteSavingsProductsProductIdResponse;
            };
        };
        get: {
            req: GetV1SavingsproductsByProductIdData;
            res: {
                /**
                 * OK
                 */
                200: GetSavingsProductsProductIdResponse;
            };
        };
        put: {
            req: PutV1SavingsproductsByProductIdData;
            res: {
                /**
                 * OK
                 */
                200: PutSavingsProductsProductIdResponse;
            };
        };
    };
    '/v1/scheduler': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: GetSchedulerResponse;
            };
        };
        post: {
            req: PostV1SchedulerData;
            res: {
                /**
                 * POST :  scheduler?command=start
                 *
                 *
                 * POST : scheduler?command=stop
                 */
                200: unknown;
            };
        };
    };
    '/v1/search': {
        get: {
            req: GetV1SearchData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetSearchResponse>;
            };
        };
    };
    '/v1/search/advance': {
        post: {
            req: PostV1SearchAdvanceData;
            res: {
                /**
                 * default response
                 */
                default: Array<AdHocSearchQueryData>;
            };
        };
    };
    '/v1/search/template': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: AdHocSearchQueryData;
            };
        };
    };
    '/v1/self/accounttransfers': {
        post: {
            req: PostV1SelfAccounttransfersData;
            res: {
                /**
                 * OK
                 */
                200: Array<PostNewTransferResponse>;
            };
        };
    };
    '/v1/self/accounttransfers/template': {
        get: {
            req: GetV1SelfAccounttransfersTemplateData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetAccountTransferTemplateResponse>;
            };
        };
    };
    '/v1/self/authentication': {
        post: {
            req: PostV1SelfAuthenticationData;
            res: {
                /**
                 * OK
                 */
                200: PostSelfAuthenticationResponse;
            };
        };
    };
    '/v1/self/beneficiaries/tpt': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetSelfBeneficiariesTPTResponse>;
            };
        };
        post: {
            req: PostV1SelfBeneficiariesTptData;
            res: {
                /**
                 * OK
                 */
                200: PostSelfBeneficiariesTPTResponse;
            };
        };
    };
    '/v1/self/beneficiaries/tpt/template': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: GetSelfBeneficiariesTPTTemplateResponse;
            };
        };
    };
    '/v1/self/beneficiaries/tpt/{beneficiaryId}': {
        delete: {
            req: DeleteV1SelfBeneficiariesTptByBeneficiaryIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteSelfBeneficiariesTPTBeneficiaryIdResponse;
            };
        };
        put: {
            req: PutV1SelfBeneficiariesTptByBeneficiaryIdData;
            res: {
                /**
                 * OK
                 */
                200: PutSelfBeneficiariesTPTBeneficiaryIdResponse;
            };
        };
    };
    '/v1/self/clients': {
        get: {
            req: GetV1SelfClientsData;
            res: {
                /**
                 * OK
                 */
                200: GetSelfClientsResponse;
            };
        };
    };
    '/v1/self/clients/{clientId}': {
        get: {
            req: GetV1SelfClientsByClientIdData;
            res: {
                /**
                 * OK
                 */
                200: GetSelfClientsClientIdResponse;
            };
        };
    };
    '/v1/self/clients/{clientId}/accounts': {
        get: {
            req: GetV1SelfClientsByClientIdAccountsData;
            res: {
                /**
                 * OK
                 */
                200: GetSelfClientsClientIdAccountsResponse;
            };
        };
    };
    '/v1/self/clients/{clientId}/charges': {
        get: {
            req: GetV1SelfClientsByClientIdChargesData;
            res: {
                /**
                 * OK
                 */
                200: GetSelfClientsClientIdChargesResponse;
            };
        };
    };
    '/v1/self/clients/{clientId}/charges/{chargeId}': {
        get: {
            req: GetV1SelfClientsByClientIdChargesByChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: GetSelfClientsClientIdChargesChargeIdResponse;
            };
        };
    };
    '/v1/self/clients/{clientId}/images': {
        delete: {
            req: DeleteV1SelfClientsByClientIdImagesData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
        get: {
            req: GetV1SelfClientsByClientIdImagesData;
            res: {
                /**
                 * OK
                 */
                200: unknown;
            };
        };
        post: {
            req: PostV1SelfClientsByClientIdImagesData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/self/clients/{clientId}/obligeedetails': {
        get: {
            req: GetV1SelfClientsByClientIdObligeedetailsData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/self/clients/{clientId}/transactions': {
        get: {
            req: GetV1SelfClientsByClientIdTransactionsData;
            res: {
                /**
                 * OK
                 */
                200: GetSelfClientsClientIdTransactionsResponse;
            };
        };
    };
    '/v1/self/clients/{clientId}/transactions/{transactionId}': {
        get: {
            req: GetV1SelfClientsByClientIdTransactionsByTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: GetSelfClientsClientIdTransactionsTransactionIdResponse;
            };
        };
    };
    '/v1/self/device/registration': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        post: {
            req: PostV1SelfDeviceRegistrationData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/self/device/registration/client/{clientId}': {
        get: {
            req: GetV1SelfDeviceRegistrationClientByClientIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/self/device/registration/{id}': {
        delete: {
            req: DeleteV1SelfDeviceRegistrationByIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        get: {
            req: GetV1SelfDeviceRegistrationByIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        put: {
            req: PutV1SelfDeviceRegistrationByIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/self/loanproducts': {
        get: {
            req: GetV1SelfLoanproductsData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/self/loanproducts/{productId}': {
        get: {
            req: GetV1SelfLoanproductsByProductIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/self/loans': {
        post: {
            req: PostV1SelfLoansData;
            res: {
                /**
                 * OK
                 */
                200: PostSelfLoansResponse;
            };
        };
    };
    '/v1/self/loans/template': {
        get: {
            req: GetV1SelfLoansTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetSelfLoansTemplateResponse;
            };
        };
    };
    '/v1/self/loans/{loanId}': {
        get: {
            req: GetV1SelfLoansByLoanIdData;
            res: {
                /**
                 * OK
                 */
                200: GetSelfLoansLoanIdResponse;
            };
        };
        post: {
            req: PostV1SelfLoansByLoanIdData;
            res: {
                /**
                 * OK
                 */
                200: PostSelfLoansLoanIdResponse;
            };
        };
        put: {
            req: PutV1SelfLoansByLoanIdData;
            res: {
                /**
                 * OK
                 */
                200: PutSelfLoansLoanIdResponse;
            };
        };
    };
    '/v1/self/loans/{loanId}/charges': {
        get: {
            req: GetV1SelfLoansByLoanIdChargesData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetSelfLoansLoanIdChargesResponse>;
            };
        };
    };
    '/v1/self/loans/{loanId}/charges/{chargeId}': {
        get: {
            req: GetV1SelfLoansByLoanIdChargesByChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: GetSelfLoansLoanIdChargesResponse;
            };
        };
    };
    '/v1/self/loans/{loanId}/guarantors': {
        get: {
            req: GetV1SelfLoansByLoanIdGuarantorsData;
            res: {
                /**
                 * default response
                 */
                default: Array<GuarantorData>;
            };
        };
    };
    '/v1/self/loans/{loanId}/transactions/{transactionId}': {
        get: {
            req: GetV1SelfLoansByLoanIdTransactionsByTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: GetSelfLoansLoanIdTransactionsTransactionIdResponse;
            };
        };
    };
    '/v1/self/pockets': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: GetAccountsLinkedToPocketResponse;
            };
        };
        post: {
            req: PostV1SelfPocketsData;
            res: {
                /**
                 * OK
                 */
                200: PostLinkDelinkAccountsToFromPocketResponse;
            };
        };
    };
    '/v1/self/products/share': {
        get: {
            req: GetV1SelfProductsShareData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/self/products/share/{productId}': {
        get: {
            req: GetV1SelfProductsShareByProductIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/self/registration': {
        post: {
            req: PostV1SelfRegistrationData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/self/registration/user': {
        post: {
            req: PostV1SelfRegistrationUserData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/self/runreports/{reportName}': {
        get: {
            req: GetV1SelfRunreportsByReportNameData;
            res: {
                /**
                 * OK
                 */
                200: GetRunReportResponse;
            };
        };
    };
    '/v1/self/savingsaccounts': {
        post: {
            req: PostV1SelfSavingsaccountsData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/self/savingsaccounts/template': {
        get: {
            req: GetV1SelfSavingsaccountsTemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/self/savingsaccounts/{accountId}': {
        get: {
            req: GetV1SelfSavingsaccountsByAccountIdData;
            res: {
                /**
                 * OK
                 */
                200: GetSelfSavingsAccountsResponse;
            };
        };
        put: {
            req: PutV1SelfSavingsaccountsByAccountIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/self/savingsaccounts/{accountId}/charges': {
        get: {
            req: GetV1SelfSavingsaccountsByAccountIdChargesData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetSelfSavingsAccountsAccountIdChargesResponse>;
            };
        };
    };
    '/v1/self/savingsaccounts/{accountId}/charges/{savingsAccountChargeId}': {
        get: {
            req: GetV1SelfSavingsaccountsByAccountIdChargesBySavingsAccountChargeIdData;
            res: {
                /**
                 * OK
                 */
                200: GetSelfSavingsAccountsAccountIdChargesSavingsAccountChargeIdResponse;
            };
        };
    };
    '/v1/self/savingsaccounts/{accountId}/transactions/{transactionId}': {
        get: {
            req: GetV1SelfSavingsaccountsByAccountIdTransactionsByTransactionIdData;
            res: {
                /**
                 * OK
                 */
                200: GetSelfSavingsAccountsAccountIdTransactionsTransactionIdResponse;
            };
        };
    };
    '/v1/self/savingsproducts': {
        get: {
            req: GetV1SelfSavingsproductsData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/self/savingsproducts/{productId}': {
        get: {
            req: GetV1SelfSavingsproductsByProductIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/self/shareaccounts': {
        post: {
            req: PostV1SelfShareaccountsData;
            res: {
                /**
                 * OK
                 */
                200: Array<PostNewShareApplicationResponse>;
            };
        };
    };
    '/v1/self/shareaccounts/template': {
        get: {
            req: GetV1SelfShareaccountsTemplateData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetShareAccountsClientIdProductIdResponse>;
            };
        };
    };
    '/v1/self/shareaccounts/{accountId}': {
        get: {
            req: GetV1SelfShareaccountsByAccountIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/self/surveys': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: Array<SurveyData>;
            };
        };
    };
    '/v1/self/surveys/scorecards/clients/{clientId}': {
        get: {
            req: GetV1SelfSurveysScorecardsClientsByClientIdData;
            res: {
                /**
                 * default response
                 */
                default: Array<ScorecardData>;
            };
        };
    };
    '/v1/self/surveys/scorecards/{surveyId}': {
        post: {
            req: PostV1SelfSurveysScorecardsBySurveyIdData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/self/user': {
        put: {
            req: PutV1SelfUserData;
            res: {
                /**
                 * OK
                 */
                200: PutSelfUserResponse;
            };
        };
    };
    '/v1/self/userdetails': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: GetSelfUserDetailsResponse;
            };
        };
    };
    '/v1/shareproduct/{productId}/dividend': {
        get: {
            req: GetV1ShareproductByProductIdDividendData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        post: {
            req: PostV1ShareproductByProductIdDividendData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/shareproduct/{productId}/dividend/{dividendId}': {
        delete: {
            req: DeleteV1ShareproductByProductIdDividendByDividendIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        get: {
            req: GetV1ShareproductByProductIdDividendByDividendIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        put: {
            req: PutV1ShareproductByProductIdDividendByDividendIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/sms': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: Array<SmsData>;
            };
        };
        post: {
            req: PostV1SmsData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/sms/{campaignId}/messageByStatus': {
        get: {
            req: GetV1SmsByCampaignIdMessageByStatusData;
            res: {
                /**
                 * default response
                 */
                default: PageSmsData;
            };
        };
    };
    '/v1/sms/{resourceId}': {
        delete: {
            req: DeleteV1SmsByResourceIdData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
        get: {
            req: GetV1SmsByResourceIdData;
            res: {
                /**
                 * default response
                 */
                default: SmsData;
            };
        };
        put: {
            req: PutV1SmsByResourceIdData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/staff': {
        get: {
            req: GetV1StaffData;
            res: {
                /**
                 * default response
                 */
                default: Array<StaffData>;
            };
        };
        post: {
            req: PostV1StaffData;
            res: {
                /**
                 * OK
                 */
                200: CreateStaffResponse;
            };
        };
    };
    '/v1/staff/downloadtemplate': {
        get: {
            req: GetV1StaffDownloadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/staff/uploadtemplate': {
        post: {
            req: PostV1StaffUploadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: number;
            };
        };
    };
    '/v1/staff/{staffId}': {
        get: {
            req: GetV1StaffByStaffIdData;
            res: {
                /**
                 * default response
                 */
                default: StaffData;
            };
        };
        put: {
            req: PutV1StaffByStaffIdData;
            res: {
                /**
                 * OK
                 */
                200: UpdateStaffResponse;
            };
        };
    };
    '/v1/standinginstructionrunhistory': {
        get: {
            req: GetV1StandinginstructionrunhistoryData;
            res: {
                /**
                 * OK
                 */
                200: GetStandingInstructionRunHistoryResponse;
            };
        };
    };
    '/v1/standinginstructions': {
        get: {
            req: GetV1StandinginstructionsData;
            res: {
                /**
                 * OK
                 */
                200: GetStandingInstructionsResponse;
            };
        };
        post: {
            req: PostV1StandinginstructionsData;
            res: {
                /**
                 * OK
                 */
                200: PostStandingInstructionsResponse;
            };
        };
    };
    '/v1/standinginstructions/template': {
        get: {
            req: GetV1StandinginstructionsTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetStandingInstructionsTemplateResponse;
            };
        };
    };
    '/v1/standinginstructions/{standingInstructionId}': {
        get: {
            req: GetV1StandinginstructionsByStandingInstructionIdData;
            res: {
                /**
                 * OK
                 */
                200: GetStandingInstructionsStandingInstructionIdResponse;
            };
        };
        put: {
            req: PutV1StandinginstructionsByStandingInstructionIdData;
            res: {
                /**
                 * OK
                 */
                200: PutStandingInstructionsStandingInstructionIdResponse;
            };
        };
    };
    '/v1/survey': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetSurveyResponse>;
            };
        };
    };
    '/v1/survey/register/{surveyName}/{apptable}': {
        put: {
            req: PutV1SurveyRegisterBySurveyNameByApptableData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/survey/{surveyName}': {
        get: {
            req: GetV1SurveyBySurveyNameData;
            res: {
                /**
                 * OK
                 */
                200: GetSurveyResponse;
            };
        };
    };
    '/v1/survey/{surveyName}/{apptableId}': {
        post: {
            req: PostV1SurveyBySurveyNameByApptableIdData;
            res: {
                /**
                 * OK
                 */
                200: PostSurveySurveyNameApptableIdResponse;
            };
        };
    };
    '/v1/survey/{surveyName}/{clientId}': {
        get: {
            req: GetV1SurveyBySurveyNameByClientIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/survey/{surveyName}/{clientId}/{entryId}': {
        get: {
            req: GetV1SurveyBySurveyNameByClientIdByEntryIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/survey/{surveyName}/{clientId}/{fulfilledId}': {
        delete: {
            req: DeleteV1SurveyBySurveyNameByClientIdByFulfilledIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/surveys': {
        get: {
            req: GetV1SurveysData;
            res: {
                /**
                 * OK
                 */
                200: Array<SurveyData>;
            };
        };
        post: {
            req: PostV1SurveysData;
            res: {
                /**
                 * OK
                 */
                200: unknown;
            };
        };
    };
    '/v1/surveys/{id}': {
        get: {
            req: GetV1SurveysByIdData;
            res: {
                /**
                 * OK
                 */
                200: SurveyData;
            };
        };
        post: {
            req: PostV1SurveysByIdData;
            res: {
                /**
                 * OK
                 */
                200: unknown;
            };
        };
        put: {
            req: PutV1SurveysByIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/surveys/scorecards/clients/{clientId}': {
        get: {
            req: GetV1SurveysScorecardsClientsByClientIdData;
            res: {
                /**
                 * default response
                 */
                default: Array<ScorecardData>;
            };
        };
    };
    '/v1/surveys/scorecards/{surveyId}': {
        get: {
            req: GetV1SurveysScorecardsBySurveyIdData;
            res: {
                /**
                 * OK
                 */
                200: Array<Scorecard>;
            };
        };
        post: {
            req: PostV1SurveysScorecardsBySurveyIdData;
            res: {
                /**
                 * OK
                 */
                200: unknown;
            };
        };
    };
    '/v1/surveys/scorecards/{surveyId}/clients/{clientId}': {
        get: {
            req: GetV1SurveysScorecardsBySurveyIdClientsByClientIdData;
            res: {
                /**
                 * default response
                 */
                default: Array<ScorecardData>;
            };
        };
    };
    '/v1/surveys/{surveyId}/lookuptables': {
        get: {
            req: GetV1SurveysBySurveyIdLookuptablesData;
            res: {
                /**
                 * OK
                 */
                200: Array<LookupTableData>;
            };
        };
        post: {
            req: PostV1SurveysBySurveyIdLookuptablesData;
            res: {
                /**
                 * OK
                 */
                200: unknown;
            };
        };
    };
    '/v1/surveys/{surveyId}/lookuptables/{key}': {
        get: {
            req: GetV1SurveysBySurveyIdLookuptablesByKeyData;
            res: {
                /**
                 * OK
                 */
                200: LookupTableData;
            };
        };
    };
    '/v1/taxes/component': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetTaxesComponentsResponse>;
            };
        };
        post: {
            req: PostV1TaxesComponentData;
            res: {
                /**
                 * OK
                 */
                200: PostTaxesComponentsResponse;
            };
        };
    };
    '/v1/taxes/component/template': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: TaxComponentData;
            };
        };
    };
    '/v1/taxes/component/{taxComponentId}': {
        get: {
            req: GetV1TaxesComponentByTaxComponentIdData;
            res: {
                /**
                 * OK
                 */
                200: GetTaxesComponentsResponse;
            };
        };
        put: {
            req: PutV1TaxesComponentByTaxComponentIdData;
            res: {
                /**
                 * OK
                 */
                200: PutTaxesComponentsTaxComponentIdResponse;
            };
        };
    };
    '/v1/taxes/group': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetTaxesGroupResponse>;
            };
        };
        post: {
            req: PostV1TaxesGroupData;
            res: {
                /**
                 * OK
                 */
                200: PostTaxesGroupResponse;
            };
        };
    };
    '/v1/taxes/group/template': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: TaxGroupData;
            };
        };
    };
    '/v1/taxes/group/{taxGroupId}': {
        get: {
            req: GetV1TaxesGroupByTaxGroupIdData;
            res: {
                /**
                 * OK
                 */
                200: GetTaxesGroupResponse;
            };
        };
        put: {
            req: PutV1TaxesGroupByTaxGroupIdData;
            res: {
                /**
                 * OK
                 */
                200: PutTaxesGroupTaxGroupIdResponse;
            };
        };
    };
    '/v1/tellers': {
        get: {
            req: GetV1TellersData;
            res: {
                /**
                 * OK
                 */
                200: Array<GetTellersResponse>;
            };
        };
        post: {
            req: PostV1TellersData;
            res: {
                /**
                 * OK
                 */
                200: PostTellersResponse;
            };
        };
    };
    '/v1/tellers/{tellerId}': {
        delete: {
            req: DeleteV1TellersByTellerIdData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
        get: {
            req: GetV1TellersByTellerIdData;
            res: {
                /**
                 * OK
                 */
                200: GetTellersResponse;
            };
        };
        put: {
            req: PutV1TellersByTellerIdData;
            res: {
                /**
                 * OK
                 */
                200: PutTellersResponse;
            };
        };
    };
    '/v1/tellers/{tellerId}/cashiers': {
        get: {
            req: GetV1TellersByTellerIdCashiersData;
            res: {
                /**
                 * OK
                 */
                200: GetTellersTellerIdCashiersResponse;
            };
        };
        post: {
            req: PostV1TellersByTellerIdCashiersData;
            res: {
                /**
                 * OK
                 */
                200: PostTellersTellerIdCashiersResponse;
            };
        };
    };
    '/v1/tellers/{tellerId}/cashiers/template': {
        get: {
            req: GetV1TellersByTellerIdCashiersTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetTellersTellerIdCashiersTemplateResponse;
            };
        };
    };
    '/v1/tellers/{tellerId}/cashiers/{cashierId}': {
        delete: {
            req: DeleteV1TellersByTellerIdCashiersByCashierIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteTellersTellerIdCashiersCashierIdResponse;
            };
        };
        get: {
            req: GetV1TellersByTellerIdCashiersByCashierIdData;
            res: {
                /**
                 * OK
                 */
                200: GetTellersTellerIdCashiersCashierIdResponse;
            };
        };
        put: {
            req: PutV1TellersByTellerIdCashiersByCashierIdData;
            res: {
                /**
                 * OK
                 */
                200: PutTellersTellerIdCashiersCashierIdResponse;
            };
        };
    };
    '/v1/tellers/{tellerId}/cashiers/{cashierId}/allocate': {
        post: {
            req: PostV1TellersByTellerIdCashiersByCashierIdAllocateData;
            res: {
                /**
                 * OK
                 */
                200: PostTellersTellerIdCashiersCashierIdAllocateResponse;
            };
        };
    };
    '/v1/tellers/{tellerId}/cashiers/{cashierId}/settle': {
        post: {
            req: PostV1TellersByTellerIdCashiersByCashierIdSettleData;
            res: {
                /**
                 * OK
                 */
                200: PostTellersTellerIdCashiersCashierIdSettleResponse;
            };
        };
    };
    '/v1/tellers/{tellerId}/cashiers/{cashierId}/summaryandtransactions': {
        get: {
            req: GetV1TellersByTellerIdCashiersByCashierIdSummaryandtransactionsData;
            res: {
                /**
                 * OK
                 */
                200: GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse;
            };
        };
    };
    '/v1/tellers/{tellerId}/cashiers/{cashierId}/transactions': {
        get: {
            req: GetV1TellersByTellerIdCashiersByCashierIdTransactionsData;
            res: {
                /**
                 * OK
                 */
                200: GetTellersTellerIdCashiersCashiersIdTransactionsResponse;
            };
        };
    };
    '/v1/tellers/{tellerId}/cashiers/{cashierId}/transactions/template': {
        get: {
            req: GetV1TellersByTellerIdCashiersByCashierIdTransactionsTemplateData;
            res: {
                /**
                 * OK
                 */
                200: GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse;
            };
        };
    };
    '/v1/tellers/{tellerId}/journals': {
        get: {
            req: GetV1TellersByTellerIdJournalsData;
            res: {
                /**
                 * default response
                 */
                default: Array<TellerJournalData>;
            };
        };
    };
    '/v1/tellers/{tellerId}/transactions': {
        get: {
            req: GetV1TellersByTellerIdTransactionsData;
            res: {
                /**
                 * default response
                 */
                default: Array<TellerTransactionData>;
            };
        };
    };
    '/v1/tellers/{tellerId}/transactions/{transactionId}': {
        get: {
            req: GetV1TellersByTellerIdTransactionsByTransactionIdData;
            res: {
                /**
                 * default response
                 */
                default: TellerTransactionData;
            };
        };
    };
    '/v1/templates': {
        get: {
            req: GetV1TemplatesData;
            res: {
                /**
                 * OK
                 */
                200: GetTemplatesResponse;
            };
        };
        post: {
            req: PostV1TemplatesData;
            res: {
                /**
                 * OK
                 */
                200: PostTemplatesResponse;
            };
        };
    };
    '/v1/templates/template': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: GetTemplatesTemplateResponse;
            };
        };
    };
    '/v1/templates/{templateId}': {
        delete: {
            req: DeleteV1TemplatesByTemplateIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteTemplatesTemplateIdResponse;
            };
        };
        get: {
            req: GetV1TemplatesByTemplateIdData;
            res: {
                /**
                 * OK
                 */
                200: GetTemplatesTemplateIdResponse;
            };
        };
        post: {
            req: PostV1TemplatesByTemplateIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        put: {
            req: PutV1TemplatesByTemplateIdData;
            res: {
                /**
                 * OK
                 */
                200: PutTemplatesTemplateIdResponse;
            };
        };
    };
    '/v1/templates/{templateId}/template': {
        get: {
            req: GetV1TemplatesByTemplateIdTemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/twofactor': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        post: {
            req: PostV1TwofactorData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/twofactor/invalidate': {
        post: {
            req: PostV1TwofactorInvalidateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/twofactor/validate': {
        post: {
            req: PostV1TwofactorValidateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/userdetails': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: GetUserDetailsResponse;
            };
        };
    };
    '/v1/users': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<GetUsersResponse>;
            };
        };
        post: {
            req: PostV1UsersData;
            res: {
                /**
                 * OK
                 */
                200: PostUsersResponse;
            };
        };
    };
    '/v1/users/downloadtemplate': {
        get: {
            req: GetV1UsersDownloadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: unknown;
            };
        };
    };
    '/v1/users/template': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: GetUsersTemplateResponse;
            };
        };
    };
    '/v1/users/uploadtemplate': {
        post: {
            req: PostV1UsersUploadtemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/users/{userId}': {
        delete: {
            req: DeleteV1UsersByUserIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteUsersUserIdResponse;
            };
        };
        get: {
            req: GetV1UsersByUserIdData;
            res: {
                /**
                 * OK
                 */
                200: GetUsersUserIdResponse;
            };
        };
        put: {
            req: PutV1UsersByUserIdData;
            res: {
                /**
                 * OK
                 */
                200: PutUsersUserIdResponse;
            };
        };
    };
    '/v1/users/{userId}/pwd': {
        post: {
            req: PostV1UsersByUserIdPwdData;
            res: {
                /**
                 * OK
                 */
                200: ChangePwdUsersUserIdResponse;
            };
        };
    };
    '/v1/workingdays': {
        get: {
            res: {
                /**
                 * default response
                 */
                default: WorkingDaysData;
            };
        };
        put: {
            req: PutV1WorkingdaysData;
            res: {
                /**
                 * OK
                 */
                200: PutWorkingDaysResponse;
            };
        };
    };
    '/v1/workingdays/template': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: GetWorkingDaysTemplateResponse;
            };
        };
    };
    '/v1/{entityType}/{entityId}/calendars': {
        get: {
            req: GetV1ByEntityTypeByEntityIdCalendarsData;
            res: {
                /**
                 * default response
                 */
                default: Array<CalendarData>;
            };
        };
        post: {
            req: PostV1ByEntityTypeByEntityIdCalendarsData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/{entityType}/{entityId}/calendars/template': {
        get: {
            req: GetV1ByEntityTypeByEntityIdCalendarsTemplateData;
            res: {
                /**
                 * default response
                 */
                default: CalendarData;
            };
        };
    };
    '/v1/{entityType}/{entityId}/calendars/{calendarId}': {
        delete: {
            req: DeleteV1ByEntityTypeByEntityIdCalendarsByCalendarIdData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
        get: {
            req: GetV1ByEntityTypeByEntityIdCalendarsByCalendarIdData;
            res: {
                /**
                 * default response
                 */
                default: CalendarData;
            };
        };
        put: {
            req: PutV1ByEntityTypeByEntityIdCalendarsByCalendarIdData;
            res: {
                /**
                 * default response
                 */
                default: CommandProcessingResult;
            };
        };
    };
    '/v1/{entityType}/{entityId}/documents': {
        get: {
            req: GetV1ByEntityTypeByEntityIdDocumentsData;
            res: {
                /**
                 * default response
                 */
                default: Array<DocumentData>;
            };
        };
        post: {
            req: PostV1ByEntityTypeByEntityIdDocumentsData;
            res: {
                /**
                 * Not Shown (multi-part form data)
                 */
                200: PostEntityTypeEntityIdDocumentsResponse;
            };
        };
    };
    '/v1/{entityType}/{entityId}/documents/{documentId}': {
        delete: {
            req: DeleteV1ByEntityTypeByEntityIdDocumentsByDocumentIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteEntityTypeEntityIdDocumentsResponse;
            };
        };
        get: {
            req: GetV1ByEntityTypeByEntityIdDocumentsByDocumentIdData;
            res: {
                /**
                 * default response
                 */
                default: DocumentData;
            };
        };
        put: {
            req: PutV1ByEntityTypeByEntityIdDocumentsByDocumentIdData;
            res: {
                /**
                 * Not Shown (multi-part form data)
                 */
                200: PutEntityTypeEntityIdDocumentsResponse;
            };
        };
    };
    '/v1/{entityType}/{entityId}/documents/{documentId}/attachment': {
        get: {
            req: GetV1ByEntityTypeByEntityIdDocumentsByDocumentIdAttachmentData;
            res: {
                /**
                 * Not Shown: The corresponding Binary file
                 */
                200: unknown;
            };
        };
    };
    '/v1/{entityType}/{entityId}/meetings': {
        get: {
            req: GetV1ByEntityTypeByEntityIdMeetingsData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        post: {
            req: PostV1ByEntityTypeByEntityIdMeetingsData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/{entityType}/{entityId}/meetings/template': {
        get: {
            req: GetV1ByEntityTypeByEntityIdMeetingsTemplateData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/{entityType}/{entityId}/meetings/{meetingId}': {
        delete: {
            req: DeleteV1ByEntityTypeByEntityIdMeetingsByMeetingIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        get: {
            req: GetV1ByEntityTypeByEntityIdMeetingsByMeetingIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        post: {
            req: PostV1ByEntityTypeByEntityIdMeetingsByMeetingIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
        put: {
            req: PutV1ByEntityTypeByEntityIdMeetingsByMeetingIdData;
            res: {
                /**
                 * default response
                 */
                default: string;
            };
        };
    };
    '/v1/{resourceType}/{resourceId}/notes': {
        get: {
            req: GetV1ByResourceTypeByResourceIdNotesData;
            res: {
                /**
                 * default response
                 */
                default: Array<NoteData>;
            };
        };
        post: {
            req: PostV1ByResourceTypeByResourceIdNotesData;
            res: {
                /**
                 * OK
                 */
                200: PostResourceTypeResourceIdNotesResponse;
            };
        };
    };
    '/v1/{resourceType}/{resourceId}/notes/{noteId}': {
        delete: {
            req: DeleteV1ByResourceTypeByResourceIdNotesByNoteIdData;
            res: {
                /**
                 * OK
                 */
                200: DeleteResourceTypeResourceIdNotesNoteIdResponse;
            };
        };
        get: {
            req: GetV1ByResourceTypeByResourceIdNotesByNoteIdData;
            res: {
                /**
                 * default response
                 */
                default: NoteData;
            };
        };
        put: {
            req: PutV1ByResourceTypeByResourceIdNotesByNoteIdData;
            res: {
                /**
                 * OK
                 */
                200: PutResourceTypeResourceIdNotesNoteIdResponse;
            };
        };
    };
    '/v2/clients/search': {
        post: {
            req: PostV2ClientsSearchData;
            res: {
                /**
                 * default response
                 */
                default: PageClientSearchData;
            };
        };
    };
};