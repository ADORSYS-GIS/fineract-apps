// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetApplicationWadlResponse, GetApplicationWadlByPathData, GetApplicationWadlByPathResponse, PostV1CreditBureauIntegrationAddCreditReportData, PostV1CreditBureauIntegrationAddCreditReportResponse, PostV1CreditBureauIntegrationCreditReportData, PostV1CreditBureauIntegrationCreditReportResponse, GetV1CreditBureauIntegrationCreditReportByCreditBureauIdData, GetV1CreditBureauIntegrationCreditReportByCreditBureauIdResponse, DeleteV1CreditBureauIntegrationDeleteCreditReportByCreditBureauIdData, DeleteV1CreditBureauIntegrationDeleteCreditReportByCreditBureauIdResponse, PostV1CreditBureauIntegrationSaveCreditReportData, PostV1CreditBureauIntegrationSaveCreditReportResponse, GetV1EchoResponse, GetV1EmailResponse, PostV1EmailData, PostV1EmailResponse, GetV1EmailCampaignResponse, PostV1EmailCampaignData, PostV1EmailCampaignResponse, PostV1EmailCampaignPreviewData, PostV1EmailCampaignPreviewResponse, GetV1EmailCampaignTemplateResponse, GetV1EmailCampaignTemplateByResourceIdData, GetV1EmailCampaignTemplateByResourceIdResponse, DeleteV1EmailCampaignByResourceIdData, DeleteV1EmailCampaignByResourceIdResponse, GetV1EmailCampaignByResourceIdData, GetV1EmailCampaignByResourceIdResponse, PostV1EmailCampaignByResourceIdData, PostV1EmailCampaignByResourceIdResponse, PutV1EmailCampaignByResourceIdData, PutV1EmailCampaignByResourceIdResponse, GetV1EmailConfigurationResponse, PutV1EmailConfigurationData, PutV1EmailConfigurationResponse, GetV1EmailFailedEmailData, GetV1EmailFailedEmailResponse, GetV1EmailMessageByStatusData, GetV1EmailMessageByStatusResponse, GetV1EmailPendingEmailData, GetV1EmailPendingEmailResponse, GetV1EmailSentEmailData, GetV1EmailSentEmailResponse, DeleteV1EmailByResourceIdData, DeleteV1EmailByResourceIdResponse, GetV1EmailByResourceIdData, GetV1EmailByResourceIdResponse, PutV1EmailByResourceIdData, PutV1EmailByResourceIdResponse, GetV1InternalClientByClientIdAuditData, GetV1InternalClientByClientIdAuditResponse, PostV1InternalCobFastForwardCobDateOfLoanByLoanIdData, PostV1InternalCobFastForwardCobDateOfLoanByLoanIdResponse, GetV1InternalCobPartitionsByPartitionSizeData, GetV1InternalCobPartitionsByPartitionSizeResponse, PutV1InternalConfigurationsNameByConfigNameValueByConfigValueData, PutV1InternalConfigurationsNameByConfigNameValueByConfigValueResponse, DeleteV1InternalExternaleventsResponse, GetV1InternalExternaleventsData, GetV1InternalExternaleventsResponse, GetV1InternalLoanStatusByStatusIdData, GetV1InternalLoanStatusByStatusIdResponse, GetV1InternalLoanByLoanIdAdvancedPaymentAllocationRulesData, GetV1InternalLoanByLoanIdAdvancedPaymentAllocationRulesResponse, GetV1InternalLoanByLoanIdAuditData, GetV1InternalLoanByLoanIdAuditResponse, GetV1InternalLoanByLoanIdTransactionByTransactionIdAuditData, GetV1InternalLoanByLoanIdTransactionByTransactionIdAuditResponse, PostV1InternalLoansByLoanIdPlaceLockByLockOwnerData, PostV1InternalLoansByLoanIdPlaceLockByLockOwnerResponse, GetV1OfficetransactionsResponse, PostV1OfficetransactionsData, PostV1OfficetransactionsResponse, GetV1OfficetransactionsTemplateResponse, DeleteV1OfficetransactionsByTransactionIdData, DeleteV1OfficetransactionsByTransactionIdResponse, GetV1SmscampaignsData, GetV1SmscampaignsResponse, PostV1SmscampaignsData, PostV1SmscampaignsResponse, PostV1SmscampaignsPreviewData, PostV1SmscampaignsPreviewResponse, GetV1SmscampaignsTemplateResponse, DeleteV1SmscampaignsByCampaignIdData, DeleteV1SmscampaignsByCampaignIdResponse, PostV1SmscampaignsByCampaignIdData, PostV1SmscampaignsByCampaignIdResponse, PutV1SmscampaignsByCampaignIdData, PutV1SmscampaignsByCampaignIdResponse, GetV1SmscampaignsByResourceIdData, GetV1SmscampaignsByResourceIdResponse, GetV1TwofactorConfigureResponse, PutV1TwofactorConfigureData, PutV1TwofactorConfigureResponse, DeleteV1ByEntityByEntityIdImagesData, DeleteV1ByEntityByEntityIdImagesResponse, GetV1ByEntityByEntityIdImagesData, GetV1ByEntityByEntityIdImagesResponse, PostV1ByEntityByEntityIdImagesData, PostV1ByEntityByEntityIdImagesResponse, PutV1ByEntityByEntityIdImagesData, PutV1ByEntityByEntityIdImagesResponse, GetV1CreditBureauConfigurationResponse, GetV1CreditBureauConfigurationConfigByOrganisationCreditBureauIdData, GetV1CreditBureauConfigurationConfigByOrganisationCreditBureauIdResponse, PutV1CreditBureauConfigurationConfigurationByConfigurationIdData, PutV1CreditBureauConfigurationConfigurationByConfigurationIdResponse, PostV1CreditBureauConfigurationConfigurationByCreditBureauIdData, PostV1CreditBureauConfigurationConfigurationByCreditBureauIdResponse, GetV1CreditBureauConfigurationLoanProductResponse, GetV1CreditBureauConfigurationLoanProductByLoanProductIdData, GetV1CreditBureauConfigurationLoanProductByLoanProductIdResponse, GetV1CreditBureauConfigurationMappingsResponse, PutV1CreditBureauConfigurationMappingsData, PutV1CreditBureauConfigurationMappingsResponse, PostV1CreditBureauConfigurationMappingsByOrganisationCreditBureauIdData, PostV1CreditBureauConfigurationMappingsByOrganisationCreditBureauIdResponse, GetV1CreditBureauConfigurationOrganisationCreditBureauResponse, PutV1CreditBureauConfigurationOrganisationCreditBureauData, PutV1CreditBureauConfigurationOrganisationCreditBureauResponse, PostV1CreditBureauConfigurationOrganisationCreditBureauByOrganisationCreditBureauIdData, PostV1CreditBureauConfigurationOrganisationCreditBureauByOrganisationCreditBureauIdResponse, GetV1AccountingrulesResponse, PostV1AccountingrulesData, PostV1AccountingrulesResponse, GetV1AccountingrulesTemplateResponse, DeleteV1AccountingrulesByAccountingRuleIdData, DeleteV1AccountingrulesByAccountingRuleIdResponse, GetV1AccountingrulesByAccountingRuleIdData, GetV1AccountingrulesByAccountingRuleIdResponse, PutV1AccountingrulesByAccountingRuleIdData, PutV1AccountingrulesByAccountingRuleIdResponse, GetV1AccountnumberformatsResponse, PostV1AccountnumberformatsData, PostV1AccountnumberformatsResponse, GetV1AccountnumberformatsTemplateResponse, DeleteV1AccountnumberformatsByAccountNumberFormatIdData, DeleteV1AccountnumberformatsByAccountNumberFormatIdResponse, GetV1AccountnumberformatsByAccountNumberFormatIdData, GetV1AccountnumberformatsByAccountNumberFormatIdResponse, PutV1AccountnumberformatsByAccountNumberFormatIdData, PutV1AccountnumberformatsByAccountNumberFormatIdResponse, GetV1AccountsByTypeData, GetV1AccountsByTypeResponse, PostV1AccountsByTypeData, PostV1AccountsByTypeResponse, GetV1AccountsByTypeDownloadtemplateData, GetV1AccountsByTypeDownloadtemplateResponse, GetV1AccountsByTypeTemplateData, GetV1AccountsByTypeTemplateResponse, PostV1AccountsByTypeUploadtemplateData, PostV1AccountsByTypeUploadtemplateResponse, GetV1AccountsByTypeByAccountIdData, GetV1AccountsByTypeByAccountIdResponse, PostV1AccountsByTypeByAccountIdData, PostV1AccountsByTypeByAccountIdResponse, PutV1AccountsByTypeByAccountIdData, PutV1AccountsByTypeByAccountIdResponse, GetV1AccounttransfersData, GetV1AccounttransfersResponse, PostV1AccounttransfersData, PostV1AccounttransfersResponse, PostV1AccounttransfersRefundByTransferData, PostV1AccounttransfersRefundByTransferResponse, GetV1AccounttransfersTemplateData, GetV1AccounttransfersTemplateResponse, GetV1AccounttransfersTemplateRefundByTransferData, GetV1AccounttransfersTemplateRefundByTransferResponse, GetV1AccounttransfersByTransferIdData, GetV1AccounttransfersByTransferIdResponse, GetV1AdhocqueryResponse, PostV1AdhocqueryData, PostV1AdhocqueryResponse, GetV1AdhocqueryTemplateResponse, DeleteV1AdhocqueryByAdHocIdData, DeleteV1AdhocqueryByAdHocIdResponse, GetV1AdhocqueryByAdHocIdData, GetV1AdhocqueryByAdHocIdResponse, PutV1AdhocqueryByAdHocIdData, PutV1AdhocqueryByAdHocIdResponse, GetV1AuditsData, GetV1AuditsResponse, GetV1AuditsSearchtemplateResponse, GetV1AuditsByAuditIdData, GetV1AuditsByAuditIdResponse, PostV1AuthenticationData, PostV1AuthenticationResponse, PostV1BatchesData, PostV1BatchesResponse, GetV1BusinessdateResponse, PostV1BusinessdateData, PostV1BusinessdateResponse, GetV1BusinessdateByTypeData, GetV1BusinessdateByTypeResponse, GetV1CachesResponse, PutV1CachesData, PutV1CachesResponse, GetV1CashiersData, GetV1CashiersResponse, GetV1CashiersjournalData, GetV1CashiersjournalResponse, GetV1CentersData, GetV1CentersResponse, PostV1CentersData, PostV1CentersResponse, GetV1CentersDownloadtemplateData, GetV1CentersDownloadtemplateResponse, GetV1CentersTemplateData, GetV1CentersTemplateResponse, PostV1CentersUploadtemplateData, PostV1CentersUploadtemplateResponse, DeleteV1CentersByCenterIdData, DeleteV1CentersByCenterIdResponse, GetV1CentersByCenterIdData, GetV1CentersByCenterIdResponse, PostV1CentersByCenterIdData, PostV1CentersByCenterIdResponse, PutV1CentersByCenterIdData, PutV1CentersByCenterIdResponse, GetV1CentersByCenterIdAccountsData, GetV1CentersByCenterIdAccountsResponse, GetV1ChargesResponse, PostV1ChargesData, PostV1ChargesResponse, GetV1ChargesTemplateResponse, DeleteV1ChargesByChargeIdData, DeleteV1ChargesByChargeIdResponse, GetV1ChargesByChargeIdData, GetV1ChargesByChargeIdResponse, PutV1ChargesByChargeIdData, PutV1ChargesByChargeIdResponse, GetV1ClientAddressesTemplateResponse, GetV1ClientByClientidAddressesData, GetV1ClientByClientidAddressesResponse, PostV1ClientByClientidAddressesData, PostV1ClientByClientidAddressesResponse, PutV1ClientByClientidAddressesData, PutV1ClientByClientidAddressesResponse, GetV1ClientsData, GetV1ClientsResponse, PostV1ClientsData, PostV1ClientsResponse, GetV1ClientsDownloadtemplateData, GetV1ClientsDownloadtemplateResponse, DeleteV1ClientsExternalIdByExternalIdData, DeleteV1ClientsExternalIdByExternalIdResponse, GetV1ClientsExternalIdByExternalIdData, GetV1ClientsExternalIdByExternalIdResponse, PostV1ClientsExternalIdByExternalIdData, PostV1ClientsExternalIdByExternalIdResponse, PutV1ClientsExternalIdByExternalIdData, PutV1ClientsExternalIdByExternalIdResponse, GetV1ClientsExternalIdByExternalIdAccountsData, GetV1ClientsExternalIdByExternalIdAccountsResponse, GetV1ClientsExternalIdByExternalIdObligeedetailsData, GetV1ClientsExternalIdByExternalIdObligeedetailsResponse, GetV1ClientsExternalIdByExternalIdTransferproposaldateData, GetV1ClientsExternalIdByExternalIdTransferproposaldateResponse, GetV1ClientsTemplateData, GetV1ClientsTemplateResponse, PostV1ClientsUploadtemplateData, PostV1ClientsUploadtemplateResponse, DeleteV1ClientsByClientIdData, DeleteV1ClientsByClientIdResponse, GetV1ClientsByClientIdData, GetV1ClientsByClientIdResponse, PostV1ClientsByClientIdData, PostV1ClientsByClientIdResponse, PutV1ClientsByClientIdData, PutV1ClientsByClientIdResponse, GetV1ClientsByClientIdAccountsData, GetV1ClientsByClientIdAccountsResponse, GetV1ClientsByClientIdObligeedetailsData, GetV1ClientsByClientIdObligeedetailsResponse, GetV1ClientsByClientIdTransferproposaldateData, GetV1ClientsByClientIdTransferproposaldateResponse, GetV1ClientsExternalIdByClientExternalIdTransactionsData, GetV1ClientsExternalIdByClientExternalIdTransactionsResponse, GetV1ClientsExternalIdByClientExternalIdTransactionsExternalIdByTransactionExternalIdData, GetV1ClientsExternalIdByClientExternalIdTransactionsExternalIdByTransactionExternalIdResponse, PostV1ClientsExternalIdByClientExternalIdTransactionsExternalIdByTransactionExternalIdData, PostV1ClientsExternalIdByClientExternalIdTransactionsExternalIdByTransactionExternalIdResponse, GetV1ClientsExternalIdByClientExternalIdTransactionsByTransactionIdData, GetV1ClientsExternalIdByClientExternalIdTransactionsByTransactionIdResponse, PostV1ClientsExternalIdByClientExternalIdTransactionsByTransactionIdData, PostV1ClientsExternalIdByClientExternalIdTransactionsByTransactionIdResponse, GetV1ClientsByClientIdTransactionsData, GetV1ClientsByClientIdTransactionsResponse, GetV1ClientsByClientIdTransactionsExternalIdByTransactionExternalIdData, GetV1ClientsByClientIdTransactionsExternalIdByTransactionExternalIdResponse, PostV1ClientsByClientIdTransactionsExternalIdByTransactionExternalIdData, PostV1ClientsByClientIdTransactionsExternalIdByTransactionExternalIdResponse, GetV1ClientsByClientIdTransactionsByTransactionIdData, GetV1ClientsByClientIdTransactionsByTransactionIdResponse, PostV1ClientsByClientIdTransactionsByTransactionIdData, PostV1ClientsByClientIdTransactionsByTransactionIdResponse, GetV1ClientsByClientIdChargesData, GetV1ClientsByClientIdChargesResponse, PostV1ClientsByClientIdChargesData, PostV1ClientsByClientIdChargesResponse, GetV1ClientsByClientIdChargesTemplateData, GetV1ClientsByClientIdChargesTemplateResponse, DeleteV1ClientsByClientIdChargesByChargeIdData, DeleteV1ClientsByClientIdChargesByChargeIdResponse, GetV1ClientsByClientIdChargesByChargeIdData, GetV1ClientsByClientIdChargesByChargeIdResponse, PostV1ClientsByClientIdChargesByChargeIdData, PostV1ClientsByClientIdChargesByChargeIdResponse, GetV1ClientsByClientIdCollateralsData, GetV1ClientsByClientIdCollateralsResponse, PostV1ClientsByClientIdCollateralsData, PostV1ClientsByClientIdCollateralsResponse, GetV1ClientsByClientIdCollateralsTemplateData, GetV1ClientsByClientIdCollateralsTemplateResponse, GetV1ClientsByClientIdCollateralsByClientCollateralIdData, GetV1ClientsByClientIdCollateralsByClientCollateralIdResponse, DeleteV1ClientsByClientIdCollateralsByCollateralIdData, DeleteV1ClientsByClientIdCollateralsByCollateralIdResponse, PutV1ClientsByClientIdCollateralsByCollateralIdData, PutV1ClientsByClientIdCollateralsByCollateralIdResponse, GetV1ClientsByClientIdFamilymembersData, GetV1ClientsByClientIdFamilymembersResponse, PostV1ClientsByClientIdFamilymembersData, PostV1ClientsByClientIdFamilymembersResponse, GetV1ClientsByClientIdFamilymembersTemplateData, GetV1ClientsByClientIdFamilymembersTemplateResponse, DeleteV1ClientsByClientIdFamilymembersByFamilyMemberIdData, DeleteV1ClientsByClientIdFamilymembersByFamilyMemberIdResponse, GetV1ClientsByClientIdFamilymembersByFamilyMemberIdData, GetV1ClientsByClientIdFamilymembersByFamilyMemberIdResponse, PutV1ClientsByClientIdFamilymembersByFamilyMemberIdData, PutV1ClientsByClientIdFamilymembersByFamilyMemberIdResponse, GetV1ClientsByClientIdIdentifiersData, GetV1ClientsByClientIdIdentifiersResponse, PostV1ClientsByClientIdIdentifiersData, PostV1ClientsByClientIdIdentifiersResponse, GetV1ClientsByClientIdIdentifiersTemplateData, GetV1ClientsByClientIdIdentifiersTemplateResponse, DeleteV1ClientsByClientIdIdentifiersByIdentifierIdData, DeleteV1ClientsByClientIdIdentifiersByIdentifierIdResponse, GetV1ClientsByClientIdIdentifiersByIdentifierIdData, GetV1ClientsByClientIdIdentifiersByIdentifierIdResponse, PutV1ClientsByClientIdIdentifiersByIdentifierIdData, PutV1ClientsByClientIdIdentifiersByIdentifierIdResponse, GetV1CodesResponse, PostV1CodesData, PostV1CodesResponse, DeleteV1CodesByCodeIdData, DeleteV1CodesByCodeIdResponse, GetV1CodesByCodeIdData, GetV1CodesByCodeIdResponse, PutV1CodesByCodeIdData, PutV1CodesByCodeIdResponse, GetV1CodesByCodeIdCodevaluesData, GetV1CodesByCodeIdCodevaluesResponse, PostV1CodesByCodeIdCodevaluesData, PostV1CodesByCodeIdCodevaluesResponse, DeleteV1CodesByCodeIdCodevaluesByCodeValueIdData, DeleteV1CodesByCodeIdCodevaluesByCodeValueIdResponse, GetV1CodesByCodeIdCodevaluesByCodeValueIdData, GetV1CodesByCodeIdCodevaluesByCodeValueIdResponse, PutV1CodesByCodeIdCodevaluesByCodeValueIdData, PutV1CodesByCodeIdCodevaluesByCodeValueIdResponse, GetV1CollateralManagementResponse, PostV1CollateralManagementData, PostV1CollateralManagementResponse, GetV1CollateralManagementTemplateResponse, DeleteV1CollateralManagementByCollateralIdData, DeleteV1CollateralManagementByCollateralIdResponse, GetV1CollateralManagementByCollateralIdData, GetV1CollateralManagementByCollateralIdResponse, PutV1CollateralManagementByCollateralIdData, PutV1CollateralManagementByCollateralIdResponse, PostV1CollectionsheetData, PostV1CollectionsheetResponse, GetV1ConfigurationsData, GetV1ConfigurationsResponse, PutV1ConfigurationsNameByConfigNameData, PutV1ConfigurationsNameByConfigNameResponse, GetV1ConfigurationsNameByNameData, GetV1ConfigurationsNameByNameResponse, GetV1ConfigurationsByConfigIdData, GetV1ConfigurationsByConfigIdResponse, PutV1ConfigurationsByConfigIdData, PutV1ConfigurationsByConfigIdResponse, GetV1CurrenciesResponse, PutV1CurrenciesData, PutV1CurrenciesResponse, GetV1DatatablesData, GetV1DatatablesResponse, PostV1DatatablesData, PostV1DatatablesResponse, PostV1DatatablesDeregisterByDatatableData, PostV1DatatablesDeregisterByDatatableResponse, PostV1DatatablesRegisterByDatatableByApptableData, PostV1DatatablesRegisterByDatatableByApptableResponse, DeleteV1DatatablesByDatatableNameData, DeleteV1DatatablesByDatatableNameResponse, PutV1DatatablesByDatatableNameData, PutV1DatatablesByDatatableNameResponse, GetV1DatatablesByDatatableData, GetV1DatatablesByDatatableResponse, GetV1DatatablesByDatatableQueryData, GetV1DatatablesByDatatableQueryResponse, PostV1DatatablesByDatatableQueryData, PostV1DatatablesByDatatableQueryResponse, DeleteV1DatatablesByDatatableByApptableIdData, DeleteV1DatatablesByDatatableByApptableIdResponse, GetV1DatatablesByDatatableByApptableIdData, GetV1DatatablesByDatatableByApptableIdResponse, PostV1DatatablesByDatatableByApptableIdData, PostV1DatatablesByDatatableByApptableIdResponse, PutV1DatatablesByDatatableByApptableIdData, PutV1DatatablesByDatatableByApptableIdResponse, DeleteV1DatatablesByDatatableByApptableIdByDatatableIdData, DeleteV1DatatablesByDatatableByApptableIdByDatatableIdResponse, GetV1DatatablesByDatatableByApptableIdByDatatableIdData, GetV1DatatablesByDatatableByApptableIdByDatatableIdResponse, PutV1DatatablesByDatatableByApptableIdByDatatableIdData, PutV1DatatablesByDatatableByApptableIdByDatatableIdResponse, GetV1DelinquencyBucketsResponse, PostV1DelinquencyBucketsData, PostV1DelinquencyBucketsResponse, DeleteV1DelinquencyBucketsByDelinquencyBucketIdData, DeleteV1DelinquencyBucketsByDelinquencyBucketIdResponse, GetV1DelinquencyBucketsByDelinquencyBucketIdData, GetV1DelinquencyBucketsByDelinquencyBucketIdResponse, PutV1DelinquencyBucketsByDelinquencyBucketIdData, PutV1DelinquencyBucketsByDelinquencyBucketIdResponse, GetV1DelinquencyRangesResponse, PostV1DelinquencyRangesData, PostV1DelinquencyRangesResponse, DeleteV1DelinquencyRangesByDelinquencyRangeIdData, DeleteV1DelinquencyRangesByDelinquencyRangeIdResponse, GetV1DelinquencyRangesByDelinquencyRangeIdData, GetV1DelinquencyRangesByDelinquencyRangeIdResponse, PutV1DelinquencyRangesByDelinquencyRangeIdData, PutV1DelinquencyRangesByDelinquencyRangeIdResponse, GetV1EntityDatatableChecksData, GetV1EntityDatatableChecksResponse, PostV1EntityDatatableChecksData, PostV1EntityDatatableChecksResponse, GetV1EntityDatatableChecksTemplateResponse, DeleteV1EntityDatatableChecksByEntityDatatableCheckIdData, DeleteV1EntityDatatableChecksByEntityDatatableCheckIdResponse, GetV1EntitytoentitymappingResponse, DeleteV1EntitytoentitymappingByMapIdData, DeleteV1EntitytoentitymappingByMapIdResponse, GetV1EntitytoentitymappingByMapIdData, GetV1EntitytoentitymappingByMapIdResponse, PutV1EntitytoentitymappingByMapIdData, PutV1EntitytoentitymappingByMapIdResponse, GetV1EntitytoentitymappingByMapIdByFromIdByToIdData, GetV1EntitytoentitymappingByMapIdByFromIdByToIdResponse, PostV1EntitytoentitymappingByRelIdData, PostV1EntitytoentitymappingByRelIdResponse, GetV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesData, GetV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesResponse, PostV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesData, PostV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesResponse, PutV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesByIdData, PutV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesByIdResponse, GetV1ExternalAssetOwnersOwnersExternalIdByOwnerExternalIdJournalEntriesData, GetV1ExternalAssetOwnersOwnersExternalIdByOwnerExternalIdJournalEntriesResponse, PostV1ExternalAssetOwnersSearchData, PostV1ExternalAssetOwnersSearchResponse, GetV1ExternalAssetOwnersTransfersData, GetV1ExternalAssetOwnersTransfersResponse, GetV1ExternalAssetOwnersTransfersActiveTransferData, GetV1ExternalAssetOwnersTransfersActiveTransferResponse, PostV1ExternalAssetOwnersTransfersExternalIdByExternalIdData, PostV1ExternalAssetOwnersTransfersExternalIdByExternalIdResponse, PostV1ExternalAssetOwnersTransfersLoansExternalIdByLoanExternalIdData, PostV1ExternalAssetOwnersTransfersLoansExternalIdByLoanExternalIdResponse, PostV1ExternalAssetOwnersTransfersLoansByLoanIdData, PostV1ExternalAssetOwnersTransfersLoansByLoanIdResponse, PostV1ExternalAssetOwnersTransfersByIdData, PostV1ExternalAssetOwnersTransfersByIdResponse, GetV1ExternalAssetOwnersTransfersByTransferIdJournalEntriesData, GetV1ExternalAssetOwnersTransfersByTransferIdJournalEntriesResponse, GetV1ExternaleventsConfigurationResponse, PutV1ExternaleventsConfigurationData, PutV1ExternaleventsConfigurationResponse, GetV1ExternalserviceByServicenameData, GetV1ExternalserviceByServicenameResponse, PutV1ExternalserviceByServicenameData, PutV1ExternalserviceByServicenameResponse, GetV1FieldconfigurationByEntityData, GetV1FieldconfigurationByEntityResponse, GetV1FinancialactivityaccountsResponse, PostV1FinancialactivityaccountsData, PostV1FinancialactivityaccountsResponse, GetV1FinancialactivityaccountsTemplateResponse, DeleteV1FinancialactivityaccountsByMappingIdData, DeleteV1FinancialactivityaccountsByMappingIdResponse, GetV1FinancialactivityaccountsByMappingIdData, GetV1FinancialactivityaccountsByMappingIdResponse, PutV1FinancialactivityaccountsByMappingIdData, PutV1FinancialactivityaccountsByMappingIdResponse, GetV1FixeddepositaccountsData, GetV1FixeddepositaccountsResponse, PostV1FixeddepositaccountsData, PostV1FixeddepositaccountsResponse, GetV1FixeddepositaccountsCalculateFdInterestData, GetV1FixeddepositaccountsCalculateFdInterestResponse, GetV1FixeddepositaccountsDownloadtemplateData, GetV1FixeddepositaccountsDownloadtemplateResponse, GetV1FixeddepositaccountsTemplateData, GetV1FixeddepositaccountsTemplateResponse, GetV1FixeddepositaccountsTransactionDownloadtemplateData, GetV1FixeddepositaccountsTransactionDownloadtemplateResponse, PostV1FixeddepositaccountsTransactionUploadtemplateData, PostV1FixeddepositaccountsTransactionUploadtemplateResponse, PostV1FixeddepositaccountsUploadtemplateData, PostV1FixeddepositaccountsUploadtemplateResponse, DeleteV1FixeddepositaccountsByAccountIdData, DeleteV1FixeddepositaccountsByAccountIdResponse, GetV1FixeddepositaccountsByAccountIdData, GetV1FixeddepositaccountsByAccountIdResponse, PostV1FixeddepositaccountsByAccountIdData, PostV1FixeddepositaccountsByAccountIdResponse, PutV1FixeddepositaccountsByAccountIdData, PutV1FixeddepositaccountsByAccountIdResponse, GetV1FixeddepositaccountsByAccountIdTemplateData, GetV1FixeddepositaccountsByAccountIdTemplateResponse, PostV1FixeddepositaccountsByFixedDepositAccountIdTransactionsData, PostV1FixeddepositaccountsByFixedDepositAccountIdTransactionsResponse, GetV1FixeddepositaccountsByFixedDepositAccountIdTransactionsTemplateData, GetV1FixeddepositaccountsByFixedDepositAccountIdTransactionsTemplateResponse, GetV1FixeddepositaccountsByFixedDepositAccountIdTransactionsByTransactionIdData, GetV1FixeddepositaccountsByFixedDepositAccountIdTransactionsByTransactionIdResponse, PostV1FixeddepositaccountsByFixedDepositAccountIdTransactionsByTransactionIdData, PostV1FixeddepositaccountsByFixedDepositAccountIdTransactionsByTransactionIdResponse, GetV1FixeddepositproductsResponse, PostV1FixeddepositproductsData, PostV1FixeddepositproductsResponse, GetV1FixeddepositproductsTemplateResponse, DeleteV1FixeddepositproductsByProductIdData, DeleteV1FixeddepositproductsByProductIdResponse, GetV1FixeddepositproductsByProductIdData, GetV1FixeddepositproductsByProductIdResponse, PutV1FixeddepositproductsByProductIdData, PutV1FixeddepositproductsByProductIdResponse, GetV1FloatingratesResponse, PostV1FloatingratesData, PostV1FloatingratesResponse, GetV1FloatingratesByFloatingRateIdData, GetV1FloatingratesByFloatingRateIdResponse, PutV1FloatingratesByFloatingRateIdData, PutV1FloatingratesByFloatingRateIdResponse, GetV1FundsResponse, PostV1FundsData, PostV1FundsResponse, GetV1FundsByFundIdData, GetV1FundsByFundIdResponse, PutV1FundsByFundIdData, PutV1FundsByFundIdResponse, GetV1GlaccountsData, GetV1GlaccountsResponse, PostV1GlaccountsData, PostV1GlaccountsResponse, GetV1GlaccountsDownloadtemplateData, GetV1GlaccountsDownloadtemplateResponse, GetV1GlaccountsTemplateData, GetV1GlaccountsTemplateResponse, PostV1GlaccountsUploadtemplateData, PostV1GlaccountsUploadtemplateResponse, DeleteV1GlaccountsByGlAccountIdData, DeleteV1GlaccountsByGlAccountIdResponse, GetV1GlaccountsByGlAccountIdData, GetV1GlaccountsByGlAccountIdResponse, PutV1GlaccountsByGlAccountIdData, PutV1GlaccountsByGlAccountIdResponse, GetV1GlclosuresData, GetV1GlclosuresResponse, PostV1GlclosuresData, PostV1GlclosuresResponse, DeleteV1GlclosuresByGlClosureIdData, DeleteV1GlclosuresByGlClosureIdResponse, GetV1GlclosuresByGlClosureIdData, GetV1GlclosuresByGlClosureIdResponse, PutV1GlclosuresByGlClosureIdData, PutV1GlclosuresByGlClosureIdResponse, GetV1GrouplevelsResponse, GetV1GroupsData, GetV1GroupsResponse, PostV1GroupsData, PostV1GroupsResponse, GetV1GroupsDownloadtemplateData, GetV1GroupsDownloadtemplateResponse, GetV1GroupsTemplateData, GetV1GroupsTemplateResponse, PostV1GroupsUploadtemplateData, PostV1GroupsUploadtemplateResponse, DeleteV1GroupsByGroupIdData, DeleteV1GroupsByGroupIdResponse, GetV1GroupsByGroupIdData, GetV1GroupsByGroupIdResponse, PostV1GroupsByGroupIdData, PostV1GroupsByGroupIdResponse, PutV1GroupsByGroupIdData, PutV1GroupsByGroupIdResponse, GetV1GroupsByGroupIdAccountsData, GetV1GroupsByGroupIdAccountsResponse, PostV1GroupsByGroupIdCommandUnassignStaffData, PostV1GroupsByGroupIdCommandUnassignStaffResponse, GetV1GroupsByGroupIdGlimaccountsData, GetV1GroupsByGroupIdGlimaccountsResponse, GetV1GroupsByGroupIdGsimaccountsData, GetV1GroupsByGroupIdGsimaccountsResponse, GetV1HolidaysData, GetV1HolidaysResponse, PostV1HolidaysData, PostV1HolidaysResponse, GetV1HolidaysTemplateResponse, DeleteV1HolidaysByHolidayIdData, DeleteV1HolidaysByHolidayIdResponse, GetV1HolidaysByHolidayIdData, GetV1HolidaysByHolidayIdResponse, PostV1HolidaysByHolidayIdData, PostV1HolidaysByHolidayIdResponse, PutV1HolidaysByHolidayIdData, PutV1HolidaysByHolidayIdResponse, GetV1HooksResponse, PostV1HooksData, PostV1HooksResponse, GetV1HooksTemplateResponse, DeleteV1HooksByHookIdData, DeleteV1HooksByHookIdResponse, GetV1HooksByHookIdData, GetV1HooksByHookIdResponse, PutV1HooksByHookIdData, PutV1HooksByHookIdResponse, GetV1ImportsData, GetV1ImportsResponse, GetV1ImportsDownloadOutputTemplateData, GetV1ImportsDownloadOutputTemplateResponse, GetV1ImportsGetOutputTemplateLocationData, GetV1ImportsGetOutputTemplateLocationResponse, PutV1InstanceModeData, PutV1InstanceModeResponse, GetV1InterestratechartsData, GetV1InterestratechartsResponse, PostV1InterestratechartsData, PostV1InterestratechartsResponse, GetV1InterestratechartsTemplateResponse, DeleteV1InterestratechartsByChartIdData, DeleteV1InterestratechartsByChartIdResponse, GetV1InterestratechartsByChartIdData, GetV1InterestratechartsByChartIdResponse, PutV1InterestratechartsByChartIdData, PutV1InterestratechartsByChartIdResponse, GetV1InterestratechartsByChartIdChartslabsData, GetV1InterestratechartsByChartIdChartslabsResponse, PostV1InterestratechartsByChartIdChartslabsData, PostV1InterestratechartsByChartIdChartslabsResponse, GetV1InterestratechartsByChartIdChartslabsTemplateData, GetV1InterestratechartsByChartIdChartslabsTemplateResponse, DeleteV1InterestratechartsByChartIdChartslabsByChartSlabIdData, DeleteV1InterestratechartsByChartIdChartslabsByChartSlabIdResponse, GetV1InterestratechartsByChartIdChartslabsByChartSlabIdData, GetV1InterestratechartsByChartIdChartslabsByChartSlabIdResponse, PutV1InterestratechartsByChartIdChartslabsByChartSlabIdData, PutV1InterestratechartsByChartIdChartslabsByChartSlabIdResponse, GetV1InternalLoanProgressiveByLoanIdModelData, GetV1InternalLoanProgressiveByLoanIdModelResponse, PostV1InternalLoanProgressiveByLoanIdModelData, PostV1InternalLoanProgressiveByLoanIdModelResponse, GetV1InteroperationAccountsByAccountIdData, GetV1InteroperationAccountsByAccountIdResponse, GetV1InteroperationAccountsByAccountIdIdentifiersData, GetV1InteroperationAccountsByAccountIdIdentifiersResponse, GetV1InteroperationAccountsByAccountIdKycData, GetV1InteroperationAccountsByAccountIdKycResponse, GetV1InteroperationAccountsByAccountIdTransactionsData, GetV1InteroperationAccountsByAccountIdTransactionsResponse, GetV1InteroperationHealthResponse, DeleteV1InteroperationPartiesByIdTypeByIdValueData, DeleteV1InteroperationPartiesByIdTypeByIdValueResponse, GetV1InteroperationPartiesByIdTypeByIdValueData, GetV1InteroperationPartiesByIdTypeByIdValueResponse, PostV1InteroperationPartiesByIdTypeByIdValueData, PostV1InteroperationPartiesByIdTypeByIdValueResponse, DeleteV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeData, DeleteV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeResponse, GetV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeData, GetV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeResponse, PostV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeData, PostV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeResponse, PostV1InteroperationQuotesData, PostV1InteroperationQuotesResponse, PostV1InteroperationRequestsData, PostV1InteroperationRequestsResponse, PostV1InteroperationTransactionsByAccountIdDisburseData, PostV1InteroperationTransactionsByAccountIdDisburseResponse, PostV1InteroperationTransactionsByAccountIdLoanrepaymentData, PostV1InteroperationTransactionsByAccountIdLoanrepaymentResponse, GetV1InteroperationTransactionsByTransactionCodeQuotesByQuoteCodeData, GetV1InteroperationTransactionsByTransactionCodeQuotesByQuoteCodeResponse, GetV1InteroperationTransactionsByTransactionCodeRequestsByRequestCodeData, GetV1InteroperationTransactionsByTransactionCodeRequestsByRequestCodeResponse, GetV1InteroperationTransactionsByTransactionCodeTransfersByTransferCodeData, GetV1InteroperationTransactionsByTransactionCodeTransfersByTransferCodeResponse, PostV1InteroperationTransfersData, PostV1InteroperationTransfersResponse, GetV1JobsResponse, GetV1JobsShortNameByShortNameData, GetV1JobsShortNameByShortNameResponse, PostV1JobsShortNameByShortNameData, PostV1JobsShortNameByShortNameResponse, PutV1JobsShortNameByShortNameData, PutV1JobsShortNameByShortNameResponse, GetV1JobsShortNameByShortNameRunhistoryData, GetV1JobsShortNameByShortNameRunhistoryResponse, GetV1JobsByJobIdData, GetV1JobsByJobIdResponse, PostV1JobsByJobIdData, PostV1JobsByJobIdResponse, PutV1JobsByJobIdData, PutV1JobsByJobIdResponse, GetV1JobsByJobIdRunhistoryData, GetV1JobsByJobIdRunhistoryResponse, GetV1JobsNamesResponse, GetV1JobsByJobNameAvailableStepsData, GetV1JobsByJobNameAvailableStepsResponse, GetV1JobsByJobNameStepsData, GetV1JobsByJobNameStepsResponse, PutV1JobsByJobNameStepsData, PutV1JobsByJobNameStepsResponse, PostV1JobsByJobNameInlineData, PostV1JobsByJobNameInlineResponse, GetV1JournalentriesData, GetV1JournalentriesResponse, PostV1JournalentriesData, PostV1JournalentriesResponse, GetV1JournalentriesDownloadtemplateData, GetV1JournalentriesDownloadtemplateResponse, GetV1JournalentriesOpeningbalanceData, GetV1JournalentriesOpeningbalanceResponse, GetV1JournalentriesProvisioningData, GetV1JournalentriesProvisioningResponse, PostV1JournalentriesUploadtemplateData, PostV1JournalentriesUploadtemplateResponse, GetV1JournalentriesByJournalEntryIdData, GetV1JournalentriesByJournalEntryIdResponse, PostV1JournalentriesByTransactionIdData, PostV1JournalentriesByTransactionIdResponse, GetV1LikelihoodByPpiNameData, GetV1LikelihoodByPpiNameResponse, GetV1LikelihoodByPpiNameByLikelihoodIdData, GetV1LikelihoodByPpiNameByLikelihoodIdResponse, PutV1LikelihoodByPpiNameByLikelihoodIdData, PutV1LikelihoodByPpiNameByLikelihoodIdResponse, GetV1LoanCollateralManagementByCollateralIdData, GetV1LoanCollateralManagementByCollateralIdResponse, DeleteV1LoanCollateralManagementByIdData, DeleteV1LoanCollateralManagementByIdResponse, GetV1LoanproductsResponse, PostV1LoanproductsData, PostV1LoanproductsResponse, GetV1LoanproductsExternalIdByExternalProductIdData, GetV1LoanproductsExternalIdByExternalProductIdResponse, PutV1LoanproductsExternalIdByExternalProductIdData, PutV1LoanproductsExternalIdByExternalProductIdResponse, GetV1LoanproductsTemplateData, GetV1LoanproductsTemplateResponse, GetV1LoanproductsByProductIdData, GetV1LoanproductsByProductIdResponse, PutV1LoanproductsByProductIdData, PutV1LoanproductsByProductIdResponse, DeleteV1LoanproductsByProductIdProductmixData, DeleteV1LoanproductsByProductIdProductmixResponse, GetV1LoanproductsByProductIdProductmixData, GetV1LoanproductsByProductIdProductmixResponse, PostV1LoanproductsByProductIdProductmixData, PostV1LoanproductsByProductIdProductmixResponse, PutV1LoanproductsByProductIdProductmixData, PutV1LoanproductsByProductIdProductmixResponse, GetV1LoansData, GetV1LoansResponse, PostV1LoansData, PostV1LoansResponse, GetV1LoansDownloadtemplateData, GetV1LoansDownloadtemplateResponse, DeleteV1LoansExternalIdByLoanExternalIdData, DeleteV1LoansExternalIdByLoanExternalIdResponse, GetV1LoansExternalIdByLoanExternalIdData, GetV1LoansExternalIdByLoanExternalIdResponse, PostV1LoansExternalIdByLoanExternalIdData, PostV1LoansExternalIdByLoanExternalIdResponse, PutV1LoansExternalIdByLoanExternalIdData, PutV1LoansExternalIdByLoanExternalIdResponse, GetV1LoansExternalIdByLoanExternalIdApprovedAmountData, GetV1LoansExternalIdByLoanExternalIdApprovedAmountResponse, PutV1LoansExternalIdByLoanExternalIdApprovedAmountData, PutV1LoansExternalIdByLoanExternalIdApprovedAmountResponse, PutV1LoansExternalIdByLoanExternalIdAvailableDisbursementAmountData, PutV1LoansExternalIdByLoanExternalIdAvailableDisbursementAmountResponse, GetV1LoansExternalIdByLoanExternalIdDelinquencyActionsData, GetV1LoansExternalIdByLoanExternalIdDelinquencyActionsResponse, PostV1LoansExternalIdByLoanExternalIdDelinquencyActionsData, PostV1LoansExternalIdByLoanExternalIdDelinquencyActionsResponse, GetV1LoansExternalIdByLoanExternalIdDelinquencytagsData, GetV1LoansExternalIdByLoanExternalIdDelinquencytagsResponse, GetV1LoansExternalIdByLoanExternalIdTemplateData, GetV1LoansExternalIdByLoanExternalIdTemplateResponse, GetV1LoansGlimAccountByGlimIdData, GetV1LoansGlimAccountByGlimIdResponse, PostV1LoansGlimAccountByGlimIdData, PostV1LoansGlimAccountByGlimIdResponse, GetV1LoansRepaymentsDownloadtemplateData, GetV1LoansRepaymentsDownloadtemplateResponse, PostV1LoansRepaymentsUploadtemplateData, PostV1LoansRepaymentsUploadtemplateResponse, GetV1LoansTemplateData, GetV1LoansTemplateResponse, PostV1LoansUploadtemplateData, PostV1LoansUploadtemplateResponse, DeleteV1LoansByLoanIdData, DeleteV1LoansByLoanIdResponse, GetV1LoansByLoanIdData, GetV1LoansByLoanIdResponse, PostV1LoansByLoanIdData, PostV1LoansByLoanIdResponse, PutV1LoansByLoanIdData, PutV1LoansByLoanIdResponse, GetV1LoansByLoanIdApprovedAmountData, GetV1LoansByLoanIdApprovedAmountResponse, PutV1LoansByLoanIdApprovedAmountData, PutV1LoansByLoanIdApprovedAmountResponse, PutV1LoansByLoanIdAvailableDisbursementAmountData, PutV1LoansByLoanIdAvailableDisbursementAmountResponse, GetV1LoansByLoanIdDelinquencyActionsData, GetV1LoansByLoanIdDelinquencyActionsResponse, PostV1LoansByLoanIdDelinquencyActionsData, PostV1LoansByLoanIdDelinquencyActionsResponse, GetV1LoansByLoanIdDelinquencytagsData, GetV1LoansByLoanIdDelinquencytagsResponse, GetV1LoansByLoanIdTemplateData, GetV1LoansByLoanIdTemplateResponse, GetV1LoansAtDateExternalIdByLoanExternalIdData, GetV1LoansAtDateExternalIdByLoanExternalIdResponse, PostV1LoansAtDateSearchData, PostV1LoansAtDateSearchResponse, PostV1LoansAtDateSearchExternalIdData, PostV1LoansAtDateSearchExternalIdResponse, GetV1LoansAtDateByLoanIdData, GetV1LoansAtDateByLoanIdResponse, PostV1LoansCatchUpResponse, GetV1LoansIsCatchUpRunningResponse, GetV1LoansOldestCobClosedResponse, GetV1LoansExternalIdByLoanExternalIdBuydownFeesData, GetV1LoansExternalIdByLoanExternalIdBuydownFeesResponse, GetV1LoansByLoanIdBuydownFeesData, GetV1LoansByLoanIdBuydownFeesResponse, GetV1LoansExternalIdByLoanExternalIdCapitalizedIncomesData, GetV1LoansExternalIdByLoanExternalIdCapitalizedIncomesResponse, GetV1LoansExternalIdByLoanExternalIdDeferredincomeData, GetV1LoansExternalIdByLoanExternalIdDeferredincomeResponse, GetV1LoansByLoanIdCapitalizedIncomesData, GetV1LoansByLoanIdCapitalizedIncomesResponse, GetV1LoansByLoanIdDeferredincomeData, GetV1LoansByLoanIdDeferredincomeResponse, GetV1LoansExternalIdByLoanExternalIdChargesData, GetV1LoansExternalIdByLoanExternalIdChargesResponse, PostV1LoansExternalIdByLoanExternalIdChargesData, PostV1LoansExternalIdByLoanExternalIdChargesResponse, DeleteV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdData, DeleteV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdResponse, GetV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdData, GetV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdResponse, PostV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdData, PostV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdResponse, PutV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdData, PutV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdResponse, GetV1LoansExternalIdByLoanExternalIdChargesTemplateData, GetV1LoansExternalIdByLoanExternalIdChargesTemplateResponse, DeleteV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdData, DeleteV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdResponse, GetV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdData, GetV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdResponse, PostV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdData, PostV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdResponse, PutV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdData, PutV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdResponse, GetV1LoansByLoanIdChargesData, GetV1LoansByLoanIdChargesResponse, PostV1LoansByLoanIdChargesData, PostV1LoansByLoanIdChargesResponse, DeleteV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdData, DeleteV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdResponse, GetV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdData, GetV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdResponse, PostV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdData, PostV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdResponse, PutV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdData, PutV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdResponse, GetV1LoansByLoanIdChargesTemplateData, GetV1LoansByLoanIdChargesTemplateResponse, DeleteV1LoansByLoanIdChargesByLoanChargeIdData, DeleteV1LoansByLoanIdChargesByLoanChargeIdResponse, GetV1LoansByLoanIdChargesByLoanChargeIdData, GetV1LoansByLoanIdChargesByLoanChargeIdResponse, PostV1LoansByLoanIdChargesByLoanChargeIdData, PostV1LoansByLoanIdChargesByLoanChargeIdResponse, PutV1LoansByLoanIdChargesByLoanChargeIdData, PutV1LoansByLoanIdChargesByLoanChargeIdResponse, GetV1LoansExternalIdByLoanExternalIdInterestPausesData, GetV1LoansExternalIdByLoanExternalIdInterestPausesResponse, PostV1LoansExternalIdByLoanExternalIdInterestPausesData, PostV1LoansExternalIdByLoanExternalIdInterestPausesResponse, DeleteV1LoansExternalIdByLoanExternalIdInterestPausesByVariationIdData, DeleteV1LoansExternalIdByLoanExternalIdInterestPausesByVariationIdResponse, PutV1LoansExternalIdByLoanExternalIdInterestPausesByVariationIdData, PutV1LoansExternalIdByLoanExternalIdInterestPausesByVariationIdResponse, GetV1LoansByLoanIdInterestPausesData, GetV1LoansByLoanIdInterestPausesResponse, PostV1LoansByLoanIdInterestPausesData, PostV1LoansByLoanIdInterestPausesResponse, DeleteV1LoansByLoanIdInterestPausesByVariationIdData, DeleteV1LoansByLoanIdInterestPausesByVariationIdResponse, PutV1LoansByLoanIdInterestPausesByVariationIdData, PutV1LoansByLoanIdInterestPausesByVariationIdResponse, GetV1LoansExternalIdByLoanExternalIdTransactionsData, GetV1LoansExternalIdByLoanExternalIdTransactionsResponse, PostV1LoansExternalIdByLoanExternalIdTransactionsData, PostV1LoansExternalIdByLoanExternalIdTransactionsResponse, GetV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByExternalTransactionIdData, GetV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByExternalTransactionIdResponse, PostV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByExternalTransactionIdData, PostV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByExternalTransactionIdResponse, PutV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByTransactionExternalIdData, PutV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByTransactionExternalIdResponse, GetV1LoansExternalIdByLoanExternalIdTransactionsTemplateData, GetV1LoansExternalIdByLoanExternalIdTransactionsTemplateResponse, GetV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdData, GetV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdResponse, PostV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdData, PostV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdResponse, PutV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdData, PutV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdResponse, GetV1LoansByLoanIdTransactionsData, GetV1LoansByLoanIdTransactionsResponse, PostV1LoansByLoanIdTransactionsData, PostV1LoansByLoanIdTransactionsResponse, GetV1LoansByLoanIdTransactionsExternalIdByExternalTransactionIdData, GetV1LoansByLoanIdTransactionsExternalIdByExternalTransactionIdResponse, PostV1LoansByLoanIdTransactionsExternalIdByExternalTransactionIdData, PostV1LoansByLoanIdTransactionsExternalIdByExternalTransactionIdResponse, PutV1LoansByLoanIdTransactionsExternalIdByTransactionExternalIdData, PutV1LoansByLoanIdTransactionsExternalIdByTransactionExternalIdResponse, GetV1LoansByLoanIdTransactionsTemplateData, GetV1LoansByLoanIdTransactionsTemplateResponse, GetV1LoansByLoanIdTransactionsByTransactionIdData, GetV1LoansByLoanIdTransactionsByTransactionIdResponse, PostV1LoansByLoanIdTransactionsByTransactionIdData, PostV1LoansByLoanIdTransactionsByTransactionIdResponse, PutV1LoansByLoanIdTransactionsByTransactionIdData, PutV1LoansByLoanIdTransactionsByTransactionIdResponse, PostV1LoansLoanreassignmentData, PostV1LoansLoanreassignmentResponse, GetV1LoansLoanreassignmentTemplateData, GetV1LoansLoanreassignmentTemplateResponse, GetV1LoansLockedData, GetV1LoansLockedResponse, GetV1LoansByLoanIdCollateralsData, GetV1LoansByLoanIdCollateralsResponse, PostV1LoansByLoanIdCollateralsData, PostV1LoansByLoanIdCollateralsResponse, GetV1LoansByLoanIdCollateralsTemplateData, GetV1LoansByLoanIdCollateralsTemplateResponse, DeleteV1LoansByLoanIdCollateralsByCollateralIdData, DeleteV1LoansByLoanIdCollateralsByCollateralIdResponse, GetV1LoansByLoanIdCollateralsByCollateralIdData, GetV1LoansByLoanIdCollateralsByCollateralIdResponse, PutV1LoansByLoanIdCollateralsByCollateralIdData, PutV1LoansByLoanIdCollateralsByCollateralIdResponse, PutV1LoansByLoanIdDisbursementsEditDisbursementsData, PutV1LoansByLoanIdDisbursementsEditDisbursementsResponse, GetV1LoansByLoanIdDisbursementsByDisbursementIdData, GetV1LoansByLoanIdDisbursementsByDisbursementIdResponse, PutV1LoansByLoanIdDisbursementsByDisbursementIdData, PutV1LoansByLoanIdDisbursementsByDisbursementIdResponse, GetV1LoansByLoanIdGuarantorsData, GetV1LoansByLoanIdGuarantorsResponse, PostV1LoansByLoanIdGuarantorsData, PostV1LoansByLoanIdGuarantorsResponse, GetV1LoansByLoanIdGuarantorsAccountsTemplateData, GetV1LoansByLoanIdGuarantorsAccountsTemplateResponse, GetV1LoansByLoanIdGuarantorsDownloadtemplateData, GetV1LoansByLoanIdGuarantorsDownloadtemplateResponse, GetV1LoansByLoanIdGuarantorsTemplateData, GetV1LoansByLoanIdGuarantorsTemplateResponse, PostV1LoansByLoanIdGuarantorsUploadtemplateData, PostV1LoansByLoanIdGuarantorsUploadtemplateResponse, DeleteV1LoansByLoanIdGuarantorsByGuarantorIdData, DeleteV1LoansByLoanIdGuarantorsByGuarantorIdResponse, GetV1LoansByLoanIdGuarantorsByGuarantorIdData, GetV1LoansByLoanIdGuarantorsByGuarantorIdResponse, PutV1LoansByLoanIdGuarantorsByGuarantorIdData, PutV1LoansByLoanIdGuarantorsByGuarantorIdResponse, GetV1LoansByLoanIdPostdatedchecksData, GetV1LoansByLoanIdPostdatedchecksResponse, GetV1LoansByLoanIdPostdatedchecksByInstallmentIdData, GetV1LoansByLoanIdPostdatedchecksByInstallmentIdResponse, DeleteV1LoansByLoanIdPostdatedchecksByPostDatedCheckIdData, DeleteV1LoansByLoanIdPostdatedchecksByPostDatedCheckIdResponse, PutV1LoansByLoanIdPostdatedchecksByPostDatedCheckIdData, PutV1LoansByLoanIdPostdatedchecksByPostDatedCheckIdResponse, PostV1LoansByLoanIdScheduleData, PostV1LoansByLoanIdScheduleResponse, GetV1MakercheckersData, GetV1MakercheckersResponse, GetV1MakercheckersSearchtemplateResponse, DeleteV1MakercheckersByAuditIdData, DeleteV1MakercheckersByAuditIdResponse, PostV1MakercheckersByAuditIdData, PostV1MakercheckersByAuditIdResponse, GetV1MixmappingResponse, PutV1MixmappingData, PutV1MixmappingResponse, GetV1MixreportData, GetV1MixreportResponse, GetV1MixtaxonomyResponse, GetV1NotificationsData, GetV1NotificationsResponse, PutV1NotificationsResponse, GetV1OfficesData, GetV1OfficesResponse, PostV1OfficesData, PostV1OfficesResponse, GetV1OfficesDownloadtemplateData, GetV1OfficesDownloadtemplateResponse, GetV1OfficesExternalIdByExternalIdData, GetV1OfficesExternalIdByExternalIdResponse, PutV1OfficesExternalIdByExternalIdData, PutV1OfficesExternalIdByExternalIdResponse, GetV1OfficesTemplateResponse, PostV1OfficesUploadtemplateData, PostV1OfficesUploadtemplateResponse, GetV1OfficesByOfficeIdData, GetV1OfficesByOfficeIdResponse, PutV1OfficesByOfficeIdData, PutV1OfficesByOfficeIdResponse, GetV1PasswordpreferencesResponse, PutV1PasswordpreferencesData, PutV1PasswordpreferencesResponse, GetV1PasswordpreferencesTemplateResponse, GetV1PaymenttypesData, GetV1PaymenttypesResponse, PostV1PaymenttypesData, PostV1PaymenttypesResponse, DeleteV1PaymenttypesByPaymentTypeIdData, DeleteV1PaymenttypesByPaymentTypeIdResponse, GetV1PaymenttypesByPaymentTypeIdData, GetV1PaymenttypesByPaymentTypeIdResponse, PutV1PaymenttypesByPaymentTypeIdData, PutV1PaymenttypesByPaymentTypeIdResponse, GetV1PermissionsResponse, PutV1PermissionsData, PutV1PermissionsResponse, GetV1PovertyLineByPpiNameData, GetV1PovertyLineByPpiNameResponse, GetV1PovertyLineByPpiNameByLikelihoodIdData, GetV1PovertyLineByPpiNameByLikelihoodIdResponse, GetV1ProductsByTypeData, GetV1ProductsByTypeResponse, PostV1ProductsByTypeData, PostV1ProductsByTypeResponse, GetV1ProductsByTypeTemplateData, GetV1ProductsByTypeTemplateResponse, GetV1ProductsByTypeByProductIdData, GetV1ProductsByTypeByProductIdResponse, PostV1ProductsByTypeByProductIdData, PostV1ProductsByTypeByProductIdResponse, PutV1ProductsByTypeByProductIdData, PutV1ProductsByTypeByProductIdResponse, GetV1ProvisioningcategoryResponse, PostV1ProvisioningcategoryData, PostV1ProvisioningcategoryResponse, DeleteV1ProvisioningcategoryByCategoryIdData, DeleteV1ProvisioningcategoryByCategoryIdResponse, PutV1ProvisioningcategoryByCategoryIdData, PutV1ProvisioningcategoryByCategoryIdResponse, GetV1ProvisioningcriteriaResponse, PostV1ProvisioningcriteriaData, PostV1ProvisioningcriteriaResponse, GetV1ProvisioningcriteriaTemplateResponse, DeleteV1ProvisioningcriteriaByCriteriaIdData, DeleteV1ProvisioningcriteriaByCriteriaIdResponse, GetV1ProvisioningcriteriaByCriteriaIdData, GetV1ProvisioningcriteriaByCriteriaIdResponse, PutV1ProvisioningcriteriaByCriteriaIdData, PutV1ProvisioningcriteriaByCriteriaIdResponse, GetV1ProvisioningentriesData, GetV1ProvisioningentriesResponse, PostV1ProvisioningentriesData, PostV1ProvisioningentriesResponse, GetV1ProvisioningentriesEntriesData, GetV1ProvisioningentriesEntriesResponse, GetV1ProvisioningentriesByEntryIdData, GetV1ProvisioningentriesByEntryIdResponse, PostV1ProvisioningentriesByEntryIdData, PostV1ProvisioningentriesByEntryIdResponse, GetV1RatesResponse, PostV1RatesData, PostV1RatesResponse, GetV1RatesByRateIdData, GetV1RatesByRateIdResponse, PutV1RatesByRateIdData, PutV1RatesByRateIdResponse, GetV1RecurringdepositaccountsData, GetV1RecurringdepositaccountsResponse, PostV1RecurringdepositaccountsData, PostV1RecurringdepositaccountsResponse, GetV1RecurringdepositaccountsDownloadtemplateData, GetV1RecurringdepositaccountsDownloadtemplateResponse, GetV1RecurringdepositaccountsTemplateData, GetV1RecurringdepositaccountsTemplateResponse, GetV1RecurringdepositaccountsTransactionsDownloadtemplateData, GetV1RecurringdepositaccountsTransactionsDownloadtemplateResponse, PostV1RecurringdepositaccountsTransactionsUploadtemplateData, PostV1RecurringdepositaccountsTransactionsUploadtemplateResponse, PostV1RecurringdepositaccountsUploadtemplateData, PostV1RecurringdepositaccountsUploadtemplateResponse, DeleteV1RecurringdepositaccountsByAccountIdData, DeleteV1RecurringdepositaccountsByAccountIdResponse, GetV1RecurringdepositaccountsByAccountIdData, GetV1RecurringdepositaccountsByAccountIdResponse, PostV1RecurringdepositaccountsByAccountIdData, PostV1RecurringdepositaccountsByAccountIdResponse, PutV1RecurringdepositaccountsByAccountIdData, PutV1RecurringdepositaccountsByAccountIdResponse, GetV1RecurringdepositaccountsByAccountIdTemplateData, GetV1RecurringdepositaccountsByAccountIdTemplateResponse, PostV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsData, PostV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsResponse, GetV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsTemplateData, GetV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsTemplateResponse, GetV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsByTransactionIdData, GetV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsByTransactionIdResponse, PostV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsByTransactionIdData, PostV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsByTransactionIdResponse, GetV1RecurringdepositproductsResponse, PostV1RecurringdepositproductsData, PostV1RecurringdepositproductsResponse, GetV1RecurringdepositproductsTemplateResponse, DeleteV1RecurringdepositproductsByProductIdData, DeleteV1RecurringdepositproductsByProductIdResponse, GetV1RecurringdepositproductsByProductIdData, GetV1RecurringdepositproductsByProductIdResponse, PutV1RecurringdepositproductsByProductIdData, PutV1RecurringdepositproductsByProductIdResponse, GetV1ReportmailingjobrunhistoryData, GetV1ReportmailingjobrunhistoryResponse, GetV1ReportmailingjobsData, GetV1ReportmailingjobsResponse, PostV1ReportmailingjobsData, PostV1ReportmailingjobsResponse, GetV1ReportmailingjobsTemplateResponse, DeleteV1ReportmailingjobsByEntityIdData, DeleteV1ReportmailingjobsByEntityIdResponse, GetV1ReportmailingjobsByEntityIdData, GetV1ReportmailingjobsByEntityIdResponse, PutV1ReportmailingjobsByEntityIdData, PutV1ReportmailingjobsByEntityIdResponse, GetV1ReportsResponse, PostV1ReportsData, PostV1ReportsResponse, GetV1ReportsTemplateResponse, DeleteV1ReportsByIdData, DeleteV1ReportsByIdResponse, GetV1ReportsByIdData, GetV1ReportsByIdResponse, PutV1ReportsByIdData, PutV1ReportsByIdResponse, GetV1RescheduleloansData, GetV1RescheduleloansResponse, PostV1RescheduleloansData, PostV1RescheduleloansResponse, GetV1RescheduleloansTemplateResponse, GetV1RescheduleloansByScheduleIdData, GetV1RescheduleloansByScheduleIdResponse, PostV1RescheduleloansByScheduleIdData, PostV1RescheduleloansByScheduleIdResponse, GetV1RolesResponse, PostV1RolesData, PostV1RolesResponse, DeleteV1RolesByRoleIdData, DeleteV1RolesByRoleIdResponse, GetV1RolesByRoleIdData, GetV1RolesByRoleIdResponse, PostV1RolesByRoleIdData, PostV1RolesByRoleIdResponse, PutV1RolesByRoleIdData, PutV1RolesByRoleIdResponse, GetV1RolesByRoleIdPermissionsData, GetV1RolesByRoleIdPermissionsResponse, PutV1RolesByRoleIdPermissionsData, PutV1RolesByRoleIdPermissionsResponse, PostV1RunaccrualsData, PostV1RunaccrualsResponse, GetV1RunreportsAvailableExportsByReportNameData, GetV1RunreportsAvailableExportsByReportNameResponse, GetV1RunreportsByReportNameData, GetV1RunreportsByReportNameResponse, GetV1SavingsaccountsData, GetV1SavingsaccountsResponse, PostV1SavingsaccountsData, PostV1SavingsaccountsResponse, GetV1SavingsaccountsDownloadtemplateData, GetV1SavingsaccountsDownloadtemplateResponse, DeleteV1SavingsaccountsExternalIdByExternalIdData, DeleteV1SavingsaccountsExternalIdByExternalIdResponse, GetV1SavingsaccountsExternalIdByExternalIdData, GetV1SavingsaccountsExternalIdByExternalIdResponse, PostV1SavingsaccountsExternalIdByExternalIdData, PostV1SavingsaccountsExternalIdByExternalIdResponse, PutV1SavingsaccountsExternalIdByExternalIdData, PutV1SavingsaccountsExternalIdByExternalIdResponse, PostV1SavingsaccountsGsimData, PostV1SavingsaccountsGsimResponse, PutV1SavingsaccountsGsimByParentAccountIdData, PutV1SavingsaccountsGsimByParentAccountIdResponse, PostV1SavingsaccountsGsimcommandsByParentAccountIdData, PostV1SavingsaccountsGsimcommandsByParentAccountIdResponse, GetV1SavingsaccountsTemplateData, GetV1SavingsaccountsTemplateResponse, GetV1SavingsaccountsTransactionsDownloadtemplateData, GetV1SavingsaccountsTransactionsDownloadtemplateResponse, PostV1SavingsaccountsTransactionsUploadtemplateData, PostV1SavingsaccountsTransactionsUploadtemplateResponse, PostV1SavingsaccountsUploadtemplateData, PostV1SavingsaccountsUploadtemplateResponse, DeleteV1SavingsaccountsByAccountIdData, DeleteV1SavingsaccountsByAccountIdResponse, GetV1SavingsaccountsByAccountIdData, GetV1SavingsaccountsByAccountIdResponse, PostV1SavingsaccountsByAccountIdData, PostV1SavingsaccountsByAccountIdResponse, PutV1SavingsaccountsByAccountIdData, PutV1SavingsaccountsByAccountIdResponse, GetV1SavingsaccountsBySavingsAccountIdChargesData, GetV1SavingsaccountsBySavingsAccountIdChargesResponse, PostV1SavingsaccountsBySavingsAccountIdChargesData, PostV1SavingsaccountsBySavingsAccountIdChargesResponse, GetV1SavingsaccountsBySavingsAccountIdChargesTemplateData, GetV1SavingsaccountsBySavingsAccountIdChargesTemplateResponse, DeleteV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdData, DeleteV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdResponse, GetV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdData, GetV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdResponse, PostV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdData, PostV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdResponse, PutV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdData, PutV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdResponse, GetV1SavingsaccountsBySavingsIdOnholdtransactionsData, GetV1SavingsaccountsBySavingsIdOnholdtransactionsResponse, PostV1SavingsaccountsBySavingsIdTransactionsData, PostV1SavingsaccountsBySavingsIdTransactionsResponse, PostV1SavingsaccountsBySavingsIdTransactionsQueryData, PostV1SavingsaccountsBySavingsIdTransactionsQueryResponse, GetV1SavingsaccountsBySavingsIdTransactionsSearchData, GetV1SavingsaccountsBySavingsIdTransactionsSearchResponse, GetV1SavingsaccountsBySavingsIdTransactionsTemplateData, GetV1SavingsaccountsBySavingsIdTransactionsTemplateResponse, GetV1SavingsaccountsBySavingsIdTransactionsByTransactionIdData, GetV1SavingsaccountsBySavingsIdTransactionsByTransactionIdResponse, PostV1SavingsaccountsBySavingsIdTransactionsByTransactionIdData, PostV1SavingsaccountsBySavingsIdTransactionsByTransactionIdResponse, GetV1SavingsproductsResponse, PostV1SavingsproductsData, PostV1SavingsproductsResponse, GetV1SavingsproductsTemplateResponse, DeleteV1SavingsproductsByProductIdData, DeleteV1SavingsproductsByProductIdResponse, GetV1SavingsproductsByProductIdData, GetV1SavingsproductsByProductIdResponse, PutV1SavingsproductsByProductIdData, PutV1SavingsproductsByProductIdResponse, GetV1SchedulerResponse, PostV1SchedulerData, PostV1SchedulerResponse, GetV1SearchData, GetV1SearchResponse, PostV1SearchAdvanceData, PostV1SearchAdvanceResponse, GetV1SearchTemplateResponse, PostV1SelfAccounttransfersData, PostV1SelfAccounttransfersResponse, GetV1SelfAccounttransfersTemplateData, GetV1SelfAccounttransfersTemplateResponse, PostV1SelfAuthenticationData, PostV1SelfAuthenticationResponse, GetV1SelfBeneficiariesTptResponse, PostV1SelfBeneficiariesTptData, PostV1SelfBeneficiariesTptResponse, GetV1SelfBeneficiariesTptTemplateResponse, DeleteV1SelfBeneficiariesTptByBeneficiaryIdData, DeleteV1SelfBeneficiariesTptByBeneficiaryIdResponse, PutV1SelfBeneficiariesTptByBeneficiaryIdData, PutV1SelfBeneficiariesTptByBeneficiaryIdResponse, GetV1SelfClientsData, GetV1SelfClientsResponse, GetV1SelfClientsByClientIdData, GetV1SelfClientsByClientIdResponse, GetV1SelfClientsByClientIdAccountsData, GetV1SelfClientsByClientIdAccountsResponse, GetV1SelfClientsByClientIdChargesData, GetV1SelfClientsByClientIdChargesResponse, GetV1SelfClientsByClientIdChargesByChargeIdData, GetV1SelfClientsByClientIdChargesByChargeIdResponse, DeleteV1SelfClientsByClientIdImagesData, DeleteV1SelfClientsByClientIdImagesResponse, GetV1SelfClientsByClientIdImagesData, GetV1SelfClientsByClientIdImagesResponse, PostV1SelfClientsByClientIdImagesData, PostV1SelfClientsByClientIdImagesResponse, GetV1SelfClientsByClientIdObligeedetailsData, GetV1SelfClientsByClientIdObligeedetailsResponse, GetV1SelfClientsByClientIdTransactionsData, GetV1SelfClientsByClientIdTransactionsResponse, GetV1SelfClientsByClientIdTransactionsByTransactionIdData, GetV1SelfClientsByClientIdTransactionsByTransactionIdResponse, GetV1SelfDeviceRegistrationResponse, PostV1SelfDeviceRegistrationData, PostV1SelfDeviceRegistrationResponse, GetV1SelfDeviceRegistrationClientByClientIdData, GetV1SelfDeviceRegistrationClientByClientIdResponse, DeleteV1SelfDeviceRegistrationByIdData, DeleteV1SelfDeviceRegistrationByIdResponse, GetV1SelfDeviceRegistrationByIdData, GetV1SelfDeviceRegistrationByIdResponse, PutV1SelfDeviceRegistrationByIdData, PutV1SelfDeviceRegistrationByIdResponse, GetV1SelfLoanproductsData, GetV1SelfLoanproductsResponse, GetV1SelfLoanproductsByProductIdData, GetV1SelfLoanproductsByProductIdResponse, PostV1SelfLoansData, PostV1SelfLoansResponse, GetV1SelfLoansTemplateData, GetV1SelfLoansTemplateResponse, GetV1SelfLoansByLoanIdData, GetV1SelfLoansByLoanIdResponse, PostV1SelfLoansByLoanIdData, PostV1SelfLoansByLoanIdResponse, PutV1SelfLoansByLoanIdData, PutV1SelfLoansByLoanIdResponse, GetV1SelfLoansByLoanIdChargesData, GetV1SelfLoansByLoanIdChargesResponse, GetV1SelfLoansByLoanIdChargesByChargeIdData, GetV1SelfLoansByLoanIdChargesByChargeIdResponse, GetV1SelfLoansByLoanIdGuarantorsData, GetV1SelfLoansByLoanIdGuarantorsResponse, GetV1SelfLoansByLoanIdTransactionsByTransactionIdData, GetV1SelfLoansByLoanIdTransactionsByTransactionIdResponse, GetV1SelfPocketsResponse, PostV1SelfPocketsData, PostV1SelfPocketsResponse, GetV1SelfProductsShareData, GetV1SelfProductsShareResponse, GetV1SelfProductsShareByProductIdData, GetV1SelfProductsShareByProductIdResponse, PostV1SelfRegistrationData, PostV1SelfRegistrationResponse, PostV1SelfRegistrationUserData, PostV1SelfRegistrationUserResponse, GetV1SelfRunreportsByReportNameData, GetV1SelfRunreportsByReportNameResponse, PostV1SelfSavingsaccountsData, PostV1SelfSavingsaccountsResponse, GetV1SelfSavingsaccountsTemplateData, GetV1SelfSavingsaccountsTemplateResponse, GetV1SelfSavingsaccountsByAccountIdData, GetV1SelfSavingsaccountsByAccountIdResponse, PutV1SelfSavingsaccountsByAccountIdData, PutV1SelfSavingsaccountsByAccountIdResponse, GetV1SelfSavingsaccountsByAccountIdChargesData, GetV1SelfSavingsaccountsByAccountIdChargesResponse, GetV1SelfSavingsaccountsByAccountIdChargesBySavingsAccountChargeIdData, GetV1SelfSavingsaccountsByAccountIdChargesBySavingsAccountChargeIdResponse, GetV1SelfSavingsaccountsByAccountIdTransactionsByTransactionIdData, GetV1SelfSavingsaccountsByAccountIdTransactionsByTransactionIdResponse, GetV1SelfSavingsproductsData, GetV1SelfSavingsproductsResponse, GetV1SelfSavingsproductsByProductIdData, GetV1SelfSavingsproductsByProductIdResponse, PostV1SelfShareaccountsData, PostV1SelfShareaccountsResponse, GetV1SelfShareaccountsTemplateData, GetV1SelfShareaccountsTemplateResponse, GetV1SelfShareaccountsByAccountIdData, GetV1SelfShareaccountsByAccountIdResponse, GetV1SelfSurveysResponse, GetV1SelfSurveysScorecardsClientsByClientIdData, GetV1SelfSurveysScorecardsClientsByClientIdResponse, PostV1SelfSurveysScorecardsBySurveyIdData, PostV1SelfSurveysScorecardsBySurveyIdResponse, PutV1SelfUserData, PutV1SelfUserResponse, GetV1SelfUserdetailsResponse, GetV1ShareproductByProductIdDividendData, GetV1ShareproductByProductIdDividendResponse, PostV1ShareproductByProductIdDividendData, PostV1ShareproductByProductIdDividendResponse, DeleteV1ShareproductByProductIdDividendByDividendIdData, DeleteV1ShareproductByProductIdDividendByDividendIdResponse, GetV1ShareproductByProductIdDividendByDividendIdData, GetV1ShareproductByProductIdDividendByDividendIdResponse, PutV1ShareproductByProductIdDividendByDividendIdData, PutV1ShareproductByProductIdDividendByDividendIdResponse, GetV1SmsResponse, PostV1SmsData, PostV1SmsResponse, GetV1SmsByCampaignIdMessageByStatusData, GetV1SmsByCampaignIdMessageByStatusResponse, DeleteV1SmsByResourceIdData, DeleteV1SmsByResourceIdResponse, GetV1SmsByResourceIdData, GetV1SmsByResourceIdResponse, PutV1SmsByResourceIdData, PutV1SmsByResourceIdResponse, GetV1StaffData, GetV1StaffResponse, PostV1StaffData, PostV1StaffResponse, GetV1StaffDownloadtemplateData, GetV1StaffDownloadtemplateResponse, PostV1StaffUploadtemplateData, PostV1StaffUploadtemplateResponse, GetV1StaffByStaffIdData, GetV1StaffByStaffIdResponse, PutV1StaffByStaffIdData, PutV1StaffByStaffIdResponse, GetV1StandinginstructionrunhistoryData, GetV1StandinginstructionrunhistoryResponse, GetV1StandinginstructionsData, GetV1StandinginstructionsResponse, PostV1StandinginstructionsData, PostV1StandinginstructionsResponse, GetV1StandinginstructionsTemplateData, GetV1StandinginstructionsTemplateResponse, GetV1StandinginstructionsByStandingInstructionIdData, GetV1StandinginstructionsByStandingInstructionIdResponse, PutV1StandinginstructionsByStandingInstructionIdData, PutV1StandinginstructionsByStandingInstructionIdResponse, GetV1SurveyResponse, PutV1SurveyRegisterBySurveyNameByApptableData, PutV1SurveyRegisterBySurveyNameByApptableResponse, GetV1SurveyBySurveyNameData, GetV1SurveyBySurveyNameResponse, PostV1SurveyBySurveyNameByApptableIdData, PostV1SurveyBySurveyNameByApptableIdResponse, GetV1SurveyBySurveyNameByClientIdData, GetV1SurveyBySurveyNameByClientIdResponse, GetV1SurveyBySurveyNameByClientIdByEntryIdData, GetV1SurveyBySurveyNameByClientIdByEntryIdResponse, DeleteV1SurveyBySurveyNameByClientIdByFulfilledIdData, DeleteV1SurveyBySurveyNameByClientIdByFulfilledIdResponse, GetV1SurveysData, GetV1SurveysResponse, PostV1SurveysData, PostV1SurveysResponse, GetV1SurveysByIdData, GetV1SurveysByIdResponse, PostV1SurveysByIdData, PostV1SurveysByIdResponse, PutV1SurveysByIdData, PutV1SurveysByIdResponse, GetV1SurveysScorecardsClientsByClientIdData, GetV1SurveysScorecardsClientsByClientIdResponse, GetV1SurveysScorecardsBySurveyIdData, GetV1SurveysScorecardsBySurveyIdResponse, PostV1SurveysScorecardsBySurveyIdData, PostV1SurveysScorecardsBySurveyIdResponse, GetV1SurveysScorecardsBySurveyIdClientsByClientIdData, GetV1SurveysScorecardsBySurveyIdClientsByClientIdResponse, GetV1SurveysBySurveyIdLookuptablesData, GetV1SurveysBySurveyIdLookuptablesResponse, PostV1SurveysBySurveyIdLookuptablesData, PostV1SurveysBySurveyIdLookuptablesResponse, GetV1SurveysBySurveyIdLookuptablesByKeyData, GetV1SurveysBySurveyIdLookuptablesByKeyResponse, GetV1TaxesComponentResponse, PostV1TaxesComponentData, PostV1TaxesComponentResponse, GetV1TaxesComponentTemplateResponse, GetV1TaxesComponentByTaxComponentIdData, GetV1TaxesComponentByTaxComponentIdResponse, PutV1TaxesComponentByTaxComponentIdData, PutV1TaxesComponentByTaxComponentIdResponse, GetV1TaxesGroupResponse, PostV1TaxesGroupData, PostV1TaxesGroupResponse, GetV1TaxesGroupTemplateResponse, GetV1TaxesGroupByTaxGroupIdData, GetV1TaxesGroupByTaxGroupIdResponse, PutV1TaxesGroupByTaxGroupIdData, PutV1TaxesGroupByTaxGroupIdResponse, GetV1TellersData, GetV1TellersResponse, PostV1TellersData, PostV1TellersResponse, DeleteV1TellersByTellerIdData, DeleteV1TellersByTellerIdResponse, GetV1TellersByTellerIdData, GetV1TellersByTellerIdResponse, PutV1TellersByTellerIdData, PutV1TellersByTellerIdResponse, GetV1TellersByTellerIdCashiersData, GetV1TellersByTellerIdCashiersResponse, PostV1TellersByTellerIdCashiersData, PostV1TellersByTellerIdCashiersResponse, GetV1TellersByTellerIdCashiersTemplateData, GetV1TellersByTellerIdCashiersTemplateResponse, DeleteV1TellersByTellerIdCashiersByCashierIdData, DeleteV1TellersByTellerIdCashiersByCashierIdResponse, GetV1TellersByTellerIdCashiersByCashierIdData, GetV1TellersByTellerIdCashiersByCashierIdResponse, PutV1TellersByTellerIdCashiersByCashierIdData, PutV1TellersByTellerIdCashiersByCashierIdResponse, PostV1TellersByTellerIdCashiersByCashierIdAllocateData, PostV1TellersByTellerIdCashiersByCashierIdAllocateResponse, PostV1TellersByTellerIdCashiersByCashierIdSettleData, PostV1TellersByTellerIdCashiersByCashierIdSettleResponse, GetV1TellersByTellerIdCashiersByCashierIdSummaryandtransactionsData, GetV1TellersByTellerIdCashiersByCashierIdSummaryandtransactionsResponse, GetV1TellersByTellerIdCashiersByCashierIdTransactionsData, GetV1TellersByTellerIdCashiersByCashierIdTransactionsResponse, GetV1TellersByTellerIdCashiersByCashierIdTransactionsTemplateData, GetV1TellersByTellerIdCashiersByCashierIdTransactionsTemplateResponse, GetV1TellersByTellerIdJournalsData, GetV1TellersByTellerIdJournalsResponse, GetV1TellersByTellerIdTransactionsData, GetV1TellersByTellerIdTransactionsResponse, GetV1TellersByTellerIdTransactionsByTransactionIdData, GetV1TellersByTellerIdTransactionsByTransactionIdResponse, GetV1TemplatesData, GetV1TemplatesResponse, PostV1TemplatesData, PostV1TemplatesResponse, GetV1TemplatesTemplateResponse, DeleteV1TemplatesByTemplateIdData, DeleteV1TemplatesByTemplateIdResponse, GetV1TemplatesByTemplateIdData, GetV1TemplatesByTemplateIdResponse, PostV1TemplatesByTemplateIdData, PostV1TemplatesByTemplateIdResponse, PutV1TemplatesByTemplateIdData, PutV1TemplatesByTemplateIdResponse, GetV1TemplatesByTemplateIdTemplateData, GetV1TemplatesByTemplateIdTemplateResponse, GetV1TwofactorResponse, PostV1TwofactorData, PostV1TwofactorResponse, PostV1TwofactorInvalidateData, PostV1TwofactorInvalidateResponse, PostV1TwofactorValidateData, PostV1TwofactorValidateResponse, GetV1UserdetailsResponse, GetV1UsersResponse, PostV1UsersData, PostV1UsersResponse, GetV1UsersDownloadtemplateData, GetV1UsersDownloadtemplateResponse, GetV1UsersTemplateResponse, PostV1UsersUploadtemplateData, PostV1UsersUploadtemplateResponse, DeleteV1UsersByUserIdData, DeleteV1UsersByUserIdResponse, GetV1UsersByUserIdData, GetV1UsersByUserIdResponse, PutV1UsersByUserIdData, PutV1UsersByUserIdResponse, PostV1UsersByUserIdPwdData, PostV1UsersByUserIdPwdResponse, GetV1WorkingdaysResponse, PutV1WorkingdaysData, PutV1WorkingdaysResponse, GetV1WorkingdaysTemplateResponse, GetV1ByEntityTypeByEntityIdCalendarsData, GetV1ByEntityTypeByEntityIdCalendarsResponse, PostV1ByEntityTypeByEntityIdCalendarsData, PostV1ByEntityTypeByEntityIdCalendarsResponse, GetV1ByEntityTypeByEntityIdCalendarsTemplateData, GetV1ByEntityTypeByEntityIdCalendarsTemplateResponse, DeleteV1ByEntityTypeByEntityIdCalendarsByCalendarIdData, DeleteV1ByEntityTypeByEntityIdCalendarsByCalendarIdResponse, GetV1ByEntityTypeByEntityIdCalendarsByCalendarIdData, GetV1ByEntityTypeByEntityIdCalendarsByCalendarIdResponse, PutV1ByEntityTypeByEntityIdCalendarsByCalendarIdData, PutV1ByEntityTypeByEntityIdCalendarsByCalendarIdResponse, GetV1ByEntityTypeByEntityIdDocumentsData, GetV1ByEntityTypeByEntityIdDocumentsResponse, PostV1ByEntityTypeByEntityIdDocumentsData, PostV1ByEntityTypeByEntityIdDocumentsResponse, DeleteV1ByEntityTypeByEntityIdDocumentsByDocumentIdData, DeleteV1ByEntityTypeByEntityIdDocumentsByDocumentIdResponse, GetV1ByEntityTypeByEntityIdDocumentsByDocumentIdData, GetV1ByEntityTypeByEntityIdDocumentsByDocumentIdResponse, PutV1ByEntityTypeByEntityIdDocumentsByDocumentIdData, PutV1ByEntityTypeByEntityIdDocumentsByDocumentIdResponse, GetV1ByEntityTypeByEntityIdDocumentsByDocumentIdAttachmentData, GetV1ByEntityTypeByEntityIdDocumentsByDocumentIdAttachmentResponse, GetV1ByEntityTypeByEntityIdMeetingsData, GetV1ByEntityTypeByEntityIdMeetingsResponse, PostV1ByEntityTypeByEntityIdMeetingsData, PostV1ByEntityTypeByEntityIdMeetingsResponse, GetV1ByEntityTypeByEntityIdMeetingsTemplateData, GetV1ByEntityTypeByEntityIdMeetingsTemplateResponse, DeleteV1ByEntityTypeByEntityIdMeetingsByMeetingIdData, DeleteV1ByEntityTypeByEntityIdMeetingsByMeetingIdResponse, GetV1ByEntityTypeByEntityIdMeetingsByMeetingIdData, GetV1ByEntityTypeByEntityIdMeetingsByMeetingIdResponse, PostV1ByEntityTypeByEntityIdMeetingsByMeetingIdData, PostV1ByEntityTypeByEntityIdMeetingsByMeetingIdResponse, PutV1ByEntityTypeByEntityIdMeetingsByMeetingIdData, PutV1ByEntityTypeByEntityIdMeetingsByMeetingIdResponse, GetV1ByResourceTypeByResourceIdNotesData, GetV1ByResourceTypeByResourceIdNotesResponse, PostV1ByResourceTypeByResourceIdNotesData, PostV1ByResourceTypeByResourceIdNotesResponse, DeleteV1ByResourceTypeByResourceIdNotesByNoteIdData, DeleteV1ByResourceTypeByResourceIdNotesByNoteIdResponse, GetV1ByResourceTypeByResourceIdNotesByNoteIdData, GetV1ByResourceTypeByResourceIdNotesByNoteIdResponse, PutV1ByResourceTypeByResourceIdNotesByNoteIdData, PutV1ByResourceTypeByResourceIdNotesByNoteIdResponse, PostV2ClientsSearchData, PostV2ClientsSearchResponse } from './types.gen';

export class DefaultService {
    /**
     * @returns unknown default response
     * @throws ApiError
     */
    public static getApplicationWadl(): CancelablePromise<GetApplicationWadlResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/application.wadl'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.path
     * @returns unknown default response
     * @throws ApiError
     */
    public static getApplicationWadlByPath(data: GetApplicationWadlByPathData): CancelablePromise<GetApplicationWadlByPathResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/application.wadl/{path}',
            path: {
                path: data.path
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.creditBureauId creditBureauId
     * @param data.formData Upload credit report
     * @returns string default response
     * @throws ApiError
     */
    public static postV1CreditBureauIntegrationAddCreditReport(data: PostV1CreditBureauIntegrationAddCreditReportData = {}): CancelablePromise<PostV1CreditBureauIntegrationAddCreditReportResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/creditBureauIntegration/addCreditReport',
            query: {
                creditBureauId: data.creditBureauId
            },
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody Fetch credit report
     * @returns string default response
     * @throws ApiError
     */
    public static postV1CreditBureauIntegrationCreditReport(data: PostV1CreditBureauIntegrationCreditReportData = {}): CancelablePromise<PostV1CreditBureauIntegrationCreditReportResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/creditBureauIntegration/creditReport',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.creditBureauId creditBureauId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1CreditBureauIntegrationCreditReportByCreditBureauId(data: GetV1CreditBureauIntegrationCreditReportByCreditBureauIdData): CancelablePromise<GetV1CreditBureauIntegrationCreditReportByCreditBureauIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/creditBureauIntegration/creditReport/{creditBureauId}',
            path: {
                creditBureauId: data.creditBureauId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.creditBureauId creditBureauId
     * @returns string default response
     * @throws ApiError
     */
    public static deleteV1CreditBureauIntegrationDeleteCreditReportByCreditBureauId(data: DeleteV1CreditBureauIntegrationDeleteCreditReportByCreditBureauIdData): CancelablePromise<DeleteV1CreditBureauIntegrationDeleteCreditReportByCreditBureauIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/creditBureauIntegration/deleteCreditReport/{creditBureauId}',
            path: {
                creditBureauId: data.creditBureauId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.creditBureauId creditBureauId
     * @param data.nationalId nationalId
     * @returns string default response
     * @throws ApiError
     */
    public static postV1CreditBureauIntegrationSaveCreditReport(data: PostV1CreditBureauIntegrationSaveCreditReportData = {}): CancelablePromise<PostV1CreditBureauIntegrationSaveCreditReportResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/creditBureauIntegration/saveCreditReport',
            query: {
                creditBureauId: data.creditBureauId,
                nationalId: data.nationalId
            }
        });
    }
    
    /**
     * @returns string default response
     * @throws ApiError
     */
    public static getV1Echo(): CancelablePromise<GetV1EchoResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/echo'
        });
    }
    
    /**
     * @returns string default response
     * @throws ApiError
     */
    public static getV1Email(): CancelablePromise<GetV1EmailResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/email'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1Email(data: PostV1EmailData = {}): CancelablePromise<PostV1EmailResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/email',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns string default response
     * @throws ApiError
     */
    public static getV1EmailCampaign(): CancelablePromise<GetV1EmailCampaignResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/email/campaign'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1EmailCampaign(data: PostV1EmailCampaignData = {}): CancelablePromise<PostV1EmailCampaignResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/email/campaign',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1EmailCampaignPreview(data: PostV1EmailCampaignPreviewData = {}): CancelablePromise<PostV1EmailCampaignPreviewResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/email/campaign/preview',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns string default response
     * @throws ApiError
     */
    public static getV1EmailCampaignTemplate(): CancelablePromise<GetV1EmailCampaignTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/email/campaign/template'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.resourceId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1EmailCampaignTemplateByResourceId(data: GetV1EmailCampaignTemplateByResourceIdData): CancelablePromise<GetV1EmailCampaignTemplateByResourceIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/email/campaign/template/{resourceId}',
            path: {
                resourceId: data.resourceId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.resourceId
     * @returns string default response
     * @throws ApiError
     */
    public static deleteV1EmailCampaignByResourceId(data: DeleteV1EmailCampaignByResourceIdData): CancelablePromise<DeleteV1EmailCampaignByResourceIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/email/campaign/{resourceId}',
            path: {
                resourceId: data.resourceId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.resourceId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1EmailCampaignByResourceId(data: GetV1EmailCampaignByResourceIdData): CancelablePromise<GetV1EmailCampaignByResourceIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/email/campaign/{resourceId}',
            path: {
                resourceId: data.resourceId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.resourceId
     * @param data.command
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1EmailCampaignByResourceId(data: PostV1EmailCampaignByResourceIdData): CancelablePromise<PostV1EmailCampaignByResourceIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/email/campaign/{resourceId}',
            path: {
                resourceId: data.resourceId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.resourceId
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1EmailCampaignByResourceId(data: PutV1EmailCampaignByResourceIdData): CancelablePromise<PutV1EmailCampaignByResourceIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/email/campaign/{resourceId}',
            path: {
                resourceId: data.resourceId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns string default response
     * @throws ApiError
     */
    public static getV1EmailConfiguration(): CancelablePromise<GetV1EmailConfigurationResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/email/configuration'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1EmailConfiguration(data: PutV1EmailConfigurationData = {}): CancelablePromise<PutV1EmailConfigurationResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/email/configuration',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.offset
     * @param data.limit
     * @param data.orderBy
     * @param data.sortOrder
     * @returns string default response
     * @throws ApiError
     */
    public static getV1EmailFailedEmail(data: GetV1EmailFailedEmailData = {}): CancelablePromise<GetV1EmailFailedEmailResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/email/failedEmail',
            query: {
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.offset
     * @param data.limit
     * @param data.status
     * @param data.orderBy
     * @param data.sortOrder
     * @param data.fromDate
     * @param data.toDate
     * @param data.locale
     * @param data.dateFormat
     * @returns string default response
     * @throws ApiError
     */
    public static getV1EmailMessageByStatus(data: GetV1EmailMessageByStatusData = {}): CancelablePromise<GetV1EmailMessageByStatusResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/email/messageByStatus',
            query: {
                offset: data.offset,
                limit: data.limit,
                status: data.status,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder,
                fromDate: data.fromDate,
                toDate: data.toDate,
                locale: data.locale,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.offset
     * @param data.limit
     * @param data.orderBy
     * @param data.sortOrder
     * @returns string default response
     * @throws ApiError
     */
    public static getV1EmailPendingEmail(data: GetV1EmailPendingEmailData = {}): CancelablePromise<GetV1EmailPendingEmailResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/email/pendingEmail',
            query: {
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.offset
     * @param data.limit
     * @param data.orderBy
     * @param data.sortOrder
     * @returns string default response
     * @throws ApiError
     */
    public static getV1EmailSentEmail(data: GetV1EmailSentEmailData = {}): CancelablePromise<GetV1EmailSentEmailResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/email/sentEmail',
            query: {
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.resourceId
     * @returns string default response
     * @throws ApiError
     */
    public static deleteV1EmailByResourceId(data: DeleteV1EmailByResourceIdData): CancelablePromise<DeleteV1EmailByResourceIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/email/{resourceId}',
            path: {
                resourceId: data.resourceId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.resourceId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1EmailByResourceId(data: GetV1EmailByResourceIdData): CancelablePromise<GetV1EmailByResourceIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/email/{resourceId}',
            path: {
                resourceId: data.resourceId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.resourceId
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1EmailByResourceId(data: PutV1EmailByResourceIdData): CancelablePromise<PutV1EmailByResourceIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/email/{resourceId}',
            path: {
                resourceId: data.resourceId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.clientId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1InternalClientByClientIdAudit(data: GetV1InternalClientByClientIdAuditData): CancelablePromise<GetV1InternalClientByClientIdAuditResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/internal/client/{clientId}/audit',
            path: {
                clientId: data.clientId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @param data.requestBody
     * @returns unknown default response
     * @throws ApiError
     */
    public static postV1InternalCobFastForwardCobDateOfLoanByLoanId(data: PostV1InternalCobFastForwardCobDateOfLoanByLoanIdData): CancelablePromise<PostV1InternalCobFastForwardCobDateOfLoanByLoanIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/internal/cob/fast-forward-cob-date-of-loan/{loanId}',
            path: {
                loanId: data.loanId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.partitionSize
     * @returns string default response
     * @throws ApiError
     */
    public static getV1InternalCobPartitionsByPartitionSize(data: GetV1InternalCobPartitionsByPartitionSizeData): CancelablePromise<GetV1InternalCobPartitionsByPartitionSizeResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/internal/cob/partitions/{partitionSize}',
            path: {
                partitionSize: data.partitionSize
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.configName
     * @param data.configValue
     * @returns unknown default response
     * @throws ApiError
     */
    public static putV1InternalConfigurationsNameByConfigNameValueByConfigValue(data: PutV1InternalConfigurationsNameByConfigNameValueByConfigValueData): CancelablePromise<PutV1InternalConfigurationsNameByConfigNameValueByConfigValueResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/internal/configurations/name/{configName}/value/{configValue}',
            path: {
                configName: data.configName,
                configValue: data.configValue
            }
        });
    }
    
    /**
     * @returns unknown default response
     * @throws ApiError
     */
    public static deleteV1InternalExternalevents(): CancelablePromise<DeleteV1InternalExternaleventsResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/internal/externalevents'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.idempotencyKey
     * @param data.type
     * @param data.category
     * @param data.aggregateRootId
     * @returns ExternalEventResponse default response
     * @throws ApiError
     */
    public static getV1InternalExternalevents(data: GetV1InternalExternaleventsData = {}): CancelablePromise<GetV1InternalExternaleventsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/internal/externalevents',
            query: {
                idempotencyKey: data.idempotencyKey,
                type: data.type,
                category: data.category,
                aggregateRootId: data.aggregateRootId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.statusId
     * @returns number default response
     * @throws ApiError
     */
    public static getV1InternalLoanStatusByStatusId(data: GetV1InternalLoanStatusByStatusIdData): CancelablePromise<GetV1InternalLoanStatusByStatusIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/internal/loan/status/{statusId}',
            path: {
                statusId: data.statusId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @returns AdvancedPaymentData default response
     * @throws ApiError
     */
    public static getV1InternalLoanByLoanIdAdvancedPaymentAllocationRules(data: GetV1InternalLoanByLoanIdAdvancedPaymentAllocationRulesData): CancelablePromise<GetV1InternalLoanByLoanIdAdvancedPaymentAllocationRulesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/internal/loan/{loanId}/advanced-payment-allocation-rules',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @returns AuditData default response
     * @throws ApiError
     */
    public static getV1InternalLoanByLoanIdAudit(data: GetV1InternalLoanByLoanIdAuditData): CancelablePromise<GetV1InternalLoanByLoanIdAuditResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/internal/loan/{loanId}/audit',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @param data.transactionId
     * @returns AuditData default response
     * @throws ApiError
     */
    public static getV1InternalLoanByLoanIdTransactionByTransactionIdAudit(data: GetV1InternalLoanByLoanIdTransactionByTransactionIdAuditData): CancelablePromise<GetV1InternalLoanByLoanIdTransactionByTransactionIdAuditResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/internal/loan/{loanId}/transaction/{transactionId}/audit',
            path: {
                loanId: data.loanId,
                transactionId: data.transactionId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @param data.lockOwner
     * @param data.requestBody
     * @returns unknown default response
     * @throws ApiError
     */
    public static postV1InternalLoansByLoanIdPlaceLockByLockOwner(data: PostV1InternalLoansByLoanIdPlaceLockByLockOwnerData): CancelablePromise<PostV1InternalLoansByLoanIdPlaceLockByLockOwnerResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/internal/loans/{loanId}/place-lock/{lockOwner}',
            path: {
                loanId: data.loanId,
                lockOwner: data.lockOwner
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns string default response
     * @throws ApiError
     */
    public static getV1Officetransactions(): CancelablePromise<GetV1OfficetransactionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/officetransactions'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1Officetransactions(data: PostV1OfficetransactionsData = {}): CancelablePromise<PostV1OfficetransactionsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/officetransactions',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns string default response
     * @throws ApiError
     */
    public static getV1OfficetransactionsTemplate(): CancelablePromise<GetV1OfficetransactionsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/officetransactions/template'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.transactionId
     * @returns string default response
     * @throws ApiError
     */
    public static deleteV1OfficetransactionsByTransactionId(data: DeleteV1OfficetransactionsByTransactionIdData): CancelablePromise<DeleteV1OfficetransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/officetransactions/{transactionId}',
            path: {
                transactionId: data.transactionId
            }
        });
    }
    
    /**
     * List SMS Campaigns
     * Example Requests:
     *
     * smscampaigns
     * @param data The data for the request.
     * @param data.offset
     * @param data.limit
     * @param data.orderBy
     * @param data.sortOrder
     * @returns SmsCampaignData OK
     * @throws ApiError
     */
    public static getV1Smscampaigns(data: GetV1SmscampaignsData = {}): CancelablePromise<GetV1SmscampaignsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/smscampaigns',
            query: {
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            }
        });
    }
    
    /**
     * Create a SMS Campaign
     * Mandatory Fields
     * campaignName, campaignType, triggerType, providerId, runReportId, message
     *
     * Mandatory Fields for Cash based on selected report id
     * paramValue in json format
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CommandProcessingResult OK
     * @throws ApiError
     */
    public static postV1Smscampaigns(data: PostV1SmscampaignsData): CancelablePromise<PostV1SmscampaignsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/smscampaigns',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CampaignPreviewData default response
     * @throws ApiError
     */
    public static postV1SmscampaignsPreview(data: PostV1SmscampaignsPreviewData = {}): CancelablePromise<PostV1SmscampaignsPreviewResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/smscampaigns/preview',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve a SMS Campaign
     * Example Requests:
     *
     * smscampaigns/1
     *
     *
     * smscampaigns/1?template=true
     *
     *
     * smscampaigns/template
     * @returns SmsCampaignData OK
     * @throws ApiError
     */
    public static getV1SmscampaignsTemplate(): CancelablePromise<GetV1SmscampaignsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/smscampaigns/template'
        });
    }
    
    /**
     * Delete a SMS Campaign
     * Note: Only closed SMS Campaigns can be deleted
     * @param data The data for the request.
     * @param data.campaignId
     * @returns CommandProcessingResult OK
     * @throws ApiError
     */
    public static deleteV1SmscampaignsByCampaignId(data: DeleteV1SmscampaignsByCampaignIdData): CancelablePromise<DeleteV1SmscampaignsByCampaignIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/smscampaigns/{campaignId}',
            path: {
                campaignId: data.campaignId
            }
        });
    }
    
    /**
     * SMS Campaign
     * Activates | Deactivates | Reactivates
     * @param data The data for the request.
     * @param data.campaignId
     * @param data.command
     * @returns CommandProcessingResult OK
     * @throws ApiError
     */
    public static postV1SmscampaignsByCampaignId(data: PostV1SmscampaignsByCampaignIdData): CancelablePromise<PostV1SmscampaignsByCampaignIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/smscampaigns/{campaignId}',
            path: {
                campaignId: data.campaignId
            },
            query: {
                command: data.command
            }
        });
    }
    
    /**
     * Update a Campaign
     * @param data The data for the request.
     * @param data.campaignId
     * @param data.requestBody
     * @returns CommandProcessingResult OK
     * @throws ApiError
     */
    public static putV1SmscampaignsByCampaignId(data: PutV1SmscampaignsByCampaignIdData): CancelablePromise<PutV1SmscampaignsByCampaignIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/smscampaigns/{campaignId}',
            path: {
                campaignId: data.campaignId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve a SMS Campaign
     * Example Requests:
     *
     * smscampaigns/1
     *
     * @param data The data for the request.
     * @param data.resourceId
     * @returns SmsCampaignData OK
     * @throws ApiError
     */
    public static getV1SmscampaignsByResourceId(data: GetV1SmscampaignsByResourceIdData): CancelablePromise<GetV1SmscampaignsByResourceIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/smscampaigns/{resourceId}',
            path: {
                resourceId: data.resourceId
            }
        });
    }
    
    /**
     * @returns string default response
     * @throws ApiError
     */
    public static getV1TwofactorConfigure(): CancelablePromise<GetV1TwofactorConfigureResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/twofactor/configure'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1TwofactorConfigure(data: PutV1TwofactorConfigureData = {}): CancelablePromise<PutV1TwofactorConfigureResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/twofactor/configure',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.entity
     * @param data.entityId
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static deleteV1ByEntityByEntityIdImages(data: DeleteV1ByEntityByEntityIdImagesData): CancelablePromise<DeleteV1ByEntityByEntityIdImagesResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/{entity}/{entityId}/images',
            path: {
                entity: data.entity,
                entityId: data.entityId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.entity
     * @param data.entityId
     * @param data.maxWidth
     * @param data.maxHeight
     * @param data.output
     * @param data.accept
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1ByEntityByEntityIdImages(data: GetV1ByEntityByEntityIdImagesData): CancelablePromise<GetV1ByEntityByEntityIdImagesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/{entity}/{entityId}/images',
            path: {
                entity: data.entity,
                entityId: data.entityId
            },
            headers: {
                Accept: data.accept
            },
            query: {
                maxWidth: data.maxWidth,
                maxHeight: data.maxHeight,
                output: data.output
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.entity
     * @param data.entityId
     * @param data.contentLength
     * @param data.formData Upload new client image
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static postV1ByEntityByEntityIdImages(data: PostV1ByEntityByEntityIdImagesData): CancelablePromise<PostV1ByEntityByEntityIdImagesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/{entity}/{entityId}/images',
            path: {
                entity: data.entity,
                entityId: data.entityId
            },
            headers: {
                'Content-Length': data.contentLength
            },
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.entity
     * @param data.entityId
     * @param data.contentLength
     * @param data.formData Update client image
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static putV1ByEntityByEntityIdImages(data: PutV1ByEntityByEntityIdImagesData): CancelablePromise<PutV1ByEntityByEntityIdImagesResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/{entity}/{entityId}/images',
            path: {
                entity: data.entity,
                entityId: data.entityId
            },
            headers: {
                'Content-Length': data.contentLength
            },
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
}

export class CreditBureauConfigurationService {
    /**
     * @returns string default response
     * @throws ApiError
     */
    public static getV1CreditBureauConfiguration(): CancelablePromise<GetV1CreditBureauConfigurationResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/CreditBureauConfiguration'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.organisationCreditBureauId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1CreditBureauConfigurationConfigByOrganisationCreditBureauId(data: GetV1CreditBureauConfigurationConfigByOrganisationCreditBureauIdData): CancelablePromise<GetV1CreditBureauConfigurationConfigByOrganisationCreditBureauIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/CreditBureauConfiguration/config/{organisationCreditBureauId}',
            path: {
                organisationCreditBureauId: data.organisationCreditBureauId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.configurationId
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1CreditBureauConfigurationConfigurationByConfigurationId(data: PutV1CreditBureauConfigurationConfigurationByConfigurationIdData): CancelablePromise<PutV1CreditBureauConfigurationConfigurationByConfigurationIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/CreditBureauConfiguration/configuration/{configurationId}',
            path: {
                configurationId: data.configurationId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.creditBureauId
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1CreditBureauConfigurationConfigurationByCreditBureauId(data: PostV1CreditBureauConfigurationConfigurationByCreditBureauIdData): CancelablePromise<PostV1CreditBureauConfigurationConfigurationByCreditBureauIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/CreditBureauConfiguration/configuration/{creditBureauId}',
            path: {
                creditBureauId: data.creditBureauId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns string default response
     * @throws ApiError
     */
    public static getV1CreditBureauConfigurationLoanProduct(): CancelablePromise<GetV1CreditBureauConfigurationLoanProductResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/CreditBureauConfiguration/loanProduct'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanProductId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1CreditBureauConfigurationLoanProductByLoanProductId(data: GetV1CreditBureauConfigurationLoanProductByLoanProductIdData): CancelablePromise<GetV1CreditBureauConfigurationLoanProductByLoanProductIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/CreditBureauConfiguration/loanProduct/{loanProductId}',
            path: {
                loanProductId: data.loanProductId
            }
        });
    }
    
    /**
     * @returns string default response
     * @throws ApiError
     */
    public static getV1CreditBureauConfigurationMappings(): CancelablePromise<GetV1CreditBureauConfigurationMappingsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/CreditBureauConfiguration/mappings'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1CreditBureauConfigurationMappings(data: PutV1CreditBureauConfigurationMappingsData = {}): CancelablePromise<PutV1CreditBureauConfigurationMappingsResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/CreditBureauConfiguration/mappings',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.organisationCreditBureauId
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1CreditBureauConfigurationMappingsByOrganisationCreditBureauId(data: PostV1CreditBureauConfigurationMappingsByOrganisationCreditBureauIdData): CancelablePromise<PostV1CreditBureauConfigurationMappingsByOrganisationCreditBureauIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/CreditBureauConfiguration/mappings/{organisationCreditBureauId}',
            path: {
                organisationCreditBureauId: data.organisationCreditBureauId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns string default response
     * @throws ApiError
     */
    public static getV1CreditBureauConfigurationOrganisationCreditBureau(): CancelablePromise<GetV1CreditBureauConfigurationOrganisationCreditBureauResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/CreditBureauConfiguration/organisationCreditBureau'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1CreditBureauConfigurationOrganisationCreditBureau(data: PutV1CreditBureauConfigurationOrganisationCreditBureauData = {}): CancelablePromise<PutV1CreditBureauConfigurationOrganisationCreditBureauResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/CreditBureauConfiguration/organisationCreditBureau',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.organisationCreditBureauId
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1CreditBureauConfigurationOrganisationCreditBureauByOrganisationCreditBureauId(data: PostV1CreditBureauConfigurationOrganisationCreditBureauByOrganisationCreditBureauIdData): CancelablePromise<PostV1CreditBureauConfigurationOrganisationCreditBureauByOrganisationCreditBureauIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/CreditBureauConfiguration/organisationCreditBureau/{organisationCreditBureauId}',
            path: {
                organisationCreditBureauId: data.organisationCreditBureauId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class AccountingRulesService {
    /**
     * Retrieve Accounting Rules
     * Returns the list of defined accounting rules.
     *
     * Example Requests:
     *
     * accountingrules
     * @returns AccountingRuleData default response
     * @throws ApiError
     */
    public static getV1Accountingrules(): CancelablePromise<GetV1AccountingrulesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/accountingrules'
        });
    }
    
    /**
     * Create/Define a Accounting rule
     * Define a new Accounting rule.
     *
     * Mandatory Fields
     * name, officeId,
     * accountToDebit OR debitTags,
     * accountToCredit OR creditTags.
     *
     * Optional Fields
     * description
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostAccountingRulesResponse OK
     * @throws ApiError
     */
    public static postV1Accountingrules(data: PostV1AccountingrulesData = {}): CancelablePromise<PostV1AccountingrulesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/accountingrules',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Accounting Rule Details Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed Value Lists
     * Example Request:
     *
     * accountingrules/template
     * @returns AccountingRuleData default response
     * @throws ApiError
     */
    public static getV1AccountingrulesTemplate(): CancelablePromise<GetV1AccountingrulesTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/accountingrules/template'
        });
    }
    
    /**
     * Delete a Accounting Rule
     * Deletes a Accounting rule.
     * @param data The data for the request.
     * @param data.accountingRuleId accountingRuleId
     * @returns DeleteAccountingRulesResponse OK
     * @throws ApiError
     */
    public static deleteV1AccountingrulesByAccountingRuleId(data: DeleteV1AccountingrulesByAccountingRuleIdData): CancelablePromise<DeleteV1AccountingrulesByAccountingRuleIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/accountingrules/{accountingRuleId}',
            path: {
                accountingRuleId: data.accountingRuleId
            }
        });
    }
    
    /**
     * Retrieve a Accounting rule
     * Returns the details of a defined Accounting rule.
     *
     * Example Requests:
     *
     * accountingrules/1
     * @param data The data for the request.
     * @param data.accountingRuleId accountingRuleId
     * @returns AccountingRuleData default response
     * @throws ApiError
     */
    public static getV1AccountingrulesByAccountingRuleId(data: GetV1AccountingrulesByAccountingRuleIdData): CancelablePromise<GetV1AccountingrulesByAccountingRuleIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/accountingrules/{accountingRuleId}',
            path: {
                accountingRuleId: data.accountingRuleId
            }
        });
    }
    
    /**
     * Update a Accounting Rule
     * Updates the details of a Accounting rule.
     * @param data The data for the request.
     * @param data.accountingRuleId accountingRuleId
     * @param data.requestBody
     * @returns PutAccountingRulesResponse OK
     * @throws ApiError
     */
    public static putV1AccountingrulesByAccountingRuleId(data: PutV1AccountingrulesByAccountingRuleIdData): CancelablePromise<PutV1AccountingrulesByAccountingRuleIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/accountingrules/{accountingRuleId}',
            path: {
                accountingRuleId: data.accountingRuleId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class AccountNumberFormatService {
    /**
     * List Account number formats
     * Example Requests:
     *
     * accountnumberformats
     *
     *
     * accountnumberformats?fields=accountType,prefixType
     * @returns GetAccountNumberFormatsIdResponse OK
     * @throws ApiError
     */
    public static getV1Accountnumberformats(): CancelablePromise<GetV1AccountnumberformatsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/accountnumberformats'
        });
    }
    
    /**
     * Create an Account number format
     * Note: You may associate a single Account number format for a given account type
     * Mandatory Fields for Account number formats
     * accountType
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostAccountNumberFormatsResponse OK
     * @throws ApiError
     */
    public static postV1Accountnumberformats(data: PostV1AccountnumberformatsData = {}): CancelablePromise<PostV1AccountnumberformatsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/accountnumberformats',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Account number format Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed Value Lists
     *
     * Example Request:
     *
     * accountnumberformats/template
     * @returns GetAccountNumberFormatsResponseTemplate OK
     * @throws ApiError
     */
    public static getV1AccountnumberformatsTemplate(): CancelablePromise<GetV1AccountnumberformatsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/accountnumberformats/template'
        });
    }
    
    /**
     * Delete an Account number format
     * Note: Account numbers created while this format was active would remain unchanged.
     * @param data The data for the request.
     * @param data.accountNumberFormatId accountNumberFormatId
     * @returns DeleteAccountNumberFormatsResponse OK
     * @throws ApiError
     */
    public static deleteV1AccountnumberformatsByAccountNumberFormatId(data: DeleteV1AccountnumberformatsByAccountNumberFormatIdData): CancelablePromise<DeleteV1AccountnumberformatsByAccountNumberFormatIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/accountnumberformats/{accountNumberFormatId}',
            path: {
                accountNumberFormatId: data.accountNumberFormatId
            }
        });
    }
    
    /**
     * Retrieve an Account number format
     * Example Requests:
     *
     * accountnumberformats/1
     *
     *
     * accountnumberformats/1?template=true
     *
     *
     * accountnumberformats/1?fields=accountType,prefixType
     * @param data The data for the request.
     * @param data.accountNumberFormatId accountNumberFormatId
     * @returns GetAccountNumberFormatsIdResponse OK
     * @throws ApiError
     */
    public static getV1AccountnumberformatsByAccountNumberFormatId(data: GetV1AccountnumberformatsByAccountNumberFormatIdData): CancelablePromise<GetV1AccountnumberformatsByAccountNumberFormatIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/accountnumberformats/{accountNumberFormatId}',
            path: {
                accountNumberFormatId: data.accountNumberFormatId
            }
        });
    }
    
    /**
     * Update an Account number format
     * @param data The data for the request.
     * @param data.accountNumberFormatId accountNumberFormatId
     * @param data.requestBody
     * @returns PutAccountNumberFormatsResponse OK
     * @throws ApiError
     */
    public static putV1AccountnumberformatsByAccountNumberFormatId(data: PutV1AccountnumberformatsByAccountNumberFormatIdData): CancelablePromise<PutV1AccountnumberformatsByAccountNumberFormatIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/accountnumberformats/{accountNumberFormatId}',
            path: {
                accountNumberFormatId: data.accountNumberFormatId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class ShareAccountService {
    /**
     * List share applications/accounts
     * Lists share applications/accounts
     *
     * Example Requests:
     *
     * shareaccount
     * @param data The data for the request.
     * @param data.type type
     * @param data.offset offset
     * @param data.limit limit
     * @returns GetAccountsTypeResponse OK
     * @throws ApiError
     */
    public static getV1AccountsByType(data: GetV1AccountsByTypeData): CancelablePromise<GetV1AccountsByTypeResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/accounts/{type}',
            path: {
                type: data.type
            },
            query: {
                offset: data.offset,
                limit: data.limit
            }
        });
    }
    
    /**
     * Submit new share application
     * Submits new share application
     *
     * Mandatory Fields: clientId, productId, submittedDate, savingsAccountId, requestedShares, applicationDate
     *
     * Optional Fields: accountNo, externalId
     *
     * Inherited from Product (if not provided): minimumActivePeriod, minimumActivePeriodFrequencyType, lockinPeriodFrequency, lockinPeriodFrequencyType
     * @param data The data for the request.
     * @param data.type type
     * @param data.requestBody
     * @returns PostAccountsTypeResponse OK
     * @throws ApiError
     */
    public static postV1AccountsByType(data: PostV1AccountsByTypeData): CancelablePromise<PostV1AccountsByTypeResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/accounts/{type}',
            path: {
                type: data.type
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.type type
     * @param data.officeId
     * @param data.dateFormat
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1AccountsByTypeDownloadtemplate(data: GetV1AccountsByTypeDownloadtemplateData): CancelablePromise<GetV1AccountsByTypeDownloadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/accounts/{type}/downloadtemplate',
            path: {
                type: data.type
            },
            query: {
                officeId: data.officeId,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * Retrieve Share Account Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed Value Lists
     *
     * Example Requests:
     *
     * accounts/share/template?clientId=1
     *
     *
     * accounts/share/template?clientId=1&productId=1
     * @param data The data for the request.
     * @param data.type type
     * @param data.clientId clientId
     * @param data.productId productId
     * @returns GetAccountsTypeTemplateResponse OK
     * @throws ApiError
     */
    public static getV1AccountsByTypeTemplate(data: GetV1AccountsByTypeTemplateData): CancelablePromise<GetV1AccountsByTypeTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/accounts/{type}/template',
            path: {
                type: data.type
            },
            query: {
                clientId: data.clientId,
                productId: data.productId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.type type
     * @param data.formData Upload shared accounts template
     * @returns number default response
     * @throws ApiError
     */
    public static postV1AccountsByTypeUploadtemplate(data: PostV1AccountsByTypeUploadtemplateData): CancelablePromise<PostV1AccountsByTypeUploadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/accounts/{type}/uploadtemplate',
            path: {
                type: data.type
            },
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Retrieve a share application/account
     * Retrieves a share application/account
     *
     * Example Requests :
     *
     * shareaccount/1
     * @param data The data for the request.
     * @param data.accountId accountId
     * @param data.type type
     * @returns GetAccountsTypeAccountIdResponse OK
     * @throws ApiError
     */
    public static getV1AccountsByTypeByAccountId(data: GetV1AccountsByTypeByAccountIdData): CancelablePromise<GetV1AccountsByTypeByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/accounts/{type}/{accountId}',
            path: {
                accountId: data.accountId,
                type: data.type
            }
        });
    }
    
    /**
     * Approve share application | Undo approval share application | Reject share application | Activate a share account | Close a share account | Apply additional shares on a share account | Approve additional shares request on a share account | Reject additional shares request on a share account | Redeem shares on a share account
     * Approve share application:
     *
     * Approves share application so long as its in 'Submitted and pending approval' state.
     *
     * Undo approval share application:
     *
     * Will move 'approved' share application back to 'Submitted and pending approval' state.
     *
     * Reject share application:
     *
     * Rejects share application so long as its in 'Submitted and pending approval' state.
     *
     * Activate a share account:
     *
     * Results in an approved share application being converted into an 'active' share account.
     *
     * Close a share account:
     *
     * Results in an Activated share application being converted into an 'closed' share account.
     *
     * closedDate is closure date of share account
     *
     * Mandatory Fields: dateFormat,locale,closedDate
     *
     * Apply additional shares on a share account:
     *
     * requestedDate is requsted date of share purchase
     *
     * requestedShares is number of shares to be purchase
     *
     * Mandatory Fields: dateFormat,locale,requestedDate, requestedShares
     *
     * Approve additional shares request on a share account
     *
     * requestedShares is Share purchase transaction ids
     *
     * Mandatory Fields: requestedShares
     *
     * Reject additional shares request on a share account:
     *
     * requestedShares is Share purchase transaction ids
     *
     * Mandatory Fields: requestedShares
     *
     * Redeem shares on a share account:
     *
     * Results redeem some/all shares from share account.
     *
     * requestedDate is requsted date of shares redeem
     *
     * requestedShares is number of shares to be redeemed
     *
     * Mandatory Fields: dateFormat,locale,requestedDate,requestedShares
     *
     * Showing request/response for 'Reject additional shares request on a share account'
     *
     * For more info visit this link - https://fineract.apache.org/docs/legacy/#shareaccounts
     * @param data The data for the request.
     * @param data.type type
     * @param data.accountId accountId
     * @param data.requestBody
     * @param data.command command
     * @returns PostAccountsTypeAccountIdResponse OK
     * @throws ApiError
     */
    public static postV1AccountsByTypeByAccountId(data: PostV1AccountsByTypeByAccountIdData): CancelablePromise<PostV1AccountsByTypeByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/accounts/{type}/{accountId}',
            path: {
                type: data.type,
                accountId: data.accountId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Modify a share application
     * Share application can only be modified when in 'Submitted and pending approval' state. Once the application is approved, the details cannot be changed using this method. Specific api endpoints will be created to allow change of interest detail such as rate, compounding period, posting period etc
     * @param data The data for the request.
     * @param data.type type
     * @param data.accountId accountId
     * @param data.requestBody
     * @returns PutAccountsTypeAccountIdResponse OK
     * @throws ApiError
     */
    public static putV1AccountsByTypeByAccountId(data: PutV1AccountsByTypeByAccountIdData): CancelablePromise<PutV1AccountsByTypeByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/accounts/{type}/{accountId}',
            path: {
                type: data.type,
                accountId: data.accountId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class AccountTransfersService {
    /**
     * List account transfers
     * Lists account's transfers
     *
     * Example Requests:
     *
     *
     *
     * accounttransfers
     * @param data The data for the request.
     * @param data.externalId externalId
     * @param data.offset offset
     * @param data.limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @param data.accountDetailId accountDetailId
     * @returns GetAccountTransfersResponse OK
     * @throws ApiError
     */
    public static getV1Accounttransfers(data: GetV1AccounttransfersData = {}): CancelablePromise<GetV1AccounttransfersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/accounttransfers',
            query: {
                externalId: data.externalId,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder,
                accountDetailId: data.accountDetailId
            }
        });
    }
    
    /**
     * Create new Transfer
     * Ability to create new transfer of monetary funds from one account to another.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostAccountTransfersResponse OK
     * @throws ApiError
     */
    public static postV1Accounttransfers(data: PostV1AccounttransfersData): CancelablePromise<PostV1AccounttransfersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/accounttransfers',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Refund of an Active Loan by Transfer
     * Ability to refund an active loan by transferring to a savings account.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostAccountTransfersRefundByTransferResponse OK
     * @throws ApiError
     */
    public static postV1AccounttransfersRefundByTransfer(data: PostV1AccounttransfersRefundByTransferData): CancelablePromise<PostV1AccounttransfersRefundByTransferResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/accounttransfers/refundByTransfer',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Account Transfer Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     *
     *
     * Field Defaults
     *
     * Allowed Value Lists
     *
     * Example Requests:
     *
     *
     *
     * accounttransfers/template?fromAccountType=2&fromOfficeId=1
     *
     *
     *
     * accounttransfers/template?fromAccountType=2&fromOfficeId=1&fromClientId=1
     *
     *
     *
     * accounttransfers/template?fromClientId=1&fromAccountType=2&fromAccountId=1
     * @param data The data for the request.
     * @param data.fromOfficeId
     * @param data.fromClientId
     * @param data.fromAccountId
     * @param data.fromAccountType
     * @param data.toOfficeId
     * @param data.toClientId
     * @param data.toAccountId
     * @param data.toAccountType
     * @returns GetAccountTransfersTemplateResponse OK
     * @throws ApiError
     */
    public static getV1AccounttransfersTemplate(data: GetV1AccounttransfersTemplateData = {}): CancelablePromise<GetV1AccounttransfersTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/accounttransfers/template',
            query: {
                fromOfficeId: data.fromOfficeId,
                fromClientId: data.fromClientId,
                fromAccountId: data.fromAccountId,
                fromAccountType: data.fromAccountType,
                toOfficeId: data.toOfficeId,
                toClientId: data.toClientId,
                toAccountId: data.toAccountId,
                toAccountType: data.toAccountType
            }
        });
    }
    
    /**
     * Retrieve Refund of an Active Loan by Transfer Template
     * Retrieves Refund of an Active Loan by Transfer TemplateExample Requests :
     *
     *
     *
     * accounttransfers/templateRefundByTransfer?fromAccountId=2&fromAccountType=1& toAccountId=1&toAccountType=2&toClientId=1&toOfficeId=1
     * @param data The data for the request.
     * @param data.fromOfficeId
     * @param data.fromClientId
     * @param data.fromAccountId
     * @param data.fromAccountType
     * @param data.toOfficeId
     * @param data.toClientId
     * @param data.toAccountId
     * @param data.toAccountType
     * @returns GetAccountTransfersTemplateRefundByTransferResponse OK
     * @throws ApiError
     */
    public static getV1AccounttransfersTemplateRefundByTransfer(data: GetV1AccounttransfersTemplateRefundByTransferData = {}): CancelablePromise<GetV1AccounttransfersTemplateRefundByTransferResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/accounttransfers/templateRefundByTransfer',
            query: {
                fromOfficeId: data.fromOfficeId,
                fromClientId: data.fromClientId,
                fromAccountId: data.fromAccountId,
                fromAccountType: data.fromAccountType,
                toOfficeId: data.toOfficeId,
                toClientId: data.toClientId,
                toAccountId: data.toAccountId,
                toAccountType: data.toAccountType
            }
        });
    }
    
    /**
     * Retrieve account transfer
     * Retrieves account transfer
     *
     * Example Requests :
     *
     *
     *
     * accounttransfers/1
     * @param data The data for the request.
     * @param data.transferId transferId
     * @returns GetAccountTransfersPageItems OK
     * @throws ApiError
     */
    public static getV1AccounttransfersByTransferId(data: GetV1AccounttransfersByTransferIdData): CancelablePromise<GetV1AccounttransfersByTransferIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/accounttransfers/{transferId}',
            path: {
                transferId: data.transferId
            }
        });
    }
    
}

export class AdhocQueryApiService {
    /**
     * @returns AdHocData default response
     * @throws ApiError
     */
    public static getV1Adhocquery(): CancelablePromise<GetV1AdhocqueryResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/adhocquery'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static postV1Adhocquery(data: PostV1AdhocqueryData = {}): CancelablePromise<PostV1AdhocqueryResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/adhocquery',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns AdHocData default response
     * @throws ApiError
     */
    public static getV1AdhocqueryTemplate(): CancelablePromise<GetV1AdhocqueryTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/adhocquery/template'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.adHocId adHocId
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static deleteV1AdhocqueryByAdHocId(data: DeleteV1AdhocqueryByAdHocIdData): CancelablePromise<DeleteV1AdhocqueryByAdHocIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/adhocquery/{adHocId}',
            path: {
                adHocId: data.adHocId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.adHocId adHocId
     * @returns AdHocData default response
     * @throws ApiError
     */
    public static getV1AdhocqueryByAdHocId(data: GetV1AdhocqueryByAdHocIdData): CancelablePromise<GetV1AdhocqueryByAdHocIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/adhocquery/{adHocId}',
            path: {
                adHocId: data.adHocId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.adHocId adHocId
     * @param data.requestBody
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static putV1AdhocqueryByAdHocId(data: PutV1AdhocqueryByAdHocIdData): CancelablePromise<PutV1AdhocqueryByAdHocIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/adhocquery/{adHocId}',
            path: {
                adHocId: data.adHocId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class AuditsService {
    /**
     * List Audits
     * Get a 200 list of audits that match the criteria supplied and sorted by audit id in descending order, and are within the requestors' data scope. Also it supports pagination and sorting
     *
     * Example Requests:
     *
     * audits
     *
     * audits?fields=madeOnDate,maker,processingResult
     *
     * audits?makerDateTimeFrom=2013-03-25 08:00:00&makerDateTimeTo=2013-04-04 18:00:00
     *
     * audits?officeId=1
     *
     * audits?officeId=1&includeJson=true
     * @param data The data for the request.
     * @param data.actionName
     * @param data.entityName
     * @param data.resourceId
     * @param data.makerId
     * @param data.makerDateTimeFrom
     * @param data.makerDateTimeTo
     * @param data.checkerId
     * @param data.checkerDateTimeFrom
     * @param data.checkerDateTimeTo
     * @param data.status
     * @param data.clientId
     * @param data.loanId
     * @param data.officeId
     * @param data.groupId
     * @param data.savingsAccountId
     * @param data.processingResult
     * @param data.dateFormat
     * @param data.locale
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @param data.paged paged
     * @returns string default response
     * @throws ApiError
     */
    public static getV1Audits(data: GetV1AuditsData = {}): CancelablePromise<GetV1AuditsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/audits',
            query: {
                actionName: data.actionName,
                entityName: data.entityName,
                resourceId: data.resourceId,
                makerId: data.makerId,
                makerDateTimeFrom: data.makerDateTimeFrom,
                makerDateTimeTo: data.makerDateTimeTo,
                checkerId: data.checkerId,
                checkerDateTimeFrom: data.checkerDateTimeFrom,
                checkerDateTimeTo: data.checkerDateTimeTo,
                status: data.status,
                clientId: data.clientId,
                loanId: data.loanId,
                officeId: data.officeId,
                groupId: data.groupId,
                savingsAccountId: data.savingsAccountId,
                processingResult: data.processingResult,
                dateFormat: data.dateFormat,
                locale: data.locale,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder,
                paged: data.paged
            }
        });
    }
    
    /**
     * Audit Search Template
     * This is a convenience resource. It can be useful when building an Audit Search UI. "appUsers" are data scoped to the office/branch the requestor is associated with.
     *
     * Example Requests:
     *
     * audits/searchtemplate
     * audits/searchtemplate?fields=actionNames
     * @returns AuditSearchData default response
     * @throws ApiError
     */
    public static getV1AuditsSearchtemplate(): CancelablePromise<GetV1AuditsSearchtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/audits/searchtemplate'
        });
    }
    
    /**
     * Retrieve an Audit Entry
     * Example Requests:
     *
     * audits/20
     * audits/20?fields=madeOnDate,maker,processingResult
     * @param data The data for the request.
     * @param data.auditId
     * @returns AuditData default response
     * @throws ApiError
     */
    public static getV1AuditsByAuditId(data: GetV1AuditsByAuditIdData): CancelablePromise<GetV1AuditsByAuditIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/audits/{auditId}',
            path: {
                auditId: data.auditId
            }
        });
    }
    
}

export class AuthenticationHttpBasicService {
    /**
     * Verify authentication
     * Authenticates the credentials provided and returns the set roles and permissions allowed.
     * @param data The data for the request.
     * @param data.requestBody
     * @param data.returnClientList
     * @returns PostAuthenticationResponse OK
     * @throws ApiError
     */
    public static postV1Authentication(data: PostV1AuthenticationData): CancelablePromise<PostV1AuthenticationResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/authentication',
            query: {
                returnClientList: data.returnClientList
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Unauthenticated. Please login'
            }
        });
    }
    
}

export class BatchApiService {
    /**
     * Batch requests in a single transaction
     * The Apache Fineract Batch API is also capable of executing all the requests in a single transaction, by setting a Query Parameter, "enclosingTransaction=true". So, if one or more of the requests in a batch returns an erroneous response all of the Data base transactions made by other successful requests will be rolled back.
     *
     * If there has been a rollback in a transaction then a single response will be provided, with a '400' status code and a body consisting of the error details of the first failed request.
     * @param data The data for the request.
     * @param data.requestBody
     * @param data.enclosingTransaction enclosingTransaction
     * @returns BatchResponse Success
     * @throws ApiError
     */
    public static postV1Batches(data: PostV1BatchesData): CancelablePromise<PostV1BatchesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/batches',
            query: {
                enclosingTransaction: data.enclosingTransaction
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class BusinessDateManagementService {
    /**
     * List all business dates
     * @returns BusinessDateResponse default response
     * @throws ApiError
     */
    public static getV1Businessdate(): CancelablePromise<GetV1BusinessdateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/businessdate'
        });
    }
    
    /**
     * Update Business Date
     * @param data The data for the request.
     * @param data.idempotencyKey
     * @param data.requestBody
     * @returns BusinessDateUpdateResponse default response
     * @throws ApiError
     */
    public static postV1Businessdate(data: PostV1BusinessdateData = {}): CancelablePromise<PostV1BusinessdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/businessdate',
            headers: {
                'Idempotency-Key': data.idempotencyKey
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve a specific Business date
     * @param data The data for the request.
     * @param data.type type
     * @returns BusinessDateResponse default response
     * @throws ApiError
     */
    public static getV1BusinessdateByType(data: GetV1BusinessdateByTypeData): CancelablePromise<GetV1BusinessdateByTypeResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/businessdate/{type}',
            path: {
                type: data.type
            }
        });
    }
    
}

export class CacheService {
    /**
     * Retrieve Cache Types
     * Returns the list of caches.
     *
     * Example Requests:
     *
     * caches
     *
     * @returns CacheData default response
     * @throws ApiError
     */
    public static getV1Caches(): CancelablePromise<GetV1CachesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/caches'
        });
    }
    
    /**
     * Switch Cache
     * Switches the cache to chosen one.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CacheSwitchResponse default response
     * @throws ApiError
     */
    public static putV1Caches(data: PutV1CachesData = {}): CancelablePromise<PutV1CachesResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/caches',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class CashiersService {
    /**
     * @param data The data for the request.
     * @param data.officeId
     * @param data.tellerId
     * @param data.staffId
     * @param data.date
     * @returns CashierData default response
     * @throws ApiError
     */
    public static getV1Cashiers(data: GetV1CashiersData = {}): CancelablePromise<GetV1CashiersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/cashiers',
            query: {
                officeId: data.officeId,
                tellerId: data.tellerId,
                staffId: data.staffId,
                date: data.date
            }
        });
    }
    
}

export class CashierJournalsService {
    /**
     * @param data The data for the request.
     * @param data.officeId
     * @param data.tellerId
     * @param data.cashierId
     * @param data.dateRange
     * @returns TellerJournalData default response
     * @throws ApiError
     */
    public static getV1Cashiersjournal(data: GetV1CashiersjournalData = {}): CancelablePromise<GetV1CashiersjournalResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/cashiersjournal',
            query: {
                officeId: data.officeId,
                tellerId: data.tellerId,
                cashierId: data.cashierId,
                dateRange: data.dateRange
            }
        });
    }
    
}

export class CentersService {
    /**
     * List Centers
     * The default implementation supports pagination and sorting with the default pagination size set to 200 records. The parameter limit with description -1 will return all entries.
     *
     * Example Requests:
     *
     *
     *
     * centers
     *
     *
     *
     * centers?fields=name,officeName,joinedDate
     *
     *
     *
     * centers?offset=10&limit=50
     *
     *
     *
     * centers?orderBy=name&sortOrder=DESC
     * @param data The data for the request.
     * @param data.officeId officeId
     * @param data.staffId staffId
     * @param data.externalId externalId
     * @param data.name name
     * @param data.underHierarchy underHierarchy
     * @param data.paged paged
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @param data.meetingDate meetingDate
     * @param data.dateFormat dateFormat
     * @param data.locale locale
     * @returns GetCentersResponse OK
     * @throws ApiError
     */
    public static getV1Centers(data: GetV1CentersData = {}): CancelablePromise<GetV1CentersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/centers',
            query: {
                officeId: data.officeId,
                staffId: data.staffId,
                externalId: data.externalId,
                name: data.name,
                underHierarchy: data.underHierarchy,
                paged: data.paged,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder,
                meetingDate: data.meetingDate,
                dateFormat: data.dateFormat,
                locale: data.locale
            }
        });
    }
    
    /**
     * Create a Center
     * Creates a Center
     *
     * Mandatory Fields: name, officeId, active, activationDate (if active=true)
     *
     * Optional Fields: externalId, staffId, groupMembers
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostCentersResponse OK
     * @throws ApiError
     */
    public static postV1Centers(data: PostV1CentersData): CancelablePromise<PostV1CentersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/centers',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.officeId
     * @param data.staffId
     * @param data.dateFormat
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1CentersDownloadtemplate(data: GetV1CentersDownloadtemplateData = {}): CancelablePromise<GetV1CentersDownloadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/centers/downloadtemplate',
            query: {
                officeId: data.officeId,
                staffId: data.staffId,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * Retrieve a Center Template
     * Retrieves a Center Template
     *
     * Example Requests:
     *
     *
     *
     * centers/template
     *
     *
     *
     * centers/template?officeId=2
     * @param data The data for the request.
     * @param data.command command
     * @param data.officeId officeId
     * @param data.staffInSelectedOfficeOnly staffInSelectedOfficeOnly
     * @returns GetCentersTemplateResponse OK
     * @throws ApiError
     */
    public static getV1CentersTemplate(data: GetV1CentersTemplateData = {}): CancelablePromise<GetV1CentersTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/centers/template',
            query: {
                command: data.command,
                officeId: data.officeId,
                staffInSelectedOfficeOnly: data.staffInSelectedOfficeOnly
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.formData Upload centers template
     * @returns string default response
     * @throws ApiError
     */
    public static postV1CentersUploadtemplate(data: PostV1CentersUploadtemplateData = {}): CancelablePromise<PostV1CentersUploadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/centers/uploadtemplate',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Delete a Center
     * A Center can be deleted if it is in pending state and has no association - groups, loans or savings
     * @param data The data for the request.
     * @param data.centerId centerId
     * @returns DeleteCentersCenterIdResponse OK
     * @throws ApiError
     */
    public static deleteV1CentersByCenterId(data: DeleteV1CentersByCenterIdData): CancelablePromise<DeleteV1CentersByCenterIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/centers/{centerId}',
            path: {
                centerId: data.centerId
            }
        });
    }
    
    /**
     * Retrieve a Center
     * Retrieves a Center
     *
     * Example Requests:
     *
     *
     *
     * centers/1
     *
     *
     *
     * centers/1?associations=groupMembers
     * @param data The data for the request.
     * @param data.centerId centerId
     * @param data.staffInSelectedOfficeOnly staffInSelectedOfficeOnly
     * @returns GetCentersCenterIdResponse OK
     * @throws ApiError
     */
    public static getV1CentersByCenterId(data: GetV1CentersByCenterIdData): CancelablePromise<GetV1CentersByCenterIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/centers/{centerId}',
            path: {
                centerId: data.centerId
            },
            query: {
                staffInSelectedOfficeOnly: data.staffInSelectedOfficeOnly
            }
        });
    }
    
    /**
     * Activate a Center | Generate Collection Sheet | Save Collection Sheet | Close a Center | Associate Groups | Disassociate Groups
     * Activate a Center:
     *
     * Centers can be created in a Pending state. This API exists to enable center activation. If the center happens to be already active, this API will result in an error.
     *
     * Close a Center:
     *
     * Centers can be closed if they don't have any non-closed groups or saving accounts. If the Center has any active groups or savings accounts, this API will result in an error.
     *
     * Associate Groups:
     *
     * This API allows associating existing groups to a center. The groups are listed from the office to which the center is associated. If group(s) is already associated with a center, this API will result in an error.
     *
     * Disassociate Groups:
     *
     * This API allows to disassociate groups from a center.
     *
     * Generate Collection Sheet:
     *
     * This Api retrieves repayment details of all jlg loans under a center as on a specified meeting date.
     *
     * Save Collection Sheet:
     *
     * This Api allows the loan officer to perform bulk repayments of JLG loans for a center on a given meeting date.
     *
     * Showing Request/Response for Close a Center
     * @param data The data for the request.
     * @param data.centerId centerId
     * @param data.requestBody
     * @param data.command command
     * @returns PostCentersCenterIdResponse OK
     * @throws ApiError
     */
    public static postV1CentersByCenterId(data: PostV1CentersByCenterIdData): CancelablePromise<PostV1CentersByCenterIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/centers/{centerId}',
            path: {
                centerId: data.centerId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Update a Center
     * Updates a Center
     * @param data The data for the request.
     * @param data.centerId centerId
     * @param data.requestBody
     * @returns PutCentersCenterIdResponse OK
     * @throws ApiError
     */
    public static putV1CentersByCenterId(data: PutV1CentersByCenterIdData): CancelablePromise<PutV1CentersByCenterIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/centers/{centerId}',
            path: {
                centerId: data.centerId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Center accounts overview
     * An example of how a savings summary for a Center can be provided. This is requested in a specific use case of the reference application.
     *
     * It is quite reasonable to add resources like this to simplify User Interface development.
     *
     *
     *
     * Example Requests:
     *
     *
     *
     * centers/9/accounts
     * @param data The data for the request.
     * @param data.centerId centerId
     * @returns GetCentersCenterIdAccountsResponse OK
     * @throws ApiError
     */
    public static getV1CentersByCenterIdAccounts(data: GetV1CentersByCenterIdAccountsData): CancelablePromise<GetV1CentersByCenterIdAccountsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/centers/{centerId}/accounts',
            path: {
                centerId: data.centerId
            }
        });
    }
    
}

export class ChargesService {
    /**
     * Retrieve Charges
     * Returns the list of defined charges.
     *
     * Example Requests:
     *
     * charges
     * @returns ChargeData default response
     * @throws ApiError
     */
    public static getV1Charges(): CancelablePromise<GetV1ChargesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/charges'
        });
    }
    
    /**
     * Create/Define a Charge
     * Define a new charge that can later be associated with loans and savings through their respective product definitions or directly on each account instance.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostChargesResponse OK
     * @throws ApiError
     */
    public static postV1Charges(data: PostV1ChargesData): CancelablePromise<PostV1ChargesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/charges',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Charge Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed description Lists
     * Example Request:
     *
     * charges/template
     *
     * @returns ChargeData default response
     * @throws ApiError
     */
    public static getV1ChargesTemplate(): CancelablePromise<GetV1ChargesTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/charges/template'
        });
    }
    
    /**
     * Delete a Charge
     * Deletes a Charge.
     * @param data The data for the request.
     * @param data.chargeId chargeId
     * @returns DeleteChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static deleteV1ChargesByChargeId(data: DeleteV1ChargesByChargeIdData): CancelablePromise<DeleteV1ChargesByChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/charges/{chargeId}',
            path: {
                chargeId: data.chargeId
            }
        });
    }
    
    /**
     * Retrieve a Charge
     * Returns the details of a defined Charge.
     *
     * Example Requests:
     *
     * charges/1
     * @param data The data for the request.
     * @param data.chargeId chargeId
     * @returns GetChargesResponse OK
     * @throws ApiError
     */
    public static getV1ChargesByChargeId(data: GetV1ChargesByChargeIdData): CancelablePromise<GetV1ChargesByChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/charges/{chargeId}',
            path: {
                chargeId: data.chargeId
            }
        });
    }
    
    /**
     * Update a Charge
     * Updates the details of a Charge.
     * @param data The data for the request.
     * @param data.chargeId chargeId
     * @param data.requestBody
     * @returns PutChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static putV1ChargesByChargeId(data: PutV1ChargesByChargeIdData): CancelablePromise<PutV1ChargesByChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/charges/{chargeId}',
            path: {
                chargeId: data.chargeId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class ClientsAddressService {
    /**
     * @returns AddressData default response
     * @throws ApiError
     */
    public static getV1ClientAddressesTemplate(): CancelablePromise<GetV1ClientAddressesTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/client/addresses/template'
        });
    }
    
    /**
     * List all addresses for a Client
     * Example Requests:
     *
     * client/1/addresses
     *
     *
     * clients/1/addresses?status=false,true&&type=1,2,3
     * @param data The data for the request.
     * @param data.clientid clientId
     * @param data.status status
     * @param data.type type
     * @returns AddressData default response
     * @throws ApiError
     */
    public static getV1ClientByClientidAddresses(data: GetV1ClientByClientidAddressesData): CancelablePromise<GetV1ClientByClientidAddressesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/client/{clientid}/addresses',
            path: {
                clientid: data.clientid
            },
            query: {
                status: data.status,
                type: data.type
            }
        });
    }
    
    /**
     * Create an address for a Client
     * Mandatory Fields :
     * type and clientId
     * @param data The data for the request.
     * @param data.clientid clientId
     * @param data.requestBody
     * @param data.type type
     * @returns PostClientClientIdAddressesResponse OK
     * @throws ApiError
     */
    public static postV1ClientByClientidAddresses(data: PostV1ClientByClientidAddressesData): CancelablePromise<PostV1ClientByClientidAddressesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/client/{clientid}/addresses',
            path: {
                clientid: data.clientid
            },
            query: {
                type: data.type
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Update an address for a Client
     * All the address fields can be updated by using update client address API
     *
     * Mandatory Fields
     * type and addressId
     * @param data The data for the request.
     * @param data.clientid clientId
     * @param data.requestBody
     * @returns PutClientClientIdAddressesResponse OK
     * @throws ApiError
     */
    public static putV1ClientByClientidAddresses(data: PutV1ClientByClientidAddressesData): CancelablePromise<PutV1ClientByClientidAddressesResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/client/{clientid}/addresses',
            path: {
                clientid: data.clientid
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class ClientService {
    /**
     * List Clients
     * The list capability of clients can support pagination and sorting.
     *
     * Example Requests:
     *
     * clients
     *
     * clients?fields=displayName,officeName,timeline
     *
     * clients?offset=10&limit=50
     *
     * clients?orderBy=displayName&sortOrder=DESC
     * @param data The data for the request.
     * @param data.officeId officeId
     * @param data.externalId externalId
     * @param data.displayName displayName
     * @param data.firstName firstName
     * @param data.lastName lastName
     * @param data.status status
     * @param data.underHierarchy underHierarchy
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @param data.orphansOnly orphansOnly
     * @param data.legalForm
     * @returns GetClientsResponse OK
     * @throws ApiError
     */
    public static getV1Clients(data: GetV1ClientsData = {}): CancelablePromise<GetV1ClientsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients',
            query: {
                officeId: data.officeId,
                externalId: data.externalId,
                displayName: data.displayName,
                firstName: data.firstName,
                lastName: data.lastName,
                status: data.status,
                underHierarchy: data.underHierarchy,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder,
                orphansOnly: data.orphansOnly,
                legalForm: data.legalForm
            }
        });
    }
    
    /**
     * Create a Client
     * Note:
     *
     * 1. You can enter either:firstname/middlename/lastname - for a person (middlename is optional) OR fullname - for a business or organisation (or person known by one name).
     *
     * 2.If address is enable(enable-address=true), then additional field called address has to be passed.
     *
     * Mandatory Fields: firstname and lastname OR fullname, officeId, active=true and activationDate OR active=false, if(address enabled) address
     *
     * Optional Fields: groupId, externalId, accountNo, staffId, mobileNo, savingsProductId, genderId, clientTypeId, clientClassificationId
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostClientsResponse OK
     * @throws ApiError
     */
    public static postV1Clients(data: PostV1ClientsData): CancelablePromise<PostV1ClientsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/clients',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.legalFormType
     * @param data.officeId
     * @param data.staffId
     * @param data.dateFormat
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1ClientsDownloadtemplate(data: GetV1ClientsDownloadtemplateData = {}): CancelablePromise<GetV1ClientsDownloadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/downloadtemplate',
            query: {
                legalFormType: data.legalFormType,
                officeId: data.officeId,
                staffId: data.staffId,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * Delete a Client
     * If a client is in Pending state, you are allowed to Delete it. The delete is a 'hard delete' and cannot be recovered from. Once clients become active or have loans or savings associated with them, you cannot delete the client but you may Close the client if they have left the program.
     * @param data The data for the request.
     * @param data.externalId externalId
     * @returns DeleteClientsClientIdResponse OK
     * @throws ApiError
     */
    public static deleteV1ClientsExternalIdByExternalId(data: DeleteV1ClientsExternalIdByExternalIdData): CancelablePromise<DeleteV1ClientsExternalIdByExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/clients/external-id/{externalId}',
            path: {
                externalId: data.externalId
            }
        });
    }
    
    /**
     * Retrieve a Client by External Id
     * Example Requests:
     *
     * clients/123-456
     *
     *
     * clients/123-456?template=true
     *
     *
     * clients/123-456?fields=id,displayName,officeName
     * @param data The data for the request.
     * @param data.externalId externalId
     * @param data.staffInSelectedOfficeOnly staffInSelectedOfficeOnly
     * @returns GetClientsClientIdResponse OK
     * @throws ApiError
     */
    public static getV1ClientsExternalIdByExternalId(data: GetV1ClientsExternalIdByExternalIdData): CancelablePromise<GetV1ClientsExternalIdByExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/external-id/{externalId}',
            path: {
                externalId: data.externalId
            },
            query: {
                staffInSelectedOfficeOnly: data.staffInSelectedOfficeOnly
            }
        });
    }
    
    /**
     * Activate a Client | Close a Client | Reject a Client | Withdraw a Client | Reactivate a Client | UndoReject a Client | UndoWithdraw a Client | Assign a Staff | Unassign a Staff | Update Default Savings Account | Propose a Client Transfer | Withdraw a Client Transfer | Reject a Client Transfer | Accept a Client Transfer | Propose and Accept a Client Transfer
     * Activate a Client:
     *
     * Clients can be created in a Pending state. This API exists to enable client activation (for when a client becomes an approved member of the financial Institution).
     *
     * If the client happens to be already active this API will result in an error.
     *
     * Close a Client:
     *
     * Clients can be closed if they do not have any non-closed loans/savingsAccount. This API exists to close a client .
     *
     * If the client have any active loans/savingsAccount this API will result in an error.
     *
     * Reject a Client:
     *
     * Clients can be rejected when client is in pending for activation status.
     *
     * If the client is any other status, this API throws an error.
     *
     * Mandatory Fields: rejectionDate, rejectionReasonId
     *
     * Withdraw a Client:
     *
     * Client applications can be withdrawn when client is in a pending for activation status.
     *
     * If the client is any other status, this API throws an error.
     *
     * Mandatory Fields: withdrawalDate, withdrawalReasonId
     *
     * Reactivate a Client: Clients can be reactivated after they have been closed.
     *
     * Trying to reactivate a client in any other state throws an error.
     *
     * Mandatory Fields: reactivationDate
     *
     * UndoReject a Client:
     *
     * Clients can be reactivated after they have been rejected.
     *
     * Trying to reactivate a client in any other state throws an error.
     *
     * Mandatory Fields: reopenedDateUndoWithdraw a Client:
     *
     * Clients can be reactivated after they have been withdrawn.
     *
     * Trying to reactivate a client in any other state throws an error.
     *
     * Mandatory Fields: reopenedDate
     *
     * Assign a Staff:
     *
     * Allows you to assign a Staff for existed Client.
     *
     * The selected Staff should belong to the same office (or an officer higher up in the hierarchy) as the Client he manages.
     *
     * Unassign a Staff:
     *
     * Allows you to unassign the Staff assigned to a Client.
     *
     * Update Default Savings Account:
     *
     * Allows you to modify or assign a default savings account for an existing Client.
     *
     * The selected savings account should be one among the existing savings account for a particular customer.
     *
     * Propose a Client Transfer:
     *
     * Allows you to propose the transfer of a Client to a different Office.
     *
     * Withdraw a Client Transfer:
     *
     * Allows you to withdraw the proposed transfer of a Client to a different Office.
     *
     * Withdrawal can happen only if the destination Branch (to which the transfer was proposed) has not already accepted the transfer proposal
     *
     * Reject a Client Transfer:
     *
     * Allows the Destination Branch to reject the proposed Client Transfer.
     *
     * Accept a Client Transfer:
     *
     * Allows the Destination Branch to accept the proposed Client Transfer.
     *
     * The destination branch may also choose to link this client to a group (in which case, any existing active JLG loan of the client is rescheduled to match the meeting frequency of the group) and loan Officer at the time of accepting the transfer
     *
     * Propose and Accept a Client Transfer:
     *
     * Abstraction over the Propose and Accept Client Transfer API's which enable a user with Data Scope over both the Target and Destination Branches to directly transfer a Client to the destination Office.
     *
     * Showing request/response for 'Reject a Client Transfer'
     * @param data The data for the request.
     * @param data.externalId externalId
     * @param data.requestBody
     * @param data.command command
     * @returns PostClientsClientIdResponse OK
     * @throws ApiError
     */
    public static postV1ClientsExternalIdByExternalId(data: PostV1ClientsExternalIdByExternalIdData): CancelablePromise<PostV1ClientsExternalIdByExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/clients/external-id/{externalId}',
            path: {
                externalId: data.externalId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Update a Client using the External Id
     * Note: You can update any of the basic attributes of a client (but not its associations) using this API.
     *
     * Changing the relationship between a client and its office is not supported through this API. An API specific to handling transfers of clients between offices is available for the same.
     *
     * The relationship between a client and a group must be removed through the Groups API.
     * @param data The data for the request.
     * @param data.externalId externalId
     * @param data.requestBody
     * @returns PutClientsClientIdResponse OK
     * @throws ApiError
     */
    public static putV1ClientsExternalIdByExternalId(data: PutV1ClientsExternalIdByExternalIdData): CancelablePromise<PutV1ClientsExternalIdByExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/clients/external-id/{externalId}',
            path: {
                externalId: data.externalId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve client accounts overview
     * An example of how a loan portfolio summary can be provided. This is requested in a specific use case of the community application.
     * It is quite reasonable to add resources like this to simplify User Interface development.
     *
     * Example Requests:
     *
     * clients/123-456/accounts
     *
     * clients/123-456/accounts?fields=loanAccounts,savingsAccounts
     * @param data The data for the request.
     * @param data.externalId externalId
     * @returns GetClientsClientIdAccountsResponse OK
     * @throws ApiError
     */
    public static getV1ClientsExternalIdByExternalIdAccounts(data: GetV1ClientsExternalIdByExternalIdAccountsData): CancelablePromise<GetV1ClientsExternalIdByExternalIdAccountsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/external-id/{externalId}/accounts',
            path: {
                externalId: data.externalId
            },
            errors: {
                400: 'Bad Request'
            }
        });
    }
    
    /**
     * Retrieve client obligee details
     * Retrieve client obligee details using the client external Id
     * @param data The data for the request.
     * @param data.externalId
     * @returns GetClientObligeeDetailsResponse OK
     * @throws ApiError
     */
    public static getV1ClientsExternalIdByExternalIdObligeedetails(data: GetV1ClientsExternalIdByExternalIdObligeedetailsData): CancelablePromise<GetV1ClientsExternalIdByExternalIdObligeedetailsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/external-id/{externalId}/obligeedetails',
            path: {
                externalId: data.externalId
            },
            errors: {
                400: 'Bad Request'
            }
        });
    }
    
    /**
     * Retrieve client transfer template
     * Retrieve client transfer template using the client external Id
     * @param data The data for the request.
     * @param data.externalId
     * @returns GetClientTransferProposalDateResponse OK
     * @throws ApiError
     */
    public static getV1ClientsExternalIdByExternalIdTransferproposaldate(data: GetV1ClientsExternalIdByExternalIdTransferproposaldateData): CancelablePromise<GetV1ClientsExternalIdByExternalIdTransferproposaldateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/external-id/{externalId}/transferproposaldate',
            path: {
                externalId: data.externalId
            },
            errors: {
                400: 'Bad Request'
            }
        });
    }
    
    /**
     * Retrieve Client Details Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed Value Lists
     *
     * Example Request:
     *
     * clients/template
     * @param data The data for the request.
     * @param data.officeId officeId
     * @param data.commandParam commandParam
     * @param data.staffInSelectedOfficeOnly staffInSelectedOfficeOnly
     * @returns GetClientsTemplateResponse OK
     * @throws ApiError
     */
    public static getV1ClientsTemplate(data: GetV1ClientsTemplateData = {}): CancelablePromise<GetV1ClientsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/template',
            query: {
                officeId: data.officeId,
                commandParam: data.commandParam,
                staffInSelectedOfficeOnly: data.staffInSelectedOfficeOnly
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.legalFormType
     * @param data.formData Upload client template
     * @returns string default response
     * @throws ApiError
     */
    public static postV1ClientsUploadtemplate(data: PostV1ClientsUploadtemplateData = {}): CancelablePromise<PostV1ClientsUploadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/clients/uploadtemplate',
            query: {
                legalFormType: data.legalFormType
            },
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Delete a Client
     * If a client is in Pending state, you are allowed to Delete it. The delete is a 'hard delete' and cannot be recovered from. Once clients become active or have loans or savings associated with them, you cannot delete the client but you may Close the client if they have left the program.
     * @param data The data for the request.
     * @param data.clientId clientId
     * @returns DeleteClientsClientIdResponse OK
     * @throws ApiError
     */
    public static deleteV1ClientsByClientId(data: DeleteV1ClientsByClientIdData): CancelablePromise<DeleteV1ClientsByClientIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/clients/{clientId}',
            path: {
                clientId: data.clientId
            }
        });
    }
    
    /**
     * Retrieve a Client
     * Example Requests:
     *
     * clients/1
     *
     *
     * clients/1?template=true
     *
     *
     * clients/1?fields=id,displayName,officeName
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.staffInSelectedOfficeOnly staffInSelectedOfficeOnly
     * @returns GetClientsClientIdResponse OK
     * @throws ApiError
     */
    public static getV1ClientsByClientId(data: GetV1ClientsByClientIdData): CancelablePromise<GetV1ClientsByClientIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}',
            path: {
                clientId: data.clientId
            },
            query: {
                staffInSelectedOfficeOnly: data.staffInSelectedOfficeOnly
            }
        });
    }
    
    /**
     * Activate a Client | Close a Client | Reject a Client | Withdraw a Client | Reactivate a Client | UndoReject a Client | UndoWithdraw a Client | Assign a Staff | Unassign a Staff | Update Default Savings Account | Propose a Client Transfer | Withdraw a Client Transfer | Reject a Client Transfer | Accept a Client Transfer | Propose and Accept a Client Transfer
     * Activate a Client:
     *
     * Clients can be created in a Pending state. This API exists to enable client activation (for when a client becomes an approved member of the financial Institution).
     *
     * If the client happens to be already active this API will result in an error.
     *
     * Close a Client:
     *
     * Clients can be closed if they do not have any non-closed loans/savingsAccount. This API exists to close a client .
     *
     * If the client have any active loans/savingsAccount this API will result in an error.
     *
     * Reject a Client:
     *
     * Clients can be rejected when client is in pending for activation status.
     *
     * If the client is any other status, this API throws an error.
     *
     * Mandatory Fields: rejectionDate, rejectionReasonId
     *
     * Withdraw a Client:
     *
     * Client applications can be withdrawn when client is in a pending for activation status.
     *
     * If the client is any other status, this API throws an error.
     *
     * Mandatory Fields: withdrawalDate, withdrawalReasonId
     *
     * Reactivate a Client: Clients can be reactivated after they have been closed.
     *
     * Trying to reactivate a client in any other state throws an error.
     *
     * Mandatory Fields: reactivationDate
     *
     * UndoReject a Client:
     *
     * Clients can be reactivated after they have been rejected.
     *
     * Trying to reactivate a client in any other state throws an error.
     *
     * Mandatory Fields: reopenedDateUndoWithdraw a Client:
     *
     * Clients can be reactivated after they have been withdrawn.
     *
     * Trying to reactivate a client in any other state throws an error.
     *
     * Mandatory Fields: reopenedDate
     *
     * Assign a Staff:
     *
     * Allows you to assign a Staff for existed Client.
     *
     * The selected Staff should belong to the same office (or an officer higher up in the hierarchy) as the Client he manages.
     *
     * Unassign a Staff:
     *
     * Allows you to unassign the Staff assigned to a Client.
     *
     * Update Default Savings Account:
     *
     * Allows you to modify or assign a default savings account for an existing Client.
     *
     * The selected savings account should be one among the existing savings account for a particular customer.
     *
     * Propose a Client Transfer:
     *
     * Allows you to propose the transfer of a Client to a different Office.
     *
     * Withdraw a Client Transfer:
     *
     * Allows you to withdraw the proposed transfer of a Client to a different Office.
     *
     * Withdrawal can happen only if the destination Branch (to which the transfer was proposed) has not already accepted the transfer proposal
     *
     * Reject a Client Transfer:
     *
     * Allows the Destination Branch to reject the proposed Client Transfer.
     *
     * Accept a Client Transfer:
     *
     * Allows the Destination Branch to accept the proposed Client Transfer.
     *
     * The destination branch may also choose to link this client to a group (in which case, any existing active JLG loan of the client is rescheduled to match the meeting frequency of the group) and loan Officer at the time of accepting the transfer
     *
     * Propose and Accept a Client Transfer:
     *
     * Abstraction over the Propose and Accept Client Transfer API's which enable a user with Data Scope over both the Target and Destination Branches to directly transfer a Client to the destination Office.
     *
     * Showing request/response for 'Reject a Client Transfer'
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.requestBody
     * @param data.command command
     * @returns PostClientsClientIdResponse OK
     * @throws ApiError
     */
    public static postV1ClientsByClientId(data: PostV1ClientsByClientIdData): CancelablePromise<PostV1ClientsByClientIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/clients/{clientId}',
            path: {
                clientId: data.clientId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Update a Client
     * Note: You can update any of the basic attributes of a client (but not its associations) using this API.
     *
     * Changing the relationship between a client and its office is not supported through this API. An API specific to handling transfers of clients between offices is available for the same.
     *
     * The relationship between a client and a group must be removed through the Groups API.
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.requestBody
     * @returns PutClientsClientIdResponse OK
     * @throws ApiError
     */
    public static putV1ClientsByClientId(data: PutV1ClientsByClientIdData): CancelablePromise<PutV1ClientsByClientIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/clients/{clientId}',
            path: {
                clientId: data.clientId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve client accounts overview
     * An example of how a loan portfolio summary can be provided. This is requested in a specific use case of the community application.
     * It is quite reasonable to add resources like this to simplify User Interface development.
     *
     * Example Requests:
     *
     * clients/1/accounts
     *
     * clients/1/accounts?fields=loanAccounts,savingsAccounts
     * @param data The data for the request.
     * @param data.clientId clientId
     * @returns GetClientsClientIdAccountsResponse OK
     * @throws ApiError
     */
    public static getV1ClientsByClientIdAccounts(data: GetV1ClientsByClientIdAccountsData): CancelablePromise<GetV1ClientsByClientIdAccountsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}/accounts',
            path: {
                clientId: data.clientId
            },
            errors: {
                400: 'Bad Request'
            }
        });
    }
    
    /**
     * Retrieve client obligee details
     * Retrieve client obligee details
     * @param data The data for the request.
     * @param data.clientId
     * @returns GetClientObligeeDetailsResponse OK
     * @throws ApiError
     */
    public static getV1ClientsByClientIdObligeedetails(data: GetV1ClientsByClientIdObligeedetailsData): CancelablePromise<GetV1ClientsByClientIdObligeedetailsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}/obligeedetails',
            path: {
                clientId: data.clientId
            },
            errors: {
                400: 'Bad Request'
            }
        });
    }
    
    /**
     * Retrieve client transfer template
     * Retrieve client transfer template
     * @param data The data for the request.
     * @param data.clientId
     * @returns GetClientTransferProposalDateResponse OK
     * @throws ApiError
     */
    public static getV1ClientsByClientIdTransferproposaldate(data: GetV1ClientsByClientIdTransferproposaldateData): CancelablePromise<GetV1ClientsByClientIdTransferproposaldateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}/transferproposaldate',
            path: {
                clientId: data.clientId
            },
            errors: {
                400: 'Bad Request'
            }
        });
    }
    
}

export class ClientTransactionService {
    /**
     * List Client Transactions
     * The list capability of client transaction can support pagination.
     *
     * Example Requests:
     *
     * clients/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions
     *
     * clients/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?offset=10&limit=50
     * @param data The data for the request.
     * @param data.clientExternalId clientExternalId
     * @param data.offset offset
     * @param data.limit limit
     * @returns GetClientsClientIdTransactionsResponse OK
     * @throws ApiError
     */
    public static getV1ClientsExternalIdByClientExternalIdTransactions(data: GetV1ClientsExternalIdByClientExternalIdTransactionsData): CancelablePromise<GetV1ClientsExternalIdByClientExternalIdTransactionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/external-id/{clientExternalId}/transactions',
            path: {
                clientExternalId: data.clientExternalId
            },
            query: {
                offset: data.offset,
                limit: data.limit
            }
        });
    }
    
    /**
     * Retrieve a Client Transaction
     * Example Requests:
     * clients/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854
     *
     *
     * clients/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854?fields=id,officeName
     * @param data The data for the request.
     * @param data.clientExternalId clientExternalId
     * @param data.transactionExternalId transactionExternalId
     * @returns GetClientsClientIdTransactionsTransactionIdResponse OK
     * @throws ApiError
     */
    public static getV1ClientsExternalIdByClientExternalIdTransactionsExternalIdByTransactionExternalId(data: GetV1ClientsExternalIdByClientExternalIdTransactionsExternalIdByTransactionExternalIdData): CancelablePromise<GetV1ClientsExternalIdByClientExternalIdTransactionsExternalIdByTransactionExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/external-id/{clientExternalId}/transactions/external-id/{transactionExternalId}',
            path: {
                clientExternalId: data.clientExternalId,
                transactionExternalId: data.transactionExternalId
            }
        });
    }
    
    /**
     * Undo a Client Transaction
     * Undoes a Client Transaction
     * @param data The data for the request.
     * @param data.clientExternalId clientExternalId
     * @param data.transactionExternalId transactionExternalId
     * @param data.command command
     * @returns PostClientsClientIdTransactionsTransactionIdResponse OK
     * @throws ApiError
     */
    public static postV1ClientsExternalIdByClientExternalIdTransactionsExternalIdByTransactionExternalId(data: PostV1ClientsExternalIdByClientExternalIdTransactionsExternalIdByTransactionExternalIdData): CancelablePromise<PostV1ClientsExternalIdByClientExternalIdTransactionsExternalIdByTransactionExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/clients/external-id/{clientExternalId}/transactions/external-id/{transactionExternalId}',
            path: {
                clientExternalId: data.clientExternalId,
                transactionExternalId: data.transactionExternalId
            },
            query: {
                command: data.command
            }
        });
    }
    
    /**
     * Retrieve a Client Transaction
     * Example Requests:
     * clients/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions/1
     *
     *
     * clients/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions/1?fields=id,officeName
     * @param data The data for the request.
     * @param data.clientExternalId clientExternalId
     * @param data.transactionId transactionId
     * @returns GetClientsClientIdTransactionsTransactionIdResponse OK
     * @throws ApiError
     */
    public static getV1ClientsExternalIdByClientExternalIdTransactionsByTransactionId(data: GetV1ClientsExternalIdByClientExternalIdTransactionsByTransactionIdData): CancelablePromise<GetV1ClientsExternalIdByClientExternalIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/external-id/{clientExternalId}/transactions/{transactionId}',
            path: {
                clientExternalId: data.clientExternalId,
                transactionId: data.transactionId
            }
        });
    }
    
    /**
     * Undo a Client Transaction
     * Undoes a Client Transaction
     * @param data The data for the request.
     * @param data.clientExternalId clientExternalId
     * @param data.transactionId transactionId
     * @param data.command command
     * @returns PostClientsClientIdTransactionsTransactionIdResponse OK
     * @throws ApiError
     */
    public static postV1ClientsExternalIdByClientExternalIdTransactionsByTransactionId(data: PostV1ClientsExternalIdByClientExternalIdTransactionsByTransactionIdData): CancelablePromise<PostV1ClientsExternalIdByClientExternalIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/clients/external-id/{clientExternalId}/transactions/{transactionId}',
            path: {
                clientExternalId: data.clientExternalId,
                transactionId: data.transactionId
            },
            query: {
                command: data.command
            }
        });
    }
    
    /**
     * List Client Transactions
     * The list capability of client transaction can support pagination.
     *
     * Example Requests:
     *
     * clients/189/transactions
     *
     * clients/189/transactions?offset=10&limit=50
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.offset offset
     * @param data.limit limit
     * @returns GetClientsClientIdTransactionsResponse OK
     * @throws ApiError
     */
    public static getV1ClientsByClientIdTransactions(data: GetV1ClientsByClientIdTransactionsData): CancelablePromise<GetV1ClientsByClientIdTransactionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}/transactions',
            path: {
                clientId: data.clientId
            },
            query: {
                offset: data.offset,
                limit: data.limit
            }
        });
    }
    
    /**
     * Retrieve a Client Transaction
     * Example Requests:
     * clients/1/transactions/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854
     *
     *
     * clients/1/transactions/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854?fields=id,officeName
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.transactionExternalId transactionExternalId
     * @returns GetClientsClientIdTransactionsTransactionIdResponse OK
     * @throws ApiError
     */
    public static getV1ClientsByClientIdTransactionsExternalIdByTransactionExternalId(data: GetV1ClientsByClientIdTransactionsExternalIdByTransactionExternalIdData): CancelablePromise<GetV1ClientsByClientIdTransactionsExternalIdByTransactionExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}/transactions/external-id/{transactionExternalId}',
            path: {
                clientId: data.clientId,
                transactionExternalId: data.transactionExternalId
            }
        });
    }
    
    /**
     * Undo a Client Transaction
     * Undoes a Client Transaction
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.transactionExternalId transactionExternalId
     * @param data.command command
     * @returns PostClientsClientIdTransactionsTransactionIdResponse OK
     * @throws ApiError
     */
    public static postV1ClientsByClientIdTransactionsExternalIdByTransactionExternalId(data: PostV1ClientsByClientIdTransactionsExternalIdByTransactionExternalIdData): CancelablePromise<PostV1ClientsByClientIdTransactionsExternalIdByTransactionExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/clients/{clientId}/transactions/external-id/{transactionExternalId}',
            path: {
                clientId: data.clientId,
                transactionExternalId: data.transactionExternalId
            },
            query: {
                command: data.command
            }
        });
    }
    
    /**
     * Retrieve a Client Transaction
     * Example Requests:
     * clients/1/transactions/1
     *
     *
     * clients/1/transactions/1?fields=id,officeName
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.transactionId transactionId
     * @returns GetClientsClientIdTransactionsTransactionIdResponse OK
     * @throws ApiError
     */
    public static getV1ClientsByClientIdTransactionsByTransactionId(data: GetV1ClientsByClientIdTransactionsByTransactionIdData): CancelablePromise<GetV1ClientsByClientIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}/transactions/{transactionId}',
            path: {
                clientId: data.clientId,
                transactionId: data.transactionId
            }
        });
    }
    
    /**
     * Undo a Client Transaction
     * Undoes a Client Transaction
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.transactionId transactionId
     * @param data.command command
     * @returns PostClientsClientIdTransactionsTransactionIdResponse OK
     * @throws ApiError
     */
    public static postV1ClientsByClientIdTransactionsByTransactionId(data: PostV1ClientsByClientIdTransactionsByTransactionIdData): CancelablePromise<PostV1ClientsByClientIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/clients/{clientId}/transactions/{transactionId}',
            path: {
                clientId: data.clientId,
                transactionId: data.transactionId
            },
            query: {
                command: data.command
            }
        });
    }
    
}

export class ClientChargesService {
    /**
     * List Client Charges
     * The list capability of client charges supports pagination.Example Requests:
     * clients/1/charges
     *
     * clients/1/charges?offset=0&limit=5
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.chargeStatus chargeStatus
     * @param data.pendingPayment pendingPayment
     * @param data.limit limit
     * @param data.offset offset
     * @returns GetClientsClientIdChargesResponse OK
     * @throws ApiError
     */
    public static getV1ClientsByClientIdCharges(data: GetV1ClientsByClientIdChargesData): CancelablePromise<GetV1ClientsByClientIdChargesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}/charges',
            path: {
                clientId: data.clientId
            },
            query: {
                chargeStatus: data.chargeStatus,
                pendingPayment: data.pendingPayment,
                limit: data.limit,
                offset: data.offset
            }
        });
    }
    
    /**
     * Add Client Charge
     *  This API associates a Client charge with an implicit Client account
     * Mandatory Fields :
     * chargeId and dueDate
     * Optional Fields :
     * amount
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.requestBody
     * @returns PostClientsClientIdChargesResponse OK
     * @throws ApiError
     */
    public static postV1ClientsByClientIdCharges(data: PostV1ClientsByClientIdChargesData): CancelablePromise<PostV1ClientsByClientIdChargesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/clients/{clientId}/charges',
            path: {
                clientId: data.clientId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.clientId clientId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1ClientsByClientIdChargesTemplate(data: GetV1ClientsByClientIdChargesTemplateData): CancelablePromise<GetV1ClientsByClientIdChargesTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}/charges/template',
            path: {
                clientId: data.clientId
            }
        });
    }
    
    /**
     * Delete a Client Charge
     * Deletes a Client Charge on which no transactions have taken place (either payments or waivers).
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.chargeId chargeId
     * @returns DeleteClientsClientIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static deleteV1ClientsByClientIdChargesByChargeId(data: DeleteV1ClientsByClientIdChargesByChargeIdData): CancelablePromise<DeleteV1ClientsByClientIdChargesByChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/clients/{clientId}/charges/{chargeId}',
            path: {
                clientId: data.clientId,
                chargeId: data.chargeId
            }
        });
    }
    
    /**
     * Retrieve a Client Charge
     * Example Requests:
     * clients/1/charges/1
     *
     *
     * clients/1/charges/1?fields=name,id
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.chargeId chargeId
     * @returns GetClientsChargesPageItems OK
     * @throws ApiError
     */
    public static getV1ClientsByClientIdChargesByChargeId(data: GetV1ClientsByClientIdChargesByChargeIdData): CancelablePromise<GetV1ClientsByClientIdChargesByChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}/charges/{chargeId}',
            path: {
                clientId: data.clientId,
                chargeId: data.chargeId
            }
        });
    }
    
    /**
     * Pay a Client Charge | Waive a Client Charge
     * Pay a Client Charge:
     *
     * Mandatory Fields:transactionDate and amount "Pay either a part of or the entire due amount for a charge.(command=paycharge)
     *
     * Waive a Client Charge:
     *
     *
     * This API provides the facility of waiving off the remaining amount on a client charge (command=waive)
     *
     * Showing request/response for 'Pay a Client Charge'
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.chargeId chargeId
     * @param data.requestBody
     * @param data.command command
     * @returns PostClientsClientIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static postV1ClientsByClientIdChargesByChargeId(data: PostV1ClientsByClientIdChargesByChargeIdData): CancelablePromise<PostV1ClientsByClientIdChargesByChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/clients/{clientId}/charges/{chargeId}',
            path: {
                clientId: data.clientId,
                chargeId: data.chargeId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class ClientCollateralManagementService {
    /**
     * Get Clients Collateral Products
     * Get Collateral Product of a Client
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.prodId prodId
     * @returns ClientCollateralManagementData default response
     * @throws ApiError
     */
    public static getV1ClientsByClientIdCollaterals(data: GetV1ClientsByClientIdCollateralsData): CancelablePromise<GetV1ClientsByClientIdCollateralsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}/collaterals',
            path: {
                clientId: data.clientId
            },
            query: {
                prodId: data.prodId
            }
        });
    }
    
    /**
     * Add New Collateral For a Client
     * Add New Collateral For a Client
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.requestBody
     * @returns PostClientCollateralResponse OK
     * @throws ApiError
     */
    public static postV1ClientsByClientIdCollaterals(data: PostV1ClientsByClientIdCollateralsData): CancelablePromise<PostV1ClientsByClientIdCollateralsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/clients/{clientId}/collaterals',
            path: {
                clientId: data.clientId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Get Client Collateral Template
     * Get Client Collateral Template
     * @param data The data for the request.
     * @param data.clientId clientId
     * @returns LoanCollateralTemplateData default response
     * @throws ApiError
     */
    public static getV1ClientsByClientIdCollateralsTemplate(data: GetV1ClientsByClientIdCollateralsTemplateData): CancelablePromise<GetV1ClientsByClientIdCollateralsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}/collaterals/template',
            path: {
                clientId: data.clientId
            }
        });
    }
    
    /**
     * Get Client Collateral Data
     * Get Client Collateral Data
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.clientCollateralId clientCollateralId
     * @returns ClientCollateralManagementData default response
     * @throws ApiError
     */
    public static getV1ClientsByClientIdCollateralsByClientCollateralId(data: GetV1ClientsByClientIdCollateralsByClientCollateralIdData): CancelablePromise<GetV1ClientsByClientIdCollateralsByClientCollateralIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}/collaterals/{clientCollateralId}',
            path: {
                clientId: data.clientId,
                clientCollateralId: data.clientCollateralId
            }
        });
    }
    
    /**
     * Delete Client Collateral
     * Delete Client Collateral
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.collateralId collateralId
     * @returns DeleteClientCollateralResponse OK
     * @throws ApiError
     */
    public static deleteV1ClientsByClientIdCollateralsByCollateralId(data: DeleteV1ClientsByClientIdCollateralsByCollateralIdData): CancelablePromise<DeleteV1ClientsByClientIdCollateralsByCollateralIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/clients/{clientId}/collaterals/{collateralId}',
            path: {
                clientId: data.clientId,
                collateralId: data.collateralId
            }
        });
    }
    
    /**
     * Update New Collateral of a Client
     * Update New Collateral of a Client
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.collateralId collateralId
     * @param data.requestBody
     * @returns PutClientCollateralResponse OK
     * @throws ApiError
     */
    public static putV1ClientsByClientIdCollateralsByCollateralId(data: PutV1ClientsByClientIdCollateralsByCollateralIdData): CancelablePromise<PutV1ClientsByClientIdCollateralsByCollateralIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/clients/{clientId}/collaterals/{collateralId}',
            path: {
                clientId: data.clientId,
                collateralId: data.collateralId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class ClientFamilyMemberService {
    /**
     * @param data The data for the request.
     * @param data.clientId
     * @returns ClientFamilyMembersData default response
     * @throws ApiError
     */
    public static getV1ClientsByClientIdFamilymembers(data: GetV1ClientsByClientIdFamilymembersData): CancelablePromise<GetV1ClientsByClientIdFamilymembersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}/familymembers',
            path: {
                clientId: data.clientId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.clientId
     * @param data.requestBody
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static postV1ClientsByClientIdFamilymembers(data: PostV1ClientsByClientIdFamilymembersData): CancelablePromise<PostV1ClientsByClientIdFamilymembersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/clients/{clientId}/familymembers',
            path: {
                clientId: data.clientId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.clientId
     * @returns ClientFamilyMembersData default response
     * @throws ApiError
     */
    public static getV1ClientsByClientIdFamilymembersTemplate(data: GetV1ClientsByClientIdFamilymembersTemplateData): CancelablePromise<GetV1ClientsByClientIdFamilymembersTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}/familymembers/template',
            path: {
                clientId: data.clientId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.familyMemberId
     * @param data.clientId clientId
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static deleteV1ClientsByClientIdFamilymembersByFamilyMemberId(data: DeleteV1ClientsByClientIdFamilymembersByFamilyMemberIdData): CancelablePromise<DeleteV1ClientsByClientIdFamilymembersByFamilyMemberIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/clients/{clientId}/familymembers/{familyMemberId}',
            path: {
                familyMemberId: data.familyMemberId,
                clientId: data.clientId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.familyMemberId
     * @param data.clientId clientId
     * @returns ClientFamilyMembersData default response
     * @throws ApiError
     */
    public static getV1ClientsByClientIdFamilymembersByFamilyMemberId(data: GetV1ClientsByClientIdFamilymembersByFamilyMemberIdData): CancelablePromise<GetV1ClientsByClientIdFamilymembersByFamilyMemberIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}/familymembers/{familyMemberId}',
            path: {
                familyMemberId: data.familyMemberId,
                clientId: data.clientId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.familyMemberId
     * @param data.clientId clientId
     * @param data.requestBody
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static putV1ClientsByClientIdFamilymembersByFamilyMemberId(data: PutV1ClientsByClientIdFamilymembersByFamilyMemberIdData): CancelablePromise<PutV1ClientsByClientIdFamilymembersByFamilyMemberIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/clients/{clientId}/familymembers/{familyMemberId}',
            path: {
                familyMemberId: data.familyMemberId,
                clientId: data.clientId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class ClientIdentifierService {
    /**
     * List all Identifiers for a Client
     * Example Requests:
     * clients/1/identifiers
     *
     *
     * clients/1/identifiers?fields=documentKey,documentType,description
     * @param data The data for the request.
     * @param data.clientId clientId
     * @returns ClientIdentifierData default response
     * @throws ApiError
     */
    public static getV1ClientsByClientIdIdentifiers(data: GetV1ClientsByClientIdIdentifiersData): CancelablePromise<GetV1ClientsByClientIdIdentifiersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}/identifiers',
            path: {
                clientId: data.clientId
            }
        });
    }
    
    /**
     * Create an Identifier for a Client
     * Mandatory Fields
     * documentKey, documentTypeId
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.requestBody
     * @returns PostClientsClientIdIdentifiersResponse OK
     * @throws ApiError
     */
    public static postV1ClientsByClientIdIdentifiers(data: PostV1ClientsByClientIdIdentifiersData): CancelablePromise<PostV1ClientsByClientIdIdentifiersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/clients/{clientId}/identifiers',
            path: {
                clientId: data.clientId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Client Identifier Details Template
     * This is a convenience resource useful for building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed description Lists
     *
     *
     * Example Request:
     * clients/1/identifiers/template
     * @param data The data for the request.
     * @param data.clientId clientId
     * @returns ClientIdentifierData default response
     * @throws ApiError
     */
    public static getV1ClientsByClientIdIdentifiersTemplate(data: GetV1ClientsByClientIdIdentifiersTemplateData): CancelablePromise<GetV1ClientsByClientIdIdentifiersTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}/identifiers/template',
            path: {
                clientId: data.clientId
            }
        });
    }
    
    /**
     * Delete a Client Identifier
     * Deletes a Client Identifier
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.identifierId identifierId
     * @returns DeleteClientsClientIdIdentifiersIdentifierIdResponse OK
     * @throws ApiError
     */
    public static deleteV1ClientsByClientIdIdentifiersByIdentifierId(data: DeleteV1ClientsByClientIdIdentifiersByIdentifierIdData): CancelablePromise<DeleteV1ClientsByClientIdIdentifiersByIdentifierIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/clients/{clientId}/identifiers/{identifierId}',
            path: {
                clientId: data.clientId,
                identifierId: data.identifierId
            }
        });
    }
    
    /**
     * Retrieve a Client Identifier
     * Example Requests:
     * clients/1/identifier/2
     *
     *
     * clients/1/identifier/2?template=true
     *
     * clients/1/identifiers/2?fields=documentKey,documentType,description
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.identifierId identifierId
     * @returns GetClientsClientIdIdentifiersResponse OK
     * @throws ApiError
     */
    public static getV1ClientsByClientIdIdentifiersByIdentifierId(data: GetV1ClientsByClientIdIdentifiersByIdentifierIdData): CancelablePromise<GetV1ClientsByClientIdIdentifiersByIdentifierIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/clients/{clientId}/identifiers/{identifierId}',
            path: {
                clientId: data.clientId,
                identifierId: data.identifierId
            }
        });
    }
    
    /**
     * Update a Client Identifier
     * Updates a Client Identifier
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.identifierId identifierId
     * @param data.requestBody
     * @returns PutClientsClientIdIdentifiersIdentifierIdResponse OK
     * @throws ApiError
     */
    public static putV1ClientsByClientIdIdentifiersByIdentifierId(data: PutV1ClientsByClientIdIdentifiersByIdentifierIdData): CancelablePromise<PutV1ClientsByClientIdIdentifiersByIdentifierIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/clients/{clientId}/identifiers/{identifierId}',
            path: {
                clientId: data.clientId,
                identifierId: data.identifierId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class CodesService {
    /**
     * Retrieve Codes
     * Returns the list of codes.
     *
     * Example Requests:
     *
     * codes
     * @returns GetCodesResponse OK
     * @throws ApiError
     */
    public static getV1Codes(): CancelablePromise<GetV1CodesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/codes'
        });
    }
    
    /**
     * Create a Code
     * Creates a code. Codes created through api are always 'user defined' and so system defined is marked as false.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostCodesResponse OK
     * @throws ApiError
     */
    public static postV1Codes(data: PostV1CodesData): CancelablePromise<PostV1CodesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/codes',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Delete a Code
     * Deletes a code if it is not system defined.
     * @param data The data for the request.
     * @param data.codeId codeId
     * @returns DeleteCodesResponse OK
     * @throws ApiError
     */
    public static deleteV1CodesByCodeId(data: DeleteV1CodesByCodeIdData): CancelablePromise<DeleteV1CodesByCodeIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/codes/{codeId}',
            path: {
                codeId: data.codeId
            }
        });
    }
    
    /**
     * Retrieve a Code
     * Returns the details of a Code.
     *
     * Example Requests:
     *
     * codes/1
     * @param data The data for the request.
     * @param data.codeId codeId
     * @returns GetCodesResponse OK
     * @throws ApiError
     */
    public static getV1CodesByCodeId(data: GetV1CodesByCodeIdData): CancelablePromise<GetV1CodesByCodeIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/codes/{codeId}',
            path: {
                codeId: data.codeId
            }
        });
    }
    
    /**
     * Update a Code
     * Updates the details of a code if it is not system defined.
     * @param data The data for the request.
     * @param data.codeId codeId
     * @param data.requestBody
     * @returns PutCodesResponse OK
     * @throws ApiError
     */
    public static putV1CodesByCodeId(data: PutV1CodesByCodeIdData): CancelablePromise<PutV1CodesByCodeIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/codes/{codeId}',
            path: {
                codeId: data.codeId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class CodeValuesService {
    /**
     * List Code Values
     * Returns the list of Code Values for a given Code
     *
     * Example Requests:
     *
     * codes/1/codevalues
     * @param data The data for the request.
     * @param data.codeId codeId
     * @returns GetCodeValuesDataResponse A List of code values for a given code
     * @throws ApiError
     */
    public static getV1CodesByCodeIdCodevalues(data: GetV1CodesByCodeIdCodevaluesData): CancelablePromise<GetV1CodesByCodeIdCodevaluesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/codes/{codeId}/codevalues',
            path: {
                codeId: data.codeId
            }
        });
    }
    
    /**
     * Create a Code description
     * @param data The data for the request.
     * @param data.codeId codeId
     * @param data.requestBody
     * @returns PostCodeValueDataResponse OK
     * @throws ApiError
     */
    public static postV1CodesByCodeIdCodevalues(data: PostV1CodesByCodeIdCodevaluesData): CancelablePromise<PostV1CodesByCodeIdCodevaluesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/codes/{codeId}/codevalues',
            path: {
                codeId: data.codeId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Delete a Code description
     * Deletes a code description
     * @param data The data for the request.
     * @param data.codeId codeId
     * @param data.codeValueId codeValueId
     * @returns DeleteCodeValueDataResponse OK
     * @throws ApiError
     */
    public static deleteV1CodesByCodeIdCodevaluesByCodeValueId(data: DeleteV1CodesByCodeIdCodevaluesByCodeValueIdData): CancelablePromise<DeleteV1CodesByCodeIdCodevaluesByCodeValueIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/codes/{codeId}/codevalues/{codeValueId}',
            path: {
                codeId: data.codeId,
                codeValueId: data.codeValueId
            }
        });
    }
    
    /**
     * Retrieve a Code description
     * Returns the details of a Code Value
     *
     * Example Requests:
     *
     * codes/1/codevalues/1
     * @param data The data for the request.
     * @param data.codeValueId codeValueId
     * @param data.codeId codeId
     * @returns GetCodeValuesDataResponse OK
     * @throws ApiError
     */
    public static getV1CodesByCodeIdCodevaluesByCodeValueId(data: GetV1CodesByCodeIdCodevaluesByCodeValueIdData): CancelablePromise<GetV1CodesByCodeIdCodevaluesByCodeValueIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/codes/{codeId}/codevalues/{codeValueId}',
            path: {
                codeValueId: data.codeValueId,
                codeId: data.codeId
            }
        });
    }
    
    /**
     * Update a Code description
     * Updates the details of a code description.
     * @param data The data for the request.
     * @param data.codeId codeId
     * @param data.codeValueId codeValueId
     * @param data.requestBody
     * @returns PutCodeValueDataResponse OK
     * @throws ApiError
     */
    public static putV1CodesByCodeIdCodevaluesByCodeValueId(data: PutV1CodesByCodeIdCodevaluesByCodeValueIdData): CancelablePromise<PutV1CodesByCodeIdCodevaluesByCodeValueIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/codes/{codeId}/codevalues/{codeValueId}',
            path: {
                codeId: data.codeId,
                codeValueId: data.codeValueId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class CollateralManagementService {
    /**
     * Get All Collaterals
     * Fetch all Collateral Products
     * @returns CollateralManagementData default response
     * @throws ApiError
     */
    public static getV1CollateralManagement(): CancelablePromise<GetV1CollateralManagementResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/collateral-management'
        });
    }
    
    /**
     * Create a new collateral
     * Collateral Creation
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostCollateralManagementProductResponse OK
     * @throws ApiError
     */
    public static postV1CollateralManagement(data: PostV1CollateralManagementData): CancelablePromise<PostV1CollateralManagementResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/collateral-management',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Get Collateral Template
     * Get Collateral Template
     * @returns CurrencyData default response
     * @throws ApiError
     */
    public static getV1CollateralManagementTemplate(): CancelablePromise<GetV1CollateralManagementTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/collateral-management/template'
        });
    }
    
    /**
     * Delete a Collateral
     * Delete Collateral
     * @param data The data for the request.
     * @param data.collateralId collateralId
     * @returns DeleteCollateralProductResponse OK
     * @throws ApiError
     */
    public static deleteV1CollateralManagementByCollateralId(data: DeleteV1CollateralManagementByCollateralIdData): CancelablePromise<DeleteV1CollateralManagementByCollateralIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/collateral-management/{collateralId}',
            path: {
                collateralId: data.collateralId
            }
        });
    }
    
    /**
     * Get Collateral
     * Fetch Collateral
     * @param data The data for the request.
     * @param data.collateralId collateralId
     * @returns CollateralManagementData default response
     * @throws ApiError
     */
    public static getV1CollateralManagementByCollateralId(data: GetV1CollateralManagementByCollateralIdData): CancelablePromise<GetV1CollateralManagementByCollateralIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/collateral-management/{collateralId}',
            path: {
                collateralId: data.collateralId
            }
        });
    }
    
    /**
     * Update Collateral
     * Update Collateral
     * @param data The data for the request.
     * @param data.collateralId collateralId
     * @param data.requestBody
     * @returns PutCollateralProductResponse OK
     * @throws ApiError
     */
    public static putV1CollateralManagementByCollateralId(data: PutV1CollateralManagementByCollateralIdData): CancelablePromise<PutV1CollateralManagementByCollateralIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/collateral-management/{collateralId}',
            path: {
                collateralId: data.collateralId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class CollectionSheetService {
    /**
     * Generate Individual Collection Sheet | Save Collection Sheet
     * Generate Individual Collection Sheet:
     *
     * This Api retrieves repayment details of all individual loans under a office as on a specified meeting date.
     *
     * Save Collection Sheet:
     *
     * This Api allows the loan officer to perform bulk repayments of individual loans and deposit of mandatory savings on a given meeting date.
     * @param data The data for the request.
     * @param data.requestBody
     * @param data.command command
     * @returns PostCollectionSheetResponse OK
     * @throws ApiError
     */
    public static postV1Collectionsheet(data: PostV1CollectionsheetData): CancelablePromise<PostV1CollectionsheetResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/collectionsheet',
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class GlobalConfigurationService {
    /**
     * Retrieve Global Configuration | Retrieve Global Configuration for surveys
     * Returns the list global enable/disable configurations.
     *
     * Example Requests:
     *
     * configurations
     *
     *
     * Returns the list global enable/disable survey configurations.
     *
     * Example Requests:
     *
     * configurations/survey
     * @param data The data for the request.
     * @param data.survey survey
     * @returns GetGlobalConfigurationsResponse List of example \n response \nsurveys response   \ngiven below
     * @throws ApiError
     */
    public static getV1Configurations(data: GetV1ConfigurationsData = {}): CancelablePromise<GetV1ConfigurationsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/configurations',
            query: {
                survey: data.survey
            }
        });
    }
    
    /**
     * Update Global Configuration by name
     * Updates an enable/disable global configuration item by name
     * @param data The data for the request.
     * @param data.configName configName
     * @param data.requestBody
     * @returns PutGlobalConfigurationsResponse OK
     * @throws ApiError
     */
    public static putV1ConfigurationsNameByConfigName(data: PutV1ConfigurationsNameByConfigNameData): CancelablePromise<PutV1ConfigurationsNameByConfigNameResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/configurations/name/{configName}',
            path: {
                configName: data.configName
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Global Configuration
     * Returns a global enable/disable configuration.
     *
     * Example Requests:
     *
     * configurations/name/enable-address
     * @param data The data for the request.
     * @param data.name name
     * @returns GlobalConfigurationPropertyData OK
     * @throws ApiError
     */
    public static getV1ConfigurationsNameByName(data: GetV1ConfigurationsNameByNameData): CancelablePromise<GetV1ConfigurationsNameByNameResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/configurations/name/{name}',
            path: {
                name: data.name
            }
        });
    }
    
    /**
     * Retrieve Global Configuration
     * Returns a global enable/disable configurations.
     *
     * Example Requests:
     *
     * configurations/1
     * @param data The data for the request.
     * @param data.configId configId
     * @returns GlobalConfigurationPropertyData OK
     * @throws ApiError
     */
    public static getV1ConfigurationsByConfigId(data: GetV1ConfigurationsByConfigIdData): CancelablePromise<GetV1ConfigurationsByConfigIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/configurations/{configId}',
            path: {
                configId: data.configId
            }
        });
    }
    
    /**
     * Update Global Configuration
     * Updates an enable/disable global configuration item.
     * @param data The data for the request.
     * @param data.configId configId
     * @param data.requestBody
     * @returns PutGlobalConfigurationsResponse OK
     * @throws ApiError
     */
    public static putV1ConfigurationsByConfigId(data: PutV1ConfigurationsByConfigIdData): CancelablePromise<PutV1ConfigurationsByConfigIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/configurations/{configId}',
            path: {
                configId: data.configId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class CurrencyService {
    /**
     * Retrieve Currency Configuration
     * Returns the list of currencies permitted for use AND the list of currencies not selected (but available for selection).
     *
     * Example Requests:
     *
     * currencies
     * currencies?fields=selectedCurrencyOptions
     *
     * @returns CurrencyConfigurationData default response
     * @throws ApiError
     */
    public static getV1Currencies(): CancelablePromise<GetV1CurrenciesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/currencies'
        });
    }
    
    /**
     * Update Currency Configuration
     * Updates the list of currencies permitted for use.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CurrencyUpdateResponse default response
     * @throws ApiError
     */
    public static putV1Currencies(data: PutV1CurrenciesData = {}): CancelablePromise<PutV1CurrenciesResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/currencies',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class DataTablesService {
    /**
     * List Data Tables
     * Lists registered data tables and the Apache Fineract Core application table they are registered to.
     *
     * ARGUMENTS
     *
     * apptable  - optional
     * The Apache Fineract core application table.
     *
     * Example Requests:
     *
     * datatables?apptable=m_client
     *
     *
     * datatables
     * @param data The data for the request.
     * @param data.apptable apptable
     * @returns GetDataTablesResponse OK
     * @throws ApiError
     */
    public static getV1Datatables(data: GetV1DatatablesData = {}): CancelablePromise<GetV1DatatablesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/datatables',
            query: {
                apptable: data.apptable
            }
        });
    }
    
    /**
     * Create Data Table
     * Create a new data table and registers it with the Apache Fineract Core application table.
     *
     * Field Descriptions
     *
     * Mandatory - datatableName :
     *
     * The name of the Data Table.
     *
     * Mandatory - apptableName
     *
     * Application table name. Must be one of the following:
     *
     * m_client
     *
     * m_group
     *
     * m_loan
     *
     * m_office
     *
     * m_saving_account
     *
     * m_product_loan
     *
     * m_savings_product
     *
     * Mandatory - columns
     * An array of columns in the new Data Table.
     *
     * Optional - multiRow
     *
     * Allows to create multiple entries in the Data Table. Optional, defaults to false. If this property is not provided Data Table will allow only one entry.
     *
     * Field Descriptions - columns
     *
     * Mandatory - name
     *
     * Name of the created column. Can contain only alphanumeric characters, underscores and spaces, but cannot start with a number. Cannot start or end with an underscore or space.
     *
     * Mandatory - type
     *
     * Column type. Must be one of the following:
     *
     * Boolean
     *
     * Date
     *
     * DateTime
     *
     * Decimal
     *
     * Dropdown
     *
     *
     * Number
     *
     * String
     *
     * Text
     *
     * Mandatory [type = Dropdown] - code
     *
     * Used in Code description fields. Column name becomes: code_cd_name. Mandatory if using type Dropdown, otherwise an error is returned.
     *
     * Optional - mandatory
     *
     * Determines whether this column must have a value in every entry. Optional, defaults to false.
     *
     * Mandatory [type = String] - length
     *
     * Length of the text field. Mandatory if type String is used, otherwise an error is returned.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostDataTablesResponse OK
     * @throws ApiError
     */
    public static postV1Datatables(data: PostV1DatatablesData): CancelablePromise<PostV1DatatablesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/datatables',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Deregister Data Table
     * Deregisters a data table. It will no longer be available through the API.
     * @param data The data for the request.
     * @param data.datatable datatable
     * @returns PutDataTablesResponse OK
     * @throws ApiError
     */
    public static postV1DatatablesDeregisterByDatatable(data: PostV1DatatablesDeregisterByDatatableData): CancelablePromise<PostV1DatatablesDeregisterByDatatableResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/datatables/deregister/{datatable}',
            path: {
                datatable: data.datatable
            }
        });
    }
    
    /**
     * Register Data Table
     * Registers a data table with the Apache Fineract Core application table. This allows the data table to be maintained through the API. In case the datatable is a PPI (survey table), a parameter category should be pass along with the request. The API currently support one category (200)
     * @param data The data for the request.
     * @param data.datatable datatable
     * @param data.apptable apptable
     * @param data.requestBody
     * @returns PutDataTablesResponse OK
     * @throws ApiError
     */
    public static postV1DatatablesRegisterByDatatableByApptable(data: PostV1DatatablesRegisterByDatatableByApptableData): CancelablePromise<PostV1DatatablesRegisterByDatatableByApptableResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/datatables/register/{datatable}/{apptable}',
            path: {
                datatable: data.datatable,
                apptable: data.apptable
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Delete Data Table
     * Deletes a data table and deregisters it from the Apache Fineract Core application table.
     * @param data The data for the request.
     * @param data.datatableName datatableName
     * @returns DeleteDataTablesResponse OK
     * @throws ApiError
     */
    public static deleteV1DatatablesByDatatableName(data: DeleteV1DatatablesByDatatableNameData): CancelablePromise<DeleteV1DatatablesByDatatableNameResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/datatables/{datatableName}',
            path: {
                datatableName: data.datatableName
            }
        });
    }
    
    /**
     * Update Data Table
     * Modifies fields of a data table. If the apptableName parameter is passed, data table is deregistered and registered with the new application table.
     * @param data The data for the request.
     * @param data.datatableName datatableName
     * @param data.requestBody
     * @returns PutDataTablesResponse OK
     * @throws ApiError
     */
    public static putV1DatatablesByDatatableName(data: PutV1DatatablesByDatatableNameData): CancelablePromise<PutV1DatatablesByDatatableNameResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/datatables/{datatableName}',
            path: {
                datatableName: data.datatableName
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Data Table Details
     * Lists a registered data table details and the Apache Fineract Core application table they are registered to.
     * @param data The data for the request.
     * @param data.datatable datatable
     * @returns GetDataTablesResponse OK
     * @throws ApiError
     */
    public static getV1DatatablesByDatatable(data: GetV1DatatablesByDatatableData): CancelablePromise<GetV1DatatablesByDatatableResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/datatables/{datatable}',
            path: {
                datatable: data.datatable
            }
        });
    }
    
    /**
     * Query Data Table values
     * Query values from a registered data table.
     * @param data The data for the request.
     * @param data.datatable datatable
     * @param data.columnFilter columnFilter
     * @param data.valueFilter valueFilter
     * @param data.resultColumns resultColumns
     * @returns string OK
     * @throws ApiError
     */
    public static getV1DatatablesByDatatableQuery(data: GetV1DatatablesByDatatableQueryData): CancelablePromise<GetV1DatatablesByDatatableQueryResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/datatables/{datatable}/query',
            path: {
                datatable: data.datatable
            },
            query: {
                columnFilter: data.columnFilter,
                valueFilter: data.valueFilter,
                resultColumns: data.resultColumns
            }
        });
    }
    
    /**
     * Query Data Table values
     * Query values from a registered data table.
     * @param data The data for the request.
     * @param data.datatable datatable
     * @param data.requestBody
     * @returns string OK
     * @throws ApiError
     */
    public static postV1DatatablesByDatatableQuery(data: PostV1DatatablesByDatatableQueryData): CancelablePromise<PostV1DatatablesByDatatableQueryResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/datatables/{datatable}/query',
            path: {
                datatable: data.datatable
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Delete Entry(s) in Data Table
     * Deletes the entry (if it exists) for data tables that are one-to-one with the application table.
     * Deletes the entries (if they exist) for data tables that are one-to-many with the application table.
     * @param data The data for the request.
     * @param data.datatable datatable
     * @param data.apptableId apptableId
     * @returns DeleteDataTablesDatatableAppTableIdResponse OK
     * @throws ApiError
     */
    public static deleteV1DatatablesByDatatableByApptableId(data: DeleteV1DatatablesByDatatableByApptableIdData): CancelablePromise<DeleteV1DatatablesByDatatableByApptableIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/datatables/{datatable}/{apptableId}',
            path: {
                datatable: data.datatable,
                apptableId: data.apptableId
            }
        });
    }
    
    /**
     * Retrieve Entry(s) from Data Table
     * Gets the entry (if it exists) for data tables that are one to one with the application table.
     * Gets the entries (if they exist) for data tables that are one to many with the application table.
     *
     * Note: The 'fields' parameter is not available for datatables.
     *
     * ARGUMENTS
     * orderoptional Specifies the order in which data is returned.genericResultSetoptional, defaults to false If 'true' an optimised JSON format is returned suitable for tabular display of data. This format is used by the default data tables UI functionality.
     * Example Requests:
     *
     * datatables/extra_client_details/1
     *
     *
     * datatables/extra_family_details/1?order=`Date of Birth` desc
     *
     *
     * datatables/extra_client_details/1?genericResultSet=true
     * @param data The data for the request.
     * @param data.datatable datatable
     * @param data.apptableId apptableId
     * @param data.order order
     * @returns string OK
     * @throws ApiError
     */
    public static getV1DatatablesByDatatableByApptableId(data: GetV1DatatablesByDatatableByApptableIdData): CancelablePromise<GetV1DatatablesByDatatableByApptableIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/datatables/{datatable}/{apptableId}',
            path: {
                datatable: data.datatable,
                apptableId: data.apptableId
            },
            query: {
                order: data.order
            }
        });
    }
    
    /**
     * Create Entry in Data Table
     * Adds a row to the data table.
     *
     * Note that the default datatable UI functionality converts any field name containing spaces to underscores when using the API. This means the field name "Business Description" is considered the same as "Business_Description". So you shouldn't have both "versions" in any data table.
     * @param data The data for the request.
     * @param data.datatable datatable
     * @param data.apptableId apptableId
     * @param data.requestBody {
     * "BusinessDescription": "Livestock sales",
     * "Comment": "First comment made",
     * "Education_cv": "Primary",
     * "Gender_cd": 6,
     * "HighestRatePaid": 8.5,
     * "NextVisit": "01 October 2012",
     * "YearsinBusiness": 5,
     * "dateFormat": "dd MMMM yyyy",
     * "locale": "en"
     * }
     * @returns PostDataTablesAppTableIdResponse OK
     * @throws ApiError
     */
    public static postV1DatatablesByDatatableByApptableId(data: PostV1DatatablesByDatatableByApptableIdData): CancelablePromise<PostV1DatatablesByDatatableByApptableIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/datatables/{datatable}/{apptableId}',
            path: {
                datatable: data.datatable,
                apptableId: data.apptableId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Update Entry in Data Table (One to One)
     * Updates the row (if it exists) of the data table.
     * @param data The data for the request.
     * @param data.datatable datatable
     * @param data.apptableId apptableId
     * @param data.requestBody
     * @returns PutDataTablesAppTableIdResponse OK
     * @throws ApiError
     */
    public static putV1DatatablesByDatatableByApptableId(data: PutV1DatatablesByDatatableByApptableIdData): CancelablePromise<PutV1DatatablesByDatatableByApptableIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/datatables/{datatable}/{apptableId}',
            path: {
                datatable: data.datatable,
                apptableId: data.apptableId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Delete Entry in Datatable (One to Many)
     * Deletes the entry (if it exists) for data tables that are one to many with the application table.
     *
     *
     * @param data The data for the request.
     * @param data.datatable datatable
     * @param data.apptableId apptableId
     * @param data.datatableId datatableId
     * @returns DeleteDataTablesDatatableAppTableIdDatatableIdResponse OK
     * @throws ApiError
     */
    public static deleteV1DatatablesByDatatableByApptableIdByDatatableId(data: DeleteV1DatatablesByDatatableByApptableIdByDatatableIdData): CancelablePromise<DeleteV1DatatablesByDatatableByApptableIdByDatatableIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/datatables/{datatable}/{apptableId}/{datatableId}',
            path: {
                datatable: data.datatable,
                apptableId: data.apptableId,
                datatableId: data.datatableId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.datatable
     * @param data.apptableId
     * @param data.datatableId
     * @param data.order
     * @param data.genericResultSet Optional flag to format the response
     * @returns string default response
     * @throws ApiError
     */
    public static getV1DatatablesByDatatableByApptableIdByDatatableId(data: GetV1DatatablesByDatatableByApptableIdByDatatableIdData): CancelablePromise<GetV1DatatablesByDatatableByApptableIdByDatatableIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/datatables/{datatable}/{apptableId}/{datatableId}',
            path: {
                datatable: data.datatable,
                apptableId: data.apptableId,
                datatableId: data.datatableId
            },
            query: {
                order: data.order,
                genericResultSet: data.genericResultSet
            }
        });
    }
    
    /**
     * Update Entry in Data Table (One to Many)
     * Updates the row (if it exists) of the data table.
     * @param data The data for the request.
     * @param data.datatable datatable
     * @param data.apptableId apptableId
     * @param data.datatableId datatableId
     * @param data.requestBody
     * @returns PutDataTablesAppTableIdDatatableIdResponse OK
     * @throws ApiError
     */
    public static putV1DatatablesByDatatableByApptableIdByDatatableId(data: PutV1DatatablesByDatatableByApptableIdByDatatableIdData): CancelablePromise<PutV1DatatablesByDatatableByApptableIdByDatatableIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/datatables/{datatable}/{apptableId}/{datatableId}',
            path: {
                datatable: data.datatable,
                apptableId: data.apptableId,
                datatableId: data.datatableId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class DelinquencyRangeAndBucketsManagementService {
    /**
     * List all Delinquency Buckets
     * @returns DelinquencyBucketData default response
     * @throws ApiError
     */
    public static getV1DelinquencyBuckets(): CancelablePromise<GetV1DelinquencyBucketsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/delinquency/buckets'
        });
    }
    
    /**
     * Create Delinquency Bucket
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostDelinquencyBucketResponse OK
     * @throws ApiError
     */
    public static postV1DelinquencyBuckets(data: PostV1DelinquencyBucketsData): CancelablePromise<PostV1DelinquencyBucketsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/delinquency/buckets',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Delete Delinquency Bucket based on the Id
     * @param data The data for the request.
     * @param data.delinquencyBucketId delinquencyBucketId
     * @returns DeleteDelinquencyBucketResponse OK
     * @throws ApiError
     */
    public static deleteV1DelinquencyBucketsByDelinquencyBucketId(data: DeleteV1DelinquencyBucketsByDelinquencyBucketIdData): CancelablePromise<DeleteV1DelinquencyBucketsByDelinquencyBucketIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/delinquency/buckets/{delinquencyBucketId}',
            path: {
                delinquencyBucketId: data.delinquencyBucketId
            }
        });
    }
    
    /**
     * Retrieve a specific Delinquency Bucket based on the Id
     * @param data The data for the request.
     * @param data.delinquencyBucketId delinquencyBucketId
     * @returns DelinquencyBucketData default response
     * @throws ApiError
     */
    public static getV1DelinquencyBucketsByDelinquencyBucketId(data: GetV1DelinquencyBucketsByDelinquencyBucketIdData): CancelablePromise<GetV1DelinquencyBucketsByDelinquencyBucketIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/delinquency/buckets/{delinquencyBucketId}',
            path: {
                delinquencyBucketId: data.delinquencyBucketId
            }
        });
    }
    
    /**
     * Update Delinquency Bucket based on the Id
     * @param data The data for the request.
     * @param data.delinquencyBucketId delinquencyBucketId
     * @param data.requestBody
     * @returns PutDelinquencyBucketResponse OK
     * @throws ApiError
     */
    public static putV1DelinquencyBucketsByDelinquencyBucketId(data: PutV1DelinquencyBucketsByDelinquencyBucketIdData): CancelablePromise<PutV1DelinquencyBucketsByDelinquencyBucketIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/delinquency/buckets/{delinquencyBucketId}',
            path: {
                delinquencyBucketId: data.delinquencyBucketId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * List all Delinquency Ranges
     * @returns DelinquencyRangeData default response
     * @throws ApiError
     */
    public static getV1DelinquencyRanges(): CancelablePromise<GetV1DelinquencyRangesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/delinquency/ranges'
        });
    }
    
    /**
     * Create Delinquency Range
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostDelinquencyRangeResponse OK
     * @throws ApiError
     */
    public static postV1DelinquencyRanges(data: PostV1DelinquencyRangesData): CancelablePromise<PostV1DelinquencyRangesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/delinquency/ranges',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Update Delinquency Range based on the Id
     * @param data The data for the request.
     * @param data.delinquencyRangeId delinquencyRangeId
     * @returns DeleteDelinquencyRangeResponse OK
     * @throws ApiError
     */
    public static deleteV1DelinquencyRangesByDelinquencyRangeId(data: DeleteV1DelinquencyRangesByDelinquencyRangeIdData): CancelablePromise<DeleteV1DelinquencyRangesByDelinquencyRangeIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/delinquency/ranges/{delinquencyRangeId}',
            path: {
                delinquencyRangeId: data.delinquencyRangeId
            }
        });
    }
    
    /**
     * Retrieve a specific Delinquency Range based on the Id
     * @param data The data for the request.
     * @param data.delinquencyRangeId delinquencyRangeId
     * @returns DelinquencyRangeData default response
     * @throws ApiError
     */
    public static getV1DelinquencyRangesByDelinquencyRangeId(data: GetV1DelinquencyRangesByDelinquencyRangeIdData): CancelablePromise<GetV1DelinquencyRangesByDelinquencyRangeIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/delinquency/ranges/{delinquencyRangeId}',
            path: {
                delinquencyRangeId: data.delinquencyRangeId
            }
        });
    }
    
    /**
     * Update Delinquency Range based on the Id
     * @param data The data for the request.
     * @param data.delinquencyRangeId delinquencyRangeId
     * @param data.requestBody
     * @returns PutDelinquencyRangeResponse OK
     * @throws ApiError
     */
    public static putV1DelinquencyRangesByDelinquencyRangeId(data: PutV1DelinquencyRangesByDelinquencyRangeIdData): CancelablePromise<PutV1DelinquencyRangesByDelinquencyRangeIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/delinquency/ranges/{delinquencyRangeId}',
            path: {
                delinquencyRangeId: data.delinquencyRangeId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class EntityDataTableService {
    /**
     * List Entity-Datatable Checks
     * The list capability of Entity-Datatable Checks can support pagination.
     *
     * OPTIONAL ARGUMENTS
     * offset Integer optional, defaults to 0 Indicates the result from which pagination startslimit Integer optional, defaults to 200 Restricts the size of results returned. To override the default and return all entries you must explicitly pass a non-positive integer value for limit e.g. limit=0, or limit=-1
     * Example Request:
     *
     * entityDatatableChecks?offset=0&limit=15
     * @param data The data for the request.
     * @param data.status status
     * @param data.entity entity
     * @param data.productId productId
     * @param data.offset offset
     * @param data.limit limit
     * @returns GetEntityDatatableChecksResponse OK
     * @throws ApiError
     */
    public static getV1EntityDatatableChecks(data: GetV1EntityDatatableChecksData = {}): CancelablePromise<GetV1EntityDatatableChecksResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/entityDatatableChecks',
            query: {
                status: data.status,
                entity: data.entity,
                productId: data.productId,
                offset: data.offset,
                limit: data.limit
            }
        });
    }
    
    /**
     * Create Entity-Datatable Checks
     * Mandatory Fields :
     * entity, status, datatableName
     *
     * Non-Mandatory Fields :
     * productId
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostEntityDatatableChecksTemplateResponse OK
     * @throws ApiError
     */
    public static postV1EntityDatatableChecks(data: PostV1EntityDatatableChecksData): CancelablePromise<PostV1EntityDatatableChecksResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/entityDatatableChecks',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Entity-Datatable Checks Template
     * This is a convenience resource useful for building maintenance user interface screens for Entity-Datatable Checks applications. The template data returned consists of:
     *
     * Allowed description Lists
     * Example Request:
     *
     * entityDatatableChecks/template
     * @returns GetEntityDatatableChecksTemplateResponse OK
     * @throws ApiError
     */
    public static getV1EntityDatatableChecksTemplate(): CancelablePromise<GetV1EntityDatatableChecksTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/entityDatatableChecks/template'
        });
    }
    
    /**
     * Delete Entity-Datatable Checks
     * Deletes an existing Entity-Datatable Check
     * @param data The data for the request.
     * @param data.entityDatatableCheckId entityDatatableCheckId
     * @returns DeleteEntityDatatableChecksTemplateResponse OK
     * @throws ApiError
     */
    public static deleteV1EntityDatatableChecksByEntityDatatableCheckId(data: DeleteV1EntityDatatableChecksByEntityDatatableCheckIdData): CancelablePromise<DeleteV1EntityDatatableChecksByEntityDatatableCheckIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/entityDatatableChecks/{entityDatatableCheckId}',
            path: {
                entityDatatableCheckId: data.entityDatatableCheckId
            }
        });
    }
    
}

export class FineractEntityService {
    /**
     * @returns string default response
     * @throws ApiError
     */
    public static getV1Entitytoentitymapping(): CancelablePromise<GetV1EntitytoentitymappingResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/entitytoentitymapping'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.mapId
     * @returns string default response
     * @throws ApiError
     */
    public static deleteV1EntitytoentitymappingByMapId(data: DeleteV1EntitytoentitymappingByMapIdData): CancelablePromise<DeleteV1EntitytoentitymappingByMapIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/entitytoentitymapping/{mapId}',
            path: {
                mapId: data.mapId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.mapId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1EntitytoentitymappingByMapId(data: GetV1EntitytoentitymappingByMapIdData): CancelablePromise<GetV1EntitytoentitymappingByMapIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/entitytoentitymapping/{mapId}',
            path: {
                mapId: data.mapId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.mapId
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1EntitytoentitymappingByMapId(data: PutV1EntitytoentitymappingByMapIdData): CancelablePromise<PutV1EntitytoentitymappingByMapIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/entitytoentitymapping/{mapId}',
            path: {
                mapId: data.mapId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.mapId
     * @param data.fromId
     * @param data.toId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1EntitytoentitymappingByMapIdByFromIdByToId(data: GetV1EntitytoentitymappingByMapIdByFromIdByToIdData): CancelablePromise<GetV1EntitytoentitymappingByMapIdByFromIdByToIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/entitytoentitymapping/{mapId}/{fromId}/{toId}',
            path: {
                mapId: data.mapId,
                fromId: data.fromId,
                toId: data.toId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.relId
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1EntitytoentitymappingByRelId(data: PostV1EntitytoentitymappingByRelIdData): CancelablePromise<PostV1EntitytoentitymappingByRelIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/entitytoentitymapping/{relId}',
            path: {
                relId: data.relId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class ExternalAssetOwnerLoanProductAttributesService {
    /**
     * Retrieve All Loan Product Attributes
     * Retrieves all Loan Product Attributes with a given loanProductId
     * @param data The data for the request.
     * @param data.loanProductId loanProductId
     * @param data.attributeKey attributeKey
     * @returns PageExternalTransferLoanProductAttributesData default response
     * @throws ApiError
     */
    public static getV1ExternalAssetOwnersLoanProductByLoanProductIdAttributes(data: GetV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesData): CancelablePromise<GetV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/external-asset-owners/loan-product/{loanProductId}/attributes',
            path: {
                loanProductId: data.loanProductId
            },
            query: {
                attributeKey: data.attributeKey
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanProductId loanProductId
     * @param data.requestBody
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static postV1ExternalAssetOwnersLoanProductByLoanProductIdAttributes(data: PostV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesData): CancelablePromise<PostV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/external-asset-owners/loan-product/{loanProductId}/attributes',
            path: {
                loanProductId: data.loanProductId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Update a Loan Product Attribute
     * Updates a loan product attribute with a given loan product id and attribute id
     * @param data The data for the request.
     * @param data.loanProductId loanProductId
     * @param data.id attributeId
     * @param data.requestBody
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static putV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesById(data: PutV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesByIdData): CancelablePromise<PutV1ExternalAssetOwnersLoanProductByLoanProductIdAttributesByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/external-asset-owners/loan-product/{loanProductId}/attributes/{id}',
            path: {
                loanProductId: data.loanProductId,
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class ExternalAssetOwnersService {
    /**
     * Retrieve Journal Entries of Owner
     * Retrieve Journal entries of owner by owner externalId
     * @param data The data for the request.
     * @param data.ownerExternalId ownerExternalId
     * @param data.offset offset
     * @param data.limit limit
     * @returns ExternalOwnerJournalEntryData default response
     * @throws ApiError
     */
    public static getV1ExternalAssetOwnersOwnersExternalIdByOwnerExternalIdJournalEntries(data: GetV1ExternalAssetOwnersOwnersExternalIdByOwnerExternalIdJournalEntriesData): CancelablePromise<GetV1ExternalAssetOwnersOwnersExternalIdByOwnerExternalIdJournalEntriesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/external-asset-owners/owners/external-id/{ownerExternalId}/journal-entries',
            path: {
                ownerExternalId: data.ownerExternalId
            },
            query: {
                offset: data.offset,
                limit: data.limit
            }
        });
    }
    
    /**
     * Search External Asset Owner Transfers by text or date ranges to settlement or effective dates
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PageExternalTransferData default response
     * @throws ApiError
     */
    public static postV1ExternalAssetOwnersSearch(data: PostV1ExternalAssetOwnersSearchData = {}): CancelablePromise<PostV1ExternalAssetOwnersSearchResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/external-asset-owners/search',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve External Asset Owner Transfers
     * Retrieve External Asset Owner Transfer items by transferExternalId, loanId or loanExternalId
     * @param data The data for the request.
     * @param data.transferExternalId transferExternalId
     * @param data.loanId loanId
     * @param data.loanExternalId loanExternalId
     * @param data.offset offset
     * @param data.limit limit
     * @returns PageExternalTransferData default response
     * @throws ApiError
     */
    public static getV1ExternalAssetOwnersTransfers(data: GetV1ExternalAssetOwnersTransfersData = {}): CancelablePromise<GetV1ExternalAssetOwnersTransfersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/external-asset-owners/transfers',
            query: {
                transferExternalId: data.transferExternalId,
                loanId: data.loanId,
                loanExternalId: data.loanExternalId,
                offset: data.offset,
                limit: data.limit
            }
        });
    }
    
    /**
     * Retrieve Active Asset Owner Transfer
     * Retrieve Active External Asset Owner Transfer by transferExternalId, loanId or loanExternalId
     * @param data The data for the request.
     * @param data.transferExternalId transferExternalId
     * @param data.loanId loanId
     * @param data.loanExternalId loanExternalId
     * @returns ExternalTransferData default response
     * @throws ApiError
     */
    public static getV1ExternalAssetOwnersTransfersActiveTransfer(data: GetV1ExternalAssetOwnersTransfersActiveTransferData = {}): CancelablePromise<GetV1ExternalAssetOwnersTransfersActiveTransferResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/external-asset-owners/transfers/active-transfer',
            query: {
                transferExternalId: data.transferExternalId,
                loanId: data.loanId,
                loanExternalId: data.loanExternalId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.externalId
     * @param data.command command
     * @returns PostInitiateTransferResponse OK
     * @throws ApiError
     */
    public static postV1ExternalAssetOwnersTransfersExternalIdByExternalId(data: PostV1ExternalAssetOwnersTransfersExternalIdByExternalIdData): CancelablePromise<PostV1ExternalAssetOwnersTransfersExternalIdByExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/external-asset-owners/transfers/external-id/{externalId}',
            path: {
                externalId: data.externalId
            },
            query: {
                command: data.command
            },
            errors: {
                403: 'Transfer cannot be initiated'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanExternalId
     * @param data.requestBody
     * @param data.command command
     * @returns PostInitiateTransferResponse OK
     * @throws ApiError
     */
    public static postV1ExternalAssetOwnersTransfersLoansExternalIdByLoanExternalId(data: PostV1ExternalAssetOwnersTransfersLoansExternalIdByLoanExternalIdData): CancelablePromise<PostV1ExternalAssetOwnersTransfersLoansExternalIdByLoanExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/external-asset-owners/transfers/loans/external-id/{loanExternalId}',
            path: {
                loanExternalId: data.loanExternalId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                403: 'Transfer cannot be initiated'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @param data.requestBody
     * @param data.command command
     * @returns PostInitiateTransferResponse OK
     * @throws ApiError
     */
    public static postV1ExternalAssetOwnersTransfersLoansByLoanId(data: PostV1ExternalAssetOwnersTransfersLoansByLoanIdData): CancelablePromise<PostV1ExternalAssetOwnersTransfersLoansByLoanIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/external-asset-owners/transfers/loans/{loanId}',
            path: {
                loanId: data.loanId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                403: 'Transfer cannot be initiated'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.command command
     * @returns PostInitiateTransferResponse OK
     * @throws ApiError
     */
    public static postV1ExternalAssetOwnersTransfersById(data: PostV1ExternalAssetOwnersTransfersByIdData): CancelablePromise<PostV1ExternalAssetOwnersTransfersByIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/external-asset-owners/transfers/{id}',
            path: {
                id: data.id
            },
            query: {
                command: data.command
            },
            errors: {
                403: 'Transfer cannot be initiated'
            }
        });
    }
    
    /**
     * Retrieve Journal Entries of Transfer
     * Retrieve Journal entries of transfer by transferId
     * @param data The data for the request.
     * @param data.transferId transferId
     * @param data.offset offset
     * @param data.limit limit
     * @returns ExternalOwnerTransferJournalEntryData default response
     * @throws ApiError
     */
    public static getV1ExternalAssetOwnersTransfersByTransferIdJournalEntries(data: GetV1ExternalAssetOwnersTransfersByTransferIdJournalEntriesData): CancelablePromise<GetV1ExternalAssetOwnersTransfersByTransferIdJournalEntriesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/external-asset-owners/transfers/{transferId}/journal-entries',
            path: {
                transferId: data.transferId
            },
            query: {
                offset: data.offset,
                limit: data.limit
            }
        });
    }
    
}

export class ExternalEventConfigurationService {
    /**
     * List all external event configurations
     * @returns ExternalEventConfigurationResponse default response
     * @throws ApiError
     */
    public static getV1ExternaleventsConfiguration(): CancelablePromise<GetV1ExternaleventsConfigurationResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/externalevents/configuration'
        });
    }
    
    /**
     * Enable/Disable external events posting
     * @param data The data for the request.
     * @param data.idempotencyKey
     * @param data.requestBody
     * @returns ExternalEventConfigurationUpdateResponse default response
     * @throws ApiError
     */
    public static putV1ExternaleventsConfiguration(data: PutV1ExternaleventsConfigurationData = {}): CancelablePromise<PutV1ExternaleventsConfigurationResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/externalevents/configuration',
            headers: {
                'Idempotency-Key': data.idempotencyKey
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class ExternalServicesService {
    /**
     * Retrieve External Services Configuration
     * Returns a external Service configurations based on the Service Name.
     *
     * Service Names supported are S3 and SMTP.
     *
     * Example Requests:
     *
     * externalservice/SMTP
     * @param data The data for the request.
     * @param data.servicename servicename
     * @returns ExternalServicesPropertiesData OK
     * @throws ApiError
     */
    public static getV1ExternalserviceByServicename(data: GetV1ExternalserviceByServicenameData): CancelablePromise<GetV1ExternalserviceByServicenameResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/externalservice/{servicename}',
            path: {
                servicename: data.servicename
            }
        });
    }
    
    /**
     * Update External Service
     * Updates the external Service Configuration for a Service Name.
     *
     * Example:
     *
     * externalservice/S3
     * @param data The data for the request.
     * @param data.servicename servicename
     * @param data.requestBody
     * @returns unknown OK
     * @throws ApiError
     */
    public static putV1ExternalserviceByServicename(data: PutV1ExternalserviceByServicenameData): CancelablePromise<PutV1ExternalserviceByServicenameResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/externalservice/{servicename}',
            path: {
                servicename: data.servicename
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class EntityFieldConfigurationService {
    /**
     * Retrieves the Entity Field Configuration
     * It retrieves all the Entity Field Configuration
     * @param data The data for the request.
     * @param data.entity entity
     * @returns FieldConfigurationData default response
     * @throws ApiError
     */
    public static getV1FieldconfigurationByEntity(data: GetV1FieldconfigurationByEntityData): CancelablePromise<GetV1FieldconfigurationByEntityResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/fieldconfiguration/{entity}',
            path: {
                entity: data.entity
            }
        });
    }
    
}

export class MappingFinancialActivitiesToAccountsService {
    /**
     * List Financial Activities to Accounts Mappings
     * Example Requests:
     * financialactivityaccounts
     * @returns GetFinancialActivityAccountsResponse OK
     * @throws ApiError
     */
    public static getV1Financialactivityaccounts(): CancelablePromise<GetV1FinancialactivityaccountsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/financialactivityaccounts'
        });
    }
    
    /**
     * Create a new Financial Activity to Accounts Mapping
     * Mandatory Fields
     * financialActivityId, glAccountId
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostFinancialActivityAccountsResponse OK
     * @throws ApiError
     */
    public static postV1Financialactivityaccounts(data: PostV1FinancialactivityaccountsData = {}): CancelablePromise<PostV1FinancialactivityaccountsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/financialactivityaccounts',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns FinancialActivityAccountData default response
     * @throws ApiError
     */
    public static getV1FinancialactivityaccountsTemplate(): CancelablePromise<GetV1FinancialactivityaccountsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/financialactivityaccounts/template'
        });
    }
    
    /**
     * Delete a Financial Activity to Account Mapping
     * @param data The data for the request.
     * @param data.mappingId mappingId
     * @returns DeleteFinancialActivityAccountsResponse OK
     * @throws ApiError
     */
    public static deleteV1FinancialactivityaccountsByMappingId(data: DeleteV1FinancialactivityaccountsByMappingIdData): CancelablePromise<DeleteV1FinancialactivityaccountsByMappingIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/financialactivityaccounts/{mappingId}',
            path: {
                mappingId: data.mappingId
            }
        });
    }
    
    /**
     * Retrieve a Financial Activity to Account Mapping
     *
     * Example Requests:
     * financialactivityaccounts/1
     * @param data The data for the request.
     * @param data.mappingId mappingId
     * @returns GetFinancialActivityAccountsResponse OK
     * @throws ApiError
     */
    public static getV1FinancialactivityaccountsByMappingId(data: GetV1FinancialactivityaccountsByMappingIdData): CancelablePromise<GetV1FinancialactivityaccountsByMappingIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/financialactivityaccounts/{mappingId}',
            path: {
                mappingId: data.mappingId
            }
        });
    }
    
    /**
     * Update a Financial Activity to Account Mapping
     * the API updates the Ledger account linked to a Financial Activity
     * @param data The data for the request.
     * @param data.mappingId mappingId
     * @param data.requestBody
     * @returns PutFinancialActivityAccountsResponse OK
     * @throws ApiError
     */
    public static putV1FinancialactivityaccountsByMappingId(data: PutV1FinancialactivityaccountsByMappingIdData): CancelablePromise<PutV1FinancialactivityaccountsByMappingIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/financialactivityaccounts/{mappingId}',
            path: {
                mappingId: data.mappingId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class FixedDepositAccountService {
    /**
     * List Fixed deposit applications/accounts
     * Lists Fixed Deposit Accounts
     *
     * Example Requests:
     *
     *
     *
     * fixeddepositaccounts
     *
     *
     *
     * fixeddepositaccounts?fields=name
     * @param data The data for the request.
     * @param data.paged paged
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @returns GetFixedDepositAccountsResponse OK
     * @throws ApiError
     */
    public static getV1Fixeddepositaccounts(data: GetV1FixeddepositaccountsData = {}): CancelablePromise<GetV1FixeddepositaccountsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/fixeddepositaccounts',
            query: {
                paged: data.paged,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            }
        });
    }
    
    /**
     * Submit new fixed deposit application
     * Submits a new fixed deposit applicationMandatory Fields: clientId or groupId, productId, submittedOnDate, depositAmount, depositPeriod, depositPeriodFrequencyId
     *
     * Optional Fields: accountNo, externalId, fieldOfficerId,linkAccountId(if provided initial deposit amount will be collected from this account),transferInterestToSavings(By enabling this flag all interest postings will be transferred to linked saving account )
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostFixedDepositAccountsResponse OK
     * @throws ApiError
     */
    public static postV1Fixeddepositaccounts(data: PostV1FixeddepositaccountsData): CancelablePromise<PostV1FixeddepositaccountsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/fixeddepositaccounts',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.principalAmount BigDecimal principalAmount
     * @param data.annualInterestRate annualInterestRate
     * @param data.tenureInMonths tenureInMonths
     * @param data.interestCompoundingPeriodInMonths interestCompoundingPeriodInMonths
     * @param data.interestPostingPeriodInMonths interestPostingPeriodInMonths
     * @returns CalculateFixedDepositInterestResponse OK
     * @throws ApiError
     */
    public static getV1FixeddepositaccountsCalculateFdInterest(data: GetV1FixeddepositaccountsCalculateFdInterestData = {}): CancelablePromise<GetV1FixeddepositaccountsCalculateFdInterestResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/fixeddepositaccounts/calculate-fd-interest',
            query: {
                principalAmount: data.principalAmount,
                annualInterestRate: data.annualInterestRate,
                tenureInMonths: data.tenureInMonths,
                interestCompoundingPeriodInMonths: data.interestCompoundingPeriodInMonths,
                interestPostingPeriodInMonths: data.interestPostingPeriodInMonths
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.officeId
     * @param data.staffId
     * @param data.dateFormat
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1FixeddepositaccountsDownloadtemplate(data: GetV1FixeddepositaccountsDownloadtemplateData = {}): CancelablePromise<GetV1FixeddepositaccountsDownloadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/fixeddepositaccounts/downloadtemplate',
            query: {
                officeId: data.officeId,
                staffId: data.staffId,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * Retrieve Fixed Deposit Account Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for fixed deposit applications. The template data returned consists of any or all of:
     *
     *
     *
     * Field Defaults
     *
     * Allowed Value ListsExample Requests:
     *
     *
     *
     * fixeddepositaccounts/template?clientId=1
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.groupId groupId
     * @param data.productId productId
     * @param data.staffInSelectedOfficeOnly staffInSelectedOfficeOnly
     * @returns GetFixedDepositAccountsTemplateResponse OK
     * @throws ApiError
     */
    public static getV1FixeddepositaccountsTemplate(data: GetV1FixeddepositaccountsTemplateData = {}): CancelablePromise<GetV1FixeddepositaccountsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/fixeddepositaccounts/template',
            query: {
                clientId: data.clientId,
                groupId: data.groupId,
                productId: data.productId,
                staffInSelectedOfficeOnly: data.staffInSelectedOfficeOnly
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.officeId
     * @param data.dateFormat
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1FixeddepositaccountsTransactionDownloadtemplate(data: GetV1FixeddepositaccountsTransactionDownloadtemplateData = {}): CancelablePromise<GetV1FixeddepositaccountsTransactionDownloadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/fixeddepositaccounts/transaction/downloadtemplate',
            query: {
                officeId: data.officeId,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.formData Upload fixed deposit transaction template
     * @returns string default response
     * @throws ApiError
     */
    public static postV1FixeddepositaccountsTransactionUploadtemplate(data: PostV1FixeddepositaccountsTransactionUploadtemplateData = {}): CancelablePromise<PostV1FixeddepositaccountsTransactionUploadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/fixeddepositaccounts/transaction/uploadtemplate',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.formData Upload fixed deposit template
     * @returns string default response
     * @throws ApiError
     */
    public static postV1FixeddepositaccountsUploadtemplate(data: PostV1FixeddepositaccountsUploadtemplateData = {}): CancelablePromise<PostV1FixeddepositaccountsUploadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/fixeddepositaccounts/uploadtemplate',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Delete a fixed deposit application
     * At present we support hard delete of fixed deposit application so long as its in 'Submitted and pending approval' state. One the application is moves past this state, it is not possible to do a 'hard' delete of the application or the account. An API endpoint will be added to close/de-activate the fixed deposit account.
     * @param data The data for the request.
     * @param data.accountId accountId
     * @returns DeleteFixedDepositAccountsAccountIdResponse OK
     * @throws ApiError
     */
    public static deleteV1FixeddepositaccountsByAccountId(data: DeleteV1FixeddepositaccountsByAccountIdData): CancelablePromise<DeleteV1FixeddepositaccountsByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/fixeddepositaccounts/{accountId}',
            path: {
                accountId: data.accountId
            }
        });
    }
    
    /**
     * Retrieve a fixed deposit application/account
     * Retrieves a fixed deposit application/account
     *
     * Example Requests :
     *
     *
     *
     * fixeddepositaccounts/1
     *
     * fixeddepositaccounts/1?associations=all
     * @param data The data for the request.
     * @param data.accountId accountId
     * @param data.staffInSelectedOfficeOnly staffInSelectedOfficeOnly
     * @param data.chargeStatus chargeStatus
     * @returns GetFixedDepositAccountsAccountIdResponse OK
     * @throws ApiError
     */
    public static getV1FixeddepositaccountsByAccountId(data: GetV1FixeddepositaccountsByAccountIdData): CancelablePromise<GetV1FixeddepositaccountsByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/fixeddepositaccounts/{accountId}',
            path: {
                accountId: data.accountId
            },
            query: {
                staffInSelectedOfficeOnly: data.staffInSelectedOfficeOnly,
                chargeStatus: data.chargeStatus
            }
        });
    }
    
    /**
     * Approve fixed deposit application | Undo approval fixed deposit application | Reject fixed deposit application | Withdraw fixed deposit application | Activate a fixed deposit account | Close a fixed deposit account | Premature Close a fixed deposit account | Calculate Premature amount on Fixed deposit account | Calculate Interest on Fixed Deposit Account | Post Interest on Fixed Deposit Account
     * Approve fixed deposit application:
     *
     * Approves fixed deposit application so long as its in 'Submitted and pending approval' state.
     *
     * Undo approval fixed deposit application:
     *
     * Will move 'approved' fixed deposit application back to 'Submitted and pending approval' state.
     *
     * Reject fixed deposit application:
     *
     * Rejects fixed deposit application so long as its in 'Submitted and pending approval' state.
     *
     * Withdraw fixed deposit application:
     *
     * Used when an applicant withdraws from the fixed deposit application. It must be in 'Submitted and pending approval' state.
     *
     * Close a fixed deposit account:
     *
     * Results in a Matured fixed deposit account being converted into a 'closed' fixed deposit account.
     *
     * Premature Close a fixed deposit account:
     *
     * Results in an Active fixed deposit account being converted into a 'Premature Closed' fixed deposit account with options to withdraw prematured amount. (premature amount is calculated using interest rate chart applicable along with penal interest if any.)
     *
     * Calculate Premature amount on Fixed deposit account:
     *
     * Calculate premature amount on fixed deposit account till premature close date. Premature amount is calculated based on interest chart and penal interest applicable.
     *
     * Calculate Interest on Fixed Deposit Account:
     *
     * Calculates interest earned on a fixed deposit account based on todays date. It does not attempt to post or credit the interest on the account. That is responsibility of the Post Interest API that will likely be called by overnight process.
     *
     * Post Interest on Fixed Deposit Account:
     *
     * Calculates and Posts interest earned on a fixed deposit account based on today's date and whether an interest posting or crediting event is due.
     *
     * Showing request/response for Calculate Interest on Fixed Deposit Account
     * @param data The data for the request.
     * @param data.accountId accountId
     * @param data.requestBody
     * @param data.command command
     * @returns PostFixedDepositAccountsAccountIdResponse OK
     * @throws ApiError
     */
    public static postV1FixeddepositaccountsByAccountId(data: PostV1FixeddepositaccountsByAccountIdData): CancelablePromise<PostV1FixeddepositaccountsByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/fixeddepositaccounts/{accountId}',
            path: {
                accountId: data.accountId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Modify a fixed deposit application
     * Fixed deposit application can only be modified when in 'Submitted and pending approval' state. Once the application is approved, the details cannot be changed using this method. Specific api endpoints will be created to allow change of interest detail such as rate, compounding period, posting period etc
     * @param data The data for the request.
     * @param data.accountId accountId
     * @param data.requestBody
     * @returns PutFixedDepositAccountsAccountIdResponse OK
     * @throws ApiError
     */
    public static putV1FixeddepositaccountsByAccountId(data: PutV1FixeddepositaccountsByAccountIdData): CancelablePromise<PutV1FixeddepositaccountsByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/fixeddepositaccounts/{accountId}',
            path: {
                accountId: data.accountId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.accountId accountId
     * @param data.command command
     * @returns string default response
     * @throws ApiError
     */
    public static getV1FixeddepositaccountsByAccountIdTemplate(data: GetV1FixeddepositaccountsByAccountIdTemplateData): CancelablePromise<GetV1FixeddepositaccountsByAccountIdTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/fixeddepositaccounts/{accountId}/template',
            path: {
                accountId: data.accountId
            },
            query: {
                command: data.command
            }
        });
    }
    
}

export class FixedDepositAccountTransactionsService {
    /**
     * @param data The data for the request.
     * @param data.fixedDepositAccountId
     * @param data.command
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1FixeddepositaccountsByFixedDepositAccountIdTransactions(data: PostV1FixeddepositaccountsByFixedDepositAccountIdTransactionsData): CancelablePromise<PostV1FixeddepositaccountsByFixedDepositAccountIdTransactionsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/fixeddepositaccounts/{fixedDepositAccountId}/transactions',
            path: {
                fixedDepositAccountId: data.fixedDepositAccountId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.fixedDepositAccountId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1FixeddepositaccountsByFixedDepositAccountIdTransactionsTemplate(data: GetV1FixeddepositaccountsByFixedDepositAccountIdTransactionsTemplateData): CancelablePromise<GetV1FixeddepositaccountsByFixedDepositAccountIdTransactionsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/fixeddepositaccounts/{fixedDepositAccountId}/transactions/template',
            path: {
                fixedDepositAccountId: data.fixedDepositAccountId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.fixedDepositAccountId
     * @param data.transactionId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1FixeddepositaccountsByFixedDepositAccountIdTransactionsByTransactionId(data: GetV1FixeddepositaccountsByFixedDepositAccountIdTransactionsByTransactionIdData): CancelablePromise<GetV1FixeddepositaccountsByFixedDepositAccountIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/fixeddepositaccounts/{fixedDepositAccountId}/transactions/{transactionId}',
            path: {
                fixedDepositAccountId: data.fixedDepositAccountId,
                transactionId: data.transactionId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.fixedDepositAccountId
     * @param data.transactionId
     * @param data.command
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1FixeddepositaccountsByFixedDepositAccountIdTransactionsByTransactionId(data: PostV1FixeddepositaccountsByFixedDepositAccountIdTransactionsByTransactionIdData): CancelablePromise<PostV1FixeddepositaccountsByFixedDepositAccountIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/fixeddepositaccounts/{fixedDepositAccountId}/transactions/{transactionId}',
            path: {
                fixedDepositAccountId: data.fixedDepositAccountId,
                transactionId: data.transactionId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class FixedDepositProductService {
    /**
     * List Fixed Deposit Products
     * Lists Fixed Deposit Products
     *
     * Example Requests:
     *
     * fixeddepositproducts
     *
     *
     * fixeddepositproducts?fields=name
     * @returns GetFixedDepositProductsResponse OK
     * @throws ApiError
     */
    public static getV1Fixeddepositproducts(): CancelablePromise<GetV1FixeddepositproductsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/fixeddepositproducts'
        });
    }
    
    /**
     * Create a Fixed Deposit Product
     * Creates a Fixed Deposit Product
     *
     * Mandatory Fields: name, shortName, description, currencyCode, digitsAfterDecimal,inMultiplesOf, interestCompoundingPeriodType, interestCalculationType, interestCalculationDaysInYearType, minDepositTerm, minDepositTermTypeId, accountingRule
     *
     * Optional Fields: lockinPeriodFrequency, lockinPeriodFrequencyType, maxDepositTerm, maxDepositTermTypeId, inMultiplesOfDepositTerm, inMultiplesOfDepositTermTypeId, preClosurePenalApplicable, preClosurePenalInterest, preClosurePenalInterestOnTypeId, feeToIncomeAccountMappings, penaltyToIncomeAccountMappings, charges, charts, , withHoldTax, taxGroupId
     *
     *
     * Mandatory Fields for Cash based accounting (accountingRule = 2): savingsReferenceAccountId, savingsControlAccountId, interestOnSavingsAccountId, incomeFromFeeAccountId, transfersInSuspenseAccountId, incomeFromPenaltyAccountId
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostFixedDepositProductsResponse OK
     * @throws ApiError
     */
    public static postV1Fixeddepositproducts(data: PostV1FixeddepositproductsData): CancelablePromise<PostV1FixeddepositproductsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/fixeddepositproducts',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns string default response
     * @throws ApiError
     */
    public static getV1FixeddepositproductsTemplate(): CancelablePromise<GetV1FixeddepositproductsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/fixeddepositproducts/template'
        });
    }
    
    /**
     * Delete a Fixed Deposit Product
     * Deletes a Fixed Deposit Product
     * @param data The data for the request.
     * @param data.productId productId
     * @returns DeleteFixedDepositProductsProductIdResponse OK
     * @throws ApiError
     */
    public static deleteV1FixeddepositproductsByProductId(data: DeleteV1FixeddepositproductsByProductIdData): CancelablePromise<DeleteV1FixeddepositproductsByProductIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/fixeddepositproducts/{productId}',
            path: {
                productId: data.productId
            }
        });
    }
    
    /**
     * Retrieve a Fixed Deposit Product
     * Retrieves a Fixed Deposit Product
     *
     * Example Requests:
     *
     * fixeddepositproducts/1
     *
     *
     * fixeddepositproducts/1?template=true
     *
     *
     * fixeddepositproducts/1?fields=name,description
     * @param data The data for the request.
     * @param data.productId productId
     * @returns GetFixedDepositProductsProductIdResponse OK
     * @throws ApiError
     */
    public static getV1FixeddepositproductsByProductId(data: GetV1FixeddepositproductsByProductIdData): CancelablePromise<GetV1FixeddepositproductsByProductIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/fixeddepositproducts/{productId}',
            path: {
                productId: data.productId
            }
        });
    }
    
    /**
     * Update a Fixed Deposit Product
     * Updates a Fixed Deposit Product
     * @param data The data for the request.
     * @param data.productId productId
     * @param data.requestBody
     * @returns PutFixedDepositProductsProductIdResponse OK
     * @throws ApiError
     */
    public static putV1FixeddepositproductsByProductId(data: PutV1FixeddepositproductsByProductIdData): CancelablePromise<PutV1FixeddepositproductsByProductIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/fixeddepositproducts/{productId}',
            path: {
                productId: data.productId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class FloatingRatesService {
    /**
     * List Floating Rates
     * Lists Floating Rates
     * @returns GetFloatingRatesResponse OK
     * @throws ApiError
     */
    public static getV1Floatingrates(): CancelablePromise<GetV1FloatingratesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/floatingrates'
        });
    }
    
    /**
     * Create a new Floating Rate
     * Creates a new Floating Rate
     * Mandatory Fields: name
     * Optional Fields: isBaseLendingRate, isActive, ratePeriods
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostFloatingRatesResponse OK
     * @throws ApiError
     */
    public static postV1Floatingrates(data: PostV1FloatingratesData): CancelablePromise<PostV1FloatingratesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/floatingrates',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Floating Rate
     * Retrieves Floating Rate
     * @param data The data for the request.
     * @param data.floatingRateId floatingRateId
     * @returns FloatingRateData default response
     * @throws ApiError
     */
    public static getV1FloatingratesByFloatingRateId(data: GetV1FloatingratesByFloatingRateIdData): CancelablePromise<GetV1FloatingratesByFloatingRateIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/floatingrates/{floatingRateId}',
            path: {
                floatingRateId: data.floatingRateId
            }
        });
    }
    
    /**
     * Update Floating Rate
     * Updates new Floating Rate. Rate Periods in the past cannot be modified. All the future rateperiods would be replaced with the new ratePeriods data sent.
     * @param data The data for the request.
     * @param data.floatingRateId floatingRateId
     * @param data.requestBody
     * @returns PutFloatingRatesFloatingRateIdResponse OK
     * @throws ApiError
     */
    public static putV1FloatingratesByFloatingRateId(data: PutV1FloatingratesByFloatingRateIdData): CancelablePromise<PutV1FloatingratesByFloatingRateIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/floatingrates/{floatingRateId}',
            path: {
                floatingRateId: data.floatingRateId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class FundsService {
    /**
     * Retrieve Funds
     * Returns the list of funds.
     *
     * Example Requests:
     *
     * funds
     * @returns FundData default response
     * @throws ApiError
     */
    public static getV1Funds(): CancelablePromise<GetV1FundsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/funds'
        });
    }
    
    /**
     * Create a Fund
     * Creates a Fund
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostFundsResponse OK
     * @throws ApiError
     */
    public static postV1Funds(data: PostV1FundsData): CancelablePromise<PostV1FundsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/funds',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve a Fund
     * Returns the details of a Fund.
     *
     * Example Requests:
     *
     * funds/1
     * @param data The data for the request.
     * @param data.fundId fundId
     * @returns FundData default response
     * @throws ApiError
     */
    public static getV1FundsByFundId(data: GetV1FundsByFundIdData): CancelablePromise<GetV1FundsByFundIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/funds/{fundId}',
            path: {
                fundId: data.fundId
            }
        });
    }
    
    /**
     * Update a Fund
     * Updates the details of a fund.
     * @param data The data for the request.
     * @param data.fundId fundId
     * @param data.requestBody
     * @returns PutFundsFundIdResponse OK
     * @throws ApiError
     */
    public static putV1FundsByFundId(data: PutV1FundsByFundIdData): CancelablePromise<PutV1FundsByFundIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/funds/{fundId}',
            path: {
                fundId: data.fundId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class GeneralLedgerAccountService {
    /**
     * List General Ledger Account
     * ARGUMENTS
     * type Integer optional manualEntriesAllowed boolean optional usage Integer optional disabled boolean optional parentId Long optional tagId Long optional
     * Example Requests:
     *
     * glaccounts
     *
     * glaccounts?type=1&manualEntriesAllowed=true&usage=1&disabled=false
     *
     * glaccounts?fetchRunningBalance=true
     *
     * @param data The data for the request.
     * @param data.type type
     * @param data.searchParam searchParam
     * @param data.usage usage
     * @param data.manualEntriesAllowed manualEntriesAllowed
     * @param data.disabled disabled
     * @param data.fetchRunningBalance fetchRunningBalance
     * @returns GetGLAccountsResponse OK
     * @throws ApiError
     */
    public static getV1Glaccounts(data: GetV1GlaccountsData = {}): CancelablePromise<GetV1GlaccountsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/glaccounts',
            query: {
                type: data.type,
                searchParam: data.searchParam,
                usage: data.usage,
                manualEntriesAllowed: data.manualEntriesAllowed,
                disabled: data.disabled,
                fetchRunningBalance: data.fetchRunningBalance
            }
        });
    }
    
    /**
     * Create a General Ledger Account
     * Note: You may optionally create Hierarchical Chart of Accounts by using the "parentId" property of an Account
     * Mandatory Fields:
     * name, glCode, type, usage and manualEntriesAllowed
     *
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostGLAccountsResponse OK
     * @throws ApiError
     */
    public static postV1Glaccounts(data: PostV1GlaccountsData = {}): CancelablePromise<PostV1GlaccountsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/glaccounts',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.dateFormat
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1GlaccountsDownloadtemplate(data: GetV1GlaccountsDownloadtemplateData = {}): CancelablePromise<GetV1GlaccountsDownloadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/glaccounts/downloadtemplate',
            query: {
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * Retrieve GL Accounts Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed Value Lists
     * Example Request:
     *
     * glaccounts/template
     * glaccounts/template?type=1
     *
     * type is optional and integer value from 1 to 5.
     *
     * 1.Assets
     * 2.Liabilities
     * 3.Equity
     * 4.Income
     * 5.Expenses
     *
     * @param data The data for the request.
     * @param data.type type
     * @returns GetGLAccountsTemplateResponse OK
     * @throws ApiError
     */
    public static getV1GlaccountsTemplate(data: GetV1GlaccountsTemplateData = {}): CancelablePromise<GetV1GlaccountsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/glaccounts/template',
            query: {
                type: data.type
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.formData Upload GL accounts template
     * @returns number default response
     * @throws ApiError
     */
    public static postV1GlaccountsUploadtemplate(data: PostV1GlaccountsUploadtemplateData = {}): CancelablePromise<PostV1GlaccountsUploadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/glaccounts/uploadtemplate',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Delete a GL Account
     * Deletes a GL Account
     * @param data The data for the request.
     * @param data.glAccountId glAccountId
     * @returns DeleteGLAccountsResponse OK
     * @throws ApiError
     */
    public static deleteV1GlaccountsByGlAccountId(data: DeleteV1GlaccountsByGlAccountIdData): CancelablePromise<DeleteV1GlaccountsByGlAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/glaccounts/{glAccountId}',
            path: {
                glAccountId: data.glAccountId
            }
        });
    }
    
    /**
     * Retrieve a General Ledger Account
     * Example Requests:
     *
     * glaccounts/1
     *
     * glaccounts/1?template=true
     *
     * glaccounts/1?fields=name,glCode
     *
     * glaccounts/1?fetchRunningBalance=true
     *
     * @param data The data for the request.
     * @param data.glAccountId glAccountId
     * @param data.fetchRunningBalance fetchRunningBalance
     * @returns GetGLAccountsResponse OK
     * @throws ApiError
     */
    public static getV1GlaccountsByGlAccountId(data: GetV1GlaccountsByGlAccountIdData): CancelablePromise<GetV1GlaccountsByGlAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/glaccounts/{glAccountId}',
            path: {
                glAccountId: data.glAccountId
            },
            query: {
                fetchRunningBalance: data.fetchRunningBalance
            }
        });
    }
    
    /**
     * Update a GL Account
     * Updates a GL Account
     * @param data The data for the request.
     * @param data.glAccountId glAccountId
     * @param data.requestBody
     * @returns PutGLAccountsResponse OK
     * @throws ApiError
     */
    public static putV1GlaccountsByGlAccountId(data: PutV1GlaccountsByGlAccountIdData): CancelablePromise<PutV1GlaccountsByGlAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/glaccounts/{glAccountId}',
            path: {
                glAccountId: data.glAccountId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class AccountingClosureService {
    /**
     * List Accounting closures
     * Example Requests:
     *
     * glclosures
     * @param data The data for the request.
     * @param data.officeId
     * @returns GetGlClosureResponse OK
     * @throws ApiError
     */
    public static getV1Glclosures(data: GetV1GlclosuresData = {}): CancelablePromise<GetV1GlclosuresResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/glclosures',
            query: {
                officeId: data.officeId
            }
        });
    }
    
    /**
     * Create an Accounting Closure
     * Mandatory Fields
     * officeId,closingDate
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostGlClosuresResponse OK
     * @throws ApiError
     */
    public static postV1Glclosures(data: PostV1GlclosuresData): CancelablePromise<PostV1GlclosuresResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/glclosures',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Delete an accounting closure
     * Note: Only the latest accounting closure associated with a branch may be deleted.
     * @param data The data for the request.
     * @param data.glClosureId glclosureId
     * @returns DeleteGlClosuresResponse OK
     * @throws ApiError
     */
    public static deleteV1GlclosuresByGlClosureId(data: DeleteV1GlclosuresByGlClosureIdData): CancelablePromise<DeleteV1GlclosuresByGlClosureIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/glclosures/{glClosureId}',
            path: {
                glClosureId: data.glClosureId
            }
        });
    }
    
    /**
     * Retrieve an Accounting Closure
     * Example Requests:
     *
     * glclosures/1
     *
     *
     * /glclosures/1?fields=officeName,closingDate
     * @param data The data for the request.
     * @param data.glClosureId glClosureId
     * @returns GetGlClosureResponse OK
     * @throws ApiError
     */
    public static getV1GlclosuresByGlClosureId(data: GetV1GlclosuresByGlClosureIdData): CancelablePromise<GetV1GlclosuresByGlClosureIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/glclosures/{glClosureId}',
            path: {
                glClosureId: data.glClosureId
            }
        });
    }
    
    /**
     * Update an Accounting closure
     * Once an accounting closure is created, only the comments associated with it may be edited
     * @param data The data for the request.
     * @param data.glClosureId glClosureId
     * @param data.requestBody
     * @returns PutGlClosuresResponse OK
     * @throws ApiError
     */
    public static putV1GlclosuresByGlClosureId(data: PutV1GlclosuresByGlClosureIdData): CancelablePromise<PutV1GlclosuresByGlClosureIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/glclosures/{glClosureId}',
            path: {
                glClosureId: data.glClosureId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class GroupsLevelService {
    /**
     * @returns GroupLevelData default response
     * @throws ApiError
     */
    public static getV1Grouplevels(): CancelablePromise<GetV1GrouplevelsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/grouplevels'
        });
    }
    
}

export class GroupsService {
    /**
     * List Groups
     * The default implementation of listing Groups returns 200 entries with support for pagination and sorting. Using the parameter limit with description -1 returns all entries.
     *
     * Example Requests:
     *
     *
     *
     * groups
     *
     *
     *
     * groups?fields=name,officeName,joinedDate
     *
     *
     *
     * groups?offset=10&limit=50
     *
     *
     *
     * groups?orderBy=name&sortOrder=DESC
     * @param data The data for the request.
     * @param data.officeId officeId
     * @param data.staffId staffId
     * @param data.externalId externalId
     * @param data.name name
     * @param data.underHierarchy underHierarchy
     * @param data.paged paged
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @param data.orphansOnly orphansOnly
     * @returns GetGroupsResponse OK
     * @throws ApiError
     */
    public static getV1Groups(data: GetV1GroupsData = {}): CancelablePromise<GetV1GroupsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/groups',
            query: {
                officeId: data.officeId,
                staffId: data.staffId,
                externalId: data.externalId,
                name: data.name,
                underHierarchy: data.underHierarchy,
                paged: data.paged,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder,
                orphansOnly: data.orphansOnly
            }
        });
    }
    
    /**
     * Create a Group
     * Creates a Group
     *
     * Mandatory Fields: name, officeId, active, activationDate (if active=true)
     *
     * Optional Fields: externalId, staffId, clientMembers
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostGroupsResponse OK
     * @throws ApiError
     */
    public static postV1Groups(data: PostV1GroupsData): CancelablePromise<PostV1GroupsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/groups',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.officeId
     * @param data.staffId
     * @param data.dateFormat
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1GroupsDownloadtemplate(data: GetV1GroupsDownloadtemplateData = {}): CancelablePromise<GetV1GroupsDownloadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/groups/downloadtemplate',
            query: {
                officeId: data.officeId,
                staffId: data.staffId,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * Retrieve Group Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     *
     *
     * Field Defaults
     *
     * Allowed Value Lists
     *
     * Example Requests:
     *
     *
     *
     * groups/template
     *
     *
     *
     * groups/template?officeId=2
     *
     *
     *
     * groups/template?centerId=1
     *
     *
     *
     * groups/template?centerId=1&staffInSelectedOfficeOnly=true
     * @param data The data for the request.
     * @param data.officeId officeId
     * @param data.center center
     * @param data.centerId centerId
     * @param data.command command
     * @param data.staffInSelectedOfficeOnly staffInSelectedOfficeOnly
     * @returns GetGroupsTemplateResponse OK
     * @throws ApiError
     */
    public static getV1GroupsTemplate(data: GetV1GroupsTemplateData = {}): CancelablePromise<GetV1GroupsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/groups/template',
            query: {
                officeId: data.officeId,
                center: data.center,
                centerId: data.centerId,
                command: data.command,
                staffInSelectedOfficeOnly: data.staffInSelectedOfficeOnly
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.formData Upload group template
     * @returns string default response
     * @throws ApiError
     */
    public static postV1GroupsUploadtemplate(data: PostV1GroupsUploadtemplateData = {}): CancelablePromise<PostV1GroupsUploadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/groups/uploadtemplate',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Delete a Group
     * A group can be deleted if it is in pending state and has no associations - clients, loans or savings
     * @param data The data for the request.
     * @param data.groupId groupId
     * @returns DeleteGroupsGroupIdResponse OK
     * @throws ApiError
     */
    public static deleteV1GroupsByGroupId(data: DeleteV1GroupsByGroupIdData): CancelablePromise<DeleteV1GroupsByGroupIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/groups/{groupId}',
            path: {
                groupId: data.groupId
            }
        });
    }
    
    /**
     * Retrieve a Group
     * Retrieve group information.
     *
     * Example Requests:
     *
     *
     *
     * groups/1
     *
     *
     *
     * groups/1?associations=clientMembers
     * @param data The data for the request.
     * @param data.groupId groupId
     * @param data.staffInSelectedOfficeOnly staffInSelectedOfficeOnly
     * @param data.roleId roleId
     * @returns GetGroupsGroupIdResponse OK
     * @throws ApiError
     */
    public static getV1GroupsByGroupId(data: GetV1GroupsByGroupIdData): CancelablePromise<GetV1GroupsByGroupIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/groups/{groupId}',
            path: {
                groupId: data.groupId
            },
            query: {
                staffInSelectedOfficeOnly: data.staffInSelectedOfficeOnly,
                roleId: data.roleId
            }
        });
    }
    
    /**
     * Activate a Group | Associate Clients | Disassociate Clients | Transfer Clients across groups | Generate Collection Sheet | Save Collection Sheet | Unassign a Staff | Assign a Staff | Close a Group | Unassign a Role | Update a Role
     * Activate a Group:
     *
     * Groups can be created in a Pending state. This API exists to enable group activation.
     *
     *
     *
     * If the group happens to be already active this API will result in an error.
     *
     * Mandatory Fields: activationDate
     *
     * Associate Clients:
     *
     * This API allows to associate existing clients to a group.
     *
     *
     *
     * The clients are listed from the office to which the group is associated.
     *
     *
     *
     * If client(s) is already associated with group then API will result in an error.
     *
     * Mandatory Fields: clientMembers
     *
     * Disassociate Clients:
     *
     * This API allows to disassociate clients from a group.
     *
     *
     *
     * Disassociating a client with active joint liability group loans results in an error.
     *
     * Mandatory Fields: clientMembers
     *
     * Transfer Clients across groups:
     *
     * This API allows to transfer clients from one group to another
     *
     * Mandatory Fields: destinationGroupId and clients
     *
     * Optional Fields: inheritDestinationGroupLoanOfficer (defaults to true) and transferActiveLoans (defaults to true)
     *
     * Generate Collection Sheet:
     *
     * This API retrieves repayment details of all jlg loans of all members of a group on a specified meeting date.
     *
     * Mandatory Fields: calendarId and transactionDate
     *
     * Save Collection Sheet:
     *
     * This api allows the loan officer to perform bulk repayments of JLG loans for a group on its meeting date.
     *
     * Mandatory Fields: calendarId, transactionDate, actualDisbursementDate
     *
     * Optional Fields: clientsAttendance, bulkRepaymentTransaction, bulkDisbursementTransactions
     *
     * Unassign a Staff:
     *
     * Allows you to unassign the Staff.
     *
     * Mandatory Fields: staffId
     *
     * Assign a Staff:
     *
     * Allows you to assign Staff to an existing Group.
     *
     *
     *
     * The selected Staff should be belong to the same office (or an office higher up in the hierarchy) as this groupMandatory Fields: staffId
     *
     * Optional Fields: inheritStaffForClientAccounts (Optional: Boolean if true all members of the group (i.e all clients with active loans and savings ) will inherit the staffId)
     *
     * Close a Group:
     *
     * This API exists to close a group. Groups can be closed if they don't have any non-closed clients/loans/savingsAccounts.
     *
     *
     *
     * If the group has any active clients/loans/savingsAccount, this API will result in an error.Assign a Role:
     *
     * Allows you to assign a Role to an existing member of a group.
     *
     *
     *
     * We can define the different roles applicable to group members by adding code values to the pre-defined system code GROUPROLE. Example:Group leader etc.
     *
     * Mandatory Fields: clientId, role
     *
     * Unassign a Role:
     *
     * Allows you to unassign Roles associated tp Group members.
     *
     * Update a Role:
     *
     * Allows you to update the member Role.
     *
     * Mandatory Fields: role
     *
     * Showing request/response for Transfer Clients across groups
     * @param data The data for the request.
     * @param data.groupId groupId
     * @param data.requestBody
     * @param data.command command
     * @param data.roleId roleId
     * @returns PostGroupsGroupIdResponse OK
     * @throws ApiError
     */
    public static postV1GroupsByGroupId(data: PostV1GroupsByGroupIdData): CancelablePromise<PostV1GroupsByGroupIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/groups/{groupId}',
            path: {
                groupId: data.groupId
            },
            query: {
                command: data.command,
                roleId: data.roleId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Update a Group
     * Updates a Group
     * @param data The data for the request.
     * @param data.groupId groupId
     * @param data.requestBody
     * @returns PutGroupsGroupIdResponse OK
     * @throws ApiError
     */
    public static putV1GroupsByGroupId(data: PutV1GroupsByGroupIdData): CancelablePromise<PutV1GroupsByGroupIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/groups/{groupId}',
            path: {
                groupId: data.groupId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Group accounts overview
     * Retrieves details of all Loan and Savings accounts associated with this group.
     *
     *
     *
     * Example Requests:
     *
     *
     *
     * groups/1/accounts
     *
     *
     *
     *
     *
     * groups/1/accounts?fields=loanAccounts,savingsAccounts,memberLoanAccounts,
     *
     * memberSavingsAccounts
     * @param data The data for the request.
     * @param data.groupId groupId
     * @returns GetGroupsGroupIdAccountsResponse OK
     * @throws ApiError
     */
    public static getV1GroupsByGroupIdAccounts(data: GetV1GroupsByGroupIdAccountsData): CancelablePromise<GetV1GroupsByGroupIdAccountsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/groups/{groupId}/accounts',
            path: {
                groupId: data.groupId
            }
        });
    }
    
    /**
     * Unassign a Staff
     * Allows you to unassign the Staff.
     *
     * Mandatory Fields: staffId
     * @param data The data for the request.
     * @param data.groupId groupId
     * @param data.requestBody
     * @returns PostGroupsGroupIdCommandUnassignStaffResponse OK
     * @throws ApiError
     */
    public static postV1GroupsByGroupIdCommandUnassignStaff(data: PostV1GroupsByGroupIdCommandUnassignStaffData): CancelablePromise<PostV1GroupsByGroupIdCommandUnassignStaffResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/groups/{groupId}/command/unassign_staff',
            path: {
                groupId: data.groupId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.groupId
     * @param data.parentLoanAccountNo
     * @returns string default response
     * @throws ApiError
     */
    public static getV1GroupsByGroupIdGlimaccounts(data: GetV1GroupsByGroupIdGlimaccountsData): CancelablePromise<GetV1GroupsByGroupIdGlimaccountsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/groups/{groupId}/glimaccounts',
            path: {
                groupId: data.groupId
            },
            query: {
                parentLoanAccountNo: data.parentLoanAccountNo
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.groupId
     * @param data.parentGsimAccountNo
     * @param data.parentGsimId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1GroupsByGroupIdGsimaccounts(data: GetV1GroupsByGroupIdGsimaccountsData): CancelablePromise<GetV1GroupsByGroupIdGsimaccountsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/groups/{groupId}/gsimaccounts',
            path: {
                groupId: data.groupId
            },
            query: {
                parentGSIMAccountNo: data.parentGsimAccountNo,
                parentGSIMId: data.parentGsimId
            }
        });
    }
    
}

export class HolidaysService {
    /**
     * List Holidays
     * Example Requests:
     *
     * holidays?officeId=1
     * @param data The data for the request.
     * @param data.officeId officeId
     * @param data.fromDate fromDate
     * @param data.toDate toDate
     * @param data.locale locale
     * @param data.dateFormat dateFormat
     * @returns GetHolidaysResponse OK
     * @throws ApiError
     */
    public static getV1Holidays(data: GetV1HolidaysData = {}): CancelablePromise<GetV1HolidaysResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/holidays',
            query: {
                officeId: data.officeId,
                fromDate: data.fromDate,
                toDate: data.toDate,
                locale: data.locale,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * Create a Holiday
     * Mandatory Fields: name, description, fromDate, toDate, repaymentsRescheduledTo, offices
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostHolidaysResponse OK
     * @throws ApiError
     */
    public static postV1Holidays(data: PostV1HolidaysData): CancelablePromise<PostV1HolidaysResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/holidays',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns string default response
     * @throws ApiError
     */
    public static getV1HolidaysTemplate(): CancelablePromise<GetV1HolidaysTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/holidays/template'
        });
    }
    
    /**
     * Delete a Holiday
     * This API allows to delete a holiday. This is a soft delete the deleted holiday status is marked as deleted.
     * @param data The data for the request.
     * @param data.holidayId holidayId
     * @returns DeleteHolidaysHolidayIdResponse OK
     * @throws ApiError
     */
    public static deleteV1HolidaysByHolidayId(data: DeleteV1HolidaysByHolidayIdData): CancelablePromise<DeleteV1HolidaysByHolidayIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/holidays/{holidayId}',
            path: {
                holidayId: data.holidayId
            }
        });
    }
    
    /**
     * Retrieve a Holiday
     * Example Requests:
     *
     * holidays/1
     * @param data The data for the request.
     * @param data.holidayId holidayId
     * @returns GetHolidaysResponse OK
     * @throws ApiError
     */
    public static getV1HolidaysByHolidayId(data: GetV1HolidaysByHolidayIdData): CancelablePromise<GetV1HolidaysByHolidayIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/holidays/{holidayId}',
            path: {
                holidayId: data.holidayId
            }
        });
    }
    
    /**
     * Activate a Holiday
     * Always Holidays are created in pending state. This API allows to activate a holiday.
     *
     * Only the active holidays are considered for rescheduling the loan repayment.
     * @param data The data for the request.
     * @param data.holidayId holidayId
     * @param data.requestBody
     * @param data.command command
     * @returns PostHolidaysHolidayIdResponse OK
     * @throws ApiError
     */
    public static postV1HolidaysByHolidayId(data: PostV1HolidaysByHolidayIdData): CancelablePromise<PostV1HolidaysByHolidayIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/holidays/{holidayId}',
            path: {
                holidayId: data.holidayId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Update a Holiday
     * If a holiday is in pending state (created and not activated) then all fields are allowed to modify. Once holidays become active only name and descriptions are allowed to modify.
     * @param data The data for the request.
     * @param data.holidayId holidayId
     * @param data.requestBody
     * @returns PutHolidaysHolidayIdResponse OK
     * @throws ApiError
     */
    public static putV1HolidaysByHolidayId(data: PutV1HolidaysByHolidayIdData): CancelablePromise<PutV1HolidaysByHolidayIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/holidays/{holidayId}',
            path: {
                holidayId: data.holidayId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class HooksService {
    /**
     * Retrieve Hooks
     * Returns the list of hooks.
     *
     * Example Requests:
     *
     * hooks
     * @returns GetHookResponse OK
     * @throws ApiError
     */
    public static getV1Hooks(): CancelablePromise<GetV1HooksResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/hooks'
        });
    }
    
    /**
     * Create a Hook
     * The following parameters can be passed for the creation of a hook :-
     *
     * name - string - Required. The name of the template that is being called. (See /hooks/template for the list of valid hook names.)
     *
     * isActive - boolean - Determines whether the hook is actually triggered.
     *
     * events - array - Determines what events the hook is triggered for.
     *
     * config - hash - Required. Key/value pairs to provide settings for this hook. These settings vary between the templates.
     *
     * templateId - Optional. The UGD template ID associated with the same entity (client or loan).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostHookResponse OK
     * @throws ApiError
     */
    public static postV1Hooks(data: PostV1HooksData): CancelablePromise<PostV1HooksResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/hooks',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Hooks Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed description Lists
     * Example Request:
     *
     * hooks/template
     * @returns GetHookTemplateResponse OK
     * @throws ApiError
     */
    public static getV1HooksTemplate(): CancelablePromise<GetV1HooksTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/hooks/template'
        });
    }
    
    /**
     * Delete a Hook
     * Deletes a hook.
     * @param data The data for the request.
     * @param data.hookId hookId
     * @returns DeleteHookResponse OK
     * @throws ApiError
     */
    public static deleteV1HooksByHookId(data: DeleteV1HooksByHookIdData): CancelablePromise<DeleteV1HooksByHookIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/hooks/{hookId}',
            path: {
                hookId: data.hookId
            }
        });
    }
    
    /**
     * Retrieve a Hook
     * Returns the details of a Hook.
     *
     * Example Requests:
     *
     * hooks/1
     * @param data The data for the request.
     * @param data.hookId hookId
     * @returns GetHookResponse OK
     * @throws ApiError
     */
    public static getV1HooksByHookId(data: GetV1HooksByHookIdData): CancelablePromise<GetV1HooksByHookIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/hooks/{hookId}',
            path: {
                hookId: data.hookId
            }
        });
    }
    
    /**
     * Update a Hook
     * Updates the details of a hook.
     * @param data The data for the request.
     * @param data.hookId hookId
     * @param data.requestBody
     * @returns PutHookResponse OK
     * @throws ApiError
     */
    public static putV1HooksByHookId(data: PutV1HooksByHookIdData): CancelablePromise<PutV1HooksByHookIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/hooks/{hookId}',
            path: {
                hookId: data.hookId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class BulkImportService {
    /**
     * @param data The data for the request.
     * @param data.entityType
     * @returns string default response
     * @throws ApiError
     */
    public static getV1Imports(data: GetV1ImportsData = {}): CancelablePromise<GetV1ImportsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/imports',
            query: {
                entityType: data.entityType
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.importDocumentId
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1ImportsDownloadOutputTemplate(data: GetV1ImportsDownloadOutputTemplateData = {}): CancelablePromise<GetV1ImportsDownloadOutputTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/imports/downloadOutputTemplate',
            query: {
                importDocumentId: data.importDocumentId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.importDocumentId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1ImportsGetOutputTemplateLocation(data: GetV1ImportsGetOutputTemplateLocationData = {}): CancelablePromise<GetV1ImportsGetOutputTemplateLocationResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/imports/getOutputTemplateLocation',
            query: {
                importDocumentId: data.importDocumentId
            }
        });
    }
    
}

export class InstanceModeService {
    /**
     * Changes the Fineract instance mode
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown OK
     * @throws ApiError
     */
    public static putV1InstanceMode(data: PutV1InstanceModeData): CancelablePromise<PutV1InstanceModeResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/instance-mode',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class InterestRateChartService {
    /**
     * Retrieve all Charts
     * Retrieve list of charts associated with a term deposit product(FD or RD).
     * Example Requests:
     *
     * interestratecharts?productId=1
     * @param data The data for the request.
     * @param data.productId productId
     * @returns GetInterestRateChartsResponse OK
     * @throws ApiError
     */
    public static getV1Interestratecharts(data: GetV1InterestratechartsData = {}): CancelablePromise<GetV1InterestratechartsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/interestratecharts',
            query: {
                productId: data.productId
            }
        });
    }
    
    /**
     * Create a Chart
     * Creates a new chart which can be attached to a term deposit products (FD or RD).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostInterestRateChartsResponse OK
     * @throws ApiError
     */
    public static postV1Interestratecharts(data: PostV1InterestratechartsData): CancelablePromise<PostV1InterestratechartsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/interestratecharts',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Chart Details Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for creating a chart. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed Value Lists
     * Example Request:
     *
     * interestratecharts/template
     * @returns GetInterestRateChartsTemplateResponse OK
     * @throws ApiError
     */
    public static getV1InterestratechartsTemplate(): CancelablePromise<GetV1InterestratechartsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/interestratecharts/template'
        });
    }
    
    /**
     * Delete a Chart
     * It deletes the chart
     * @param data The data for the request.
     * @param data.chartId chartId
     * @returns DeleteInterestRateChartsChartIdResponse OK
     * @throws ApiError
     */
    public static deleteV1InterestratechartsByChartId(data: DeleteV1InterestratechartsByChartIdData): CancelablePromise<DeleteV1InterestratechartsByChartIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/interestratecharts/{chartId}',
            path: {
                chartId: data.chartId
            }
        });
    }
    
    /**
     * Retrieve a Chart
     * It retrieves the Interest Rate Chart
     * Example Requests:
     *
     * interestratecharts/1
     * @param data The data for the request.
     * @param data.chartId chartId
     * @returns GetInterestRateChartsResponse OK
     * @throws ApiError
     */
    public static getV1InterestratechartsByChartId(data: GetV1InterestratechartsByChartIdData): CancelablePromise<GetV1InterestratechartsByChartIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/interestratecharts/{chartId}',
            path: {
                chartId: data.chartId
            }
        });
    }
    
    /**
     * Update a Chart
     * It updates the chart
     * @param data The data for the request.
     * @param data.chartId chartId
     * @param data.requestBody
     * @returns PutInterestRateChartsChartIdResponse OK
     * @throws ApiError
     */
    public static putV1InterestratechartsByChartId(data: PutV1InterestratechartsByChartIdData): CancelablePromise<PutV1InterestratechartsByChartIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/interestratecharts/{chartId}',
            path: {
                chartId: data.chartId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class InterestRateSlabAKAInterestBandsService {
    /**
     * Retrieve all Slabs
     * Retrieve list of slabs associated with a chart
     *
     * Example Requests:
     *
     * interestratecharts/1/chartslabs
     * @param data The data for the request.
     * @param data.chartId chartId
     * @returns InterestRateChartSlabData default response
     * @throws ApiError
     */
    public static getV1InterestratechartsByChartIdChartslabs(data: GetV1InterestratechartsByChartIdChartslabsData): CancelablePromise<GetV1InterestratechartsByChartIdChartslabsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/interestratecharts/{chartId}/chartslabs',
            path: {
                chartId: data.chartId
            }
        });
    }
    
    /**
     * Create a Slab
     * Creates a new interest rate slab for an interest rate chart.
     * Mandatory Fields
     * periodType, fromPeriod, annualInterestRate
     * Optional Fields
     * toPeriod and description
     * Example Requests:
     *
     * interestratecharts/1/chartslabs
     * @param data The data for the request.
     * @param data.chartId chartId
     * @param data.requestBody
     * @returns PostInterestRateChartsChartIdChartSlabsResponse OK
     * @throws ApiError
     */
    public static postV1InterestratechartsByChartIdChartslabs(data: PostV1InterestratechartsByChartIdChartslabsData): CancelablePromise<PostV1InterestratechartsByChartIdChartslabsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/interestratecharts/{chartId}/chartslabs',
            path: {
                chartId: data.chartId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.chartId chartId
     * @returns InterestRateChartSlabData default response
     * @throws ApiError
     */
    public static getV1InterestratechartsByChartIdChartslabsTemplate(data: GetV1InterestratechartsByChartIdChartslabsTemplateData): CancelablePromise<GetV1InterestratechartsByChartIdChartslabsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/interestratecharts/{chartId}/chartslabs/template',
            path: {
                chartId: data.chartId
            }
        });
    }
    
    /**
     * Delete a Slab
     * Delete a Slab from a chart
     * @param data The data for the request.
     * @param data.chartId chartId
     * @param data.chartSlabId chartSlabId
     * @returns DeleteInterestRateChartsChartIdChartSlabsResponse OK
     * @throws ApiError
     */
    public static deleteV1InterestratechartsByChartIdChartslabsByChartSlabId(data: DeleteV1InterestratechartsByChartIdChartslabsByChartSlabIdData): CancelablePromise<DeleteV1InterestratechartsByChartIdChartslabsByChartSlabIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/interestratecharts/{chartId}/chartslabs/{chartSlabId}',
            path: {
                chartId: data.chartId,
                chartSlabId: data.chartSlabId
            }
        });
    }
    
    /**
     * Retrieve a Slab
     * Retrieve a slab associated with an Interest rate chart
     *
     * Example Requests:
     *
     * interestratecharts/1/chartslabs/1
     *
     * @param data The data for the request.
     * @param data.chartId chartId
     * @param data.chartSlabId chartSlabId
     * @returns InterestRateChartSlabData default response
     * @throws ApiError
     */
    public static getV1InterestratechartsByChartIdChartslabsByChartSlabId(data: GetV1InterestratechartsByChartIdChartslabsByChartSlabIdData): CancelablePromise<GetV1InterestratechartsByChartIdChartslabsByChartSlabIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/interestratecharts/{chartId}/chartslabs/{chartSlabId}',
            path: {
                chartId: data.chartId,
                chartSlabId: data.chartSlabId
            }
        });
    }
    
    /**
     * Update a Slab
     * It updates the Slab from chart
     * @param data The data for the request.
     * @param data.chartId chartId
     * @param data.chartSlabId chartSlabId
     * @param data.requestBody
     * @returns PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse OK
     * @throws ApiError
     */
    public static putV1InterestratechartsByChartIdChartslabsByChartSlabId(data: PutV1InterestratechartsByChartIdChartslabsByChartSlabIdData): CancelablePromise<PutV1InterestratechartsByChartIdChartslabsByChartSlabIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/interestratecharts/{chartId}/chartslabs/{chartSlabId}',
            path: {
                chartId: data.chartId,
                chartSlabId: data.chartSlabId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class ProgressiveLoanService {
    /**
     * Fetch ProgressiveLoanInterestScheduleModel
     * DO NOT USE THIS IN PRODUCTION!
     * @param data The data for the request.
     * @param data.loanId loanId
     * @returns ProgressiveLoanInterestScheduleModel default response
     * @throws ApiError
     */
    public static getV1InternalLoanProgressiveByLoanIdModel(data: GetV1InternalLoanProgressiveByLoanIdModelData): CancelablePromise<GetV1InternalLoanProgressiveByLoanIdModelResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/internal/loan/progressive/{loanId}/model',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * Update and Save ProgressiveLoanInterestScheduleModel
     * DO NOT USE THIS IN PRODUCTION!
     * @param data The data for the request.
     * @param data.loanId loanId
     * @returns ProgressiveLoanInterestScheduleModel default response
     * @throws ApiError
     */
    public static postV1InternalLoanProgressiveByLoanIdModel(data: PostV1InternalLoanProgressiveByLoanIdModelData): CancelablePromise<PostV1InternalLoanProgressiveByLoanIdModelResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/internal/loan/progressive/{loanId}/model',
            path: {
                loanId: data.loanId
            }
        });
    }
    
}

export class InterOperationService {
    /**
     * Query Interoperation Account details
     * @param data The data for the request.
     * @param data.accountId accountId
     * @returns InteropAccountData OK
     * @throws ApiError
     */
    public static getV1InteroperationAccountsByAccountId(data: GetV1InteroperationAccountsByAccountIdData): CancelablePromise<GetV1InteroperationAccountsByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/interoperation/accounts/{accountId}',
            path: {
                accountId: data.accountId
            }
        });
    }
    
    /**
     * Query Interoperation secondary identifiers by Account Id
     * @param data The data for the request.
     * @param data.accountId accountId
     * @returns InteropIdentifiersResponseData OK
     * @throws ApiError
     */
    public static getV1InteroperationAccountsByAccountIdIdentifiers(data: GetV1InteroperationAccountsByAccountIdIdentifiersData): CancelablePromise<GetV1InteroperationAccountsByAccountIdIdentifiersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/interoperation/accounts/{accountId}/identifiers',
            path: {
                accountId: data.accountId
            }
        });
    }
    
    /**
     * Query KYC by Account Id
     * @param data The data for the request.
     * @param data.accountId accountId
     * @returns InteropKycResponseData OK
     * @throws ApiError
     */
    public static getV1InteroperationAccountsByAccountIdKyc(data: GetV1InteroperationAccountsByAccountIdKycData): CancelablePromise<GetV1InteroperationAccountsByAccountIdKycResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/interoperation/accounts/{accountId}/kyc',
            path: {
                accountId: data.accountId
            }
        });
    }
    
    /**
     * Query transactions by Account Id
     * @param data The data for the request.
     * @param data.accountId accountId
     * @param data.debit debit
     * @param data.credit credit
     * @param data.fromBookingDateTime fromBookingDateTime
     * @param data.toBookingDateTime toBookingDateTime
     * @returns InteropTransactionsData OK
     * @throws ApiError
     */
    public static getV1InteroperationAccountsByAccountIdTransactions(data: GetV1InteroperationAccountsByAccountIdTransactionsData): CancelablePromise<GetV1InteroperationAccountsByAccountIdTransactionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/interoperation/accounts/{accountId}/transactions',
            path: {
                accountId: data.accountId
            },
            query: {
                debit: data.debit,
                credit: data.credit,
                fromBookingDateTime: data.fromBookingDateTime,
                toBookingDateTime: data.toBookingDateTime
            }
        });
    }
    
    /**
     * Query Interoperation Health Request
     * @returns unknown OK
     * @throws ApiError
     */
    public static getV1InteroperationHealth(): CancelablePromise<GetV1InteroperationHealthResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/interoperation/health'
        });
    }
    
    /**
     * Allow Interoperation Identifier registration
     * @param data The data for the request.
     * @param data.idType idType
     * @param data.idValue idValue
     * @param data.requestBody
     * @returns InteropIdentifierAccountResponseData OK
     * @throws ApiError
     */
    public static deleteV1InteroperationPartiesByIdTypeByIdValue(data: DeleteV1InteroperationPartiesByIdTypeByIdValueData): CancelablePromise<DeleteV1InteroperationPartiesByIdTypeByIdValueResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/interoperation/parties/{idType}/{idValue}',
            path: {
                idType: data.idType,
                idValue: data.idValue
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Query Interoperation Account by secondary identifier
     * @param data The data for the request.
     * @param data.idType idType
     * @param data.idValue idValue
     * @returns InteropIdentifierAccountResponseData OK
     * @throws ApiError
     */
    public static getV1InteroperationPartiesByIdTypeByIdValue(data: GetV1InteroperationPartiesByIdTypeByIdValueData): CancelablePromise<GetV1InteroperationPartiesByIdTypeByIdValueResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/interoperation/parties/{idType}/{idValue}',
            path: {
                idType: data.idType,
                idValue: data.idValue
            }
        });
    }
    
    /**
     * Interoperation Identifier registration
     * @param data The data for the request.
     * @param data.idType idType
     * @param data.idValue idValue
     * @param data.requestBody
     * @returns InteropIdentifierAccountResponseData OK
     * @throws ApiError
     */
    public static postV1InteroperationPartiesByIdTypeByIdValue(data: PostV1InteroperationPartiesByIdTypeByIdValueData): CancelablePromise<PostV1InteroperationPartiesByIdTypeByIdValueResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/interoperation/parties/{idType}/{idValue}',
            path: {
                idType: data.idType,
                idValue: data.idValue
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Allow Interoperation Identifier registration
     * @param data The data for the request.
     * @param data.idType idType
     * @param data.idValue idValue
     * @param data.subIdOrType subIdOrType
     * @param data.requestBody
     * @returns InteropIdentifierAccountResponseData OK
     * @throws ApiError
     */
    public static deleteV1InteroperationPartiesByIdTypeByIdValueBySubIdOrType(data: DeleteV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeData): CancelablePromise<DeleteV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/interoperation/parties/{idType}/{idValue}/{subIdOrType}',
            path: {
                idType: data.idType,
                idValue: data.idValue,
                subIdOrType: data.subIdOrType
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Query Interoperation Account by secondary identifier
     * @param data The data for the request.
     * @param data.idType idType
     * @param data.idValue idValue
     * @param data.subIdOrType subIdOrType
     * @returns InteropIdentifierAccountResponseData OK
     * @throws ApiError
     */
    public static getV1InteroperationPartiesByIdTypeByIdValueBySubIdOrType(data: GetV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeData): CancelablePromise<GetV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/interoperation/parties/{idType}/{idValue}/{subIdOrType}',
            path: {
                idType: data.idType,
                idValue: data.idValue,
                subIdOrType: data.subIdOrType
            }
        });
    }
    
    /**
     * Interoperation Identifier registration
     * @param data The data for the request.
     * @param data.idType idType
     * @param data.idValue idValue
     * @param data.subIdOrType subIdOrType
     * @param data.requestBody
     * @returns InteropIdentifierAccountResponseData OK
     * @throws ApiError
     */
    public static postV1InteroperationPartiesByIdTypeByIdValueBySubIdOrType(data: PostV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeData): CancelablePromise<PostV1InteroperationPartiesByIdTypeByIdValueBySubIdOrTypeResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/interoperation/parties/{idType}/{idValue}/{subIdOrType}',
            path: {
                idType: data.idType,
                idValue: data.idValue,
                subIdOrType: data.subIdOrType
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Calculate Interoperation Quote
     * @param data The data for the request.
     * @param data.requestBody
     * @returns InteropQuoteResponseData OK
     * @throws ApiError
     */
    public static postV1InteroperationQuotes(data: PostV1InteroperationQuotesData): CancelablePromise<PostV1InteroperationQuotesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/interoperation/quotes',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Allow Interoperation Transaction Request
     * @param data The data for the request.
     * @param data.requestBody
     * @returns InteropTransactionRequestResponseData OK
     * @throws ApiError
     */
    public static postV1InteroperationRequests(data: PostV1InteroperationRequestsData): CancelablePromise<PostV1InteroperationRequestsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/interoperation/requests',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Disburse Loan by Account Id
     * @param data The data for the request.
     * @param data.accountId accountId
     * @returns string default response
     * @throws ApiError
     */
    public static postV1InteroperationTransactionsByAccountIdDisburse(data: PostV1InteroperationTransactionsByAccountIdDisburseData): CancelablePromise<PostV1InteroperationTransactionsByAccountIdDisburseResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/interoperation/transactions/{accountId}/disburse',
            path: {
                accountId: data.accountId
            }
        });
    }
    
    /**
     * Disburse Loan by Account Id
     * @param data The data for the request.
     * @param data.accountId accountId
     * @returns string default response
     * @throws ApiError
     */
    public static postV1InteroperationTransactionsByAccountIdLoanrepayment(data: PostV1InteroperationTransactionsByAccountIdLoanrepaymentData): CancelablePromise<PostV1InteroperationTransactionsByAccountIdLoanrepaymentResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/interoperation/transactions/{accountId}/loanrepayment',
            path: {
                accountId: data.accountId
            }
        });
    }
    
    /**
     * Query Interoperation Quote
     * @param data The data for the request.
     * @param data.transactionCode transactionCode
     * @param data.quoteCode quoteCode
     * @returns InteropQuoteResponseData OK
     * @throws ApiError
     */
    public static getV1InteroperationTransactionsByTransactionCodeQuotesByQuoteCode(data: GetV1InteroperationTransactionsByTransactionCodeQuotesByQuoteCodeData): CancelablePromise<GetV1InteroperationTransactionsByTransactionCodeQuotesByQuoteCodeResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/interoperation/transactions/{transactionCode}/quotes/{quoteCode}',
            path: {
                transactionCode: data.transactionCode,
                quoteCode: data.quoteCode
            }
        });
    }
    
    /**
     * Query Interoperation Transaction Request
     * @param data The data for the request.
     * @param data.transactionCode transactionCode
     * @param data.requestCode requestCode
     * @returns InteropTransactionRequestResponseData OK
     * @throws ApiError
     */
    public static getV1InteroperationTransactionsByTransactionCodeRequestsByRequestCode(data: GetV1InteroperationTransactionsByTransactionCodeRequestsByRequestCodeData): CancelablePromise<GetV1InteroperationTransactionsByTransactionCodeRequestsByRequestCodeResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/interoperation/transactions/{transactionCode}/requests/{requestCode}',
            path: {
                transactionCode: data.transactionCode,
                requestCode: data.requestCode
            }
        });
    }
    
    /**
     * Query Interoperation Transfer
     * @param data The data for the request.
     * @param data.transactionCode transactionCode
     * @param data.transferCode transferCode
     * @returns InteropTransferResponseData OK
     * @throws ApiError
     */
    public static getV1InteroperationTransactionsByTransactionCodeTransfersByTransferCode(data: GetV1InteroperationTransactionsByTransactionCodeTransfersByTransferCodeData): CancelablePromise<GetV1InteroperationTransactionsByTransactionCodeTransfersByTransferCodeResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/interoperation/transactions/{transactionCode}/transfers/{transferCode}',
            path: {
                transactionCode: data.transactionCode,
                transferCode: data.transferCode
            }
        });
    }
    
    /**
     * Prepare Interoperation Transfer
     * @param data The data for the request.
     * @param data.requestBody
     * @param data.action action
     * @returns InteropTransferResponseData OK
     * @throws ApiError
     */
    public static postV1InteroperationTransfers(data: PostV1InteroperationTransfersData): CancelablePromise<PostV1InteroperationTransfersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/interoperation/transfers',
            query: {
                action: data.action
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class SchedulerJobService {
    /**
     * Retrieve Scheduler Jobs
     * Returns the list of jobs.
     *
     * Example Requests:
     *
     * jobs
     * @returns GetJobsResponse OK
     * @throws ApiError
     */
    public static getV1Jobs(): CancelablePromise<GetV1JobsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/jobs'
        });
    }
    
    /**
     * Retrieve a Job
     * Returns the details of a Job bu shortName.
     *
     * Example Requests:
     *
     * jobs/short-name/SA_PINT
     * @param data The data for the request.
     * @param data.shortName short-name
     * @returns GetJobsResponse OK
     * @throws ApiError
     */
    public static getV1JobsShortNameByShortName(data: GetV1JobsShortNameByShortNameData): CancelablePromise<GetV1JobsShortNameByShortNameResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/jobs/short-name/{shortName}',
            path: {
                shortName: data.shortName
            }
        });
    }
    
    /**
     * Run a Job
     * Manually Execute Specific Job.
     * @param data The data for the request.
     * @param data.shortName short-name
     * @param data.command command
     * @param data.requestBody
     * @returns unknown POST: jobs/short-name/SA_PINT?command=executeJob
     * @throws ApiError
     */
    public static postV1JobsShortNameByShortName(data: PostV1JobsShortNameByShortNameData): CancelablePromise<PostV1JobsShortNameByShortNameResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/jobs/short-name/{shortName}',
            path: {
                shortName: data.shortName
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Update a Job
     * Updates the details of a job.
     * @param data The data for the request.
     * @param data.shortName short-name
     * @param data.requestBody
     * @returns unknown OK
     * @throws ApiError
     */
    public static putV1JobsShortNameByShortName(data: PutV1JobsShortNameByShortNameData): CancelablePromise<PutV1JobsShortNameByShortNameResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/jobs/short-name/{shortName}',
            path: {
                shortName: data.shortName
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Job Run History
     * Example Requests:
     *
     * jobs/short-name/SA_PINT/runhistory?offset=0&limit=200
     * @param data The data for the request.
     * @param data.shortName short-name
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @returns GetJobsJobIDJobRunHistoryResponse OK
     * @throws ApiError
     */
    public static getV1JobsShortNameByShortNameRunhistory(data: GetV1JobsShortNameByShortNameRunhistoryData): CancelablePromise<GetV1JobsShortNameByShortNameRunhistoryResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/jobs/short-name/{shortName}/runhistory',
            path: {
                shortName: data.shortName
            },
            query: {
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            }
        });
    }
    
    /**
     * Retrieve a Job
     * Returns the details of a Job.
     *
     * Example Requests:
     *
     * jobs/5
     * @param data The data for the request.
     * @param data.jobId jobId
     * @returns GetJobsResponse OK
     * @throws ApiError
     */
    public static getV1JobsByJobId(data: GetV1JobsByJobIdData): CancelablePromise<GetV1JobsByJobIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/jobs/{jobId}',
            path: {
                jobId: data.jobId
            }
        });
    }
    
    /**
     * Run a Job
     * Manually Execute Specific Job.
     * @param data The data for the request.
     * @param data.jobId jobId
     * @param data.command command
     * @param data.requestBody
     * @returns unknown POST: jobs/1?command=executeJob
     * @throws ApiError
     */
    public static postV1JobsByJobId(data: PostV1JobsByJobIdData): CancelablePromise<PostV1JobsByJobIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/jobs/{jobId}',
            path: {
                jobId: data.jobId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Update a Job
     * Updates the details of a job.
     * @param data The data for the request.
     * @param data.jobId jobId
     * @param data.requestBody
     * @returns unknown OK
     * @throws ApiError
     */
    public static putV1JobsByJobId(data: PutV1JobsByJobIdData): CancelablePromise<PutV1JobsByJobIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/jobs/{jobId}',
            path: {
                jobId: data.jobId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Job Run History
     * Example Requests:
     *
     * jobs/5/runhistory?offset=0&limit=200
     * @param data The data for the request.
     * @param data.jobId jobId
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @returns GetJobsJobIDJobRunHistoryResponse OK
     * @throws ApiError
     */
    public static getV1JobsByJobIdRunhistory(data: GetV1JobsByJobIdRunhistoryData): CancelablePromise<GetV1JobsByJobIdRunhistoryResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/jobs/{jobId}/runhistory',
            path: {
                jobId: data.jobId
            },
            query: {
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            }
        });
    }
    
}

export class BusinessStepConfigurationService {
    /**
     * List Business Jobs
     * Returns the configured Business Jobs
     * @returns ConfiguredJobNamesDTO default response
     * @throws ApiError
     */
    public static getV1JobsNames(): CancelablePromise<GetV1JobsNamesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/jobs/names'
        });
    }
    
    /**
     * List Business Step Configurations for a Job
     * Returns the available Business Steps for a job
     * @param data The data for the request.
     * @param data.jobName jobName
     * @returns JobBusinessStepDetail default response
     * @throws ApiError
     */
    public static getV1JobsByJobNameAvailableSteps(data: GetV1JobsByJobNameAvailableStepsData): CancelablePromise<GetV1JobsByJobNameAvailableStepsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/jobs/{jobName}/available-steps',
            path: {
                jobName: data.jobName
            }
        });
    }
    
    /**
     * List Business Step Configurations for a Job
     * Returns the configured Business Steps for a job
     * @param data The data for the request.
     * @param data.jobName jobName
     * @returns JobBusinessStepConfigData default response
     * @throws ApiError
     */
    public static getV1JobsByJobNameSteps(data: GetV1JobsByJobNameStepsData): CancelablePromise<GetV1JobsByJobNameStepsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/jobs/{jobName}/steps',
            path: {
                jobName: data.jobName
            }
        });
    }
    
    /**
     * List Business Step Configurations for a Job
     * Updates the Business steps execution order for a job
     * @param data The data for the request.
     * @param data.jobName jobName
     * @param data.requestBody
     * @returns void NO_CONTENT
     * @throws ApiError
     */
    public static putV1JobsByJobNameSteps(data: PutV1JobsByJobNameStepsData): CancelablePromise<PutV1JobsByJobNameStepsResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/jobs/{jobName}/steps',
            path: {
                jobName: data.jobName
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class InlineJobService {
    /**
     * Starts an inline Job
     * Starts an inline Job
     * @param data The data for the request.
     * @param data.jobName jobName
     * @param data.requestBody
     * @returns InlineJobResponse OK
     * @throws ApiError
     */
    public static postV1JobsByJobNameInline(data: PostV1JobsByJobNameInlineData): CancelablePromise<PostV1JobsByJobNameInlineResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/jobs/{jobName}/inline',
            path: {
                jobName: data.jobName
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Request body item size validation error'
            }
        });
    }
    
}

export class JournalEntriesService {
    /**
     * List Journal Entries
     * The list capability of journal entries can support pagination and sorting.
     *
     * Example Requests:
     *
     * journalentries
     *
     * journalentries?transactionId=PB37X8Y21EQUY4S
     *
     * journalentries?officeId=1&manualEntriesOnly=true&fromDate=1 July 2013&toDate=15 July 2013&dateFormat=dd MMMM yyyy&locale=en
     *
     * journalentries?fields=officeName,glAccountName,transactionDate
     *
     * journalentries?offset=10&limit=50
     *
     * journalentries?orderBy=transactionId&sortOrder=DESC
     *
     * journalentries?runningBalance=true
     *
     * journalentries?transactionDetails=true
     *
     * journalentries?loanId=12
     *
     * journalentries?savingsId=24
     * @param data The data for the request.
     * @param data.officeId officeId
     * @param data.glAccountId glAccountId
     * @param data.manualEntriesOnly manualEntriesOnly
     * @param data.fromDate fromDate
     * @param data.toDate toDate
     * @param data.submittedOnDateFrom submittedOnDateFrom
     * @param data.submittedOnDateTo submittedOnDateTo
     * @param data.transactionId transactionId
     * @param data.entityType entityType
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @param data.locale locale
     * @param data.dateFormat dateFormat
     * @param data.loanId loanId
     * @param data.savingsId savingsId
     * @param data.runningBalance runningBalance
     * @param data.transactionDetails transactionDetails
     * @returns GetJournalEntriesTransactionIdResponse OK
     * @throws ApiError
     */
    public static getV1Journalentries(data: GetV1JournalentriesData = {}): CancelablePromise<GetV1JournalentriesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/journalentries',
            query: {
                officeId: data.officeId,
                glAccountId: data.glAccountId,
                manualEntriesOnly: data.manualEntriesOnly,
                fromDate: data.fromDate,
                toDate: data.toDate,
                submittedOnDateFrom: data.submittedOnDateFrom,
                submittedOnDateTo: data.submittedOnDateTo,
                transactionId: data.transactionId,
                entityType: data.entityType,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder,
                locale: data.locale,
                dateFormat: data.dateFormat,
                loanId: data.loanId,
                savingsId: data.savingsId,
                runningBalance: data.runningBalance,
                transactionDetails: data.transactionDetails
            }
        });
    }
    
    /**
     * Create "Balanced" Journal Entries
     * Note: A Balanced (simple) Journal entry would have atleast one "Debit" and one "Credit" entry whose amounts are equal
     * Compound Journal entries may have "n" debits and "m" credits where both "m" and "n" are greater than 0 and the net sum or all debits and credits are equal
     *
     *
     * Mandatory Fields
     * officeId, transactionDate
     *
     *
     * credits- glAccountId, amount, comments
     *
     *
     * debits-  glAccountId, amount, comments
     *
     *
     * Optional Fields
     * paymentTypeId, accountNumber, checkNumber, routingCode, receiptNumber, bankNumber
     * @param data The data for the request.
     * @param data.command command
     * @param data.requestBody
     * @returns PostJournalEntriesResponse OK
     * @throws ApiError
     */
    public static postV1Journalentries(data: PostV1JournalentriesData = {}): CancelablePromise<PostV1JournalentriesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/journalentries',
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.officeId
     * @param data.dateFormat
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1JournalentriesDownloadtemplate(data: GetV1JournalentriesDownloadtemplateData = {}): CancelablePromise<GetV1JournalentriesDownloadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/journalentries/downloadtemplate',
            query: {
                officeId: data.officeId,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.officeId
     * @param data.currencyCode
     * @returns string default response
     * @throws ApiError
     */
    public static getV1JournalentriesOpeningbalance(data: GetV1JournalentriesOpeningbalanceData = {}): CancelablePromise<GetV1JournalentriesOpeningbalanceResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/journalentries/openingbalance',
            query: {
                officeId: data.officeId,
                currencyCode: data.currencyCode
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.offset
     * @param data.limit
     * @param data.entryId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1JournalentriesProvisioning(data: GetV1JournalentriesProvisioningData = {}): CancelablePromise<GetV1JournalentriesProvisioningResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/journalentries/provisioning',
            query: {
                offset: data.offset,
                limit: data.limit,
                entryId: data.entryId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.formData Upload journal entries template
     * @returns string default response
     * @throws ApiError
     */
    public static postV1JournalentriesUploadtemplate(data: PostV1JournalentriesUploadtemplateData = {}): CancelablePromise<PostV1JournalentriesUploadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/journalentries/uploadtemplate',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Retrieve a single Entry
     * Example Requests:
     *
     * journalentries/1
     *
     *
     *
     * journalentries/1?fields=officeName,glAccountId,entryType,amount
     *
     * journalentries/1?runningBalance=true
     *
     * journalentries/1?transactionDetails=true
     * @param data The data for the request.
     * @param data.journalEntryId journalEntryId
     * @param data.runningBalance runningBalance
     * @param data.transactionDetails transactionDetails
     * @returns JournalEntryTransactionItem OK
     * @throws ApiError
     */
    public static getV1JournalentriesByJournalEntryId(data: GetV1JournalentriesByJournalEntryIdData): CancelablePromise<GetV1JournalentriesByJournalEntryIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/journalentries/{journalEntryId}',
            path: {
                journalEntryId: data.journalEntryId
            },
            query: {
                runningBalance: data.runningBalance,
                transactionDetails: data.transactionDetails
            }
        });
    }
    
    /**
     * Update Running balances for Journal Entries
     * This API calculates the running balances for office. If office ID not provided this API calculates running balances for all offices.
     * Mandatory Fields
     * officeId
     * @param data The data for the request.
     * @param data.transactionId transactionId
     * @param data.command command
     * @param data.requestBody
     * @returns PostJournalEntriesTransactionIdResponse OK
     * @throws ApiError
     */
    public static postV1JournalentriesByTransactionId(data: PostV1JournalentriesByTransactionIdData): CancelablePromise<PostV1JournalentriesByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/journalentries/{transactionId}',
            path: {
                transactionId: data.transactionId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class LikelihoodService {
    /**
     * @param data The data for the request.
     * @param data.ppiName
     * @returns string default response
     * @throws ApiError
     */
    public static getV1LikelihoodByPpiName(data: GetV1LikelihoodByPpiNameData): CancelablePromise<GetV1LikelihoodByPpiNameResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/likelihood/{ppiName}',
            path: {
                ppiName: data.ppiName
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.likelihoodId
     * @param data.ppiName
     * @returns string default response
     * @throws ApiError
     */
    public static getV1LikelihoodByPpiNameByLikelihoodId(data: GetV1LikelihoodByPpiNameByLikelihoodIdData): CancelablePromise<GetV1LikelihoodByPpiNameByLikelihoodIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/likelihood/{ppiName}/{likelihoodId}',
            path: {
                likelihoodId: data.likelihoodId,
                ppiName: data.ppiName
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.likelihoodId
     * @param data.ppiName
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1LikelihoodByPpiNameByLikelihoodId(data: PutV1LikelihoodByPpiNameByLikelihoodIdData): CancelablePromise<PutV1LikelihoodByPpiNameByLikelihoodIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/likelihood/{ppiName}/{likelihoodId}',
            path: {
                likelihoodId: data.likelihoodId,
                ppiName: data.ppiName
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class LoanCollateralManagementService {
    /**
     * Get Loan Collateral Details
     * Get Loan Collateral Details
     * @param data The data for the request.
     * @param data.collateralId collateralId
     * @returns LoanCollateralResponseData default response
     * @throws ApiError
     */
    public static getV1LoanCollateralManagementByCollateralId(data: GetV1LoanCollateralManagementByCollateralIdData): CancelablePromise<GetV1LoanCollateralManagementByCollateralIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loan-collateral-management/{collateralId}',
            path: {
                collateralId: data.collateralId
            }
        });
    }
    
    /**
     * Delete Loan Collateral
     * Delete Loan Collateral
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.id loan collateral id
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static deleteV1LoanCollateralManagementById(data: DeleteV1LoanCollateralManagementByIdData): CancelablePromise<DeleteV1LoanCollateralManagementByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/loan-collateral-management/{id}',
            path: {
                loanId: data.loanId,
                id: data.id
            }
        });
    }
    
}

export class LoanProductsService {
    /**
     * List Loan Products
     * Lists Loan Products
     *
     * Example Requests:
     *
     * loanproducts
     *
     *
     * loanproducts?fields=name,description,interestRateFrequencyType,amortizationType
     * @returns GetLoanProductsResponse OK
     * @throws ApiError
     */
    public static getV1Loanproducts(): CancelablePromise<GetV1LoanproductsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loanproducts'
        });
    }
    
    /**
     * Create a Loan Product
     * Depending of the Accounting Rule (accountingRule) selected, additional fields with details of the appropriate Ledger Account identifiers would need to be passed in.
     *
     * Refer MifosX Accounting Specs Draft for more details regarding the significance of the selected accounting rule
     *
     * Mandatory Fields: name, shortName, currencyCode, digitsAfterDecimal, inMultiplesOf, principal, numberOfRepayments, repaymentEvery, repaymentFrequencyType, interestRatePerPeriod, interestRateFrequencyType, amortizationType, interestType, interestCalculationPeriodType, transactionProcessingStrategyCode, accountingRule, isInterestRecalculationEnabled, daysInYearType, daysInMonthType
     *
     * Optional Fields: inArrearsTolerance, graceOnPrincipalPayment, graceOnInterestPayment, graceOnInterestCharged, graceOnArrearsAgeing, charges, paymentChannelToFundSourceMappings, feeToIncomeAccountMappings, penaltyToIncomeAccountMappings, chargeOffReasonToExpenseAccountMappings, includeInBorrowerCycle, useBorrowerCycle,principalVariationsForBorrowerCycle, numberOfRepaymentVariationsForBorrowerCycle, interestRateVariationsForBorrowerCycle, multiDisburseLoan,maxTrancheCount, outstandingLoanBalance,overdueDaysForNPA,holdGuaranteeFunds, principalThresholdForLastInstalment, accountMovesOutOfNPAOnlyOnArrearsCompletion, canDefineInstallmentAmount, installmentAmountInMultiplesOf, allowAttributeOverrides, allowPartialPeriodInterestCalcualtion,dueDaysForRepaymentEvent,overDueDaysForRepaymentEvent,enableDownPayment,disbursedAmountPercentageDownPayment,enableAutoRepaymentForDownPayment,repaymentStartDateType,enableBuyDownFee
     *
     * Additional Mandatory Fields for Cash(2) based accounting: fundSourceAccountId, loanPortfolioAccountId, interestOnLoanAccountId, incomeFromFeeAccountId, incomeFromPenaltyAccountId, writeOffAccountId, transfersInSuspenseAccountId, overpaymentLiabilityAccountId
     *
     * Additional Mandatory Fields for periodic (3) and upfront (4)accrual accounting: fundSourceAccountId, loanPortfolioAccountId, interestOnLoanAccountId, incomeFromFeeAccountId, incomeFromPenaltyAccountId, writeOffAccountId, receivableInterestAccountId, receivableFeeAccountId, receivablePenaltyAccountId, transfersInSuspenseAccountId, overpaymentLiabilityAccountId
     *
     * Additional Mandatory Fields if interest recalculation is enabled(true): interestRecalculationCompoundingMethod, rescheduleStrategyMethod, recalculationRestFrequencyType
     *
     * Additional Optional Fields if interest recalculation is enabled(true): isArrearsBasedOnOriginalSchedule, preClosureInterestCalculationStrategy
     *
     * Additional Optional Fields if interest recalculation is enabled(true) and recalculationRestFrequencyType is not same as repayment period: recalculationRestFrequencyInterval, recalculationRestFrequencyDate
     *
     * Additional Optional Fields if interest recalculation is enabled(true) and interestRecalculationCompoundingMethod is enabled: recalculationCompoundingFrequencyType
     *
     * Additional Optional Fields if interest recalculation is enabled(true) and interestRecalculationCompoundingMethod is enabled and recalculationCompoundingFrequencyType is not same as repayment period: recalculationCompoundingFrequencyInterval, recalculationCompoundingFrequencyDate
     *
     * Additional Mandatory Fields if Hold Guarantee funds is enabled(true): mandatoryGuarantee
     *
     * Additional Optional Fields if Hold Guarantee funds is enabled(true): minimumGuaranteeFromOwnFunds,minimumGuaranteeFromGuarantor
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostLoanProductsResponse OK
     * @throws ApiError
     */
    public static postV1Loanproducts(data: PostV1LoanproductsData): CancelablePromise<PostV1LoanproductsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loanproducts',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve a Loan Product
     * Retrieves a Loan Product
     *
     * Example Requests:
     *
     * loanproducts/external-id/2075e308-d4a8-44d9-8203-f5a947b8c2f4
     *
     *
     * loanproducts/external-id/2075e308-d4a8-44d9-8203-f5a947b8c2f4?template=true
     *
     *
     * loanproducts/external-id/2075e308-d4a8-44d9-8203-f5a947b8c2f4?fields=name,description,numberOfRepayments
     * @param data The data for the request.
     * @param data.externalProductId externalProductId
     * @returns GetLoanProductsProductIdResponse OK
     * @throws ApiError
     */
    public static getV1LoanproductsExternalIdByExternalProductId(data: GetV1LoanproductsExternalIdByExternalProductIdData): CancelablePromise<GetV1LoanproductsExternalIdByExternalProductIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loanproducts/external-id/{externalProductId}',
            path: {
                externalProductId: data.externalProductId
            }
        });
    }
    
    /**
     * Update a Loan Product
     * Updates a Loan Product
     * @param data The data for the request.
     * @param data.externalProductId externalProductId
     * @param data.requestBody
     * @returns PutLoanProductsProductIdResponse OK
     * @throws ApiError
     */
    public static putV1LoanproductsExternalIdByExternalProductId(data: PutV1LoanproductsExternalIdByExternalProductIdData): CancelablePromise<PutV1LoanproductsExternalIdByExternalProductIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loanproducts/external-id/{externalProductId}',
            path: {
                externalProductId: data.externalProductId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Loan Product Details Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed description Lists
     * Example Request:
     *
     * loanproducts/template
     * @param data The data for the request.
     * @param data.isProductMixTemplate isProductMixTemplate
     * @returns GetLoanProductsTemplateResponse OK
     * @throws ApiError
     */
    public static getV1LoanproductsTemplate(data: GetV1LoanproductsTemplateData = {}): CancelablePromise<GetV1LoanproductsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loanproducts/template',
            query: {
                isProductMixTemplate: data.isProductMixTemplate
            }
        });
    }
    
    /**
     * Retrieve a Loan Product
     * Retrieves a Loan Product
     *
     * Example Requests:
     *
     * loanproducts/1
     *
     *
     * loanproducts/1?template=true
     *
     *
     * loanproducts/1?fields=name,description,numberOfRepayments
     * @param data The data for the request.
     * @param data.productId productId
     * @returns GetLoanProductsProductIdResponse OK
     * @throws ApiError
     */
    public static getV1LoanproductsByProductId(data: GetV1LoanproductsByProductIdData): CancelablePromise<GetV1LoanproductsByProductIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loanproducts/{productId}',
            path: {
                productId: data.productId
            }
        });
    }
    
    /**
     * Update a Loan Product
     * Updates a Loan Product
     * @param data The data for the request.
     * @param data.productId productId
     * @param data.requestBody
     * @returns PutLoanProductsProductIdResponse OK
     * @throws ApiError
     */
    public static putV1LoanproductsByProductId(data: PutV1LoanproductsByProductIdData): CancelablePromise<PutV1LoanproductsByProductIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loanproducts/{productId}',
            path: {
                productId: data.productId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class ProductMixService {
    /**
     * @param data The data for the request.
     * @param data.productId
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static deleteV1LoanproductsByProductIdProductmix(data: DeleteV1LoanproductsByProductIdProductmixData): CancelablePromise<DeleteV1LoanproductsByProductIdProductmixResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/loanproducts/{productId}/productmix',
            path: {
                productId: data.productId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.productId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1LoanproductsByProductIdProductmix(data: GetV1LoanproductsByProductIdProductmixData): CancelablePromise<GetV1LoanproductsByProductIdProductmixResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loanproducts/{productId}/productmix',
            path: {
                productId: data.productId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.productId
     * @param data.requestBody
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static postV1LoanproductsByProductIdProductmix(data: PostV1LoanproductsByProductIdProductmixData): CancelablePromise<PostV1LoanproductsByProductIdProductmixResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loanproducts/{productId}/productmix',
            path: {
                productId: data.productId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.productId
     * @param data.requestBody
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static putV1LoanproductsByProductIdProductmix(data: PutV1LoanproductsByProductIdProductmixData): CancelablePromise<PutV1LoanproductsByProductIdProductmixResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loanproducts/{productId}/productmix',
            path: {
                productId: data.productId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class LoansService {
    /**
     * List Loans
     * The list capability of loans can support pagination and sorting.
     * Example Requests:
     *
     * loans
     *
     * loans?fields=accountNo
     *
     * loans?offset=10&limit=50
     *
     * loans?orderBy=accountNo&sortOrder=DESC
     * @param data The data for the request.
     * @param data.externalId externalId
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @param data.accountNo accountNo
     * @param data.associations associations
     * @param data.clientId clientId
     * @param data.status status
     * @returns GetLoansResponse OK
     * @throws ApiError
     */
    public static getV1Loans(data: GetV1LoansData = {}): CancelablePromise<GetV1LoansResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans',
            query: {
                externalId: data.externalId,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder,
                accountNo: data.accountNo,
                associations: data.associations,
                clientId: data.clientId,
                status: data.status
            }
        });
    }
    
    /**
     * Calculate loan repayment schedule | Submit a new Loan Application
     * It calculates the loan repayment Schedule
     * Submits a new loan application
     * Mandatory Fields: clientId, productId, principal, loanTermFrequency, loanTermFrequencyType, loanType, numberOfRepayments, repaymentEvery, repaymentFrequencyType, interestRatePerPeriod, amortizationType, interestType, interestCalculationPeriodType, transactionProcessingStrategyCode, expectedDisbursementDate, submittedOnDate, loanType
     * Optional Fields: graceOnPrincipalPayment, graceOnInterestPayment, graceOnInterestCharged, linkAccountId, allowPartialPeriodInterestCalcualtion, fixedEmiAmount, maxOutstandingLoanBalance, disbursementData, graceOnArrearsAgeing, createStandingInstructionAtDisbursement (requires linkedAccountId if set to true)
     * Additional Mandatory Fields if interest recalculation is enabled for product and Rest frequency not same as repayment period: recalculationRestFrequencyDate
     * Additional Mandatory Fields if interest recalculation with interest/fee compounding is enabled for product and compounding frequency not same as repayment period: recalculationCompoundingFrequencyDate
     * Additional Mandatory Field if Entity-Datatable Check is enabled for the entity of type loan: datatables
     * @param data The data for the request.
     * @param data.requestBody
     * @param data.command command
     * @returns PostLoansResponse OK
     * @throws ApiError
     */
    public static postV1Loans(data: PostV1LoansData): CancelablePromise<PostV1LoansResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans',
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.officeId
     * @param data.staffId
     * @param data.dateFormat
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1LoansDownloadtemplate(data: GetV1LoansDownloadtemplateData = {}): CancelablePromise<GetV1LoansDownloadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/downloadtemplate',
            query: {
                officeId: data.officeId,
                staffId: data.staffId,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * Delete a Loan Application
     * Note: Only loans in "Submitted and awaiting approval" status can be deleted.
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @returns DeleteLoansLoanIdResponse OK
     * @throws ApiError
     */
    public static deleteV1LoansExternalIdByLoanExternalId(data: DeleteV1LoansExternalIdByLoanExternalIdData): CancelablePromise<DeleteV1LoansExternalIdByLoanExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/loans/external-id/{loanExternalId}',
            path: {
                loanExternalId: data.loanExternalId
            }
        });
    }
    
    /**
     * Retrieve a Loan
     * Note: template=true parameter doesn't apply to this resource.Example Requests:
     *
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854
     *
     *
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854?fields=id,principal,annualInterestRate
     *
     *
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854?associations=all
     *
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854?associations=all&exclude=guarantors
     *
     *
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854?fields=id,principal,annualInterestRate&associations=repaymentSchedule,transactions
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.staffInSelectedOfficeOnly staffInSelectedOfficeOnly
     * @param data.associations Loan object relations to be included in the response
     * @param data.exclude Optional Loan object relation list to be filtered in the response
     * @param data.fields Optional Loan attribute list to be in the response
     * @returns GetLoansLoanIdResponse OK
     * @throws ApiError
     */
    public static getV1LoansExternalIdByLoanExternalId(data: GetV1LoansExternalIdByLoanExternalIdData): CancelablePromise<GetV1LoansExternalIdByLoanExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/external-id/{loanExternalId}',
            path: {
                loanExternalId: data.loanExternalId
            },
            query: {
                staffInSelectedOfficeOnly: data.staffInSelectedOfficeOnly,
                associations: data.associations,
                exclude: data.exclude,
                fields: data.fields
            }
        });
    }
    
    /**
     * Approve Loan Application | Recover Loan Guarantee | Undo Loan Application Approval | Assign a Loan Officer | Unassign a Loan Officer | Reject Loan Application | Applicant Withdraws from Loan Application | Disburse Loan Disburse Loan To Savings Account | Undo Loan Disbursal
     * Approve Loan Application:
     * Mandatory Fields: approvedOnDate
     * Optional Fields: approvedLoanAmount and expectedDisbursementDate
     * Approves the loan application
     *
     * Recover Loan Guarantee:
     * Recovers the loan guarantee
     *
     * Undo Loan Application Approval:
     * Undoes the Loan Application Approval
     *
     * Assign a Loan Officer:
     * Allows you to assign Loan Officer for existing Loan.
     *
     * Unassign a Loan Officer:
     * Allows you to unassign the Loan Officer.
     *
     * Reject Loan Application:
     * Mandatory Fields: rejectedOnDate
     * Allows you to reject the loan application
     *
     * Applicant Withdraws from Loan Application:
     * Mandatory Fields: withdrawnOnDate
     * Allows the applicant to withdraw the loan application
     *
     * Disburse Loan:
     * Mandatory Fields: actualDisbursementDate
     * Optional Fields: transactionAmount and fixedEmiAmount
     * Disburses the Loan
     *
     * Disburse Loan To Savings Account:
     * Mandatory Fields: actualDisbursementDate
     * Optional Fields: transactionAmount and fixedEmiAmount
     * Disburses the loan to Saving Account
     *
     * Undo Loan Disbursal:
     * Undoes the Loan Disbursal
     * Showing request and response for Assign a Loan Officer
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.requestBody
     * @param data.command command
     * @returns PostLoansLoanIdResponse OK
     * @throws ApiError
     */
    public static postV1LoansExternalIdByLoanExternalId(data: PostV1LoansExternalIdByLoanExternalIdData): CancelablePromise<PostV1LoansExternalIdByLoanExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/external-id/{loanExternalId}',
            path: {
                loanExternalId: data.loanExternalId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Modify a loan application
     * Loan application can only be modified when in 'Submitted and pending approval' state. Once the application is approved, the details cannot be changed using this method.
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.requestBody
     * @param data.command command
     * @returns PutLoansLoanIdResponse OK
     * @throws ApiError
     */
    public static putV1LoansExternalIdByLoanExternalId(data: PutV1LoansExternalIdByLoanExternalIdData): CancelablePromise<PutV1LoansExternalIdByLoanExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/external-id/{loanExternalId}',
            path: {
                loanExternalId: data.loanExternalId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Collects and returns the approved amount modification history for a given loan
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @returns LoanApprovedAmountHistoryData default response
     * @throws ApiError
     */
    public static getV1LoansExternalIdByLoanExternalIdApprovedAmount(data: GetV1LoansExternalIdByLoanExternalIdApprovedAmountData): CancelablePromise<GetV1LoansExternalIdByLoanExternalIdApprovedAmountResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/external-id/{loanExternalId}/approved-amount',
            path: {
                loanExternalId: data.loanExternalId
            }
        });
    }
    
    /**
     * Modifies the approved amount of the loan
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.requestBody
     * @returns PutLoansApprovedAmountResponse OK
     * @throws ApiError
     */
    public static putV1LoansExternalIdByLoanExternalIdApprovedAmount(data: PutV1LoansExternalIdByLoanExternalIdApprovedAmountData): CancelablePromise<PutV1LoansExternalIdByLoanExternalIdApprovedAmountResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/external-id/{loanExternalId}/approved-amount',
            path: {
                loanExternalId: data.loanExternalId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Modifies the available disbursement amount of the loan
     * Modifies the available disbursement amount of the loan, this indirectly modifies the approved amount that can be disbursed on the loan
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.requestBody
     * @returns PutLoansAvailableDisbursementAmountResponse OK
     * @throws ApiError
     */
    public static putV1LoansExternalIdByLoanExternalIdAvailableDisbursementAmount(data: PutV1LoansExternalIdByLoanExternalIdAvailableDisbursementAmountData): CancelablePromise<PutV1LoansExternalIdByLoanExternalIdAvailableDisbursementAmountResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/external-id/{loanExternalId}/available-disbursement-amount',
            path: {
                loanExternalId: data.loanExternalId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve delinquency actions related to the loan
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @returns GetDelinquencyActionsResponse OK
     * @throws ApiError
     */
    public static getV1LoansExternalIdByLoanExternalIdDelinquencyActions(data: GetV1LoansExternalIdByLoanExternalIdDelinquencyActionsData): CancelablePromise<GetV1LoansExternalIdByLoanExternalIdDelinquencyActionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/external-id/{loanExternalId}/delinquency-actions',
            path: {
                loanExternalId: data.loanExternalId
            }
        });
    }
    
    /**
     * Adds a new delinquency action for a loan
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.requestBody
     * @returns PostLoansDelinquencyActionResponse OK
     * @throws ApiError
     */
    public static postV1LoansExternalIdByLoanExternalIdDelinquencyActions(data: PostV1LoansExternalIdByLoanExternalIdDelinquencyActionsData): CancelablePromise<PostV1LoansExternalIdByLoanExternalIdDelinquencyActionsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/external-id/{loanExternalId}/delinquency-actions',
            path: {
                loanExternalId: data.loanExternalId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve the Loan Delinquency Tag history using the Loan Id
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @returns GetDelinquencyTagHistoryResponse OK
     * @throws ApiError
     */
    public static getV1LoansExternalIdByLoanExternalIdDelinquencytags(data: GetV1LoansExternalIdByLoanExternalIdDelinquencytagsData): CancelablePromise<GetV1LoansExternalIdByLoanExternalIdDelinquencytagsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/external-id/{loanExternalId}/delinquencytags',
            path: {
                loanExternalId: data.loanExternalId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.templateType templateType
     * @returns GetLoansApprovalTemplateResponse OK
     * @throws ApiError
     */
    public static getV1LoansExternalIdByLoanExternalIdTemplate(data: GetV1LoansExternalIdByLoanExternalIdTemplateData): CancelablePromise<GetV1LoansExternalIdByLoanExternalIdTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/external-id/{loanExternalId}/template',
            path: {
                loanExternalId: data.loanExternalId
            },
            query: {
                templateType: data.templateType
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.glimId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1LoansGlimAccountByGlimId(data: GetV1LoansGlimAccountByGlimIdData): CancelablePromise<GetV1LoansGlimAccountByGlimIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/glimAccount/{glimId}',
            path: {
                glimId: data.glimId
            }
        });
    }
    
    /**
     * Approve GLIM Application | Undo GLIM Application Approval | Reject GLIM Application | Disburse Loan Disburse Loan To Savings Account | Undo Loan Disbursal
     * Approve GLIM Application:
     * Mandatory Fields: approvedOnDate
     * Optional Fields: approvedLoanAmount and expectedDisbursementDate
     * Approves the GLIM application
     *
     * Undo GLIM Application Approval:
     * Undoes the GLIM Application Approval
     *
     * Reject GLIM Application:
     * Mandatory Fields: rejectedOnDate
     * Allows you to reject the GLIM application
     *
     * Disburse Loan:
     * Mandatory Fields: actualDisbursementDate
     * Optional Fields: transactionAmount and fixedEmiAmount
     * Disburses the Loan
     *
     * Disburse Loan To Savings Account:
     * Mandatory Fields: actualDisbursementDate
     * Optional Fields: transactionAmount and fixedEmiAmount
     * Disburses the loan to Saving Account
     *
     * Undo Loan Disbursal:
     * Undoes the Loan Disbursal
     *
     * @param data The data for the request.
     * @param data.glimId
     * @param data.requestBody
     * @param data.command
     * @returns PostLoansLoanIdResponse OK
     * @throws ApiError
     */
    public static postV1LoansGlimAccountByGlimId(data: PostV1LoansGlimAccountByGlimIdData): CancelablePromise<PostV1LoansGlimAccountByGlimIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/glimAccount/{glimId}',
            path: {
                glimId: data.glimId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.officeId
     * @param data.dateFormat
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1LoansRepaymentsDownloadtemplate(data: GetV1LoansRepaymentsDownloadtemplateData = {}): CancelablePromise<GetV1LoansRepaymentsDownloadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/repayments/downloadtemplate',
            query: {
                officeId: data.officeId,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.formData Upload Loan repayments template
     * @returns string default response
     * @throws ApiError
     */
    public static postV1LoansRepaymentsUploadtemplate(data: PostV1LoansRepaymentsUploadtemplateData = {}): CancelablePromise<PostV1LoansRepaymentsUploadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/repayments/uploadtemplate',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Retrieve Loan Details Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed description Lists
     * Example Requests:
     *
     * loans/template?templateType=individual&clientId=1
     *
     *
     * loans/template?templateType=individual&clientId=1&productId=1
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.groupId groupId
     * @param data.productId productId
     * @param data.templateType templateType
     * @param data.staffInSelectedOfficeOnly staffInSelectedOfficeOnly
     * @param data.activeOnly activeOnly
     * @returns GetLoansTemplateResponse OK
     * @throws ApiError
     */
    public static getV1LoansTemplate(data: GetV1LoansTemplateData = {}): CancelablePromise<GetV1LoansTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/template',
            query: {
                clientId: data.clientId,
                groupId: data.groupId,
                productId: data.productId,
                templateType: data.templateType,
                staffInSelectedOfficeOnly: data.staffInSelectedOfficeOnly,
                activeOnly: data.activeOnly
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.formData Upload Loan template
     * @returns string default response
     * @throws ApiError
     */
    public static postV1LoansUploadtemplate(data: PostV1LoansUploadtemplateData = {}): CancelablePromise<PostV1LoansUploadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/uploadtemplate',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Delete a Loan Application
     * Note: Only loans in "Submitted and awaiting approval" status can be deleted.
     * @param data The data for the request.
     * @param data.loanId loanId
     * @returns DeleteLoansLoanIdResponse OK
     * @throws ApiError
     */
    public static deleteV1LoansByLoanId(data: DeleteV1LoansByLoanIdData): CancelablePromise<DeleteV1LoansByLoanIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/loans/{loanId}',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * Retrieve a Loan
     * Note: template=true parameter doesn't apply to this resource.Example Requests:
     *
     * loans/1
     *
     *
     * loans/1?fields=id,principal,annualInterestRate
     *
     *
     * loans/1?associations=all
     *
     * loans/1?associations=all&exclude=guarantors
     *
     *
     * loans/1?fields=id,principal,annualInterestRate&associations=repaymentSchedule,transactions
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.staffInSelectedOfficeOnly staffInSelectedOfficeOnly
     * @param data.associations Loan object relations to be included in the response
     * @param data.exclude Optional Loan object relation list to be filtered in the response
     * @param data.fields Optional Loan attribute list to be in the response
     * @returns GetLoansLoanIdResponse OK
     * @throws ApiError
     */
    public static getV1LoansByLoanId(data: GetV1LoansByLoanIdData): CancelablePromise<GetV1LoansByLoanIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}',
            path: {
                loanId: data.loanId
            },
            query: {
                staffInSelectedOfficeOnly: data.staffInSelectedOfficeOnly,
                associations: data.associations,
                exclude: data.exclude,
                fields: data.fields
            }
        });
    }
    
    /**
     * Approve Loan Application | Recover Loan Guarantee | Undo Loan Application Approval | Assign a Loan Officer | Unassign a Loan Officer | Reject Loan Application | Applicant Withdraws from Loan Application | Disburse Loan Disburse Loan To Savings Account | Undo Loan Disbursal
     * Approve Loan Application:
     * Mandatory Fields: approvedOnDate
     * Optional Fields: approvedLoanAmount and expectedDisbursementDate
     * Approves the loan application
     *
     * Recover Loan Guarantee:
     * Recovers the loan guarantee
     *
     * Undo Loan Application Approval:
     * Undoes the Loan Application Approval
     *
     * Assign a Loan Officer:
     * Allows you to assign Loan Officer for existing Loan.
     *
     * Unassign a Loan Officer:
     * Allows you to unassign the Loan Officer.
     *
     * Reject Loan Application:
     * Mandatory Fields: rejectedOnDate
     * Allows you to reject the loan application
     *
     * Applicant Withdraws from Loan Application:
     * Mandatory Fields: withdrawnOnDate
     * Allows the applicant to withdraw the loan application
     *
     * Disburse Loan:
     * Mandatory Fields: actualDisbursementDate
     * Optional Fields: transactionAmount and fixedEmiAmount
     * Disburses the Loan
     *
     * Disburse Loan To Savings Account:
     * Mandatory Fields: actualDisbursementDate
     * Optional Fields: transactionAmount and fixedEmiAmount
     * Disburses the loan to Saving Account
     *
     * Undo Loan Disbursal:
     * Undoes the Loan Disbursal
     * Showing request and response for Assign a Loan Officer
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.requestBody
     * @param data.command command
     * @returns PostLoansLoanIdResponse OK
     * @throws ApiError
     */
    public static postV1LoansByLoanId(data: PostV1LoansByLoanIdData): CancelablePromise<PostV1LoansByLoanIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/{loanId}',
            path: {
                loanId: data.loanId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Modify a loan application
     * Loan application can only be modified when in 'Submitted and pending approval' state. Once the application is approved, the details cannot be changed using this method.
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.requestBody
     * @param data.command command
     * @returns PutLoansLoanIdResponse OK
     * @throws ApiError
     */
    public static putV1LoansByLoanId(data: PutV1LoansByLoanIdData): CancelablePromise<PutV1LoansByLoanIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/{loanId}',
            path: {
                loanId: data.loanId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Collects and returns the approved amount modification history for a given loan
     * @param data The data for the request.
     * @param data.loanId loanId
     * @returns LoanApprovedAmountHistoryData default response
     * @throws ApiError
     */
    public static getV1LoansByLoanIdApprovedAmount(data: GetV1LoansByLoanIdApprovedAmountData): CancelablePromise<GetV1LoansByLoanIdApprovedAmountResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/approved-amount',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * Modifies the approved amount of the loan
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.requestBody
     * @returns PutLoansApprovedAmountResponse OK
     * @throws ApiError
     */
    public static putV1LoansByLoanIdApprovedAmount(data: PutV1LoansByLoanIdApprovedAmountData): CancelablePromise<PutV1LoansByLoanIdApprovedAmountResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/{loanId}/approved-amount',
            path: {
                loanId: data.loanId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Modifies the available disbursement amount of the loan
     * Modifies the available disbursement amount of the loan, this indirectly modifies the approved amount that can be disbursed on the loan
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.requestBody
     * @returns PutLoansAvailableDisbursementAmountResponse OK
     * @throws ApiError
     */
    public static putV1LoansByLoanIdAvailableDisbursementAmount(data: PutV1LoansByLoanIdAvailableDisbursementAmountData): CancelablePromise<PutV1LoansByLoanIdAvailableDisbursementAmountResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/{loanId}/available-disbursement-amount',
            path: {
                loanId: data.loanId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve delinquency actions related to the loan
     * @param data The data for the request.
     * @param data.loanId loanId
     * @returns GetDelinquencyActionsResponse OK
     * @throws ApiError
     */
    public static getV1LoansByLoanIdDelinquencyActions(data: GetV1LoansByLoanIdDelinquencyActionsData): CancelablePromise<GetV1LoansByLoanIdDelinquencyActionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/delinquency-actions',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * Adds a new delinquency action for a loan
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.requestBody
     * @returns PostLoansDelinquencyActionResponse OK
     * @throws ApiError
     */
    public static postV1LoansByLoanIdDelinquencyActions(data: PostV1LoansByLoanIdDelinquencyActionsData): CancelablePromise<PostV1LoansByLoanIdDelinquencyActionsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/{loanId}/delinquency-actions',
            path: {
                loanId: data.loanId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve the Loan Delinquency Tag history using the Loan Id
     * @param data The data for the request.
     * @param data.loanId loanId
     * @returns GetDelinquencyTagHistoryResponse OK
     * @throws ApiError
     */
    public static getV1LoansByLoanIdDelinquencytags(data: GetV1LoansByLoanIdDelinquencytagsData): CancelablePromise<GetV1LoansByLoanIdDelinquencytagsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/delinquencytags',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.templateType templateType
     * @returns GetLoansApprovalTemplateResponse OK
     * @throws ApiError
     */
    public static getV1LoansByLoanIdTemplate(data: GetV1LoansByLoanIdTemplateData): CancelablePromise<GetV1LoansByLoanIdTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/template',
            path: {
                loanId: data.loanId
            },
            query: {
                templateType: data.templateType
            }
        });
    }
    
}

export class LoansPointInTimeService {
    /**
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.date date
     * @param data.dateFormat dateFormat
     * @param data.locale locale
     * @returns LoanPointInTimeData default response
     * @throws ApiError
     */
    public static getV1LoansAtDateExternalIdByLoanExternalId(data: GetV1LoansAtDateExternalIdByLoanExternalIdData): CancelablePromise<GetV1LoansAtDateExternalIdByLoanExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/at-date/external-id/{loanExternalId}',
            path: {
                loanExternalId: data.loanExternalId
            },
            query: {
                date: data.date,
                dateFormat: data.dateFormat,
                locale: data.locale
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns LoanPointInTimeData default response
     * @throws ApiError
     */
    public static postV1LoansAtDateSearch(data: PostV1LoansAtDateSearchData = {}): CancelablePromise<PostV1LoansAtDateSearchResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/at-date/search',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns LoanPointInTimeData default response
     * @throws ApiError
     */
    public static postV1LoansAtDateSearchExternalId(data: PostV1LoansAtDateSearchExternalIdData = {}): CancelablePromise<PostV1LoansAtDateSearchExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/at-date/search/external-id',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.date date
     * @param data.dateFormat dateFormat
     * @param data.locale locale
     * @returns LoanPointInTimeData default response
     * @throws ApiError
     */
    public static getV1LoansAtDateByLoanId(data: GetV1LoansAtDateByLoanIdData): CancelablePromise<GetV1LoansAtDateByLoanIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/at-date/{loanId}',
            path: {
                loanId: data.loanId
            },
            query: {
                date: data.date,
                dateFormat: data.dateFormat,
                locale: data.locale
            }
        });
    }
    
}

export class LoanCobCatchUpService {
    /**
     * Executes Loan COB Catch Up
     * Executes the Loan COB job on every day from the oldest Loan to the current COB business date
     * @returns unknown All loans are up to date
     * @returns unknown Catch Up has been started
     * @throws ApiError
     */
    public static postV1LoansCatchUp(): CancelablePromise<PostV1LoansCatchUpResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/catch-up',
            errors: {
                400: 'Catch Up is already running'
            }
        });
    }
    
    /**
     * Retrieves whether Loan COB catch up is running
     * Retrieves whether Loan COB catch up is running, and the current execution date if it is running.
     * @returns IsCatchUpRunningDTO default response
     * @throws ApiError
     */
    public static getV1LoansIsCatchUpRunning(): CancelablePromise<GetV1LoansIsCatchUpRunningResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/is-catch-up-running'
        });
    }
    
    /**
     * Retrieves the oldest COB processed loan
     * Retrieves the COB business date and the oldest COB processed loan
     * @returns OldestCOBProcessedLoanDTO default response
     * @throws ApiError
     */
    public static getV1LoansOldestCobClosed(): CancelablePromise<GetV1LoansOldestCobClosedResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/oldest-cob-closed'
        });
    }
    
}

export class LoanBuyDownFeesService {
    /**
     * Get the amortization details of Buy Down fees for a loan by external ID
     * Returns a list of all Buy Down fee entries with amortization details for the loan specified by external ID.
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @returns BuyDownFeeAmortizationDetails OK
     * @throws ApiError
     */
    public static getV1LoansExternalIdByLoanExternalIdBuydownFees(data: GetV1LoansExternalIdByLoanExternalIdBuydownFeesData): CancelablePromise<GetV1LoansExternalIdByLoanExternalIdBuydownFeesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/external-id/{loanExternalId}/buydown-fees',
            path: {
                loanExternalId: data.loanExternalId
            }
        });
    }
    
    /**
     * Get the amortization details of Buy Down fees for a loan
     * Returns a list of all Buy Down fee entries with amortization details for the specified loan.
     * @param data The data for the request.
     * @param data.loanId loanId
     * @returns BuyDownFeeAmortizationDetails OK
     * @throws ApiError
     */
    public static getV1LoansByLoanIdBuydownFees(data: GetV1LoansByLoanIdBuydownFeesData): CancelablePromise<GetV1LoansByLoanIdBuydownFeesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/buydown-fees',
            path: {
                loanId: data.loanId
            }
        });
    }
    
}

export class LoanCapitalizedIncomeService {
    /**
     * Get the amortization details of Capitalized Income for a loan by external ID
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @returns CapitalizedIncomeDetails default response
     * @throws ApiError
     */
    public static getV1LoansExternalIdByLoanExternalIdCapitalizedIncomes(data: GetV1LoansExternalIdByLoanExternalIdCapitalizedIncomesData): CancelablePromise<GetV1LoansExternalIdByLoanExternalIdCapitalizedIncomesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/external-id/{loanExternalId}/capitalized-incomes',
            path: {
                loanExternalId: data.loanExternalId
            }
        });
    }
    
    /**
     * @deprecated
     * Get the amortization details of Capitalized Income for a loan by external ID
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @returns LoanCapitalizedIncomeData OK
     * @throws ApiError
     */
    public static getV1LoansExternalIdByLoanExternalIdDeferredincome(data: GetV1LoansExternalIdByLoanExternalIdDeferredincomeData): CancelablePromise<GetV1LoansExternalIdByLoanExternalIdDeferredincomeResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/external-id/{loanExternalId}/deferredincome',
            path: {
                loanExternalId: data.loanExternalId
            }
        });
    }
    
    /**
     * Fetch the Capitalized Income related informations
     * @param data The data for the request.
     * @param data.loanId loanId
     * @returns CapitalizedIncomeDetails default response
     * @throws ApiError
     */
    public static getV1LoansByLoanIdCapitalizedIncomes(data: GetV1LoansByLoanIdCapitalizedIncomesData): CancelablePromise<GetV1LoansByLoanIdCapitalizedIncomesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/capitalized-incomes',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * @deprecated
     * Fetch the Capitalized Income related informations
     * @param data The data for the request.
     * @param data.loanId loanId
     * @returns LoanCapitalizedIncomeData default response
     * @throws ApiError
     */
    public static getV1LoansByLoanIdDeferredincome(data: GetV1LoansByLoanIdDeferredincomeData): CancelablePromise<GetV1LoansByLoanIdDeferredincomeResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/deferredincome',
            path: {
                loanId: data.loanId
            }
        });
    }
    
}

export class LoanChargesService {
    /**
     * List Loan Charges
     * It lists all the Loan Charges specific to a Loan
     *
     * Example Requests:
     *
     * loans/1/charges
     *
     *
     * loans/1/charges?fields=name,amountOrPercentage
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @returns GetLoansLoanIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static getV1LoansExternalIdByLoanExternalIdCharges(data: GetV1LoansExternalIdByLoanExternalIdChargesData): CancelablePromise<GetV1LoansExternalIdByLoanExternalIdChargesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/external-id/{loanExternalId}/charges',
            path: {
                loanExternalId: data.loanExternalId
            }
        });
    }
    
    /**
     * Create a Loan Charge (no command provided) or Pay a charge (command=pay)
     * Creates a Loan Charge | Pay a Loan Charge
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.requestBody
     * @param data.command command
     * @returns PostLoansLoanIdChargesResponse OK
     * @throws ApiError
     */
    public static postV1LoansExternalIdByLoanExternalIdCharges(data: PostV1LoansExternalIdByLoanExternalIdChargesData): CancelablePromise<PostV1LoansExternalIdByLoanExternalIdChargesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/external-id/{loanExternalId}/charges',
            path: {
                loanExternalId: data.loanExternalId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Delete a Loan Charge
     * Note: Currently, A Loan Charge may only be removed from Loans that are not yet approved.
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.loanChargeExternalId loanChargeExternalId
     * @returns DeleteLoansLoanIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static deleteV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalId(data: DeleteV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdData): CancelablePromise<DeleteV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/loans/external-id/{loanExternalId}/charges/external-id/{loanChargeExternalId}',
            path: {
                loanExternalId: data.loanExternalId,
                loanChargeExternalId: data.loanChargeExternalId
            }
        });
    }
    
    /**
     * Retrieve a Loan Charge
     * Retrieves Loan Charge according to the Loan External ID and Loan Charge External IDExample Requests:
     *
     * /loans/1/charges/1
     *
     *
     * /loans/1/charges/1?fields=name,amountOrPercentage
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.loanChargeExternalId loanChargeExternalId
     * @returns GetLoansLoanIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static getV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalId(data: GetV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdData): CancelablePromise<GetV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/external-id/{loanExternalId}/charges/external-id/{loanChargeExternalId}',
            path: {
                loanExternalId: data.loanExternalId,
                loanChargeExternalId: data.loanChargeExternalId
            }
        });
    }
    
    /**
     * Pay / Waive / Adjustment for Loan Charge
     * Loan Charge will be paid if the loan is linked with a savings account | Waive Loan Charge | Add Charge Adjustment
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.loanChargeExternalId loanChargeExternalId
     * @param data.requestBody
     * @param data.command command
     * @returns PostLoansLoanIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static postV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalId(data: PostV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdData): CancelablePromise<PostV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/external-id/{loanExternalId}/charges/external-id/{loanChargeExternalId}',
            path: {
                loanExternalId: data.loanExternalId,
                loanChargeExternalId: data.loanChargeExternalId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Update a Loan Charge
     * Currently Loan Charges may be updated only if the Loan is not yet approved
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.loanChargeExternalId loanChargeExternalId
     * @param data.requestBody
     * @returns PutLoansLoanIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static putV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalId(data: PutV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdData): CancelablePromise<PutV1LoansExternalIdByLoanExternalIdChargesExternalIdByLoanChargeExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/external-id/{loanExternalId}/charges/external-id/{loanChargeExternalId}',
            path: {
                loanExternalId: data.loanExternalId,
                loanChargeExternalId: data.loanChargeExternalId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Loan Charges Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed description Lists
     * Example Request:
     *
     * loans/1/charges/template
     *
     *
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @returns GetLoansLoanIdChargesTemplateResponse OK
     * @throws ApiError
     */
    public static getV1LoansExternalIdByLoanExternalIdChargesTemplate(data: GetV1LoansExternalIdByLoanExternalIdChargesTemplateData): CancelablePromise<GetV1LoansExternalIdByLoanExternalIdChargesTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/external-id/{loanExternalId}/charges/template',
            path: {
                loanExternalId: data.loanExternalId
            }
        });
    }
    
    /**
     * Delete a Loan Charge
     * Note: Currently, A Loan Charge may only be removed from Loans that are not yet approved.
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.loanChargeId loanChargeId
     * @returns DeleteLoansLoanIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static deleteV1LoansExternalIdByLoanExternalIdChargesByLoanChargeId(data: DeleteV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdData): CancelablePromise<DeleteV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/loans/external-id/{loanExternalId}/charges/{loanChargeId}',
            path: {
                loanExternalId: data.loanExternalId,
                loanChargeId: data.loanChargeId
            }
        });
    }
    
    /**
     * Retrieve a Loan Charge
     * Retrieves Loan Charge according to the Loan external ID and Loan Charge IDExample Requests:
     *
     * /loans/1/charges/1
     *
     *
     * /loans/1/charges/1?fields=name,amountOrPercentage
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.loanChargeId loanChargeId
     * @returns GetLoansLoanIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static getV1LoansExternalIdByLoanExternalIdChargesByLoanChargeId(data: GetV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdData): CancelablePromise<GetV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/external-id/{loanExternalId}/charges/{loanChargeId}',
            path: {
                loanExternalId: data.loanExternalId,
                loanChargeId: data.loanChargeId
            }
        });
    }
    
    /**
     * Pay / Waive / Adjustment for Loan Charge
     * Loan Charge will be paid if the loan is linked with a savings account | Waive Loan Charge | Add Charge Adjustment
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.loanChargeId loanChargeId
     * @param data.requestBody
     * @param data.command command
     * @returns PostLoansLoanIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static postV1LoansExternalIdByLoanExternalIdChargesByLoanChargeId(data: PostV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdData): CancelablePromise<PostV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/external-id/{loanExternalId}/charges/{loanChargeId}',
            path: {
                loanExternalId: data.loanExternalId,
                loanChargeId: data.loanChargeId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Update a Loan Charge
     * Currently Loan Charges may be updated only if the Loan is not yet approved
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.loanChargeId loanChargeId
     * @param data.requestBody
     * @returns PutLoansLoanIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static putV1LoansExternalIdByLoanExternalIdChargesByLoanChargeId(data: PutV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdData): CancelablePromise<PutV1LoansExternalIdByLoanExternalIdChargesByLoanChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/external-id/{loanExternalId}/charges/{loanChargeId}',
            path: {
                loanExternalId: data.loanExternalId,
                loanChargeId: data.loanChargeId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * List Loan Charges
     * It lists all the Loan Charges specific to a Loan
     *
     * Example Requests:
     *
     * loans/1/charges
     *
     *
     * loans/1/charges?fields=name,amountOrPercentage
     * @param data The data for the request.
     * @param data.loanId loanId
     * @returns GetLoansLoanIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static getV1LoansByLoanIdCharges(data: GetV1LoansByLoanIdChargesData): CancelablePromise<GetV1LoansByLoanIdChargesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/charges',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * Create a Loan Charge (no command provided) or Pay a charge (command=pay)
     * Creates a Loan Charge | Pay a Loan Charge
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.requestBody
     * @param data.command command
     * @returns PostLoansLoanIdChargesResponse OK
     * @throws ApiError
     */
    public static postV1LoansByLoanIdCharges(data: PostV1LoansByLoanIdChargesData): CancelablePromise<PostV1LoansByLoanIdChargesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/{loanId}/charges',
            path: {
                loanId: data.loanId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Delete a Loan Charge
     * Note: Currently, A Loan Charge may only be removed from Loans that are not yet approved.
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.loanChargeExternalId loanChargeExternalId
     * @returns DeleteLoansLoanIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static deleteV1LoansByLoanIdChargesExternalIdByLoanChargeExternalId(data: DeleteV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdData): CancelablePromise<DeleteV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/loans/{loanId}/charges/external-id/{loanChargeExternalId}',
            path: {
                loanId: data.loanId,
                loanChargeExternalId: data.loanChargeExternalId
            }
        });
    }
    
    /**
     * Retrieve a Loan Charge
     * Retrieves Loan Charge according to the Loan ID and Loan Charge External IDExample Requests:
     *
     * /loans/1/charges/1
     *
     *
     * /loans/1/charges/external-id/1?fields=name,amountOrPercentage
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.loanChargeExternalId loanChargeExternalId
     * @returns GetLoansLoanIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static getV1LoansByLoanIdChargesExternalIdByLoanChargeExternalId(data: GetV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdData): CancelablePromise<GetV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/charges/external-id/{loanChargeExternalId}',
            path: {
                loanId: data.loanId,
                loanChargeExternalId: data.loanChargeExternalId
            }
        });
    }
    
    /**
     * Pay / Waive / Adjustment for Loan Charge
     * Loan Charge will be paid if the loan is linked with a savings account | Waive Loan Charge | Add Charge Adjustment
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.loanChargeExternalId loanChargeExternalId
     * @param data.requestBody
     * @param data.command command
     * @returns PostLoansLoanIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static postV1LoansByLoanIdChargesExternalIdByLoanChargeExternalId(data: PostV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdData): CancelablePromise<PostV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/{loanId}/charges/external-id/{loanChargeExternalId}',
            path: {
                loanId: data.loanId,
                loanChargeExternalId: data.loanChargeExternalId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Update a Loan Charge
     * Currently Loan Charges may be updated only if the Loan is not yet approved
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.loanChargeExternalId loanChargeExternalId
     * @param data.requestBody
     * @returns PutLoansLoanIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static putV1LoansByLoanIdChargesExternalIdByLoanChargeExternalId(data: PutV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdData): CancelablePromise<PutV1LoansByLoanIdChargesExternalIdByLoanChargeExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/{loanId}/charges/external-id/{loanChargeExternalId}',
            path: {
                loanId: data.loanId,
                loanChargeExternalId: data.loanChargeExternalId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Loan Charges Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed description Lists
     * Example Request:
     *
     * loans/1/charges/template
     *
     *
     * @param data The data for the request.
     * @param data.loanId loanId
     * @returns GetLoansLoanIdChargesTemplateResponse OK
     * @throws ApiError
     */
    public static getV1LoansByLoanIdChargesTemplate(data: GetV1LoansByLoanIdChargesTemplateData): CancelablePromise<GetV1LoansByLoanIdChargesTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/charges/template',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * Delete a Loan Charge
     * Note: Currently, A Loan Charge may only be removed from Loans that are not yet approved.
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.loanChargeId loanChargeId
     * @returns DeleteLoansLoanIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static deleteV1LoansByLoanIdChargesByLoanChargeId(data: DeleteV1LoansByLoanIdChargesByLoanChargeIdData): CancelablePromise<DeleteV1LoansByLoanIdChargesByLoanChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/loans/{loanId}/charges/{loanChargeId}',
            path: {
                loanId: data.loanId,
                loanChargeId: data.loanChargeId
            }
        });
    }
    
    /**
     * Retrieve a Loan Charge
     * Retrieves Loan Charge according to the Loan ID and Loan Charge IDExample Requests:
     *
     * /loans/1/charges/1
     *
     *
     * /loans/1/charges/1?fields=name,amountOrPercentage
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.loanChargeId loanChargeId
     * @returns GetLoansLoanIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static getV1LoansByLoanIdChargesByLoanChargeId(data: GetV1LoansByLoanIdChargesByLoanChargeIdData): CancelablePromise<GetV1LoansByLoanIdChargesByLoanChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/charges/{loanChargeId}',
            path: {
                loanId: data.loanId,
                loanChargeId: data.loanChargeId
            }
        });
    }
    
    /**
     * Pay / Waive / Adjustment for Loan Charge
     * Loan Charge will be paid if the loan is linked with a savings account | Waive Loan Charge | Add Charge Adjustment
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.loanChargeId loanChargeId
     * @param data.requestBody
     * @param data.command command
     * @returns PostLoansLoanIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static postV1LoansByLoanIdChargesByLoanChargeId(data: PostV1LoansByLoanIdChargesByLoanChargeIdData): CancelablePromise<PostV1LoansByLoanIdChargesByLoanChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/{loanId}/charges/{loanChargeId}',
            path: {
                loanId: data.loanId,
                loanChargeId: data.loanChargeId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Update a Loan Charge
     * Currently Loan Charges may be updated only if the Loan is not yet approved
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.loanChargeId loanChargeId
     * @param data.requestBody
     * @returns PutLoansLoanIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static putV1LoansByLoanIdChargesByLoanChargeId(data: PutV1LoansByLoanIdChargesByLoanChargeIdData): CancelablePromise<PutV1LoansByLoanIdChargesByLoanChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/{loanId}/charges/{loanChargeId}',
            path: {
                loanId: data.loanId,
                loanChargeId: data.loanChargeId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class LoanInterestPauseService {
    /**
     * Retrieve all interest pause periods for a loan using external ID
     * Fetches a list of all active interest pause periods for a specific loan using the external loan ID.
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @returns InterestPauseResponseDto List of interest pause periods
     * @throws ApiError
     */
    public static getV1LoansExternalIdByLoanExternalIdInterestPauses(data: GetV1LoansExternalIdByLoanExternalIdInterestPausesData): CancelablePromise<GetV1LoansExternalIdByLoanExternalIdInterestPausesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/external-id/{loanExternalId}/interest-pauses',
            path: {
                loanExternalId: data.loanExternalId
            }
        });
    }
    
    /**
     * Create a new interest pause for a loan using external ID
     * Allows users to define a period during which no interest will be accrued for a specific loan using the external loan ID.
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.requestBody
     * @returns CommandProcessingResult Command successfully processed
     * @throws ApiError
     */
    public static postV1LoansExternalIdByLoanExternalIdInterestPauses(data: PostV1LoansExternalIdByLoanExternalIdInterestPausesData): CancelablePromise<PostV1LoansExternalIdByLoanExternalIdInterestPausesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/external-id/{loanExternalId}/interest-pauses',
            path: {
                loanExternalId: data.loanExternalId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Delete an interest pause period by external id
     * Deletes a specific interest pause period by its variation ID.
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.variationId variationId
     * @returns void No Content
     * @throws ApiError
     */
    public static deleteV1LoansExternalIdByLoanExternalIdInterestPausesByVariationId(data: DeleteV1LoansExternalIdByLoanExternalIdInterestPausesByVariationIdData): CancelablePromise<DeleteV1LoansExternalIdByLoanExternalIdInterestPausesByVariationIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/loans/external-id/{loanExternalId}/interest-pauses/{variationId}',
            path: {
                loanExternalId: data.loanExternalId,
                variationId: data.variationId
            }
        });
    }
    
    /**
     * Update an interest pause period by external id
     * Updates a specific interest pause period by its variation ID.
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.variationId variationId
     * @param data.requestBody
     * @returns CommandProcessingResult Command successfully processed
     * @throws ApiError
     */
    public static putV1LoansExternalIdByLoanExternalIdInterestPausesByVariationId(data: PutV1LoansExternalIdByLoanExternalIdInterestPausesByVariationIdData): CancelablePromise<PutV1LoansExternalIdByLoanExternalIdInterestPausesByVariationIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/external-id/{loanExternalId}/interest-pauses/{variationId}',
            path: {
                loanExternalId: data.loanExternalId,
                variationId: data.variationId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve all interest pause periods for a loan
     * Fetches a list of all active interest pause periods for a specific loan.
     * @param data The data for the request.
     * @param data.loanId loanId
     * @returns InterestPauseResponseDto List of interest pause periods
     * @throws ApiError
     */
    public static getV1LoansByLoanIdInterestPauses(data: GetV1LoansByLoanIdInterestPausesData): CancelablePromise<GetV1LoansByLoanIdInterestPausesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/interest-pauses',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * Create a new interest pause period for a loan
     * Allows users to define a period during which no interest will be accrued for a specific loan.
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.requestBody
     * @returns CommandProcessingResult Command successfully processed
     * @throws ApiError
     */
    public static postV1LoansByLoanIdInterestPauses(data: PostV1LoansByLoanIdInterestPausesData): CancelablePromise<PostV1LoansByLoanIdInterestPausesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/{loanId}/interest-pauses',
            path: {
                loanId: data.loanId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Delete an interest pause period
     * Deletes a specific interest pause period by its variation ID.
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.variationId variationId
     * @returns void No Content
     * @throws ApiError
     */
    public static deleteV1LoansByLoanIdInterestPausesByVariationId(data: DeleteV1LoansByLoanIdInterestPausesByVariationIdData): CancelablePromise<DeleteV1LoansByLoanIdInterestPausesByVariationIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/loans/{loanId}/interest-pauses/{variationId}',
            path: {
                loanId: data.loanId,
                variationId: data.variationId
            }
        });
    }
    
    /**
     * Update an interest pause period
     * Updates a specific interest pause period by its variation ID.
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.variationId variationId
     * @param data.requestBody
     * @returns CommandProcessingResult Command successfully processed
     * @throws ApiError
     */
    public static putV1LoansByLoanIdInterestPausesByVariationId(data: PutV1LoansByLoanIdInterestPausesByVariationIdData): CancelablePromise<PutV1LoansByLoanIdInterestPausesByVariationIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/{loanId}/interest-pauses/{variationId}',
            path: {
                loanId: data.loanId,
                variationId: data.variationId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class LoanTransactionsService {
    /**
     * Retrieve Transactions
     * Retrieves transactions of a loan
     * @param data The data for the request.
     * @param data.loanExternalId loanId
     * @param data.excludedTypes excludedTypes
     * @param data.page page
     * @param data.size size
     * @param data.sort sort
     * @returns GetLoansLoanIdTransactionsResponse OK
     * @throws ApiError
     */
    public static getV1LoansExternalIdByLoanExternalIdTransactions(data: GetV1LoansExternalIdByLoanExternalIdTransactionsData): CancelablePromise<GetV1LoansExternalIdByLoanExternalIdTransactionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/external-id/{loanExternalId}/transactions',
            path: {
                loanExternalId: data.loanExternalId
            },
            query: {
                excludedTypes: data.excludedTypes,
                page: data.page,
                size: data.size,
                sort: data.sort
            }
        });
    }
    
    /**
     * Significant Loan Transactions
     * This API covers the major loan transaction functionality
     *
     * Example Requests:
     *
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=repayment | Make a Repayment |
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=merchantIssuedRefund | Merchant Issued Refund |
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=payoutRefund | Payout Refund |
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=goodwillCredit | Goodwil Credit |
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=chargeRefund | Charge Refund |
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=waiveinterest | Waive Interest |
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=writeoff | Write-off Loan |
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=close-rescheduled | Close Rescheduled Loan |
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=close | Close Loan |
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=undowriteoff | Undo Loan Write-off |
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=recoverypayment | Make Recovery Payment |
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=refundByCash | Make a Refund of an Active Loan by Cash |
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=foreclosure | Foreclosure of an Active Loan |
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=creditBalanceRefund | Credit Balance Refund |
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=charge-off | Charge-off Loan |
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=downPayment | Down Payment |
     *
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.requestBody
     * @param data.command command
     * @returns PostLoansLoanIdTransactionsResponse OK
     * @throws ApiError
     */
    public static postV1LoansExternalIdByLoanExternalIdTransactions(data: PostV1LoansExternalIdByLoanExternalIdTransactionsData): CancelablePromise<PostV1LoansExternalIdByLoanExternalIdTransactionsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/external-id/{loanExternalId}/transactions',
            path: {
                loanExternalId: data.loanExternalId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve a Transaction Details
     * Retrieves a Transaction Details
     *
     * Example Request:
     *
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions/external-id/5dd80a7c-ccba-4446-b378-01eb6f53e871
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.externalTransactionId externalTransactionId
     * @param data.fields Optional Loan Transaction attribute list to be in the response
     * @returns GetLoansLoanIdTransactionsTransactionIdResponse OK
     * @throws ApiError
     */
    public static getV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByExternalTransactionId(data: GetV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByExternalTransactionIdData): CancelablePromise<GetV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByExternalTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/external-id/{loanExternalId}/transactions/external-id/{externalTransactionId}',
            path: {
                loanExternalId: data.loanExternalId,
                externalTransactionId: data.externalTransactionId
            },
            query: {
                fields: data.fields
            }
        });
    }
    
    /**
     * Adjust a Transaction
     * Note: there is no need to specify command={transactionType} parameter.
     *
     * Mandatory Fields: transactionDate, transactionAmount
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.externalTransactionId externalTransactionId
     * @param data.requestBody
     * @param data.command command
     * @returns PostLoansLoanIdTransactionsResponse OK
     * @throws ApiError
     */
    public static postV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByExternalTransactionId(data: PostV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByExternalTransactionIdData): CancelablePromise<PostV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByExternalTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/external-id/{loanExternalId}/transactions/external-id/{externalTransactionId}',
            path: {
                loanExternalId: data.loanExternalId,
                externalTransactionId: data.externalTransactionId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Undo a Waive Charge Transaction
     * Undo a Waive Charge Transaction
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.transactionExternalId transactionExternalId
     * @param data.requestBody
     * @returns PutChargeTransactionChangesResponse OK
     * @throws ApiError
     */
    public static putV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByTransactionExternalId(data: PutV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByTransactionExternalIdData): CancelablePromise<PutV1LoansExternalIdByLoanExternalIdTransactionsExternalIdByTransactionExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/external-id/{loanExternalId}/transactions/external-id/{transactionExternalId}',
            path: {
                loanExternalId: data.loanExternalId,
                transactionExternalId: data.transactionExternalId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Loan Transaction Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed Value Lists
     *
     * Example Requests:
     *
     * loans/1/transactions/template?command=repaymentloans/1/transactions/template?command=merchantIssuedRefundloans/1/transactions/template?command=payoutRefundloans/1/transactions/template?command=goodwillCredit
     * loans/1/transactions/template?command=waiveinterest
     * loans/1/transactions/template?command=writeoff
     * loans/1/transactions/template?command=close-rescheduled
     * loans/1/transactions/template?command=close
     * loans/1/transactions/template?command=disburse
     * loans/1/transactions/template?command=disburseToSavings
     * loans/1/transactions/template?command=recoverypayment
     * loans/1/transactions/template?command=prepayLoan
     * loans/1/transactions/template?command=refundbycash
     * loans/1/transactions/template?command=refundbytransfer
     * loans/1/transactions/template?command=foreclosure
     * loans/1/transactions/template?command=interestPaymentWaiver
     * loans/1/transactions/template?command=creditBalanceRefund (returned 'amount' field will have the overpaid value)
     * loans/1/transactions/template?command=charge-off
     * loans/1/transactions/template?command=downPayment
     * loans/1/transactions/template?command=interest-refund
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.command command
     * @param data.dateFormat dateFormat
     * @param data.transactionDate transactionDate
     * @param data.locale locale
     * @param data.transactionId transactionId
     * @returns GetLoansLoanIdTransactionsTemplateResponse OK
     * @throws ApiError
     */
    public static getV1LoansExternalIdByLoanExternalIdTransactionsTemplate(data: GetV1LoansExternalIdByLoanExternalIdTransactionsTemplateData): CancelablePromise<GetV1LoansExternalIdByLoanExternalIdTransactionsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/external-id/{loanExternalId}/transactions/template',
            path: {
                loanExternalId: data.loanExternalId
            },
            query: {
                command: data.command,
                dateFormat: data.dateFormat,
                transactionDate: data.transactionDate,
                locale: data.locale,
                transactionId: data.transactionId
            }
        });
    }
    
    /**
     * Retrieve a Transaction Details
     * Retrieves a Transaction Details
     *
     * Example Request:
     *
     * loans/5/transactions/3
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.transactionId transactionId
     * @param data.fields Optional Loan Transaction attribute list to be in the response
     * @returns GetLoansLoanIdTransactionsTransactionIdResponse OK
     * @throws ApiError
     */
    public static getV1LoansExternalIdByLoanExternalIdTransactionsByTransactionId(data: GetV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdData): CancelablePromise<GetV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/external-id/{loanExternalId}/transactions/{transactionId}',
            path: {
                loanExternalId: data.loanExternalId,
                transactionId: data.transactionId
            },
            query: {
                fields: data.fields
            }
        });
    }
    
    /**
     * Adjust a Transaction
     * Note: there is no need to specify command={transactionType} parameter.
     *
     * Mandatory Fields: transactionDate, transactionAmount
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.transactionId transactionId
     * @param data.requestBody
     * @param data.command command
     * @returns PostLoansLoanIdTransactionsResponse OK
     * @throws ApiError
     */
    public static postV1LoansExternalIdByLoanExternalIdTransactionsByTransactionId(data: PostV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdData): CancelablePromise<PostV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/external-id/{loanExternalId}/transactions/{transactionId}',
            path: {
                loanExternalId: data.loanExternalId,
                transactionId: data.transactionId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Undo a Waive Charge Transaction
     * Undo a Waive Charge Transaction
     * @param data The data for the request.
     * @param data.loanExternalId loanExternalId
     * @param data.transactionId transactionId
     * @param data.requestBody
     * @returns PutChargeTransactionChangesResponse OK
     * @throws ApiError
     */
    public static putV1LoansExternalIdByLoanExternalIdTransactionsByTransactionId(data: PutV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdData): CancelablePromise<PutV1LoansExternalIdByLoanExternalIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/external-id/{loanExternalId}/transactions/{transactionId}',
            path: {
                loanExternalId: data.loanExternalId,
                transactionId: data.transactionId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Transactions
     * Retrieves transactions of a loan
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.excludedTypes excludedTypes
     * @param data.page page
     * @param data.size size
     * @param data.sort sort
     * @returns GetLoansLoanIdTransactionsResponse OK
     * @throws ApiError
     */
    public static getV1LoansByLoanIdTransactions(data: GetV1LoansByLoanIdTransactionsData): CancelablePromise<GetV1LoansByLoanIdTransactionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/transactions',
            path: {
                loanId: data.loanId
            },
            query: {
                excludedTypes: data.excludedTypes,
                page: data.page,
                size: data.size,
                sort: data.sort
            }
        });
    }
    
    /**
     * Significant Loan Transactions
     * This API covers the major loan transaction functionality
     *
     * Example Requests:
     *
     * loans/1/transactions?command=repayment | Make a Repayment |
     * loans/1/transactions?command=merchantIssuedRefund | Merchant Issued Refund |
     * loans/1/transactions?command=payoutRefund | Payout Refund |
     * loans/1/transactions?command=goodwillCredit | Goodwil Credit |
     * loans/1/transactions?command=chargeRefund | Charge Refund |
     * loans/1/transactions?command=waiveinterest | Waive Interest |
     * loans/1/transactions?command=writeoff | Write-off Loan |
     * loans/1/transactions?command=close-rescheduled | Close Rescheduled Loan |
     * loans/1/transactions?command=close | Close Loan |
     * loans/1/transactions?command=undowriteoff | Undo Loan Write-off |
     * loans/1/transactions?command=recoverypayment | Make Recovery Payment |
     * loans/1/transactions?command=refundByCash | Make a Refund of an Active Loan by Cash |
     * loans/1/transactions?command=foreclosure | Foreclosure of an Active Loan |
     * loans/1/transactions?command=creditBalanceRefund | Credit Balance Refund |
     * loans/external-id/7dd80a7c-ycba-a446-t378-91eb6f53e854/transactions?command=charge-off | Charge-off Loan |
     * loans/1/transactions?command=downPayment | Down Payment |
     *
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.requestBody
     * @param data.command command
     * @returns PostLoansLoanIdTransactionsResponse OK
     * @throws ApiError
     */
    public static postV1LoansByLoanIdTransactions(data: PostV1LoansByLoanIdTransactionsData): CancelablePromise<PostV1LoansByLoanIdTransactionsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/{loanId}/transactions',
            path: {
                loanId: data.loanId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve a Transaction Details
     * Retrieves a Transaction Details
     *
     * Example Request:
     *
     * loans/5/transactions/external-id/5dd80a7c-ccba-4446-b378-01eb6f53e871
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.externalTransactionId externalTransactionId
     * @param data.fields Optional Loan Transaction attribute list to be in the response
     * @returns GetLoansLoanIdTransactionsTransactionIdResponse OK
     * @throws ApiError
     */
    public static getV1LoansByLoanIdTransactionsExternalIdByExternalTransactionId(data: GetV1LoansByLoanIdTransactionsExternalIdByExternalTransactionIdData): CancelablePromise<GetV1LoansByLoanIdTransactionsExternalIdByExternalTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/transactions/external-id/{externalTransactionId}',
            path: {
                loanId: data.loanId,
                externalTransactionId: data.externalTransactionId
            },
            query: {
                fields: data.fields
            }
        });
    }
    
    /**
     * Adjust a Transaction
     * Note: there is no need to specify command={transactionType} parameter.
     *
     * Mandatory Fields: transactionDate, transactionAmount
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.externalTransactionId externalTransactionId
     * @param data.requestBody
     * @param data.command command
     * @returns PostLoansLoanIdTransactionsResponse OK
     * @throws ApiError
     */
    public static postV1LoansByLoanIdTransactionsExternalIdByExternalTransactionId(data: PostV1LoansByLoanIdTransactionsExternalIdByExternalTransactionIdData): CancelablePromise<PostV1LoansByLoanIdTransactionsExternalIdByExternalTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/{loanId}/transactions/external-id/{externalTransactionId}',
            path: {
                loanId: data.loanId,
                externalTransactionId: data.externalTransactionId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Undo a Waive Charge Transaction
     * Undo a Waive Charge Transaction
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.transactionExternalId transactionExternalId
     * @param data.requestBody
     * @returns PutChargeTransactionChangesResponse OK
     * @throws ApiError
     */
    public static putV1LoansByLoanIdTransactionsExternalIdByTransactionExternalId(data: PutV1LoansByLoanIdTransactionsExternalIdByTransactionExternalIdData): CancelablePromise<PutV1LoansByLoanIdTransactionsExternalIdByTransactionExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/{loanId}/transactions/external-id/{transactionExternalId}',
            path: {
                loanId: data.loanId,
                transactionExternalId: data.transactionExternalId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Loan Transaction Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed Value Lists
     *
     * Example Requests:
     *
     * loans/1/transactions/template?command=repaymentloans/1/transactions/template?command=merchantIssuedRefundloans/1/transactions/template?command=payoutRefundloans/1/transactions/template?command=goodwillCredit
     * loans/1/transactions/template?command=waiveinterest
     * loans/1/transactions/template?command=writeoff
     * loans/1/transactions/template?command=close-rescheduled
     * loans/1/transactions/template?command=close
     * loans/1/transactions/template?command=disburse
     * loans/1/transactions/template?command=disburseToSavings
     * loans/1/transactions/template?command=recoverypayment
     * loans/1/transactions/template?command=prepayLoan
     * loans/1/transactions/template?command=refundbycash
     * loans/1/transactions/template?command=refundbytransfer
     * loans/1/transactions/template?command=foreclosure
     * loans/1/transactions/template?command=interestPaymentWaiver
     * loans/1/transactions/template?command=creditBalanceRefund (returned 'amount' field will have the overpaid value)
     * loans/1/transactions/template?command=charge-off
     * loans/1/transactions/template?command=downPayment
     * loans/1/transactions/template?command=interest-refund
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.command command
     * @param data.dateFormat dateFormat
     * @param data.transactionDate transactionDate
     * @param data.locale locale
     * @param data.transactionId transactionId
     * @returns GetLoansLoanIdTransactionsTemplateResponse OK
     * @throws ApiError
     */
    public static getV1LoansByLoanIdTransactionsTemplate(data: GetV1LoansByLoanIdTransactionsTemplateData): CancelablePromise<GetV1LoansByLoanIdTransactionsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/transactions/template',
            path: {
                loanId: data.loanId
            },
            query: {
                command: data.command,
                dateFormat: data.dateFormat,
                transactionDate: data.transactionDate,
                locale: data.locale,
                transactionId: data.transactionId
            }
        });
    }
    
    /**
     * Retrieve a Transaction Details
     * Retrieves a Transaction Details
     *
     * Example Request:
     *
     * loans/5/transactions/3
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.transactionId transactionId
     * @param data.fields Optional Loan Transaction attribute list to be in the response
     * @returns GetLoansLoanIdTransactionsTransactionIdResponse OK
     * @throws ApiError
     */
    public static getV1LoansByLoanIdTransactionsByTransactionId(data: GetV1LoansByLoanIdTransactionsByTransactionIdData): CancelablePromise<GetV1LoansByLoanIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/transactions/{transactionId}',
            path: {
                loanId: data.loanId,
                transactionId: data.transactionId
            },
            query: {
                fields: data.fields
            }
        });
    }
    
    /**
     * Adjust a Transaction
     * Note: there is no need to specify command={transactionType} parameter.
     *
     * Mandatory Fields: transactionDate, transactionAmount
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.transactionId transactionId
     * @param data.requestBody
     * @param data.command command
     * @returns PostLoansLoanIdTransactionsResponse OK
     * @throws ApiError
     */
    public static postV1LoansByLoanIdTransactionsByTransactionId(data: PostV1LoansByLoanIdTransactionsByTransactionIdData): CancelablePromise<PostV1LoansByLoanIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/{loanId}/transactions/{transactionId}',
            path: {
                loanId: data.loanId,
                transactionId: data.transactionId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Undo a Waive Charge Transaction
     * Undo a Waive Charge Transaction
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.transactionId transactionId
     * @param data.requestBody
     * @returns PutChargeTransactionChangesResponse OK
     * @throws ApiError
     */
    public static putV1LoansByLoanIdTransactionsByTransactionId(data: PutV1LoansByLoanIdTransactionsByTransactionIdData): CancelablePromise<PutV1LoansByLoanIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/{loanId}/transactions/{transactionId}',
            path: {
                loanId: data.loanId,
                transactionId: data.transactionId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class BulkLoansService {
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1LoansLoanreassignment(data: PostV1LoansLoanreassignmentData = {}): CancelablePromise<PostV1LoansLoanreassignmentResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/loanreassignment',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.officeId
     * @param data.fromLoanOfficerId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1LoansLoanreassignmentTemplate(data: GetV1LoansLoanreassignmentTemplateData = {}): CancelablePromise<GetV1LoansLoanreassignmentTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/loanreassignment/template',
            query: {
                officeId: data.officeId,
                fromLoanOfficerId: data.fromLoanOfficerId
            }
        });
    }
    
}

export class LoanAccountLockService {
    /**
     * List locked loan accounts
     * Returns the locked loan IDs
     * @param data The data for the request.
     * @param data.page
     * @param data.limit
     * @returns LoanAccountLockResponseDTO default response
     * @throws ApiError
     */
    public static getV1LoansLocked(data: GetV1LoansLockedData = {}): CancelablePromise<GetV1LoansLockedResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/locked',
            query: {
                page: data.page,
                limit: data.limit
            }
        });
    }
    
}

export class LoanCollateralService {
    /**
     * List Loan Collaterals
     * Example Requests:
     *
     * loans/1/collaterals
     *
     *
     * loans/1/collaterals?fields=value,description
     * @param data The data for the request.
     * @param data.loanId loanId
     * @returns CollateralData default response
     * @throws ApiError
     */
    public static getV1LoansByLoanIdCollaterals(data: GetV1LoansByLoanIdCollateralsData): CancelablePromise<GetV1LoansByLoanIdCollateralsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/collaterals',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * Create a Collateral
     * Note: Currently, Collaterals may be added only before a Loan is approved
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.requestBody
     * @returns PostLoansLoanIdCollateralsResponse OK
     * @throws ApiError
     */
    public static postV1LoansByLoanIdCollaterals(data: PostV1LoansByLoanIdCollateralsData): CancelablePromise<PostV1LoansByLoanIdCollateralsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/{loanId}/collaterals',
            path: {
                loanId: data.loanId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Collateral Details Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed Value Lists
     * Example Request:
     *
     * loans/1/collaterals/template
     * @param data The data for the request.
     * @param data.loanId loanId
     * @returns CollateralData default response
     * @throws ApiError
     */
    public static getV1LoansByLoanIdCollateralsTemplate(data: GetV1LoansByLoanIdCollateralsTemplateData): CancelablePromise<GetV1LoansByLoanIdCollateralsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/collaterals/template',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * Remove a Collateral
     * Note: A collateral can only be removed from Loans that are not yet approved.
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.collateralId collateralId
     * @returns DeleteLoansLoanIdCollateralsCollateralIdResponse OK
     * @throws ApiError
     */
    public static deleteV1LoansByLoanIdCollateralsByCollateralId(data: DeleteV1LoansByLoanIdCollateralsByCollateralIdData): CancelablePromise<DeleteV1LoansByLoanIdCollateralsByCollateralIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/loans/{loanId}/collaterals/{collateralId}',
            path: {
                loanId: data.loanId,
                collateralId: data.collateralId
            }
        });
    }
    
    /**
     * Retrieve a Collateral
     * Example Requests:
     *
     * /loans/1/collaterals/1
     *
     *
     * /loans/1/collaterals/1?fields=description,description
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.collateralId collateralId
     * @returns GetLoansLoanIdCollateralsResponse OK
     * @throws ApiError
     */
    public static getV1LoansByLoanIdCollateralsByCollateralId(data: GetV1LoansByLoanIdCollateralsByCollateralIdData): CancelablePromise<GetV1LoansByLoanIdCollateralsByCollateralIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/collaterals/{collateralId}',
            path: {
                loanId: data.loanId,
                collateralId: data.collateralId
            }
        });
    }
    
    /**
     * Update a Collateral
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.collateralId collateralId
     * @param data.requestBody
     * @returns PutLoansLoanIdCollateralsCollateralIdResponse OK
     * @throws ApiError
     */
    public static putV1LoansByLoanIdCollateralsByCollateralId(data: PutV1LoansByLoanIdCollateralsByCollateralIdData): CancelablePromise<PutV1LoansByLoanIdCollateralsByCollateralIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/{loanId}/collaterals/{collateralId}',
            path: {
                loanId: data.loanId,
                collateralId: data.collateralId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class LoanDisbursementDetailsService {
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1LoansByLoanIdDisbursementsEditDisbursements(data: PutV1LoansByLoanIdDisbursementsEditDisbursementsData): CancelablePromise<PutV1LoansByLoanIdDisbursementsEditDisbursementsResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/{loanId}/disbursements/editDisbursements',
            path: {
                loanId: data.loanId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @param data.disbursementId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1LoansByLoanIdDisbursementsByDisbursementId(data: GetV1LoansByLoanIdDisbursementsByDisbursementIdData): CancelablePromise<GetV1LoansByLoanIdDisbursementsByDisbursementIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/disbursements/{disbursementId}',
            path: {
                loanId: data.loanId,
                disbursementId: data.disbursementId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @param data.disbursementId
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1LoansByLoanIdDisbursementsByDisbursementId(data: PutV1LoansByLoanIdDisbursementsByDisbursementIdData): CancelablePromise<PutV1LoansByLoanIdDisbursementsByDisbursementIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/{loanId}/disbursements/{disbursementId}',
            path: {
                loanId: data.loanId,
                disbursementId: data.disbursementId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class GuarantorsService {
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @returns GuarantorData default response
     * @throws ApiError
     */
    public static getV1LoansByLoanIdGuarantors(data: GetV1LoansByLoanIdGuarantorsData): CancelablePromise<GetV1LoansByLoanIdGuarantorsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/guarantors',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @param data.requestBody
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static postV1LoansByLoanIdGuarantors(data: PostV1LoansByLoanIdGuarantorsData): CancelablePromise<PostV1LoansByLoanIdGuarantorsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/{loanId}/guarantors',
            path: {
                loanId: data.loanId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @param data.clientId
     * @returns GuarantorData default response
     * @throws ApiError
     */
    public static getV1LoansByLoanIdGuarantorsAccountsTemplate(data: GetV1LoansByLoanIdGuarantorsAccountsTemplateData): CancelablePromise<GetV1LoansByLoanIdGuarantorsAccountsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/guarantors/accounts/template',
            path: {
                loanId: data.loanId
            },
            query: {
                clientId: data.clientId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @param data.officeId
     * @param data.dateFormat
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1LoansByLoanIdGuarantorsDownloadtemplate(data: GetV1LoansByLoanIdGuarantorsDownloadtemplateData): CancelablePromise<GetV1LoansByLoanIdGuarantorsDownloadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/guarantors/downloadtemplate',
            path: {
                loanId: data.loanId
            },
            query: {
                officeId: data.officeId,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @returns GuarantorData default response
     * @throws ApiError
     */
    public static getV1LoansByLoanIdGuarantorsTemplate(data: GetV1LoansByLoanIdGuarantorsTemplateData): CancelablePromise<GetV1LoansByLoanIdGuarantorsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/guarantors/template',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @param data.formData Upload guarantor template
     * @returns string default response
     * @throws ApiError
     */
    public static postV1LoansByLoanIdGuarantorsUploadtemplate(data: PostV1LoansByLoanIdGuarantorsUploadtemplateData): CancelablePromise<PostV1LoansByLoanIdGuarantorsUploadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/{loanId}/guarantors/uploadtemplate',
            path: {
                loanId: data.loanId
            },
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @param data.guarantorId
     * @param data.guarantorFundingId
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static deleteV1LoansByLoanIdGuarantorsByGuarantorId(data: DeleteV1LoansByLoanIdGuarantorsByGuarantorIdData): CancelablePromise<DeleteV1LoansByLoanIdGuarantorsByGuarantorIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/loans/{loanId}/guarantors/{guarantorId}',
            path: {
                loanId: data.loanId,
                guarantorId: data.guarantorId
            },
            query: {
                guarantorFundingId: data.guarantorFundingId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @param data.guarantorId
     * @returns GuarantorData default response
     * @throws ApiError
     */
    public static getV1LoansByLoanIdGuarantorsByGuarantorId(data: GetV1LoansByLoanIdGuarantorsByGuarantorIdData): CancelablePromise<GetV1LoansByLoanIdGuarantorsByGuarantorIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/guarantors/{guarantorId}',
            path: {
                loanId: data.loanId,
                guarantorId: data.guarantorId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @param data.guarantorId
     * @param data.requestBody
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static putV1LoansByLoanIdGuarantorsByGuarantorId(data: PutV1LoansByLoanIdGuarantorsByGuarantorIdData): CancelablePromise<PutV1LoansByLoanIdGuarantorsByGuarantorIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/{loanId}/guarantors/{guarantorId}',
            path: {
                loanId: data.loanId,
                guarantorId: data.guarantorId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class RepaymentWithPostDatedChecksService {
    /**
     * Get All Post Dated Checks
     * Get All Post dated Checks
     * @param data The data for the request.
     * @param data.loanId loanId
     * @returns GetPostDatedChecks OK
     * @throws ApiError
     */
    public static getV1LoansByLoanIdPostdatedchecks(data: GetV1LoansByLoanIdPostdatedchecksData): CancelablePromise<GetV1LoansByLoanIdPostdatedchecksResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/postdatedchecks',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * Get Post Dated Check
     * Get Post Dated Check
     * @param data The data for the request.
     * @param data.installmentId installmentId
     * @param data.loanId loanId
     * @returns GetPostDatedChecks OK
     * @throws ApiError
     */
    public static getV1LoansByLoanIdPostdatedchecksByInstallmentId(data: GetV1LoansByLoanIdPostdatedchecksByInstallmentIdData): CancelablePromise<GetV1LoansByLoanIdPostdatedchecksByInstallmentIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/loans/{loanId}/postdatedchecks/{installmentId}',
            path: {
                installmentId: data.installmentId,
                loanId: data.loanId
            }
        });
    }
    
    /**
     * Delete Post Dated Check
     * Delete Post Dated Check
     * @param data The data for the request.
     * @param data.postDatedCheckId postDatedCheckId
     * @param data.loanId loanId
     * @returns DeletePostDatedCheck OK
     * @throws ApiError
     */
    public static deleteV1LoansByLoanIdPostdatedchecksByPostDatedCheckId(data: DeleteV1LoansByLoanIdPostdatedchecksByPostDatedCheckIdData): CancelablePromise<DeleteV1LoansByLoanIdPostdatedchecksByPostDatedCheckIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/loans/{loanId}/postdatedchecks/{postDatedCheckId}',
            path: {
                postDatedCheckId: data.postDatedCheckId,
                loanId: data.loanId
            }
        });
    }
    
    /**
     * Update Post Dated Check, Bounced Check
     * Update Post Dated Check, Bounced Check
     * @param data The data for the request.
     * @param data.postDatedCheckId postDatedCheckId
     * @param data.loanId loanId
     * @param data.requestBody
     * @param data.editType editType
     * @returns UpdatePostDatedCheckResponse OK
     * @throws ApiError
     */
    public static putV1LoansByLoanIdPostdatedchecksByPostDatedCheckId(data: PutV1LoansByLoanIdPostdatedchecksByPostDatedCheckIdData): CancelablePromise<PutV1LoansByLoanIdPostdatedchecksByPostDatedCheckIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/loans/{loanId}/postdatedchecks/{postDatedCheckId}',
            path: {
                postDatedCheckId: data.postDatedCheckId,
                loanId: data.loanId
            },
            query: {
                editType: data.editType
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class LoanReschedulingService {
    /**
     * Calculate loan repayment schedule based on Loan term variations | Updates loan repayment schedule based on Loan term variations | Updates loan repayment schedule by removing Loan term variations
     * Calculate loan repayment schedule based on Loan term variations:
     *
     * Mandatory Fields: exceptions,locale,dateFormat
     *
     * Updates loan repayment schedule based on Loan term variations:
     *
     * Mandatory Fields: exceptions,locale,dateFormat
     *
     * Updates loan repayment schedule by removing Loan term variations:
     *
     * It updates the loan repayment schedule by removing Loan term variations
     *
     * Showing request/response for 'Updates loan repayment schedule by removing Loan term variations'
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.requestBody
     * @param data.command command
     * @returns PostLoansLoanIdScheduleResponse OK
     * @throws ApiError
     */
    public static postV1LoansByLoanIdSchedule(data: PostV1LoansByLoanIdScheduleData): CancelablePromise<PostV1LoansByLoanIdScheduleResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/loans/{loanId}/schedule',
            path: {
                loanId: data.loanId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class MakerCheckerOr4EyeFunctionalityService {
    /**
     * List Maker Checker Entries
     * Get a list of entries that can be checked by the requestor that match the criteria supplied.
     *
     * Example Requests:
     *
     * makercheckers
     *
     * makercheckers?fields=madeOnDate,maker,processingResult
     *
     * makercheckers?makerDateTimeFrom=2013-03-25 08:00:00&makerDateTimeTo=2013-04-04 18:00:00
     *
     * makercheckers?officeId=1
     *
     * makercheckers?officeId=1&includeJson=true
     * @param data The data for the request.
     * @param data.actionName
     * @param data.entityName
     * @param data.resourceId
     * @param data.makerId
     * @param data.makerDateTimeFrom
     * @param data.makerDateTimeTo
     * @param data.clientId
     * @param data.loanid
     * @param data.officeId
     * @param data.groupId
     * @param data.savingsAccountId
     * @returns AuditData default response
     * @throws ApiError
     */
    public static getV1Makercheckers(data: GetV1MakercheckersData = {}): CancelablePromise<GetV1MakercheckersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/makercheckers',
            query: {
                actionName: data.actionName,
                entityName: data.entityName,
                resourceId: data.resourceId,
                makerId: data.makerId,
                makerDateTimeFrom: data.makerDateTimeFrom,
                makerDateTimeTo: data.makerDateTimeTo,
                clientId: data.clientId,
                loanid: data.loanid,
                officeId: data.officeId,
                groupId: data.groupId,
                savingsAccountId: data.savingsAccountId
            }
        });
    }
    
    /**
     * Maker Checker Search Template
     * This is a convenience resource. It can be useful when building a Checker Inbox UI. "appUsers" are data scoped to the office/branch the requestor is associated with. "actionNames" and "entityNames" returned are those that the requestor has Checker approval permissions for.
     *
     * Example Requests:
     *
     * makercheckers/searchtemplate
     * makercheckers/searchtemplate?fields=entityNames
     * @returns AuditSearchData default response
     * @throws ApiError
     */
    public static getV1MakercheckersSearchtemplate(): CancelablePromise<GetV1MakercheckersSearchtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/makercheckers/searchtemplate'
        });
    }
    
    /**
     * Delete Maker Checker Entry
     * @param data The data for the request.
     * @param data.auditId auditId
     * @returns PostMakerCheckersResponse OK
     * @throws ApiError
     */
    public static deleteV1MakercheckersByAuditId(data: DeleteV1MakercheckersByAuditIdData): CancelablePromise<DeleteV1MakercheckersByAuditIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/makercheckers/{auditId}',
            path: {
                auditId: data.auditId
            }
        });
    }
    
    /**
     * Approve Maker Checker Entry | Reject Maker Checker Entry
     * @param data The data for the request.
     * @param data.auditId auditId
     * @param data.command command
     * @returns PostMakerCheckersResponse OK
     * @throws ApiError
     */
    public static postV1MakercheckersByAuditId(data: PostV1MakercheckersByAuditIdData): CancelablePromise<PostV1MakercheckersByAuditIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/makercheckers/{auditId}',
            path: {
                auditId: data.auditId
            },
            query: {
                command: data.command
            }
        });
    }
    
}

export class MixMappingService {
    /**
     * @returns MixTaxonomyMappingData default response
     * @throws ApiError
     */
    public static getV1Mixmapping(): CancelablePromise<GetV1MixmappingResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/mixmapping'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1Mixmapping(data: PutV1MixmappingData = {}): CancelablePromise<PutV1MixmappingResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/mixmapping',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class MixReportService {
    /**
     * @param data The data for the request.
     * @param data.startDate
     * @param data.endDate
     * @param data.currency
     * @returns string default response
     * @throws ApiError
     */
    public static getV1Mixreport(data: GetV1MixreportData = {}): CancelablePromise<GetV1MixreportResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/mixreport',
            query: {
                startDate: data.startDate,
                endDate: data.endDate,
                currency: data.currency
            }
        });
    }
    
}

export class MixTaxonomyService {
    /**
     * @returns MixTaxonomyData default response
     * @throws ApiError
     */
    public static getV1Mixtaxonomy(): CancelablePromise<GetV1MixtaxonomyResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/mixtaxonomy'
        });
    }
    
}

export class NotificationService {
    /**
     * @param data The data for the request.
     * @param data.orderBy orderBy
     * @param data.limit limit
     * @param data.offset offset
     * @param data.sortOrder sortOrder
     * @param data.isRead isRead
     * @returns GetNotificationsResponse OK
     * @throws ApiError
     */
    public static getV1Notifications(data: GetV1NotificationsData = {}): CancelablePromise<GetV1NotificationsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/notifications',
            query: {
                orderBy: data.orderBy,
                limit: data.limit,
                offset: data.offset,
                sortOrder: data.sortOrder,
                isRead: data.isRead
            }
        });
    }
    
    /**
     * @returns unknown default response
     * @throws ApiError
     */
    public static putV1Notifications(): CancelablePromise<PutV1NotificationsResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/notifications'
        });
    }
    
}

export class OfficesService {
    /**
     * List Offices
     * Example Requests:
     *
     * offices
     *
     *
     * offices?fields=id,name,openingDate
     * @param data The data for the request.
     * @param data.includeAllOffices includeAllOffices
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @returns GetOfficesResponse OK
     * @throws ApiError
     */
    public static getV1Offices(data: GetV1OfficesData = {}): CancelablePromise<GetV1OfficesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/offices',
            query: {
                includeAllOffices: data.includeAllOffices,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            }
        });
    }
    
    /**
     * Create an Office
     * Mandatory Fields
     * name, openingDate, parentId
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostOfficesResponse OK
     * @throws ApiError
     */
    public static postV1Offices(data: PostV1OfficesData): CancelablePromise<PostV1OfficesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/offices',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.dateFormat
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1OfficesDownloadtemplate(data: GetV1OfficesDownloadtemplateData = {}): CancelablePromise<GetV1OfficesDownloadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/offices/downloadtemplate',
            query: {
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * Retrieve an Office using external id
     * Example Requests:
     *
     * offices/external-id/asd123
     *
     *
     * offices/external-id/asd123?template=true
     *
     *
     * offices/external-id/asd123?fields=id,name,parentName
     * @param data The data for the request.
     * @param data.externalId externalId
     * @returns GetOfficesResponse default response
     * @throws ApiError
     */
    public static getV1OfficesExternalIdByExternalId(data: GetV1OfficesExternalIdByExternalIdData): CancelablePromise<GetV1OfficesExternalIdByExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/offices/external-id/{externalId}',
            path: {
                externalId: data.externalId
            }
        });
    }
    
    /**
     * Update Office
     * @param data The data for the request.
     * @param data.externalId externalId
     * @param data.requestBody
     * @returns PutOfficesOfficeIdResponse default response
     * @throws ApiError
     */
    public static putV1OfficesExternalIdByExternalId(data: PutV1OfficesExternalIdByExternalIdData): CancelablePromise<PutV1OfficesExternalIdByExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/offices/external-id/{externalId}',
            path: {
                externalId: data.externalId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Office Details Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed description Lists
     * Example Request:
     *
     * offices/template
     * @returns GetOfficesTemplateResponse OK
     * @throws ApiError
     */
    public static getV1OfficesTemplate(): CancelablePromise<GetV1OfficesTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/offices/template'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.formData Upload office template
     * @returns string default response
     * @throws ApiError
     */
    public static postV1OfficesUploadtemplate(data: PostV1OfficesUploadtemplateData = {}): CancelablePromise<PostV1OfficesUploadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/offices/uploadtemplate',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Retrieve an Office
     * Example Requests:
     *
     * offices/1
     *
     *
     * offices/1?template=true
     *
     *
     * offices/1?fields=id,name,parentName
     * @param data The data for the request.
     * @param data.officeId officeId
     * @returns GetOfficesResponse OK
     * @throws ApiError
     */
    public static getV1OfficesByOfficeId(data: GetV1OfficesByOfficeIdData): CancelablePromise<GetV1OfficesByOfficeIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/offices/{officeId}',
            path: {
                officeId: data.officeId
            }
        });
    }
    
    /**
     * Update Office
     * @param data The data for the request.
     * @param data.officeId officeId
     * @param data.requestBody
     * @returns PutOfficesOfficeIdResponse OK
     * @throws ApiError
     */
    public static putV1OfficesByOfficeId(data: PutV1OfficesByOfficeIdData): CancelablePromise<PutV1OfficesByOfficeIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/offices/{officeId}',
            path: {
                officeId: data.officeId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class PasswordPreferencesService {
    /**
     * @returns GetPasswordPreferencesTemplateResponse OK
     * @throws ApiError
     */
    public static getV1Passwordpreferences(): CancelablePromise<GetV1PasswordpreferencesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/passwordpreferences'
        });
    }
    
    /**
     * Update password preferences
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown OK
     * @throws ApiError
     */
    public static putV1Passwordpreferences(data: PutV1PasswordpreferencesData): CancelablePromise<PutV1PasswordpreferencesResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/passwordpreferences',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * List Application Password validation policies
     * ARGUMENTS
     * Example Requests:
     *
     * passwordpreferences
     * @returns GetPasswordPreferencesTemplateResponse OK
     * @throws ApiError
     */
    public static getV1PasswordpreferencesTemplate(): CancelablePromise<GetV1PasswordpreferencesTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/passwordpreferences/template'
        });
    }
    
}

export class PaymentTypeService {
    /**
     * Retrieve all Payment Types
     * Retrieve list of payment types
     * @param data The data for the request.
     * @param data.onlyWithCode onlyWithCode
     * @returns PaymentTypeData default response
     * @throws ApiError
     */
    public static getV1Paymenttypes(data: GetV1PaymenttypesData = {}): CancelablePromise<GetV1PaymenttypesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/paymenttypes',
            query: {
                onlyWithCode: data.onlyWithCode
            }
        });
    }
    
    /**
     * Create a Payment Type
     * Creates a new Payment type
     *
     * Mandatory Fields: name
     *
     * Optional Fields: Description, isCashPayment,Position
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostPaymentTypesResponse OK
     * @throws ApiError
     */
    public static postV1Paymenttypes(data: PostV1PaymenttypesData): CancelablePromise<PostV1PaymenttypesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/paymenttypes',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Delete a Payment Type
     * Deletes payment type
     * @param data The data for the request.
     * @param data.paymentTypeId paymentTypeId
     * @returns DeletePaymentTypesPaymentTypeIdResponse OK
     * @throws ApiError
     */
    public static deleteV1PaymenttypesByPaymentTypeId(data: DeleteV1PaymenttypesByPaymentTypeIdData): CancelablePromise<DeleteV1PaymenttypesByPaymentTypeIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/paymenttypes/{paymentTypeId}',
            path: {
                paymentTypeId: data.paymentTypeId
            }
        });
    }
    
    /**
     * Retrieve a Payment Type
     * Retrieves a payment type
     * @param data The data for the request.
     * @param data.paymentTypeId paymentTypeId
     * @returns PaymentTypeData default response
     * @throws ApiError
     */
    public static getV1PaymenttypesByPaymentTypeId(data: GetV1PaymenttypesByPaymentTypeIdData): CancelablePromise<GetV1PaymenttypesByPaymentTypeIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/paymenttypes/{paymentTypeId}',
            path: {
                paymentTypeId: data.paymentTypeId
            }
        });
    }
    
    /**
     * Update a Payment Type
     * Updates a Payment Type
     * @param data The data for the request.
     * @param data.paymentTypeId paymentTypeId
     * @param data.requestBody
     * @returns PutPaymentTypesPaymentTypeIdResponse OK
     * @throws ApiError
     */
    public static putV1PaymenttypesByPaymentTypeId(data: PutV1PaymenttypesByPaymentTypeIdData): CancelablePromise<PutV1PaymenttypesByPaymentTypeIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/paymenttypes/{paymentTypeId}',
            path: {
                paymentTypeId: data.paymentTypeId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class PermissionsService {
    /**
     * List Application Permissions
     * ARGUMENTS
     * makerCheckerableoptional, Values are true, false. Default is false.
     * If makerCheckerable=false or not supplied then a list of application permissions is returned. The "selected" attribute is always true in this case.
     *
     * If makerCheckerable=true then the "selected" attribute shows whether the permission is enabled for Maker Check functionality.
     *
     * Note: Each Apache Fineract transaction is associated with a permission.
     *
     * Example Requests:
     *
     * permissions
     *
     *
     * permissions?makerCheckerable=true
     *
     *
     * permissions?fields=grouping,code
     * @returns GetPermissionsResponse OK
     * @throws ApiError
     */
    public static getV1Permissions(): CancelablePromise<GetV1PermissionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/permissions'
        });
    }
    
    /**
     * Enable/Disable Permissions for Maker Checker
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CommandProcessingResult OK
     * @throws ApiError
     */
    public static putV1Permissions(data: PutV1PermissionsData): CancelablePromise<PutV1PermissionsResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/permissions',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class PovertyLineService {
    /**
     * @param data The data for the request.
     * @param data.ppiName
     * @returns string default response
     * @throws ApiError
     */
    public static getV1PovertyLineByPpiName(data: GetV1PovertyLineByPpiNameData): CancelablePromise<GetV1PovertyLineByPpiNameResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/povertyLine/{ppiName}',
            path: {
                ppiName: data.ppiName
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.ppiName
     * @param data.likelihoodId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1PovertyLineByPpiNameByLikelihoodId(data: GetV1PovertyLineByPpiNameByLikelihoodIdData): CancelablePromise<GetV1PovertyLineByPpiNameByLikelihoodIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/povertyLine/{ppiName}/{likelihoodId}',
            path: {
                ppiName: data.ppiName,
                likelihoodId: data.likelihoodId
            }
        });
    }
    
}

export class ProductsService {
    /**
     * List Share Products
     * Lists Share Products
     *
     * Mandatory Fields: limit, offset
     *
     * Example Requests:
     *
     * shareproducts
     * @param data The data for the request.
     * @param data.type type
     * @param data.offset offset
     * @param data.limit limit
     * @returns GetProductsTypeResponse OK
     * @throws ApiError
     */
    public static getV1ProductsByType(data: GetV1ProductsByTypeData): CancelablePromise<GetV1ProductsByTypeResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/products/{type}',
            path: {
                type: data.type
            },
            query: {
                offset: data.offset,
                limit: data.limit
            }
        });
    }
    
    /**
     * Create a Share Product
     * Creates a Share Product
     *
     * Mandatory Fields: name, shortName, description, currencyCode, digitsAfterDecimal,inMultiplesOf, locale, totalShares, unitPrice, nominalShares,allowDividendCalculationForInactiveClients,accountingRule
     *
     * Mandatory Fields for Cash based accounting (accountingRule = 2): shareReferenceId, shareSuspenseId, shareEquityId, incomeFromFeeAccountId
     *
     * Optional Fields: sharesIssued, minimumShares, maximumShares, minimumActivePeriodForDividends, minimumactiveperiodFrequencyType, lockinPeriodFrequency, lockinPeriodFrequencyType, marketPricePeriods, chargesSelected
     * @param data The data for the request.
     * @param data.type type
     * @param data.requestBody
     * @returns PostProductsTypeResponse OK
     * @throws ApiError
     */
    public static postV1ProductsByType(data: PostV1ProductsByTypeData): CancelablePromise<PostV1ProductsByTypeResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/products/{type}',
            path: {
                type: data.type
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.type type
     * @returns string default response
     * @throws ApiError
     */
    public static getV1ProductsByTypeTemplate(data: GetV1ProductsByTypeTemplateData): CancelablePromise<GetV1ProductsByTypeTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/products/{type}/template',
            path: {
                type: data.type
            }
        });
    }
    
    /**
     * Retrieve a Share Product
     * Retrieves a Share Product
     *
     * Example Requests:
     *
     * products/share/1
     *
     *
     * products/share/1?template=true
     * @param data The data for the request.
     * @param data.productId productId
     * @param data.type type
     * @returns GetProductsTypeProductIdResponse OK
     * @throws ApiError
     */
    public static getV1ProductsByTypeByProductId(data: GetV1ProductsByTypeByProductIdData): CancelablePromise<GetV1ProductsByTypeByProductIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/products/{type}/{productId}',
            path: {
                productId: data.productId,
                type: data.type
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.type type
     * @param data.productId productId
     * @param data.command command
     * @returns string default response
     * @throws ApiError
     */
    public static postV1ProductsByTypeByProductId(data: PostV1ProductsByTypeByProductIdData): CancelablePromise<PostV1ProductsByTypeByProductIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/products/{type}/{productId}',
            path: {
                type: data.type,
                productId: data.productId
            },
            query: {
                command: data.command
            }
        });
    }
    
    /**
     * Update a Share Product
     * Updates a Share Product
     * @param data The data for the request.
     * @param data.type type
     * @param data.productId productId
     * @param data.requestBody
     * @returns PutProductsTypeProductIdResponse OK
     * @throws ApiError
     */
    public static putV1ProductsByTypeByProductId(data: PutV1ProductsByTypeByProductIdData): CancelablePromise<PutV1ProductsByTypeByProductIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/products/{type}/{productId}',
            path: {
                type: data.type,
                productId: data.productId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class ProvisioningCategoryService {
    /**
     * @returns ProvisioningCategoryData default response
     * @throws ApiError
     */
    public static getV1Provisioningcategory(): CancelablePromise<GetV1ProvisioningcategoryResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/provisioningcategory'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static postV1Provisioningcategory(data: PostV1ProvisioningcategoryData = {}): CancelablePromise<PostV1ProvisioningcategoryResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/provisioningcategory',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.categoryId
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static deleteV1ProvisioningcategoryByCategoryId(data: DeleteV1ProvisioningcategoryByCategoryIdData): CancelablePromise<DeleteV1ProvisioningcategoryByCategoryIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/provisioningcategory/{categoryId}',
            path: {
                categoryId: data.categoryId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.categoryId
     * @param data.requestBody
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static putV1ProvisioningcategoryByCategoryId(data: PutV1ProvisioningcategoryByCategoryIdData): CancelablePromise<PutV1ProvisioningcategoryByCategoryIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/provisioningcategory/{categoryId}',
            path: {
                categoryId: data.categoryId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class ProvisioningCriteriaService {
    /**
     * Retrieves all created Provisioning Criterias
     * Retrieves all created Provisioning Criterias
     * @returns GetProvisioningCriteriaResponse OK
     * @throws ApiError
     */
    public static getV1Provisioningcriteria(): CancelablePromise<GetV1ProvisioningcriteriaResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/provisioningcriteria'
        });
    }
    
    /**
     * Create a new Provisioning Criteria
     * Creates a new Provisioning Criteria
     *
     * Mandatory Fields:
     * criteriaName
     * provisioningcriteria
     *
     * Optional Fields:
     * loanProducts
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostProvisioningCriteriaResponse OK
     * @throws ApiError
     */
    public static postV1Provisioningcriteria(data: PostV1ProvisioningcriteriaData): CancelablePromise<PostV1ProvisioningcriteriaResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/provisioningcriteria',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns ProvisioningCriteriaData default response
     * @throws ApiError
     */
    public static getV1ProvisioningcriteriaTemplate(): CancelablePromise<GetV1ProvisioningcriteriaTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/provisioningcriteria/template'
        });
    }
    
    /**
     * Deletes Provisioning Criteria
     * Deletes Provisioning Criteria
     * @param data The data for the request.
     * @param data.criteriaId criteriaId
     * @returns DeleteProvisioningCriteriaResponse OK
     * @throws ApiError
     */
    public static deleteV1ProvisioningcriteriaByCriteriaId(data: DeleteV1ProvisioningcriteriaByCriteriaIdData): CancelablePromise<DeleteV1ProvisioningcriteriaByCriteriaIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/provisioningcriteria/{criteriaId}',
            path: {
                criteriaId: data.criteriaId
            }
        });
    }
    
    /**
     * Retrieves a Provisioning Criteria
     * Retrieves a Provisioning Criteria
     * @param data The data for the request.
     * @param data.criteriaId criteriaId
     * @returns GetProvisioningCriteriaCriteriaIdResponse OK
     * @throws ApiError
     */
    public static getV1ProvisioningcriteriaByCriteriaId(data: GetV1ProvisioningcriteriaByCriteriaIdData): CancelablePromise<GetV1ProvisioningcriteriaByCriteriaIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/provisioningcriteria/{criteriaId}',
            path: {
                criteriaId: data.criteriaId
            }
        });
    }
    
    /**
     * Updates a new Provisioning Criteria
     * Updates a new Provisioning Criteria
     *
     * Optional Fields
     * criteriaName, loanProducts, provisioningcriteria
     * @param data The data for the request.
     * @param data.criteriaId criteriaId
     * @param data.requestBody
     * @returns PutProvisioningCriteriaResponse OK
     * @throws ApiError
     */
    public static putV1ProvisioningcriteriaByCriteriaId(data: PutV1ProvisioningcriteriaByCriteriaIdData): CancelablePromise<PutV1ProvisioningcriteriaByCriteriaIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/provisioningcriteria/{criteriaId}',
            path: {
                criteriaId: data.criteriaId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class ProvisioningEntriesService {
    /**
     * List all Provisioning Entries
     * @param data The data for the request.
     * @param data.offset offset
     * @param data.limit limit
     * @returns PageProvisioningEntryData default response
     * @throws ApiError
     */
    public static getV1Provisioningentries(data: GetV1ProvisioningentriesData = {}): CancelablePromise<GetV1ProvisioningentriesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/provisioningentries',
            query: {
                offset: data.offset,
                limit: data.limit
            }
        });
    }
    
    /**
     * Create new Provisioning Entries
     * Creates a new Provisioning Entries
     *
     * Mandatory Fields
     * date
     * dateFormat
     * locale
     * Optional Fields
     * createjournalentries
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostProvisioningEntriesResponse OK
     * @throws ApiError
     */
    public static postV1Provisioningentries(data: PostV1ProvisioningentriesData = {}): CancelablePromise<PostV1ProvisioningentriesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/provisioningentries',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.entryId
     * @param data.offset
     * @param data.limit
     * @param data.officeId
     * @param data.productId
     * @param data.categoryId
     * @returns PageLoanProductProvisioningEntryData default response
     * @throws ApiError
     */
    public static getV1ProvisioningentriesEntries(data: GetV1ProvisioningentriesEntriesData = {}): CancelablePromise<GetV1ProvisioningentriesEntriesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/provisioningentries/entries',
            query: {
                entryId: data.entryId,
                offset: data.offset,
                limit: data.limit,
                officeId: data.officeId,
                productId: data.productId,
                categoryId: data.categoryId
            }
        });
    }
    
    /**
     * Retrieves a Provisioning Entry
     * Returns the details of a generated Provisioning Entry.
     * @param data The data for the request.
     * @param data.entryId entryId
     * @returns ProvisioningEntryData default response
     * @throws ApiError
     */
    public static getV1ProvisioningentriesByEntryId(data: GetV1ProvisioningentriesByEntryIdData): CancelablePromise<GetV1ProvisioningentriesByEntryIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/provisioningentries/{entryId}',
            path: {
                entryId: data.entryId
            }
        });
    }
    
    /**
     * Recreates Provisioning Entry
     * Recreates Provisioning Entry | createjournalentry.
     * @param data The data for the request.
     * @param data.entryId entryId
     * @param data.command command=createjournalentry
     * command=recreateprovisioningentry
     * @param data.requestBody
     * @returns PutProvisioningEntriesResponse OK
     * @throws ApiError
     */
    public static postV1ProvisioningentriesByEntryId(data: PostV1ProvisioningentriesByEntryIdData): CancelablePromise<PostV1ProvisioningentriesByEntryIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/provisioningentries/{entryId}',
            path: {
                entryId: data.entryId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class RateService {
    /**
     * @returns RateData default response
     * @throws ApiError
     */
    public static getV1Rates(): CancelablePromise<GetV1RatesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/rates'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static postV1Rates(data: PostV1RatesData = {}): CancelablePromise<PostV1RatesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/rates',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.rateId
     * @returns RateData default response
     * @throws ApiError
     */
    public static getV1RatesByRateId(data: GetV1RatesByRateIdData): CancelablePromise<GetV1RatesByRateIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/rates/{rateId}',
            path: {
                rateId: data.rateId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.rateId
     * @param data.requestBody
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static putV1RatesByRateId(data: PutV1RatesByRateIdData): CancelablePromise<PutV1RatesByRateIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/rates/{rateId}',
            path: {
                rateId: data.rateId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class RecurringDepositAccountService {
    /**
     * List Recurring deposit applications/accounts
     * Lists Recurring deposit applications/accounts
     *
     * Example Requests:
     *
     * recurringdepositaccounts
     *
     *
     * recurringdepositaccounts?fields=name
     * @param data The data for the request.
     * @param data.paged paged
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @returns GetRecurringDepositAccountsResponse OK
     * @throws ApiError
     */
    public static getV1Recurringdepositaccounts(data: GetV1RecurringdepositaccountsData = {}): CancelablePromise<GetV1RecurringdepositaccountsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/recurringdepositaccounts',
            query: {
                paged: data.paged,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            }
        });
    }
    
    /**
     * Submit new recurring deposit application
     * Submits new recurring deposit application
     *
     * Mandatory Fields: clientId or groupId, productId, submittedOnDate, depositAmount, depositPeriod, depositPeriodFrequencyId
     *
     * Optional Fields: accountNo, externalId, fieldOfficerId,linkAccountId(if provided initial deposit amount will be collected from this account),transferInterestToSavings(By enabling this flag all interest postings will be transferred to linked saving account )
     *
     * Inherited from Product (if not provided): interestCompoundingPeriodType, interestCalculationType, interestCalculationDaysInYearType, lockinPeriodFrequency, lockinPeriodFrequencyType, preClosurePenalApplicable, preClosurePenalInterest, preClosurePenalInterestOnTypeId, charts, withHoldTax
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostRecurringDepositAccountsResponse OK
     * @throws ApiError
     */
    public static postV1Recurringdepositaccounts(data: PostV1RecurringdepositaccountsData): CancelablePromise<PostV1RecurringdepositaccountsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/recurringdepositaccounts',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.officeId
     * @param data.staffId
     * @param data.dateFormat
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1RecurringdepositaccountsDownloadtemplate(data: GetV1RecurringdepositaccountsDownloadtemplateData = {}): CancelablePromise<GetV1RecurringdepositaccountsDownloadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/recurringdepositaccounts/downloadtemplate',
            query: {
                officeId: data.officeId,
                staffId: data.staffId,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * Retrieve recurring Deposit Account Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for recurring deposit applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed Value Lists
     *
     * Example Requests:
     *
     * recurringdepositaccounts/template?clientId=1
     *
     *
     * recurringdepositaccounts/template?clientId=1&productId=1
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.groupId groupId
     * @param data.productId productId
     * @param data.staffInSelectedOfficeOnly staffInSelectedOfficeOnly
     * @returns GetRecurringDepositAccountsTemplateResponse OK
     * @throws ApiError
     */
    public static getV1RecurringdepositaccountsTemplate(data: GetV1RecurringdepositaccountsTemplateData = {}): CancelablePromise<GetV1RecurringdepositaccountsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/recurringdepositaccounts/template',
            query: {
                clientId: data.clientId,
                groupId: data.groupId,
                productId: data.productId,
                staffInSelectedOfficeOnly: data.staffInSelectedOfficeOnly
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.officeId
     * @param data.dateFormat
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1RecurringdepositaccountsTransactionsDownloadtemplate(data: GetV1RecurringdepositaccountsTransactionsDownloadtemplateData = {}): CancelablePromise<GetV1RecurringdepositaccountsTransactionsDownloadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/recurringdepositaccounts/transactions/downloadtemplate',
            query: {
                officeId: data.officeId,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.formData Upload recurring deposit transactions template
     * @returns string default response
     * @throws ApiError
     */
    public static postV1RecurringdepositaccountsTransactionsUploadtemplate(data: PostV1RecurringdepositaccountsTransactionsUploadtemplateData = {}): CancelablePromise<PostV1RecurringdepositaccountsTransactionsUploadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/recurringdepositaccounts/transactions/uploadtemplate',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.formData Upload recurring deposit template
     * @returns string default response
     * @throws ApiError
     */
    public static postV1RecurringdepositaccountsUploadtemplate(data: PostV1RecurringdepositaccountsUploadtemplateData = {}): CancelablePromise<PostV1RecurringdepositaccountsUploadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/recurringdepositaccounts/uploadtemplate',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Delete a recurring deposit application
     * At present we support hard delete of recurring deposit application so long as its in 'Submitted and pending approval' state. One the application is moves past this state, it is not possible to do a 'hard' delete of the application or the account. An API endpoint will be added to close/de-activate the recurring deposit account.
     * @param data The data for the request.
     * @param data.accountId accountId
     * @returns DeleteRecurringDepositAccountsResponse OK
     * @throws ApiError
     */
    public static deleteV1RecurringdepositaccountsByAccountId(data: DeleteV1RecurringdepositaccountsByAccountIdData): CancelablePromise<DeleteV1RecurringdepositaccountsByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/recurringdepositaccounts/{accountId}',
            path: {
                accountId: data.accountId
            }
        });
    }
    
    /**
     * Retrieve a recurring deposit application/account
     * Retrieves a recurring deposit application/account
     *
     * Example Requests :
     *
     * recurringdepositaccounts/1
     *
     *
     * recurringdepositaccounts/1?associations=all
     * @param data The data for the request.
     * @param data.accountId accountId
     * @param data.staffInSelectedOfficeOnly staffInSelectedOfficeOnly
     * @param data.chargeStatus chargeStatus
     * @returns GetRecurringDepositAccountsAccountIdResponse OK
     * @throws ApiError
     */
    public static getV1RecurringdepositaccountsByAccountId(data: GetV1RecurringdepositaccountsByAccountIdData): CancelablePromise<GetV1RecurringdepositaccountsByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/recurringdepositaccounts/{accountId}',
            path: {
                accountId: data.accountId
            },
            query: {
                staffInSelectedOfficeOnly: data.staffInSelectedOfficeOnly,
                chargeStatus: data.chargeStatus
            }
        });
    }
    
    /**
     * Approve recurring deposit application | Undo approval recurring deposit application | Reject recurring deposit application | Withdraw recurring deposit application | Activate a recurring deposit account | Update the recommended deposit amount for a recurring deposit account | Close a recurring deposit account | Premature Close a recurring deposit account | Calculate Premature amount on Recurring deposit account | Calculate Interest on recurring Deposit Account | Post Interest on recurring Deposit Account
     * Approve recurring deposit application:
     *
     * Approves recurring deposit application so long as its in 'Submitted and pending approval' state.
     *
     * Undo approval recurring deposit application:
     *
     * Will move 'approved' recurring deposit application back to 'Submitted and pending approval' state.
     *
     * Reject recurring deposit application
     *
     * Rejects recurring deposit application so long as its in 'Submitted and pending approval' state.
     *
     * Withdraw recurring deposit application:
     *
     * Used when an applicant withdraws from the recurring deposit application. It must be in 'Submitted and pending approval' state.
     *
     * Activate a recurring deposit account:
     *
     * Results in an approved recurring deposit application being converted into an 'active' recurring deposit account.
     *
     * Update the recommended deposit amount for a recurring deposit account:
     *
     * Updates the recommended deposit amount for a RD account as on the effective date.
     *
     * Close a recurring deposit account
     *
     * Results in a Matured recurring deposit account being converted into a 'closed' recurring deposit account.
     *
     * On account close allowed actions are.Premature Close a recurring deposit account:
     *
     * Results in an Active recurring deposit account being converted into a 'Premature Closed' recurring deposit account with options to withdraw prematured amount. (premature amount is calculated using interest rate chart applicable along with penal interest if any.)
     *
     * On account premature closure allowed actions are.
     *
     * Calculate Premature amount on Recurring deposit account:
     *
     * Calculate premature amount on recurring deposit till premature close date. Premature amount is calculated based on interest chart and penal interest applicable if any.
     *
     * Calculate Interest on recurring Deposit Account:
     *
     * Calculates interest earned on a recurring deposit account based on todays date. It does not attempt to post or credit the interest on the account. That is responsibility of the Post Interest API that will likely be called by overnight process.
     *
     * Post Interest on recurring Deposit Account:
     *
     * Calculates and Posts interest earned on a recurring deposit account based on todays date and whether an interest posting or crediting event is due.
     *
     * Showing request/response for 'Post Interest on recurring Deposit Account'
     * @param data The data for the request.
     * @param data.accountId accountId
     * @param data.requestBody
     * @param data.command command
     * @returns PostRecurringDepositAccountsAccountIdResponse OK
     * @throws ApiError
     */
    public static postV1RecurringdepositaccountsByAccountId(data: PostV1RecurringdepositaccountsByAccountIdData): CancelablePromise<PostV1RecurringdepositaccountsByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/recurringdepositaccounts/{accountId}',
            path: {
                accountId: data.accountId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Modify a recurring deposit application
     * Recurring deposit application can only be modified when in 'Submitted and pending approval' state. Once the application is approved, the details cannot be changed using this method. Specific api endpoints will be created to allow change of interest detail such as rate, compounding period, posting period etc
     * @param data The data for the request.
     * @param data.accountId accountId
     * @param data.requestBody
     * @returns PutRecurringDepositAccountsAccountIdResponse OK
     * @throws ApiError
     */
    public static putV1RecurringdepositaccountsByAccountId(data: PutV1RecurringdepositaccountsByAccountIdData): CancelablePromise<PutV1RecurringdepositaccountsByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/recurringdepositaccounts/{accountId}',
            path: {
                accountId: data.accountId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.accountId accountId
     * @param data.command command
     * @returns string default response
     * @throws ApiError
     */
    public static getV1RecurringdepositaccountsByAccountIdTemplate(data: GetV1RecurringdepositaccountsByAccountIdTemplateData): CancelablePromise<GetV1RecurringdepositaccountsByAccountIdTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/recurringdepositaccounts/{accountId}/template',
            path: {
                accountId: data.accountId
            },
            query: {
                command: data.command
            }
        });
    }
    
}

export class RecurringDepositAccountTransactionsService {
    /**
     * Deposit Transaction | Withdrawal Transaction
     * Deposit Transaction:
     *
     * Used for a deposit transaction
     *
     * Withdrawal Transaction:
     *
     * Used for a Withdrawal Transaction
     *
     * Showing request/response for Deposit Transaction
     * @param data The data for the request.
     * @param data.recurringDepositAccountId recurringDepositAccountId
     * @param data.requestBody
     * @param data.command command
     * @returns PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsResponse OK
     * @throws ApiError
     */
    public static postV1RecurringdepositaccountsByRecurringDepositAccountIdTransactions(data: PostV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsData): CancelablePromise<PostV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/recurringdepositaccounts/{recurringDepositAccountId}/transactions',
            path: {
                recurringDepositAccountId: data.recurringDepositAccountId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Recurring Deposit Account Transaction Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed Value Lists
     * Example Requests:
     *
     * recurringdepositaccounts/1/transactions/template?command=deposit
     *
     * recurringdepositaccounts/1/transactions/template?command=withdrawal
     * @param data The data for the request.
     * @param data.recurringDepositAccountId recurringDepositAccountId
     * @param data.command command
     * @returns GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTemplateResponse OK
     * @throws ApiError
     */
    public static getV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsTemplate(data: GetV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsTemplateData): CancelablePromise<GetV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/recurringdepositaccounts/{recurringDepositAccountId}/transactions/template',
            path: {
                recurringDepositAccountId: data.recurringDepositAccountId
            },
            query: {
                command: data.command
            }
        });
    }
    
    /**
     * Retrieve Recurring Deposit Account Transaction
     * Retrieves Recurring Deposit Account Transaction
     *
     * Example Requests:
     *
     * recurringdepositaccounts/1/transactions/1
     * @param data The data for the request.
     * @param data.recurringDepositAccountId recurringDepositAccountId
     * @param data.transactionId transactionId
     * @returns GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse OK
     * @throws ApiError
     */
    public static getV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsByTransactionId(data: GetV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsByTransactionIdData): CancelablePromise<GetV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/recurringdepositaccounts/{recurringDepositAccountId}/transactions/{transactionId}',
            path: {
                recurringDepositAccountId: data.recurringDepositAccountId,
                transactionId: data.transactionId
            }
        });
    }
    
    /**
     * Adjust Transaction | Undo transaction
     * Adjust Transaction:
     *
     * This command modifies the given transaction.
     *
     * Undo transaction:
     *
     * This command reverses the given transaction.
     *
     * Showing request/response for 'Adjust Transaction'
     * @param data The data for the request.
     * @param data.recurringDepositAccountId recurringDepositAccountId
     * @param data.transactionId transactionId
     * @param data.requestBody
     * @param data.command command
     * @returns PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsTransactionIdResponse OK
     * @throws ApiError
     */
    public static postV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsByTransactionId(data: PostV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsByTransactionIdData): CancelablePromise<PostV1RecurringdepositaccountsByRecurringDepositAccountIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/recurringdepositaccounts/{recurringDepositAccountId}/transactions/{transactionId}',
            path: {
                recurringDepositAccountId: data.recurringDepositAccountId,
                transactionId: data.transactionId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class RecurringDepositProductService {
    /**
     * List Recuring Deposit Products
     * Lists Recuring Deposit Products
     *
     * Example Requests:
     *
     * recurringdepositproducts
     *
     *
     * recurringdepositproducts?fields=name
     * @returns GetRecurringDepositProductsResponse OK
     * @throws ApiError
     */
    public static getV1Recurringdepositproducts(): CancelablePromise<GetV1RecurringdepositproductsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/recurringdepositproducts'
        });
    }
    
    /**
     * Create a Recurring Deposit Product
     * Creates a Recurring Deposit Product
     *
     * Mandatory Fields: name, shortName, description, currencyCode, digitsAfterDecimal,inMultiplesOf, interestCompoundingPeriodType, interestCalculationType, interestCalculationDaysInYearType, minDepositTerm, minDepositTermTypeId, recurringDepositFrequency, recurringDepositFrequencyTypeId, accountingRule, depositAmount
     *
     * Mandatory Fields for Cash based accounting (accountingRule = 2): savingsReferenceAccountId, savingsControlAccountId, interestOnSavingsAccountId, incomeFromFeeAccountId, transfersInSuspenseAccountId, incomeFromPenaltyAccountId
     *
     * Optional Fields: lockinPeriodFrequency, lockinPeriodFrequencyType, maxDepositTerm, maxDepositTermTypeId, inMultiplesOfDepositTerm, inMultiplesOfDepositTermTypeId, preClosurePenalApplicable, preClosurePenalInterest, preClosurePenalInterestOnTypeId, feeToIncomeAccountMappings, penaltyToIncomeAccountMappings, charges, charts, minDepositAmount, maxDepositAmount, withHoldTax, taxGroupId
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostRecurringDepositProductsResponse OK
     * @throws ApiError
     */
    public static postV1Recurringdepositproducts(data: PostV1RecurringdepositproductsData): CancelablePromise<PostV1RecurringdepositproductsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/recurringdepositproducts',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns string default response
     * @throws ApiError
     */
    public static getV1RecurringdepositproductsTemplate(): CancelablePromise<GetV1RecurringdepositproductsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/recurringdepositproducts/template'
        });
    }
    
    /**
     * Delete a Recurring Deposit Product
     * Deletes a Recurring Deposit Product
     * @param data The data for the request.
     * @param data.productId productId
     * @returns DeleteRecurringDepositProductsProductIdResponse OK
     * @throws ApiError
     */
    public static deleteV1RecurringdepositproductsByProductId(data: DeleteV1RecurringdepositproductsByProductIdData): CancelablePromise<DeleteV1RecurringdepositproductsByProductIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/recurringdepositproducts/{productId}',
            path: {
                productId: data.productId
            }
        });
    }
    
    /**
     * Retrieve a Recurring Deposit Product
     * Retrieves a Recurring Deposit Product
     *
     * Example Requests:
     *
     * recurringdepositproducts/1
     *
     *
     * recurringdepositproducts/1?template=true
     *
     *
     * recurringdepositproducts/1?fields=name,description
     * @param data The data for the request.
     * @param data.productId productId
     * @returns GetRecurringDepositProductsProductIdResponse OK
     * @throws ApiError
     */
    public static getV1RecurringdepositproductsByProductId(data: GetV1RecurringdepositproductsByProductIdData): CancelablePromise<GetV1RecurringdepositproductsByProductIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/recurringdepositproducts/{productId}',
            path: {
                productId: data.productId
            }
        });
    }
    
    /**
     * Update a Recurring Deposit Product
     * Updates a Recurring Deposit Product
     * @param data The data for the request.
     * @param data.productId productId
     * @param data.requestBody
     * @returns PutRecurringDepositProductsResponse OK
     * @throws ApiError
     */
    public static putV1RecurringdepositproductsByProductId(data: PutV1RecurringdepositproductsByProductIdData): CancelablePromise<PutV1RecurringdepositproductsByProductIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/recurringdepositproducts/{productId}',
            path: {
                productId: data.productId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class ListReportMailingJobHistoryService {
    /**
     * List Report Mailing Job History
     * The list capability of report mailing job history can support pagination and sorting.
     *
     * Example Requests:
     *
     * reportmailingjobrunhistory/1
     * @param data The data for the request.
     * @param data.reportMailingJobId reportMailingJobId
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @returns ReportMailingJobRunHistoryData OK
     * @throws ApiError
     */
    public static getV1Reportmailingjobrunhistory(data: GetV1ReportmailingjobrunhistoryData = {}): CancelablePromise<GetV1ReportmailingjobrunhistoryResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/reportmailingjobrunhistory',
            query: {
                reportMailingJobId: data.reportMailingJobId,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            }
        });
    }
    
}

export class ReportMailingJobsService {
    /**
     * List Report Mailing Jobs
     * Example Requests:
     *
     * reportmailingjobs
     * @param data The data for the request.
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @returns GetReportMailingJobsResponse OK
     * @throws ApiError
     */
    public static getV1Reportmailingjobs(data: GetV1ReportmailingjobsData = {}): CancelablePromise<GetV1ReportmailingjobsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/reportmailingjobs',
            query: {
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            }
        });
    }
    
    /**
     * Create a Report Mailing Job
     * Mandatory Fields: name, startDateTime, stretchyReportId, emailRecipients, emailSubject, emailMessage, emailAttachmentFileFormatId, recurrence, isActive
     *
     * Optional Fields: description, stretchyReportParamMap
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostReportMailingJobsResponse OK
     * @throws ApiError
     */
    public static postV1Reportmailingjobs(data: PostV1ReportmailingjobsData): CancelablePromise<PostV1ReportmailingjobsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/reportmailingjobs',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Report Mailing Job Details Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for report mailing job applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed description Lists
     * Example Request:
     *
     * reportmailingjobs/template
     * @returns GetReportMailingJobsTemplate OK
     * @throws ApiError
     */
    public static getV1ReportmailingjobsTemplate(): CancelablePromise<GetV1ReportmailingjobsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/reportmailingjobs/template'
        });
    }
    
    /**
     * Delete a Report Mailing Job
     * @param data The data for the request.
     * @param data.entityId entityId
     * @returns DeleteReportMailingJobsResponse OK
     * @throws ApiError
     */
    public static deleteV1ReportmailingjobsByEntityId(data: DeleteV1ReportmailingjobsByEntityIdData): CancelablePromise<DeleteV1ReportmailingjobsByEntityIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/reportmailingjobs/{entityId}',
            path: {
                entityId: data.entityId
            }
        });
    }
    
    /**
     * Retrieve a Report Mailing Job
     * Example Requests:
     *
     * reportmailingjobs/1
     *
     *
     * reportmailingjobs/1?template=true
     * @param data The data for the request.
     * @param data.entityId entityId
     * @returns GetReportMailingJobsResponse OK
     * @throws ApiError
     */
    public static getV1ReportmailingjobsByEntityId(data: GetV1ReportmailingjobsByEntityIdData): CancelablePromise<GetV1ReportmailingjobsByEntityIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/reportmailingjobs/{entityId}',
            path: {
                entityId: data.entityId
            }
        });
    }
    
    /**
     * Update a Report Mailing Job
     *
     * @param data The data for the request.
     * @param data.entityId entityId
     * @param data.requestBody
     * @returns PutReportMailingJobsResponse OK
     * @throws ApiError
     */
    public static putV1ReportmailingjobsByEntityId(data: PutV1ReportmailingjobsByEntityIdData): CancelablePromise<PutV1ReportmailingjobsByEntityIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/reportmailingjobs/{entityId}',
            path: {
                entityId: data.entityId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class ReportsService {
    /**
     * List Reports
     * Lists all reports and their parameters.
     *
     * Example Request:
     *
     * reports
     * @returns GetReportsResponse OK
     * @throws ApiError
     */
    public static getV1Reports(): CancelablePromise<GetV1ReportsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/reports'
        });
    }
    
    /**
     * Create a Report
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostReportsResponse OK
     * @throws ApiError
     */
    public static postV1Reports(data: PostV1ReportsData): CancelablePromise<PostV1ReportsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/reports',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Report Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed description Lists
     *
     * Example Request :
     *
     * reports/template
     * @returns GetReportsTemplateResponse OK
     * @throws ApiError
     */
    public static getV1ReportsTemplate(): CancelablePromise<GetV1ReportsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/reports/template'
        });
    }
    
    /**
     * Delete a Report
     * Only non-core reports can be deleted.
     * @param data The data for the request.
     * @param data.id id
     * @returns DeleteReportsResponse OK
     * @throws ApiError
     */
    public static deleteV1ReportsById(data: DeleteV1ReportsByIdData): CancelablePromise<DeleteV1ReportsByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/reports/{id}',
            path: {
                id: data.id
            }
        });
    }
    
    /**
     * Retrieve a Report
     *
     * Example Requests:
     *
     * reports/1
     *
     *
     * reports/1?template=true
     * @param data The data for the request.
     * @param data.id id
     * @returns GetReportsResponse OK
     * @throws ApiError
     */
    public static getV1ReportsById(data: GetV1ReportsByIdData): CancelablePromise<GetV1ReportsByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/reports/{id}',
            path: {
                id: data.id
            }
        });
    }
    
    /**
     * Update a Report
     * Only the useReport description can be updated for core reports.
     * @param data The data for the request.
     * @param data.id id
     * @param data.requestBody
     * @returns PutReportResponse OK
     * @throws ApiError
     */
    public static putV1ReportsById(data: PutV1ReportsByIdData): CancelablePromise<PutV1ReportsByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/reports/{id}',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class RescheduleLoansService {
    /**
     * Retrieve all reschedule requests
     * Retrieve all reschedule requests.
     * @param data The data for the request.
     * @param data.command
     * @param data.loanId
     * @returns GetLoanRescheduleRequestResponse OK
     * @throws ApiError
     */
    public static getV1Rescheduleloans(data: GetV1RescheduleloansData = {}): CancelablePromise<GetV1RescheduleloansResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/rescheduleloans',
            query: {
                command: data.command,
                loanId: data.loanId
            }
        });
    }
    
    /**
     * Create loan reschedule request
     * Create a loan reschedule request.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostCreateRescheduleLoansResponse OK
     * @throws ApiError
     */
    public static postV1Rescheduleloans(data: PostV1RescheduleloansData): CancelablePromise<PostV1RescheduleloansResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/rescheduleloans',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve all reschedule loan reasons
     * Retrieve all reschedule loan reasons as a template
     * @returns GetRescheduleReasonsTemplateResponse OK
     * @throws ApiError
     */
    public static getV1RescheduleloansTemplate(): CancelablePromise<GetV1RescheduleloansTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/rescheduleloans/template'
        });
    }
    
    /**
     * Retrieve loan reschedule request by schedule id
     * Retrieve loan reschedule request by schedule id
     * @param data The data for the request.
     * @param data.scheduleId
     * @param data.command
     * @returns GetLoanRescheduleRequestResponse OK
     * @throws ApiError
     */
    public static getV1RescheduleloansByScheduleId(data: GetV1RescheduleloansByScheduleIdData): CancelablePromise<GetV1RescheduleloansByScheduleIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/rescheduleloans/{scheduleId}',
            path: {
                scheduleId: data.scheduleId
            },
            query: {
                command: data.command
            }
        });
    }
    
    /**
     * Update loan reschedule request
     * Update a loan reschedule request by either approving/rejecting it.
     * @param data The data for the request.
     * @param data.scheduleId
     * @param data.requestBody
     * @param data.command
     * @returns PostUpdateRescheduleLoansResponse OK
     * @throws ApiError
     */
    public static postV1RescheduleloansByScheduleId(data: PostV1RescheduleloansByScheduleIdData): CancelablePromise<PostV1RescheduleloansByScheduleIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/rescheduleloans/{scheduleId}',
            path: {
                scheduleId: data.scheduleId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class RolesService {
    /**
     * List Roles
     * Example Requests:
     *
     * roles
     *
     *
     * roles?fields=name
     * @returns GetRolesResponse OK
     * @throws ApiError
     */
    public static getV1Roles(): CancelablePromise<GetV1RolesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/roles'
        });
    }
    
    /**
     * Create a New Role
     * Mandatory Fields
     * name, description
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostRolesResponse OK
     * @throws ApiError
     */
    public static postV1Roles(data: PostV1RolesData): CancelablePromise<PostV1RolesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/roles',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Delete a Role
     * Description : Delete the role in case role is not associated with any users.
     * @param data The data for the request.
     * @param data.roleId roleId
     * @returns DeleteRolesRoleIdResponse OK
     * @throws ApiError
     */
    public static deleteV1RolesByRoleId(data: DeleteV1RolesByRoleIdData): CancelablePromise<DeleteV1RolesByRoleIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/roles/{roleId}',
            path: {
                roleId: data.roleId
            }
        });
    }
    
    /**
     * Retrieve a Role
     * Example Requests:
     *
     * roles/1
     *
     *
     * roles/1?fields=name
     * @param data The data for the request.
     * @param data.roleId roleId
     * @returns GetRolesRoleIdResponse OK
     * @throws ApiError
     */
    public static getV1RolesByRoleId(data: GetV1RolesByRoleIdData): CancelablePromise<GetV1RolesByRoleIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/roles/{roleId}',
            path: {
                roleId: data.roleId
            }
        });
    }
    
    /**
     * Enable Role | Disable Role
     * Description : Enable role in case role is disabled. | Disable the role in case role is not associated with any users.
     *
     *
     *
     *
     *
     * Example Request:   https://DomainName/api/v1/roles/{roleId}?command=enable
     *
     *
     *
     *
     *
     * https://DomainName/api/v1/roles/{roleId}?command=disable
     * @param data The data for the request.
     * @param data.roleId roleId
     * @param data.command command
     * @returns PostRolesRoleIdResponse OK
     * @throws ApiError
     */
    public static postV1RolesByRoleId(data: PostV1RolesByRoleIdData): CancelablePromise<PostV1RolesByRoleIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/roles/{roleId}',
            path: {
                roleId: data.roleId
            },
            query: {
                command: data.command
            }
        });
    }
    
    /**
     * Update a Role
     * @param data The data for the request.
     * @param data.roleId roleId
     * @param data.requestBody
     * @returns PutRolesRoleIdResponse OK
     * @throws ApiError
     */
    public static putV1RolesByRoleId(data: PutV1RolesByRoleIdData): CancelablePromise<PutV1RolesByRoleIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/roles/{roleId}',
            path: {
                roleId: data.roleId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve a Role's Permissions
     * Example Requests:
     *
     * roles/1/permissions
     * @param data The data for the request.
     * @param data.roleId roleId
     * @returns GetRolesRoleIdPermissionsResponse OK
     * @throws ApiError
     */
    public static getV1RolesByRoleIdPermissions(data: GetV1RolesByRoleIdPermissionsData): CancelablePromise<GetV1RolesByRoleIdPermissionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/roles/{roleId}/permissions',
            path: {
                roleId: data.roleId
            }
        });
    }
    
    /**
     * Update a Role's Permissions
     * @param data The data for the request.
     * @param data.roleId roleId
     * @param data.requestBody
     * @returns PutRolesRoleIdPermissionsResponse OK
     * @throws ApiError
     */
    public static putV1RolesByRoleIdPermissions(data: PutV1RolesByRoleIdPermissionsData): CancelablePromise<PutV1RolesByRoleIdPermissionsResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/roles/{roleId}/permissions',
            path: {
                roleId: data.roleId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class PeriodicAccrualAccountingService {
    /**
     * Executes Periodic Accrual Accounting
     * Mandatory Fields
     *
     * tillDate
     *
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown OK
     * @throws ApiError
     */
    public static postV1Runaccruals(data: PostV1RunaccrualsData): CancelablePromise<PostV1RunaccrualsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/runaccruals',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class RunReportsService {
    /**
     * Return all available export types for the specific report
     * Returns the list of all available export types.
     * @param data The data for the request.
     * @param data.reportName reportName
     * @param data.isSelfServiceUserReport isSelfServiceUserReport
     * @returns ReportExportType OK
     * @throws ApiError
     */
    public static getV1RunreportsAvailableExportsByReportName(data: GetV1RunreportsAvailableExportsByReportNameData): CancelablePromise<GetV1RunreportsAvailableExportsByReportNameResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/runreports/availableExports/{reportName}',
            path: {
                reportName: data.reportName
            },
            query: {
                isSelfServiceUserReport: data.isSelfServiceUserReport
            }
        });
    }
    
    /**
     * Running a Report
     * This resource allows you to run and receive output from pre-defined Apache Fineract reports.
     *
     * Reports can also be used to provide data for searching and workflow functionality.
     *
     * The default output is a JSON formatted "Generic Resultset". The Generic Resultset contains Column Heading as well as Data information. However, you can export to CSV format by simply adding "&exportCSV=true" to the end of your URL.
     *
     * If Pentaho reports have been pre-defined, they can also be run through this resource. Pentaho reports can return HTML, PDF or CSV formats.
     *
     * The Apache Fineract reference application uses a JQuery plugin called stretchy reporting which, itself, uses this reports resource to provide a pretty flexible reporting User Interface (UI).
     *
     *
     *
     * Example Requests:
     *
     * runreports/Client%20Listing?R_officeId=1
     *
     *
     * runreports/Client%20Listing?R_officeId=1&exportCSV=true
     *
     *
     * runreports/OfficeIdSelectOne?R_officeId=1&parameterType=true
     *
     *
     * runreports/OfficeIdSelectOne?R_officeId=1&parameterType=true&exportCSV=true
     *
     *
     * runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=HTML&R_officeId=1
     *
     *
     * runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=XLS&R_officeId=1
     *
     *
     * runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=CSV&R_officeId=1
     *
     *
     * runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=PDF&R_officeId=1
     * @param data The data for the request.
     * @param data.reportName reportName
     * @param data.isSelfServiceUserReport isSelfServiceUserReport
     * @returns RunReportsResponse OK
     * @throws ApiError
     */
    public static getV1RunreportsByReportName(data: GetV1RunreportsByReportNameData): CancelablePromise<GetV1RunreportsByReportNameResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/runreports/{reportName}',
            path: {
                reportName: data.reportName
            },
            query: {
                isSelfServiceUserReport: data.isSelfServiceUserReport
            }
        });
    }
    
}

export class SavingsAccountService {
    /**
     * List savings applications/accounts
     * Lists savings applications/accounts
     *
     * Example Requests:
     *
     * savingsaccounts
     *
     *
     * savingsaccounts?fields=name
     * @param data The data for the request.
     * @param data.externalId externalId
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @returns GetSavingsAccountsResponse OK
     * @throws ApiError
     */
    public static getV1Savingsaccounts(data: GetV1SavingsaccountsData = {}): CancelablePromise<GetV1SavingsaccountsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/savingsaccounts',
            query: {
                externalId: data.externalId,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            }
        });
    }
    
    /**
     * Submit new savings application
     * Submits new savings application
     *
     * Mandatory Fields: clientId or groupId, productId, submittedOnDate
     *
     * Optional Fields: accountNo, externalId, fieldOfficerId
     *
     * Inherited from Product (if not provided): nominalAnnualInterestRate, interestCompoundingPeriodType, interestCalculationType, interestCalculationDaysInYearType, minRequiredOpeningBalance, lockinPeriodFrequency, lockinPeriodFrequencyType, withdrawalFeeForTransfers, allowOverdraft, overdraftLimit, withHoldTax
     *
     * Additional Mandatory Field if Entity-Datatable Check is enabled for the entity of type Savings: datatables
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostSavingsAccountsResponse OK
     * @throws ApiError
     */
    public static postV1Savingsaccounts(data: PostV1SavingsaccountsData): CancelablePromise<PostV1SavingsaccountsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/savingsaccounts',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.officeId
     * @param data.staffId
     * @param data.dateFormat
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1SavingsaccountsDownloadtemplate(data: GetV1SavingsaccountsDownloadtemplateData = {}): CancelablePromise<GetV1SavingsaccountsDownloadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/savingsaccounts/downloadtemplate',
            query: {
                officeId: data.officeId,
                staffId: data.staffId,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * Delete a savings application
     * At present we support hard delete of savings application so long as its in 'Submitted and pending approval' state. One the application is moves past this state, it is not possible to do a 'hard' delete of the application or the account. An API endpoint will be added to close/de-activate the savings account.
     * @param data The data for the request.
     * @param data.externalId externalId
     * @returns DeleteSavingsAccountsAccountIdResponse OK
     * @throws ApiError
     */
    public static deleteV1SavingsaccountsExternalIdByExternalId(data: DeleteV1SavingsaccountsExternalIdByExternalIdData): CancelablePromise<DeleteV1SavingsaccountsExternalIdByExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/savingsaccounts/external-id/{externalId}',
            path: {
                externalId: data.externalId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.externalId
     * @param data.staffInSelectedOfficeOnly
     * @param data.chargeStatus
     * @param data.associations
     * @returns SavingsAccountData default response
     * @throws ApiError
     */
    public static getV1SavingsaccountsExternalIdByExternalId(data: GetV1SavingsaccountsExternalIdByExternalIdData): CancelablePromise<GetV1SavingsaccountsExternalIdByExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/savingsaccounts/external-id/{externalId}',
            path: {
                externalId: data.externalId
            },
            query: {
                staffInSelectedOfficeOnly: data.staffInSelectedOfficeOnly,
                chargeStatus: data.chargeStatus,
                associations: data.associations
            }
        });
    }
    
    /**
     * Approve savings application | Undo approval savings application | Assign Savings Officer | Unassign Savings Officer | Reject savings application | Withdraw savings application | Activate a savings account | Close a savings account | Calculate Interest on Savings Account | Post Interest on Savings Account | Block Savings Account | Unblock Savings Account | Block Savings Account Credit transactions | Unblock Savings Account Credit transactions | Block Savings Account Debit transactions | Unblock Savings Account debit transactions
     * Approve savings application:
     *
     * Approves savings application so long as its in 'Submitted and pending approval' state.
     *
     * Undo approval savings application:
     *
     * Will move 'approved' savings application back to 'Submitted and pending approval' state.
     *
     * Assign Savings Officer:
     *
     * Allows you to assign Savings Officer for existing Savings Account.
     *
     * Unassign Savings Officer:
     *
     * Allows you to unassign the Savings Officer.
     *
     * Reject savings application:
     *
     * Rejects savings application so long as its in 'Submitted and pending approval' state.
     *
     * Withdraw savings application:
     *
     * Used when an applicant withdraws from the savings application. It must be in 'Submitted and pending approval' state.
     *
     * Activate a savings account:
     *
     * Results in an approved savings application being converted into an 'active' savings account.
     *
     * Close a savings account:
     *
     * Results in an Activated savings application being converted into an 'closed' savings account.
     *
     * closedOnDate is closure date of savings account
     *
     * withdrawBalance is a boolean description, true value of this field performs a withdrawal transaction with account's running balance.
     *
     * Mandatory Fields: dateFormat,locale,closedOnDate
     *
     * Optional Fields: note, withdrawBalance, paymentTypeId, accountNumber, checkNumber, routingCode, receiptNumber, bankNumber
     *
     * Calculate Interest on Savings Account:
     *
     * Calculates interest earned on a savings account based on todays date. It does not attempt to post or credit the interest on the account. That is responsibility of the Post Interest API that will likely be called by overnight process.
     *
     * Post Interest on Savings Account:
     *
     * Calculates and Posts interest earned on a savings account based on today's date and whether an interest posting or crediting event is due.
     *
     * Block Savings Account:
     *
     * Blocks Savings account from all types of credit and debit transactions
     *
     * Unblock Savings Account:
     *
     * Unblock a blocked account. On unblocking account, user can perform debit and credit transactions
     *
     * Block Savings Account Credit transactions:
     *
     * Savings account will be blocked from all types of credit transactions.
     *
     * Unblock Savings Account Credit transactions:
     *
     * It unblocks the Saving account's credit operations. Now all types of credits can be transacted to Savings account
     *
     * Block Savings Account Debit transactions:
     *
     * All types of debit operations from Savings account wil be blocked
     *
     * Unblock Savings Account debit transactions:
     *
     * It unblocks the Saving account's debit operations. Now all types of debits can be transacted from Savings account
     *
     * Showing request/response for 'Unassign Savings Officer'
     * @param data The data for the request.
     * @param data.externalId externalId
     * @param data.requestBody
     * @param data.command command
     * @returns PostSavingsAccountsAccountIdResponse OK
     * @throws ApiError
     */
    public static postV1SavingsaccountsExternalIdByExternalId(data: PostV1SavingsaccountsExternalIdByExternalIdData): CancelablePromise<PostV1SavingsaccountsExternalIdByExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/savingsaccounts/external-id/{externalId}',
            path: {
                externalId: data.externalId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Modify a savings application | Modify savings account withhold tax applicability
     * Modify a savings application:
     *
     * Savings application can only be modified when in 'Submitted and pending approval' state. Once the application is approved, the details cannot be changed using this method. Specific api endpoints will be created to allow change of interest detail such as rate, compounding period, posting period etc
     *
     * Modify savings account withhold tax applicability:
     *
     * Savings application's withhold tax can be modified when in 'Active' state. Once the application is activated, can modify the account withhold tax to post tax or vice-versaShowing request/response for 'Modify a savings application'
     * @param data The data for the request.
     * @param data.externalId externalId
     * @param data.requestBody
     * @param data.command command
     * @returns PutSavingsAccountsAccountIdResponse OK
     * @throws ApiError
     */
    public static putV1SavingsaccountsExternalIdByExternalId(data: PutV1SavingsaccountsExternalIdByExternalIdData): CancelablePromise<PutV1SavingsaccountsExternalIdByExternalIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/savingsaccounts/external-id/{externalId}',
            path: {
                externalId: data.externalId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1SavingsaccountsGsim(data: PostV1SavingsaccountsGsimData = {}): CancelablePromise<PostV1SavingsaccountsGsimResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/savingsaccounts/gsim',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.parentAccountId
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1SavingsaccountsGsimByParentAccountId(data: PutV1SavingsaccountsGsimByParentAccountIdData): CancelablePromise<PutV1SavingsaccountsGsimByParentAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/savingsaccounts/gsim/{parentAccountId}',
            path: {
                parentAccountId: data.parentAccountId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.parentAccountId
     * @param data.command
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1SavingsaccountsGsimcommandsByParentAccountId(data: PostV1SavingsaccountsGsimcommandsByParentAccountIdData): CancelablePromise<PostV1SavingsaccountsGsimcommandsByParentAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/savingsaccounts/gsimcommands/{parentAccountId}',
            path: {
                parentAccountId: data.parentAccountId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Savings Account Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed Value Lists
     *
     * Example Requests:
     *
     * savingsaccounts/template?clientId=1
     *
     *
     * savingsaccounts/template?clientId=1&productId=1
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.groupId groupId
     * @param data.productId productId
     * @param data.staffInSelectedOfficeOnly staffInSelectedOfficeOnly
     * @returns GetSavingsAccountsTemplateResponse OK
     * @throws ApiError
     */
    public static getV1SavingsaccountsTemplate(data: GetV1SavingsaccountsTemplateData = {}): CancelablePromise<GetV1SavingsaccountsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/savingsaccounts/template',
            query: {
                clientId: data.clientId,
                groupId: data.groupId,
                productId: data.productId,
                staffInSelectedOfficeOnly: data.staffInSelectedOfficeOnly
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.officeId
     * @param data.dateFormat
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1SavingsaccountsTransactionsDownloadtemplate(data: GetV1SavingsaccountsTransactionsDownloadtemplateData = {}): CancelablePromise<GetV1SavingsaccountsTransactionsDownloadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/savingsaccounts/transactions/downloadtemplate',
            query: {
                officeId: data.officeId,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.formData Upload savings transaction template
     * @returns string default response
     * @throws ApiError
     */
    public static postV1SavingsaccountsTransactionsUploadtemplate(data: PostV1SavingsaccountsTransactionsUploadtemplateData = {}): CancelablePromise<PostV1SavingsaccountsTransactionsUploadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/savingsaccounts/transactions/uploadtemplate',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.formData Upload savings template
     * @returns string default response
     * @throws ApiError
     */
    public static postV1SavingsaccountsUploadtemplate(data: PostV1SavingsaccountsUploadtemplateData = {}): CancelablePromise<PostV1SavingsaccountsUploadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/savingsaccounts/uploadtemplate',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Delete a savings application
     * At present we support hard delete of savings application so long as its in 'Submitted and pending approval' state. One the application is moves past this state, it is not possible to do a 'hard' delete of the application or the account. An API endpoint will be added to close/de-activate the savings account.
     * @param data The data for the request.
     * @param data.accountId accountId
     * @returns DeleteSavingsAccountsAccountIdResponse OK
     * @throws ApiError
     */
    public static deleteV1SavingsaccountsByAccountId(data: DeleteV1SavingsaccountsByAccountIdData): CancelablePromise<DeleteV1SavingsaccountsByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/savingsaccounts/{accountId}',
            path: {
                accountId: data.accountId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.accountId
     * @param data.staffInSelectedOfficeOnly
     * @param data.chargeStatus
     * @param data.associations
     * @returns SavingsAccountData default response
     * @throws ApiError
     */
    public static getV1SavingsaccountsByAccountId(data: GetV1SavingsaccountsByAccountIdData): CancelablePromise<GetV1SavingsaccountsByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/savingsaccounts/{accountId}',
            path: {
                accountId: data.accountId
            },
            query: {
                staffInSelectedOfficeOnly: data.staffInSelectedOfficeOnly,
                chargeStatus: data.chargeStatus,
                associations: data.associations
            }
        });
    }
    
    /**
     * Approve savings application | Undo approval savings application | Assign Savings Officer | Unassign Savings Officer | Reject savings application | Withdraw savings application | Activate a savings account | Close a savings account | Calculate Interest on Savings Account | Post Interest on Savings Account | Block Savings Account | Unblock Savings Account | Block Savings Account Credit transactions | Unblock Savings Account Credit transactions | Block Savings Account Debit transactions | Unblock Savings Account debit transactions
     * Approve savings application:
     *
     * Approves savings application so long as its in 'Submitted and pending approval' state.
     *
     * Undo approval savings application:
     *
     * Will move 'approved' savings application back to 'Submitted and pending approval' state.
     *
     * Assign Savings Officer:
     *
     * Allows you to assign Savings Officer for existing Savings Account.
     *
     * Unassign Savings Officer:
     *
     * Allows you to unassign the Savings Officer.
     *
     * Reject savings application:
     *
     * Rejects savings application so long as its in 'Submitted and pending approval' state.
     *
     * Withdraw savings application:
     *
     * Used when an applicant withdraws from the savings application. It must be in 'Submitted and pending approval' state.
     *
     * Activate a savings account:
     *
     * Results in an approved savings application being converted into an 'active' savings account.
     *
     * Close a savings account:
     *
     * Results in an Activated savings application being converted into an 'closed' savings account.
     *
     * closedOnDate is closure date of savings account
     *
     * withdrawBalance is a boolean description, true value of this field performs a withdrawal transaction with account's running balance.
     *
     * Mandatory Fields: dateFormat,locale,closedOnDate
     *
     * Optional Fields: note, withdrawBalance, paymentTypeId, accountNumber, checkNumber, routingCode, receiptNumber, bankNumber
     *
     * Calculate Interest on Savings Account:
     *
     * Calculates interest earned on a savings account based on todays date. It does not attempt to post or credit the interest on the account. That is responsibility of the Post Interest API that will likely be called by overnight process.
     *
     * Post Interest on Savings Account:
     *
     * Calculates and Posts interest earned on a savings account based on today's date and whether an interest posting or crediting event is due.
     *
     * Block Savings Account:
     *
     * Blocks Savings account from all types of credit and debit transactions
     *
     * Unblock Savings Account:
     *
     * Unblock a blocked account. On unblocking account, user can perform debit and credit transactions
     *
     * Block Savings Account Credit transactions:
     *
     * Savings account will be blocked from all types of credit transactions.
     *
     * Unblock Savings Account Credit transactions:
     *
     * It unblocks the Saving account's credit operations. Now all types of credits can be transacted to Savings account
     *
     * Block Savings Account Debit transactions:
     *
     * All types of debit operations from Savings account wil be blocked
     *
     * Unblock Savings Account debit transactions:
     *
     * It unblocks the Saving account's debit operations. Now all types of debits can be transacted from Savings account
     *
     * Showing request/response for 'Unassign Savings Officer'
     * @param data The data for the request.
     * @param data.accountId accountId
     * @param data.requestBody
     * @param data.command command
     * @returns PostSavingsAccountsAccountIdResponse OK
     * @throws ApiError
     */
    public static postV1SavingsaccountsByAccountId(data: PostV1SavingsaccountsByAccountIdData): CancelablePromise<PostV1SavingsaccountsByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/savingsaccounts/{accountId}',
            path: {
                accountId: data.accountId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Modify a savings application | Modify savings account withhold tax applicability
     * Modify a savings application:
     *
     * Savings application can only be modified when in 'Submitted and pending approval' state. Once the application is approved, the details cannot be changed using this method. Specific api endpoints will be created to allow change of interest detail such as rate, compounding period, posting period etc
     *
     * Modify savings account withhold tax applicability:
     *
     * Savings application's withhold tax can be modified when in 'Active' state. Once the application is activated, can modify the account withhold tax to post tax or vice-versaShowing request/response for 'Modify a savings application'
     * @param data The data for the request.
     * @param data.accountId accountId
     * @param data.requestBody
     * @param data.command command
     * @returns PutSavingsAccountsAccountIdResponse OK
     * @throws ApiError
     */
    public static putV1SavingsaccountsByAccountId(data: PutV1SavingsaccountsByAccountIdData): CancelablePromise<PutV1SavingsaccountsByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/savingsaccounts/{accountId}',
            path: {
                accountId: data.accountId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class SavingsChargesService {
    /**
     * List Savings Charges
     * Lists Savings Charges
     *
     * Example Requests:
     *
     * savingsaccounts/1/charges
     *
     * savingsaccounts/1/charges?chargeStatus=all
     *
     * savingsaccounts/1/charges?chargeStatus=inactive
     *
     * savingsaccounts/1/charges?chargeStatus=active
     *
     * savingsaccounts/1/charges?fields=name,amountOrPercentage
     * @param data The data for the request.
     * @param data.savingsAccountId savingsAccountId
     * @param data.chargeStatus chargeStatus
     * @returns GetSavingsAccountsSavingsAccountIdChargesResponse OK
     * @throws ApiError
     */
    public static getV1SavingsaccountsBySavingsAccountIdCharges(data: GetV1SavingsaccountsBySavingsAccountIdChargesData): CancelablePromise<GetV1SavingsaccountsBySavingsAccountIdChargesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/savingsaccounts/{savingsAccountId}/charges',
            path: {
                savingsAccountId: data.savingsAccountId
            },
            query: {
                chargeStatus: data.chargeStatus
            }
        });
    }
    
    /**
     * Create a Savings account Charge
     * Creates a Savings account Charge
     *
     * Mandatory Fields for Savings account Charges: chargeId, amount
     *
     * chargeId, amount, dueDate, dateFormat, locale
     *
     * chargeId, amount, feeOnMonthDay, monthDayFormat, locale
     * @param data The data for the request.
     * @param data.savingsAccountId savingsAccountId
     * @param data.requestBody
     * @returns PostSavingsAccountsSavingsAccountIdChargesResponse OK
     * @throws ApiError
     */
    public static postV1SavingsaccountsBySavingsAccountIdCharges(data: PostV1SavingsaccountsBySavingsAccountIdChargesData): CancelablePromise<PostV1SavingsaccountsBySavingsAccountIdChargesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/savingsaccounts/{savingsAccountId}/charges',
            path: {
                savingsAccountId: data.savingsAccountId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Savings Charges Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed description Lists
     * Example Request:
     *
     * savingsaccounts/1/charges/template
     * @param data The data for the request.
     * @param data.savingsAccountId savingsAccountId
     * @returns GetSavingsAccountsSavingsAccountIdChargesTemplateResponse OK
     * @throws ApiError
     */
    public static getV1SavingsaccountsBySavingsAccountIdChargesTemplate(data: GetV1SavingsaccountsBySavingsAccountIdChargesTemplateData): CancelablePromise<GetV1SavingsaccountsBySavingsAccountIdChargesTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/savingsaccounts/{savingsAccountId}/charges/template',
            path: {
                savingsAccountId: data.savingsAccountId
            }
        });
    }
    
    /**
     * Delete a Savings account Charge
     * Note: Currently, A Savings account Charge may only be removed from Savings that are not yet approved.
     * @param data The data for the request.
     * @param data.savingsAccountId savingsAccountId
     * @param data.savingsAccountChargeId savingsAccountChargeId
     * @returns DeleteSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse OK
     * @throws ApiError
     */
    public static deleteV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeId(data: DeleteV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdData): CancelablePromise<DeleteV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/savingsaccounts/{savingsAccountId}/charges/{savingsAccountChargeId}',
            path: {
                savingsAccountId: data.savingsAccountId,
                savingsAccountChargeId: data.savingsAccountChargeId
            }
        });
    }
    
    /**
     * Retrieve a Savings account Charge
     * Retrieves a Savings account Charge
     *
     * Example Requests:
     *
     * /savingsaccounts/1/charges/5
     *
     *
     * /savingsaccounts/1/charges/5?fields=name,amountOrPercentage
     * @param data The data for the request.
     * @param data.savingsAccountId savingsAccountId
     * @param data.savingsAccountChargeId savingsAccountChargeId
     * @returns GetSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse OK
     * @throws ApiError
     */
    public static getV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeId(data: GetV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdData): CancelablePromise<GetV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/savingsaccounts/{savingsAccountId}/charges/{savingsAccountChargeId}',
            path: {
                savingsAccountId: data.savingsAccountId,
                savingsAccountChargeId: data.savingsAccountChargeId
            }
        });
    }
    
    /**
     * Pay a Savings account Charge | Waive off a Savings account Charge | Inactivate a Savings account Charge
     * Pay a Savings account Charge:
     *
     * An active charge will be paid when savings account is active and having sufficient balance.
     *
     * Waive off a Savings account Charge:
     *
     * Outstanding charge amount will be waived off.
     *
     * Inactivate a Savings account Charge:
     *
     * A charge will be allowed to inactivate when savings account is active and not having any dues as of today. If charge is overpaid, corresponding charge payment transactions will be reversed.
     *
     * Showing request/response for 'Pay a Savings account Charge'
     * @param data The data for the request.
     * @param data.savingsAccountId savingsAccountId
     * @param data.savingsAccountChargeId savingsAccountChargeId
     * @param data.requestBody
     * @param data.command command
     * @returns PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse OK
     * @throws ApiError
     */
    public static postV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeId(data: PostV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdData): CancelablePromise<PostV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/savingsaccounts/{savingsAccountId}/charges/{savingsAccountChargeId}',
            path: {
                savingsAccountId: data.savingsAccountId,
                savingsAccountChargeId: data.savingsAccountChargeId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Update a Savings account Charge
     * Currently Savings account Charges may be updated only if the Savings account is not yet approved.
     * @param data The data for the request.
     * @param data.savingsAccountId savingsAccountId
     * @param data.savingsAccountChargeId savingsAccountChargeId
     * @param data.requestBody
     * @returns PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse OK
     * @throws ApiError
     */
    public static putV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeId(data: PutV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdData): CancelablePromise<PutV1SavingsaccountsBySavingsAccountIdChargesBySavingsAccountChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/savingsaccounts/{savingsAccountId}/charges/{savingsAccountChargeId}',
            path: {
                savingsAccountId: data.savingsAccountId,
                savingsAccountChargeId: data.savingsAccountChargeId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class DepositAccountOnHoldFundTransactionsService {
    /**
     * @param data The data for the request.
     * @param data.savingsId
     * @param data.guarantorFundingId
     * @param data.offset
     * @param data.limit
     * @param data.orderBy
     * @param data.sortOrder
     * @returns string default response
     * @throws ApiError
     */
    public static getV1SavingsaccountsBySavingsIdOnholdtransactions(data: GetV1SavingsaccountsBySavingsIdOnholdtransactionsData): CancelablePromise<GetV1SavingsaccountsBySavingsIdOnholdtransactionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/savingsaccounts/{savingsId}/onholdtransactions',
            path: {
                savingsId: data.savingsId
            },
            query: {
                guarantorFundingId: data.guarantorFundingId,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            }
        });
    }
    
}

export class SavingsAccountTransactionsService {
    /**
     * @param data The data for the request.
     * @param data.savingsId
     * @param data.requestBody
     * @param data.command
     * @returns PostSavingsAccountTransactionsResponse OK
     * @throws ApiError
     */
    public static postV1SavingsaccountsBySavingsIdTransactions(data: PostV1SavingsaccountsBySavingsIdTransactionsData): CancelablePromise<PostV1SavingsaccountsBySavingsIdTransactionsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/savingsaccounts/{savingsId}/transactions',
            path: {
                savingsId: data.savingsId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Advanced search Savings Account Transactions
     * @param data The data for the request.
     * @param data.savingsId savingsId
     * @param data.requestBody
     * @returns string OK
     * @throws ApiError
     */
    public static postV1SavingsaccountsBySavingsIdTransactionsQuery(data: PostV1SavingsaccountsBySavingsIdTransactionsQueryData): CancelablePromise<PostV1SavingsaccountsBySavingsIdTransactionsQueryResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/savingsaccounts/{savingsId}/transactions/query',
            path: {
                savingsId: data.savingsId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Search Savings Account Transactions
     * @param data The data for the request.
     * @param data.savingsId savings account id
     * @param data.fromDate minimum value date (inclusive)
     * @param data.toDate maximum value date (inclusive)
     * @param data.fromSubmittedDate minimum booking date (inclusive)
     * @param data.toSubmittedDate maximum booking date (inclusive)
     * @param data.fromAmount minimum transaction amount (inclusive)
     * @param data.toAmount maximum transaction amount (inclusive)
     * @param data.types transaction types
     * @param data.credit credit
     * @param data.debit debit
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy sort properties
     * @param data.sortOrder sort direction
     * @param data.locale locale
     * @param data.dateFormat date format
     * @returns SavingsAccountTransactionsSearchResponse OK
     * @throws ApiError
     */
    public static getV1SavingsaccountsBySavingsIdTransactionsSearch(data: GetV1SavingsaccountsBySavingsIdTransactionsSearchData): CancelablePromise<GetV1SavingsaccountsBySavingsIdTransactionsSearchResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/savingsaccounts/{savingsId}/transactions/search',
            path: {
                savingsId: data.savingsId
            },
            query: {
                fromDate: data.fromDate,
                toDate: data.toDate,
                fromSubmittedDate: data.fromSubmittedDate,
                toSubmittedDate: data.toSubmittedDate,
                fromAmount: data.fromAmount,
                toAmount: data.toAmount,
                types: data.types,
                credit: data.credit,
                debit: data.debit,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder,
                locale: data.locale,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.savingsId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1SavingsaccountsBySavingsIdTransactionsTemplate(data: GetV1SavingsaccountsBySavingsIdTransactionsTemplateData): CancelablePromise<GetV1SavingsaccountsBySavingsIdTransactionsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/savingsaccounts/{savingsId}/transactions/template',
            path: {
                savingsId: data.savingsId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.savingsId
     * @param data.transactionId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1SavingsaccountsBySavingsIdTransactionsByTransactionId(data: GetV1SavingsaccountsBySavingsIdTransactionsByTransactionIdData): CancelablePromise<GetV1SavingsaccountsBySavingsIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/savingsaccounts/{savingsId}/transactions/{transactionId}',
            path: {
                savingsId: data.savingsId,
                transactionId: data.transactionId
            }
        });
    }
    
    /**
     * Undo/Reverse/Modify/Release Amount transaction API
     * Undo/Reverse/Modify/Release Amount transaction API
     *
     * Example Requests:
     *
     *
     * savingsaccounts/{savingsId}/transactions/{transactionId}?command=reverse
     *
     * Accepted command = undo, reverse, modify, releaseAmount
     * @param data The data for the request.
     * @param data.savingsId
     * @param data.transactionId
     * @param data.requestBody
     * @param data.command
     * @returns PostSavingsAccountBulkReversalTransactionsRequest OK
     * @throws ApiError
     */
    public static postV1SavingsaccountsBySavingsIdTransactionsByTransactionId(data: PostV1SavingsaccountsBySavingsIdTransactionsByTransactionIdData): CancelablePromise<PostV1SavingsaccountsBySavingsIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/savingsaccounts/{savingsId}/transactions/{transactionId}',
            path: {
                savingsId: data.savingsId,
                transactionId: data.transactionId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class SavingsProductService {
    /**
     * List Savings Products
     * Lists Savings Products
     *
     * Example Requests:
     *
     * savingsproducts
     *
     * savingsproducts?fields=name
     * @returns GetSavingsProductsResponse OK
     * @throws ApiError
     */
    public static getV1Savingsproducts(): CancelablePromise<GetV1SavingsproductsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/savingsproducts'
        });
    }
    
    /**
     * Create a Savings Product
     * Creates a Savings Product
     *
     * Mandatory Fields: name, shortName, description, currencyCode, digitsAfterDecimal,inMultiplesOf, nominalAnnualInterestRate, interestCompoundingPeriodType, interestCalculationType, interestCalculationDaysInYearType,accountingRule
     *
     * Mandatory Fields for Cash based accounting (accountingRule = 2): savingsReferenceAccountId, savingsControlAccountId, interestOnSavingsAccountId, incomeFromFeeAccountId, transfersInSuspenseAccountId, incomeFromPenaltyAccountId
     *
     * Optional Fields: minRequiredOpeningBalance, lockinPeriodFrequency, lockinPeriodFrequencyType, withdrawalFeeForTransfers, paymentChannelToFundSourceMappings, feeToIncomeAccountMappings, penaltyToIncomeAccountMappings, charges, allowOverdraft, overdraftLimit, minBalanceForInterestCalculation,withHoldTax,taxGroupId,accountMapping, lienAllowed, maxAllowedLienLimit
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostSavingsProductsResponse OK
     * @throws ApiError
     */
    public static postV1Savingsproducts(data: PostV1SavingsproductsData): CancelablePromise<PostV1SavingsproductsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/savingsproducts',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Savings Product Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed description Lists
     * Example Request:
     * Account Mapping:
     *
     * savingsproducts/template
     * @returns GetSavingsProductsTemplateResponse OK
     * @throws ApiError
     */
    public static getV1SavingsproductsTemplate(): CancelablePromise<GetV1SavingsproductsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/savingsproducts/template'
        });
    }
    
    /**
     * Delete a Savings Product
     * Deletes a Savings Product
     * @param data The data for the request.
     * @param data.productId productId
     * @returns DeleteSavingsProductsProductIdResponse OK
     * @throws ApiError
     */
    public static deleteV1SavingsproductsByProductId(data: DeleteV1SavingsproductsByProductIdData): CancelablePromise<DeleteV1SavingsproductsByProductIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/savingsproducts/{productId}',
            path: {
                productId: data.productId
            }
        });
    }
    
    /**
     * Retrieve a Savings Product
     * Retrieves a Savings Product
     *
     * Example Requests:
     *
     * savingsproducts/1
     *
     * savingsproducts/1?template=true
     *
     * savingsproducts/1?fields=name,description
     * @param data The data for the request.
     * @param data.productId productId
     * @returns GetSavingsProductsProductIdResponse OK
     * @throws ApiError
     */
    public static getV1SavingsproductsByProductId(data: GetV1SavingsproductsByProductIdData): CancelablePromise<GetV1SavingsproductsByProductIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/savingsproducts/{productId}',
            path: {
                productId: data.productId
            }
        });
    }
    
    /**
     * Update a Savings Product
     * Updates a Savings Product
     * @param data The data for the request.
     * @param data.productId productId
     * @param data.requestBody
     * @returns PutSavingsProductsProductIdResponse OK
     * @throws ApiError
     */
    public static putV1SavingsproductsByProductId(data: PutV1SavingsproductsByProductIdData): CancelablePromise<PutV1SavingsproductsByProductIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/savingsproducts/{productId}',
            path: {
                productId: data.productId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class SchedulerService {
    /**
     * Retrieve Scheduler Status
     * Returns the scheduler status.
     *
     * Example Requests:
     *
     * scheduler
     * @returns GetSchedulerResponse OK
     * @throws ApiError
     */
    public static getV1Scheduler(): CancelablePromise<GetV1SchedulerResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/scheduler'
        });
    }
    
    /**
     * Activate Scheduler Jobs | Suspend Scheduler Jobs
     * Activates the scheduler job service. | Suspends the scheduler job service.
     * @param data The data for the request.
     * @param data.command command
     * @returns unknown POST :  scheduler?command=start
     *
     *
     * POST : scheduler?command=stop
     * @throws ApiError
     */
    public static postV1Scheduler(data: PostV1SchedulerData = {}): CancelablePromise<PostV1SchedulerResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/scheduler',
            query: {
                command: data.command
            }
        });
    }
    
}

export class SearchApiService {
    /**
     * Search Resources
     * Example Requests:
     *
     * search?query=000000001
     *
     *
     * search?query=Petra&resource=clients,groups
     *
     *
     * search?query=Petra&resource=clients,groups&exactMatch=true
     * @param data The data for the request.
     * @param data.query query
     * @param data.resource resource
     * @param data.exactMatch exactMatch
     * @returns GetSearchResponse OK
     * @throws ApiError
     */
    public static getV1Search(data: GetV1SearchData = {}): CancelablePromise<GetV1SearchResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/search',
            query: {
                query: data.query,
                resource: data.resource,
                exactMatch: data.exactMatch
            }
        });
    }
    
    /**
     * Adhoc query search
     * AdHocQuery search has more search options, it is a POST request, it uses request body to send search parameters
     *
     *
     * Mandatory fields:entities
     *
     * Optional fields:loanStatus, loanProducts, offices, loanDateOption, loanFromDate, loanToDate,
     * includeOutStandingAmountPercentage, outStandingAmountPercentageCondition,
     * minOutStandingAmountPercentage and maxOutStandingAmountPercentage OR outStandingAmountPercentage,
     * includeOutstandingAmount, outstandingAmountCondition,
     * minOutstandingAmount and maxOutstandingAmount OR outstandingAmount
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AdHocSearchQueryData default response
     * @throws ApiError
     */
    public static postV1SearchAdvance(data: PostV1SearchAdvanceData): CancelablePromise<PostV1SearchAdvanceResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/search/advance',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrive Adhoc Search query template
     * Mandatory Fields
     *
     * search?query=000000001
     *
     * @returns AdHocSearchQueryData default response
     * @throws ApiError
     */
    public static getV1SearchTemplate(): CancelablePromise<GetV1SearchTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/search/template'
        });
    }
    
}

export class SelfAccountTransferService {
    /**
     * Create new Transfer
     * Ability to create new transfer of monetary funds from one account to another.
     *
     *
     * Example Requests:
     *
     * self/accounttransfers/
     *
     * @param data The data for the request.
     * @param data.type
     * @param data.requestBody
     * @returns PostNewTransferResponse OK
     * @throws ApiError
     */
    public static postV1SelfAccounttransfers(data: PostV1SelfAccounttransfersData = {}): CancelablePromise<PostV1SelfAccounttransfersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/self/accounttransfers',
            query: {
                type: data.type
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Account Transfer Template
     * Returns list of loan/savings accounts that can be used for account transfer
     *
     *
     * Example Requests:
     *
     * self/accounttransfers/template
     *
     * @param data The data for the request.
     * @param data.type
     * @returns GetAccountTransferTemplateResponse OK
     * @throws ApiError
     */
    public static getV1SelfAccounttransfersTemplate(data: GetV1SelfAccounttransfersTemplateData = {}): CancelablePromise<GetV1SelfAccounttransfersTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/accounttransfers/template',
            query: {
                type: data.type
            }
        });
    }
    
}

export class SelfAuthenticationService {
    /**
     * Verify authentication
     * Authenticates the credentials provided and returns the set roles and permissions allowed.
     *
     * Please visit this link for more info - https://fineract.apache.org/docs/legacy/#selfbasicauth
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostSelfAuthenticationResponse OK
     * @throws ApiError
     */
    public static postV1SelfAuthentication(data: PostV1SelfAuthenticationData): CancelablePromise<PostV1SelfAuthenticationResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/self/authentication',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class SelfThirdPartyTransferService {
    /**
     * Get All TPT Beneficiary
     * Api to get all third party beneficiary linked to current user.
     *
     * Example Requests:
     *
     * /self/beneficiaries/tpt
     * @returns GetSelfBeneficiariesTPTResponse OK
     * @throws ApiError
     */
    public static getV1SelfBeneficiariesTpt(): CancelablePromise<GetV1SelfBeneficiariesTptResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/beneficiaries/tpt'
        });
    }
    
    /**
     * Add TPT Beneficiary
     * Api to add third party beneficiary linked to current user.
     *
     * Parameter Definitions
     *
     * name : Nick name for beneficiary, should be unique for an self service user
     *
     * officeName : Office Name of beneficiary(not id)
     *
     * accountNumber : Account Number of beneficiary(not id)
     *
     * transferLimit : Each transfer initiated to this account will not exceed this amount
     *
     * Example Requests:
     *
     * /self/beneficiaries/tpt
     *
     * Mandatory Fields: name, officeName, accountNumber, accountType
     *
     * Optional Fields: transferLimit
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostSelfBeneficiariesTPTResponse OK
     * @throws ApiError
     */
    public static postV1SelfBeneficiariesTpt(data: PostV1SelfBeneficiariesTptData): CancelablePromise<PostV1SelfBeneficiariesTptResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/self/beneficiaries/tpt',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Beneficiary Third Party Transfer Template
     * Returns Account Type enumerations. Self User is expected to know office name and account number to be able to add beneficiary.
     *
     * Example Requests:
     *
     * /self/beneficiaries/tpt/template
     * @returns GetSelfBeneficiariesTPTTemplateResponse OK
     * @throws ApiError
     */
    public static getV1SelfBeneficiariesTptTemplate(): CancelablePromise<GetV1SelfBeneficiariesTptTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/beneficiaries/tpt/template'
        });
    }
    
    /**
     * Delete TPT Beneficiary
     * Api to delete third party beneficiary linked to current user.
     *
     * Example Requests:
     *
     * /self/beneficiaries/tpt/{beneficiaryId}
     * @param data The data for the request.
     * @param data.beneficiaryId
     * @returns DeleteSelfBeneficiariesTPTBeneficiaryIdResponse OK
     * @throws ApiError
     */
    public static deleteV1SelfBeneficiariesTptByBeneficiaryId(data: DeleteV1SelfBeneficiariesTptByBeneficiaryIdData): CancelablePromise<DeleteV1SelfBeneficiariesTptByBeneficiaryIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/self/beneficiaries/tpt/{beneficiaryId}',
            path: {
                beneficiaryId: data.beneficiaryId
            }
        });
    }
    
    /**
     * Update TPT Beneficiary
     * Api to update third party beneficiary linked to current user.
     *
     * Example Requests:
     *
     * /self/beneficiaries/tpt/{beneficiaryId}
     *
     * Optional Fields: name, transferLimit
     * @param data The data for the request.
     * @param data.beneficiaryId beneficiaryId
     * @param data.requestBody
     * @returns PutSelfBeneficiariesTPTBeneficiaryIdResponse OK
     * @throws ApiError
     */
    public static putV1SelfBeneficiariesTptByBeneficiaryId(data: PutV1SelfBeneficiariesTptByBeneficiaryIdData): CancelablePromise<PutV1SelfBeneficiariesTptByBeneficiaryIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/self/beneficiaries/tpt/{beneficiaryId}',
            path: {
                beneficiaryId: data.beneficiaryId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class SelfClientService {
    /**
     * List Clients associated to the user
     * The list capability of clients can support pagination and sorting.
     *
     * Example Requests:
     *
     * self/clients
     *
     * self/clients?fields=displayName,officeName
     *
     * self/clients?offset=10&limit=50
     *
     * self/clients?orderBy=displayName&sortOrder=DESC
     * @param data The data for the request.
     * @param data.displayName displayName
     * @param data.firstName firstName
     * @param data.lastName lastName
     * @param data.offset offset
     * @param data.status status
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @param data.legalForm
     * @returns GetSelfClientsResponse OK
     * @throws ApiError
     */
    public static getV1SelfClients(data: GetV1SelfClientsData = {}): CancelablePromise<GetV1SelfClientsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/clients',
            query: {
                displayName: data.displayName,
                firstName: data.firstName,
                lastName: data.lastName,
                offset: data.offset,
                status: data.status,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder,
                legalForm: data.legalForm
            }
        });
    }
    
    /**
     * Retrieve a Client
     * Retrieves a Client
     *
     * Example Requests:
     *
     * self/clients/1
     *
     * self/clients/1?fields=id,displayName,officeName
     * @param data The data for the request.
     * @param data.clientId clientId
     * @returns GetSelfClientsClientIdResponse OK
     * @throws ApiError
     */
    public static getV1SelfClientsByClientId(data: GetV1SelfClientsByClientIdData): CancelablePromise<GetV1SelfClientsByClientIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/clients/{clientId}',
            path: {
                clientId: data.clientId
            }
        });
    }
    
    /**
     * Retrieve client accounts overview
     * An example of how a loan portfolio summary can be provided. This is requested in a specific use case of the community application.
     * It is quite reasonable to add resources like this to simplify User Interface development.
     *
     * Example Requests:
     *
     * self/clients/1/accounts
     *
     *
     * self/clients/1/accounts?fields=loanAccounts,savingsAccounts
     * @param data The data for the request.
     * @param data.clientId clientId
     * @returns GetSelfClientsClientIdAccountsResponse OK
     * @throws ApiError
     */
    public static getV1SelfClientsByClientIdAccounts(data: GetV1SelfClientsByClientIdAccountsData): CancelablePromise<GetV1SelfClientsByClientIdAccountsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/clients/{clientId}/accounts',
            path: {
                clientId: data.clientId
            }
        });
    }
    
    /**
     * List Client Charges
     * The list capability of client charges supports pagination.
     *
     * Example Requests:
     *
     * self/clients/1/charges
     *
     * self/clients/1/charges?offset=0&limit=5
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.chargeStatus chargeStatus
     * @param data.pendingPayment pendingPayment
     * @param data.limit limit
     * @param data.offset offset
     * @returns GetSelfClientsClientIdChargesResponse OK
     * @throws ApiError
     */
    public static getV1SelfClientsByClientIdCharges(data: GetV1SelfClientsByClientIdChargesData): CancelablePromise<GetV1SelfClientsByClientIdChargesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/clients/{clientId}/charges',
            path: {
                clientId: data.clientId
            },
            query: {
                chargeStatus: data.chargeStatus,
                pendingPayment: data.pendingPayment,
                limit: data.limit,
                offset: data.offset
            }
        });
    }
    
    /**
     * Retrieve a Client Charge
     * Retrieves a Client Charge
     *
     * Example Requests:
     *
     * self/clients/1/charges/1
     *
     *
     * self/clients/1/charges/1?fields=name,id
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.chargeId chargeId
     * @returns GetSelfClientsClientIdChargesChargeIdResponse OK
     * @throws ApiError
     */
    public static getV1SelfClientsByClientIdChargesByChargeId(data: GetV1SelfClientsByClientIdChargesByChargeIdData): CancelablePromise<GetV1SelfClientsByClientIdChargesByChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/clients/{clientId}/charges/{chargeId}',
            path: {
                clientId: data.clientId,
                chargeId: data.chargeId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.clientId
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static deleteV1SelfClientsByClientIdImages(data: DeleteV1SelfClientsByClientIdImagesData): CancelablePromise<DeleteV1SelfClientsByClientIdImagesResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/self/clients/{clientId}/images',
            path: {
                clientId: data.clientId
            }
        });
    }
    
    /**
     * Retrieve Client Image
     * Optional arguments are identical to those of Get Image associated with an Entity (Binary file)
     *
     * Example Requests:
     *
     * self/clients/1/images
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.maxWidth
     * @param data.maxHeight
     * @param data.output
     * @returns unknown OK
     * @throws ApiError
     */
    public static getV1SelfClientsByClientIdImages(data: GetV1SelfClientsByClientIdImagesData): CancelablePromise<GetV1SelfClientsByClientIdImagesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/clients/{clientId}/images',
            path: {
                clientId: data.clientId
            },
            query: {
                maxWidth: data.maxWidth,
                maxHeight: data.maxHeight,
                output: data.output
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.clientId
     * @param data.contentLength
     * @param data.formData Add new client image
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static postV1SelfClientsByClientIdImages(data: PostV1SelfClientsByClientIdImagesData): CancelablePromise<PostV1SelfClientsByClientIdImagesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/self/clients/{clientId}/images',
            path: {
                clientId: data.clientId
            },
            headers: {
                'Content-Length': data.contentLength
            },
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.clientId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1SelfClientsByClientIdObligeedetails(data: GetV1SelfClientsByClientIdObligeedetailsData): CancelablePromise<GetV1SelfClientsByClientIdObligeedetailsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/clients/{clientId}/obligeedetails',
            path: {
                clientId: data.clientId
            }
        });
    }
    
    /**
     * List Client Transactions
     * The list capability of client transaction can support pagination.
     *
     * Example Requests:
     *
     * self/clients/189/transactions
     *
     * self/clients/189/transactions?offset=10&limit=50
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.offset offset
     * @param data.limit limit
     * @returns GetSelfClientsClientIdTransactionsResponse OK
     * @throws ApiError
     */
    public static getV1SelfClientsByClientIdTransactions(data: GetV1SelfClientsByClientIdTransactionsData): CancelablePromise<GetV1SelfClientsByClientIdTransactionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/clients/{clientId}/transactions',
            path: {
                clientId: data.clientId
            },
            query: {
                offset: data.offset,
                limit: data.limit
            }
        });
    }
    
    /**
     * Retrieve a Client Transaction
     * Retrieves a Client TransactionExample Requests:
     *
     * self/clients/1/transactions/1
     *
     *
     * self/clients/1/transactions/1?fields=id,officeName
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.transactionId transactionId
     * @returns GetSelfClientsClientIdTransactionsTransactionIdResponse OK
     * @throws ApiError
     */
    public static getV1SelfClientsByClientIdTransactionsByTransactionId(data: GetV1SelfClientsByClientIdTransactionsByTransactionIdData): CancelablePromise<GetV1SelfClientsByClientIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/clients/{clientId}/transactions/{transactionId}',
            path: {
                clientId: data.clientId,
                transactionId: data.transactionId
            }
        });
    }
    
}

export class DeviceRegistrationService {
    /**
     * @returns string default response
     * @throws ApiError
     */
    public static getV1SelfDeviceRegistration(): CancelablePromise<GetV1SelfDeviceRegistrationResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/device/registration'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1SelfDeviceRegistration(data: PostV1SelfDeviceRegistrationData = {}): CancelablePromise<PostV1SelfDeviceRegistrationResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/self/device/registration',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.clientId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1SelfDeviceRegistrationClientByClientId(data: GetV1SelfDeviceRegistrationClientByClientIdData): CancelablePromise<GetV1SelfDeviceRegistrationClientByClientIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/device/registration/client/{clientId}',
            path: {
                clientId: data.clientId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns string default response
     * @throws ApiError
     */
    public static deleteV1SelfDeviceRegistrationById(data: DeleteV1SelfDeviceRegistrationByIdData): CancelablePromise<DeleteV1SelfDeviceRegistrationByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/self/device/registration/{id}',
            path: {
                id: data.id
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns string default response
     * @throws ApiError
     */
    public static getV1SelfDeviceRegistrationById(data: GetV1SelfDeviceRegistrationByIdData): CancelablePromise<GetV1SelfDeviceRegistrationByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/device/registration/{id}',
            path: {
                id: data.id
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1SelfDeviceRegistrationById(data: PutV1SelfDeviceRegistrationByIdData): CancelablePromise<PutV1SelfDeviceRegistrationByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/self/device/registration/{id}',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class SelfLoanProductsService {
    /**
     * @param data The data for the request.
     * @param data.clientId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1SelfLoanproducts(data: GetV1SelfLoanproductsData = {}): CancelablePromise<GetV1SelfLoanproductsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/loanproducts',
            query: {
                clientId: data.clientId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.productId
     * @param data.clientId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1SelfLoanproductsByProductId(data: GetV1SelfLoanproductsByProductIdData): CancelablePromise<GetV1SelfLoanproductsByProductIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/loanproducts/{productId}',
            path: {
                productId: data.productId
            },
            query: {
                clientId: data.clientId
            }
        });
    }
    
}

export class SelfLoansService {
    /**
     * Calculate Loan Repayment Schedule | Submit a new Loan Application
     * Calculate Loan Repayment Schedule:
     *
     * Calculates Loan Repayment Schedule
     *
     * Mandatory Fields: productId, principal, loanTermFrequency, loanTermFrequencyType, numberOfRepayments, repaymentEvery, repaymentFrequencyType, interestRatePerPeriod, amortizationType, interestType, interestCalculationPeriodType, expectedDisbursementDate, transactionProcessingStrategyCode
     *
     * Submit a new Loan Application:
     *
     * Mandatory Fields: clientId, productId, principal, loanTermFrequency, loanTermFrequencyType, loanType, numberOfRepayments, repaymentEvery, repaymentFrequencyType, interestRatePerPeriod, amortizationType, interestType, interestCalculationPeriodType, transactionProcessingStrategyCode, expectedDisbursementDate, submittedOnDate, loanType
     *
     * Additional Mandatory Fields if interest recalculation is enabled for product and Rest frequency not same as repayment period: recalculationRestFrequencyDate
     *
     * Additional Mandatory Fields if interest recalculation with interest/fee compounding is enabled for product and compounding frequency not same as repayment period: recalculationCompoundingFrequencyDate
     *
     * Additional Mandatory Field if Entity-Datatable Check is enabled for the entity of type loan: datatables
     *
     * Optional Fields: graceOnPrincipalPayment, graceOnInterestPayment, graceOnInterestCharged, linkAccountId, allowPartialPeriodInterestCalcualtion, fixedEmiAmount, maxOutstandingLoanBalance, disbursementData, graceOnArrearsAgeing, createStandingInstructionAtDisbursement (requires linkedAccountId if set to true)
     *
     * Showing request/response for 'Submit a new Loan Application'
     * @param data The data for the request.
     * @param data.requestBody
     * @param data.command command
     * @returns PostSelfLoansResponse OK
     * @throws ApiError
     */
    public static postV1SelfLoans(data: PostV1SelfLoansData): CancelablePromise<PostV1SelfLoansResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/self/loans',
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Loan Details Template
     * Retrieves Loan Details Template
     *
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed description Lists
     *
     * Example Requests:
     *
     * self/loans/template?templateType=individual&clientId=1
     *
     *
     * self/loans/template?templateType=individual&clientId=1&productId=1
     * @param data The data for the request.
     * @param data.clientId clientId
     * @param data.productId productId
     * @param data.templateType templateType
     * @returns GetSelfLoansTemplateResponse OK
     * @throws ApiError
     */
    public static getV1SelfLoansTemplate(data: GetV1SelfLoansTemplateData = {}): CancelablePromise<GetV1SelfLoansTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/loans/template',
            query: {
                clientId: data.clientId,
                productId: data.productId,
                templateType: data.templateType
            }
        });
    }
    
    /**
     * Retrieve a Loan
     * Retrieves a Loan
     *
     * Example Requests:
     *
     * self/loans/1
     *
     *
     * self/loans/1?fields=id,principal,annualInterestRate
     *
     *
     * self/loans/1?fields=id,principal,annualInterestRate&associations=repaymentSchedule,transactions
     * @param data The data for the request.
     * @param data.loanId loanId
     * @returns GetSelfLoansLoanIdResponse OK
     * @throws ApiError
     */
    public static getV1SelfLoansByLoanId(data: GetV1SelfLoansByLoanIdData): CancelablePromise<GetV1SelfLoansByLoanIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/loans/{loanId}',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * Applicant Withdraws from Loan Application
     * Applicant Withdraws from Loan Application
     *
     * Mandatory Fields: withdrawnOnDate
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.requestBody
     * @param data.command command
     * @returns PostSelfLoansLoanIdResponse OK
     * @throws ApiError
     */
    public static postV1SelfLoansByLoanId(data: PostV1SelfLoansByLoanIdData): CancelablePromise<PostV1SelfLoansByLoanIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/self/loans/{loanId}',
            path: {
                loanId: data.loanId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Update a Loan Application
     * Loan application can only be modified when in 'Submitted and pending approval' state. Once the application is approved, the details cannot be changed using this method.
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.requestBody
     * @returns PutSelfLoansLoanIdResponse OK
     * @throws ApiError
     */
    public static putV1SelfLoansByLoanId(data: PutV1SelfLoansByLoanIdData): CancelablePromise<PutV1SelfLoansByLoanIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/self/loans/{loanId}',
            path: {
                loanId: data.loanId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * List Loan Charges
     * Lists loan Charges
     *
     * Example Requests:
     *
     * self/loans/1/charges
     *
     *
     * self/loans/1/charges?fields=name,amountOrPercentage
     * @param data The data for the request.
     * @param data.loanId loanId
     * @returns GetSelfLoansLoanIdChargesResponse OK
     * @throws ApiError
     */
    public static getV1SelfLoansByLoanIdCharges(data: GetV1SelfLoansByLoanIdChargesData): CancelablePromise<GetV1SelfLoansByLoanIdChargesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/loans/{loanId}/charges',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * Retrieve a Loan Charge
     * Retrieves a Loan Charge
     *
     * Example Requests:
     *
     * self/loans/1/charges/1
     *
     *
     * self/loans/1/charges/1?fields=name,amountOrPercentage
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.chargeId chargeId
     * @returns GetSelfLoansLoanIdChargesResponse OK
     * @throws ApiError
     */
    public static getV1SelfLoansByLoanIdChargesByChargeId(data: GetV1SelfLoansByLoanIdChargesByChargeIdData): CancelablePromise<GetV1SelfLoansByLoanIdChargesByChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/loans/{loanId}/charges/{chargeId}',
            path: {
                loanId: data.loanId,
                chargeId: data.chargeId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.loanId
     * @returns GuarantorData default response
     * @throws ApiError
     */
    public static getV1SelfLoansByLoanIdGuarantors(data: GetV1SelfLoansByLoanIdGuarantorsData): CancelablePromise<GetV1SelfLoansByLoanIdGuarantorsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/loans/{loanId}/guarantors',
            path: {
                loanId: data.loanId
            }
        });
    }
    
    /**
     * Retrieve a Loan Transaction Details
     * Retrieves a Loan Transaction DetailsExample Request:
     *
     * self/loans/5/transactions/3
     * @param data The data for the request.
     * @param data.loanId loanId
     * @param data.transactionId transactionId
     * @param data.fields Optional Loan Transaction attribute list to be in the response
     * @returns GetSelfLoansLoanIdTransactionsTransactionIdResponse OK
     * @throws ApiError
     */
    public static getV1SelfLoansByLoanIdTransactionsByTransactionId(data: GetV1SelfLoansByLoanIdTransactionsByTransactionIdData): CancelablePromise<GetV1SelfLoansByLoanIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/loans/{loanId}/transactions/{transactionId}',
            path: {
                loanId: data.loanId,
                transactionId: data.transactionId
            },
            query: {
                fields: data.fields
            }
        });
    }
    
}

export class PocketService {
    /**
     * Retrieve accounts linked to pocket
     * All linked loan
     *
     * Example Requests:
     *
     *
     * self/pockets
     * @returns GetAccountsLinkedToPocketResponse OK
     * @throws ApiError
     */
    public static getV1SelfPockets(): CancelablePromise<GetV1SelfPocketsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/pockets'
        });
    }
    
    /**
     * Link/delink accounts to/from pocket
     * Pockets behave as favourites. An user can link his/her Loan, Savings and Share accounts to pocket for faster access. In a similar way linked accounts can be delinked from the pocket.
     *
     * Example Requests:
     *
     * self/pockets?command=linkAccounts
     *
     * self/pockets?command=delinkAccounts
     * @param data The data for the request.
     * @param data.command command
     * @param data.requestBody
     * @returns PostLinkDelinkAccountsToFromPocketResponse OK
     * @throws ApiError
     */
    public static postV1SelfPockets(data: PostV1SelfPocketsData = {}): CancelablePromise<PostV1SelfPocketsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/self/pockets',
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class SelfShareProductsService {
    /**
     * @param data The data for the request.
     * @param data.clientId
     * @param data.offset
     * @param data.limit
     * @returns string default response
     * @throws ApiError
     */
    public static getV1SelfProductsShare(data: GetV1SelfProductsShareData = {}): CancelablePromise<GetV1SelfProductsShareResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/products/share',
            query: {
                clientId: data.clientId,
                offset: data.offset,
                limit: data.limit
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.productId
     * @param data.type
     * @param data.clientId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1SelfProductsShareByProductId(data: GetV1SelfProductsShareByProductIdData): CancelablePromise<GetV1SelfProductsShareByProductIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/products/share/{productId}',
            path: {
                productId: data.productId,
                type: data.type
            },
            query: {
                clientId: data.clientId
            }
        });
    }
    
}

export class SelfServiceRegistrationService {
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1SelfRegistration(data: PostV1SelfRegistrationData = {}): CancelablePromise<PostV1SelfRegistrationResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/self/registration',
            body: data.requestBody,
            mediaType: '*/*'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1SelfRegistrationUser(data: PostV1SelfRegistrationUserData = {}): CancelablePromise<PostV1SelfRegistrationUserResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/self/registration/user',
            body: data.requestBody,
            mediaType: '*/*'
        });
    }
    
}

export class SelfRunReportService {
    /**
     * Running A Report
     * Example Requests:
     *
     *
     * self/runreports/Client%20Details?R_officeId=1
     *
     *
     * self/runreports/Client%20Details?R_officeId=1&exportCSV=true
     * @param data The data for the request.
     * @param data.reportName reportName
     * @returns GetRunReportResponse OK
     * @throws ApiError
     */
    public static getV1SelfRunreportsByReportName(data: GetV1SelfRunreportsByReportNameData): CancelablePromise<GetV1SelfRunreportsByReportNameResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/runreports/{reportName}',
            path: {
                reportName: data.reportName
            }
        });
    }
    
}

export class SelfSavingsAccountService {
    /**
     * @param data The data for the request.
     * @param data.command
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1SelfSavingsaccounts(data: PostV1SelfSavingsaccountsData = {}): CancelablePromise<PostV1SelfSavingsaccountsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/self/savingsaccounts',
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.clientId
     * @param data.productId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1SelfSavingsaccountsTemplate(data: GetV1SelfSavingsaccountsTemplateData = {}): CancelablePromise<GetV1SelfSavingsaccountsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/savingsaccounts/template',
            query: {
                clientId: data.clientId,
                productId: data.productId
            }
        });
    }
    
    /**
     * Retrieve a savings account
     * Retrieves a savings account
     *
     * Example Requests :
     *
     * self/savingsaccounts/1
     *
     *
     * self/savingsaccounts/1?associations=transactions
     * @param data The data for the request.
     * @param data.accountId accountId
     * @param data.chargeStatus chargeStatus
     * @param data.associations associations
     * @returns GetSelfSavingsAccountsResponse OK
     * @throws ApiError
     */
    public static getV1SelfSavingsaccountsByAccountId(data: GetV1SelfSavingsaccountsByAccountIdData): CancelablePromise<GetV1SelfSavingsaccountsByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/savingsaccounts/{accountId}',
            path: {
                accountId: data.accountId
            },
            query: {
                chargeStatus: data.chargeStatus,
                associations: data.associations
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.accountId
     * @param data.command
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1SelfSavingsaccountsByAccountId(data: PutV1SelfSavingsaccountsByAccountIdData): CancelablePromise<PutV1SelfSavingsaccountsByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/self/savingsaccounts/{accountId}',
            path: {
                accountId: data.accountId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * List Savings Charges
     * Lists Savings Charges
     *
     * Example Requests:
     *
     * self/savingsaccounts/1/charges
     *
     * self/savingsaccounts/1/charges?chargeStatus=inactive
     *
     * self/savingsaccounts/1/charges?fields=name,amountOrPercentage
     * @param data The data for the request.
     * @param data.accountId accountId
     * @param data.chargeStatus chargeStatus
     * @returns GetSelfSavingsAccountsAccountIdChargesResponse OK
     * @throws ApiError
     */
    public static getV1SelfSavingsaccountsByAccountIdCharges(data: GetV1SelfSavingsaccountsByAccountIdChargesData): CancelablePromise<GetV1SelfSavingsaccountsByAccountIdChargesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/savingsaccounts/{accountId}/charges',
            path: {
                accountId: data.accountId
            },
            query: {
                chargeStatus: data.chargeStatus
            }
        });
    }
    
    /**
     * Retrieve a Savings account Charge
     * Retrieves a Savings account Charge
     *
     * Example Requests:
     *
     * self/savingsaccounts/1/charges/5
     *
     *
     * self/savingsaccounts/1/charges/5?fields=name,amountOrPercentage
     * @param data The data for the request.
     * @param data.accountId accountId
     * @param data.savingsAccountChargeId savingsAccountChargeId
     * @returns GetSelfSavingsAccountsAccountIdChargesSavingsAccountChargeIdResponse OK
     * @throws ApiError
     */
    public static getV1SelfSavingsaccountsByAccountIdChargesBySavingsAccountChargeId(data: GetV1SelfSavingsaccountsByAccountIdChargesBySavingsAccountChargeIdData): CancelablePromise<GetV1SelfSavingsaccountsByAccountIdChargesBySavingsAccountChargeIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/savingsaccounts/{accountId}/charges/{savingsAccountChargeId}',
            path: {
                accountId: data.accountId,
                savingsAccountChargeId: data.savingsAccountChargeId
            }
        });
    }
    
    /**
     * Retrieve Savings Account Transaction
     * Retrieves Savings Account Transaction
     *
     * Example Requests:
     *
     * self/savingsaccounts/1/transactions/1
     * @param data The data for the request.
     * @param data.accountId accountId
     * @param data.transactionId transactionId
     * @returns GetSelfSavingsAccountsAccountIdTransactionsTransactionIdResponse OK
     * @throws ApiError
     */
    public static getV1SelfSavingsaccountsByAccountIdTransactionsByTransactionId(data: GetV1SelfSavingsaccountsByAccountIdTransactionsByTransactionIdData): CancelablePromise<GetV1SelfSavingsaccountsByAccountIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/savingsaccounts/{accountId}/transactions/{transactionId}',
            path: {
                accountId: data.accountId,
                transactionId: data.transactionId
            }
        });
    }
    
}

export class SelfSavingsProductsService {
    /**
     * @param data The data for the request.
     * @param data.clientId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1SelfSavingsproducts(data: GetV1SelfSavingsproductsData = {}): CancelablePromise<GetV1SelfSavingsproductsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/savingsproducts',
            query: {
                clientId: data.clientId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.productId
     * @param data.clientId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1SelfSavingsproductsByProductId(data: GetV1SelfSavingsproductsByProductIdData): CancelablePromise<GetV1SelfSavingsproductsByProductIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/savingsproducts/{productId}',
            path: {
                productId: data.productId
            },
            query: {
                clientId: data.clientId
            }
        });
    }
    
}

export class SelfShareAccountsService {
    /**
     * Submit new share application
     * Mandatory fields:
     *
     * clientId, productId, submittedDate, savingsAccountId, requestedShares, applicationDate
     *
     *
     * Optional Fields
     *
     * accountNo, externalId
     *
     *
     * Inherited from Product (if not provided)
     *
     * minimumActivePeriod, minimumActivePeriodFrequencyType, lockinPeriodFrequency, lockinPeriodFrequencyType.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostNewShareApplicationResponse OK
     * @throws ApiError
     */
    public static postV1SelfShareaccounts(data: PostV1SelfShareaccountsData = {}): CancelablePromise<PostV1SelfShareaccountsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/self/shareaccounts',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Share Account Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     * Field Defaults
     *
     * Allowed Value Lists
     *
     *
     * Arguments
     *
     * clientId:Integer mandatory
     * productId:Integer optionalIf entered, productId, productName and selectedProduct fields are returned.
     * Example Requests:
     *
     * self/shareaccounts/template?clientId=14
     *
     * self/shareaccounts/template?clientId=14&productId=3
     *
     * @param data The data for the request.
     * @param data.clientId
     * @param data.productId
     * @returns GetShareAccountsClientIdProductIdResponse OK
     * @throws ApiError
     */
    public static getV1SelfShareaccountsTemplate(data: GetV1SelfShareaccountsTemplateData = {}): CancelablePromise<GetV1SelfShareaccountsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/shareaccounts/template',
            query: {
                clientId: data.clientId,
                productId: data.productId
            }
        });
    }
    
    /**
     * Retrieve a share application/account
     *
     *
     *
     * Example Requests:
     *
     * self/shareaccounts/12
     *
     * @param data The data for the request.
     * @param data.accountId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1SelfShareaccountsByAccountId(data: GetV1SelfShareaccountsByAccountIdData): CancelablePromise<GetV1SelfShareaccountsByAccountIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/shareaccounts/{accountId}',
            path: {
                accountId: data.accountId
            }
        });
    }
    
}

export class SelfSpmService {
    /**
     * @returns SurveyData default response
     * @throws ApiError
     */
    public static getV1SelfSurveys(): CancelablePromise<GetV1SelfSurveysResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/surveys'
        });
    }
    
}

export class SelfScoreCardService {
    /**
     * @param data The data for the request.
     * @param data.clientId
     * @returns ScorecardData default response
     * @throws ApiError
     */
    public static getV1SelfSurveysScorecardsClientsByClientId(data: GetV1SelfSurveysScorecardsClientsByClientIdData): CancelablePromise<GetV1SelfSurveysScorecardsClientsByClientIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/surveys/scorecards/clients/{clientId}',
            path: {
                clientId: data.clientId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.surveyId
     * @param data.requestBody
     * @returns unknown default response
     * @throws ApiError
     */
    public static postV1SelfSurveysScorecardsBySurveyId(data: PostV1SelfSurveysScorecardsBySurveyIdData): CancelablePromise<PostV1SelfSurveysScorecardsBySurveyIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/self/surveys/scorecards/{surveyId}',
            path: {
                surveyId: data.surveyId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class SelfUserService {
    /**
     * Update User
     * This API can be used by Self Service user to update their own user information. Currently, "password" and "repeatPassword" are the only parameters accepted.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PutSelfUserResponse OK
     * @throws ApiError
     */
    public static putV1SelfUser(data: PutV1SelfUserData): CancelablePromise<PutV1SelfUserResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/self/user',
            body: data.requestBody,
            mediaType: '*/*'
        });
    }
    
}

export class SelfUserDetailsService {
    /**
     * Fetch authenticated user details
     * Checks the Authentication and returns the set roles and permissions allowed
     *
     * For more info visit this link - https://fineract.apache.org/docs/legacy/#selfoauth
     * @returns GetSelfUserDetailsResponse OK
     * @throws ApiError
     */
    public static getV1SelfUserdetails(): CancelablePromise<GetV1SelfUserdetailsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/self/userdetails'
        });
    }
    
}

export class SelfDividendService {
    /**
     * @param data The data for the request.
     * @param data.productId
     * @param data.offset
     * @param data.limit
     * @param data.orderBy
     * @param data.sortOrder
     * @param data.status
     * @returns string default response
     * @throws ApiError
     */
    public static getV1ShareproductByProductIdDividend(data: GetV1ShareproductByProductIdDividendData): CancelablePromise<GetV1ShareproductByProductIdDividendResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/shareproduct/{productId}/dividend',
            path: {
                productId: data.productId
            },
            query: {
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder,
                status: data.status
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.productId
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1ShareproductByProductIdDividend(data: PostV1ShareproductByProductIdDividendData): CancelablePromise<PostV1ShareproductByProductIdDividendResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/shareproduct/{productId}/dividend',
            path: {
                productId: data.productId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.productId
     * @param data.dividendId
     * @returns string default response
     * @throws ApiError
     */
    public static deleteV1ShareproductByProductIdDividendByDividendId(data: DeleteV1ShareproductByProductIdDividendByDividendIdData): CancelablePromise<DeleteV1ShareproductByProductIdDividendByDividendIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/shareproduct/{productId}/dividend/{dividendId}',
            path: {
                productId: data.productId,
                dividendId: data.dividendId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.dividendId
     * @param data.productId
     * @param data.offset
     * @param data.limit
     * @param data.orderBy
     * @param data.sortOrder
     * @param data.accountNo
     * @returns string default response
     * @throws ApiError
     */
    public static getV1ShareproductByProductIdDividendByDividendId(data: GetV1ShareproductByProductIdDividendByDividendIdData): CancelablePromise<GetV1ShareproductByProductIdDividendByDividendIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/shareproduct/{productId}/dividend/{dividendId}',
            path: {
                dividendId: data.dividendId,
                productId: data.productId
            },
            query: {
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder,
                accountNo: data.accountNo
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.productId
     * @param data.dividendId
     * @param data.command
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1ShareproductByProductIdDividendByDividendId(data: PutV1ShareproductByProductIdDividendByDividendIdData): CancelablePromise<PutV1ShareproductByProductIdDividendByDividendIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/shareproduct/{productId}/dividend/{dividendId}',
            path: {
                productId: data.productId,
                dividendId: data.dividendId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class SmsService {
    /**
     * @returns SmsData default response
     * @throws ApiError
     */
    public static getV1Sms(): CancelablePromise<GetV1SmsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/sms'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static postV1Sms(data: PostV1SmsData = {}): CancelablePromise<PostV1SmsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/sms',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.campaignId
     * @param data.status
     * @param data.fromDate
     * @param data.toDate
     * @param data.locale
     * @param data.dateFormat
     * @param data.offset
     * @param data.limit
     * @param data.orderBy
     * @param data.sortOrder
     * @returns PageSmsData default response
     * @throws ApiError
     */
    public static getV1SmsByCampaignIdMessageByStatus(data: GetV1SmsByCampaignIdMessageByStatusData): CancelablePromise<GetV1SmsByCampaignIdMessageByStatusResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/sms/{campaignId}/messageByStatus',
            path: {
                campaignId: data.campaignId
            },
            query: {
                status: data.status,
                fromDate: data.fromDate,
                toDate: data.toDate,
                locale: data.locale,
                dateFormat: data.dateFormat,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.resourceId
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static deleteV1SmsByResourceId(data: DeleteV1SmsByResourceIdData): CancelablePromise<DeleteV1SmsByResourceIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/sms/{resourceId}',
            path: {
                resourceId: data.resourceId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.resourceId
     * @returns SmsData default response
     * @throws ApiError
     */
    public static getV1SmsByResourceId(data: GetV1SmsByResourceIdData): CancelablePromise<GetV1SmsByResourceIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/sms/{resourceId}',
            path: {
                resourceId: data.resourceId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.resourceId
     * @param data.requestBody
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static putV1SmsByResourceId(data: PutV1SmsByResourceIdData): CancelablePromise<PutV1SmsByResourceIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/sms/{resourceId}',
            path: {
                resourceId: data.resourceId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class StaffService {
    /**
     * Retrieve Staff
     * Returns the list of staff members.
     *
     * Example Requests:
     *
     * staff
     *
     *
     *
     *
     * Retrieve a Staff by status
     *
     * Returns the details of a Staff based on status.
     *
     * By default it Returns all the ACTIVE Staff.
     *
     * If status=INACTIVE, then it returns all INACTIVE Staff.
     *
     * and for status=ALL, it Returns both ACTIVE and INACTIVE Staff.
     *
     * Example Requests:
     *
     * staff?status=active
     * @param data The data for the request.
     * @param data.officeId officeId
     * @param data.staffInOfficeHierarchy staffInOfficeHierarchy
     * @param data.loanOfficersOnly loanOfficersOnly
     * @param data.status status
     * @returns StaffData default response
     * @throws ApiError
     */
    public static getV1Staff(data: GetV1StaffData = {}): CancelablePromise<GetV1StaffResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/staff',
            query: {
                officeId: data.officeId,
                staffInOfficeHierarchy: data.staffInOfficeHierarchy,
                loanOfficersOnly: data.loanOfficersOnly,
                status: data.status
            }
        });
    }
    
    /**
     * Create a staff member
     * Creates a staff member.
     *
     * Mandatory Fields:
     * officeId, firstname, lastname
     *
     * Optional Fields:
     * isLoanOfficer, isActive
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CreateStaffResponse OK
     * @throws ApiError
     */
    public static postV1Staff(data: PostV1StaffData): CancelablePromise<PostV1StaffResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/staff',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.officeId
     * @param data.dateFormat
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1StaffDownloadtemplate(data: GetV1StaffDownloadtemplateData = {}): CancelablePromise<GetV1StaffDownloadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/staff/downloadtemplate',
            query: {
                officeId: data.officeId,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.formData Upload staff template
     * @returns number default response
     * @throws ApiError
     */
    public static postV1StaffUploadtemplate(data: PostV1StaffUploadtemplateData = {}): CancelablePromise<PostV1StaffUploadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/staff/uploadtemplate',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Retrieve a Staff Member
     * Returns the details of a Staff Member.
     *
     * Example Requests:
     *
     * staff/1
     * @param data The data for the request.
     * @param data.staffId staffId
     * @returns StaffData default response
     * @throws ApiError
     */
    public static getV1StaffByStaffId(data: GetV1StaffByStaffIdData): CancelablePromise<GetV1StaffByStaffIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/staff/{staffId}',
            path: {
                staffId: data.staffId
            }
        });
    }
    
    /**
     * Update a Staff Member
     * Updates the details of a staff member.
     * @param data The data for the request.
     * @param data.staffId staffId
     * @param data.requestBody
     * @returns UpdateStaffResponse OK
     * @throws ApiError
     */
    public static putV1StaffByStaffId(data: PutV1StaffByStaffIdData): CancelablePromise<PutV1StaffByStaffIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/staff/{staffId}',
            path: {
                staffId: data.staffId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class StandingInstructionsHistoryService {
    /**
     * Standing Instructions Logged History
     * The list capability of history can support pagination and sorting
     *
     * Example Requests :
     *
     * standinginstructionrunhistory
     *
     * standinginstructionrunhistory?orderBy=name&sortOrder=DESC
     *
     * standinginstructionrunhistory?offset=10&limit=50
     * @param data The data for the request.
     * @param data.externalId externalId
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @param data.transferType transferType
     * @param data.clientName clientName
     * @param data.clientId clientId
     * @param data.fromAccountId fromAccountId
     * @param data.fromAccountType fromAccountType
     * @param data.locale locale
     * @param data.dateFormat dateFormat
     * @param data.fromDate fromDate
     * @param data.toDate toDate
     * @returns GetStandingInstructionRunHistoryResponse OK
     * @throws ApiError
     */
    public static getV1Standinginstructionrunhistory(data: GetV1StandinginstructionrunhistoryData = {}): CancelablePromise<GetV1StandinginstructionrunhistoryResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/standinginstructionrunhistory',
            query: {
                externalId: data.externalId,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder,
                transferType: data.transferType,
                clientName: data.clientName,
                clientId: data.clientId,
                fromAccountId: data.fromAccountId,
                fromAccountType: data.fromAccountType,
                locale: data.locale,
                dateFormat: data.dateFormat,
                fromDate: data.fromDate,
                toDate: data.toDate
            }
        });
    }
    
}

export class StandingInstructionsService {
    /**
     * List Standing Instructions
     * Example Requests:
     *
     * standinginstructions
     * @param data The data for the request.
     * @param data.externalId externalId
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @param data.transferType transferType
     * @param data.clientName clientName
     * @param data.clientId clientId
     * @param data.fromAccountId fromAccountId
     * @param data.fromAccountType fromAccountType
     * @returns GetStandingInstructionsResponse OK
     * @throws ApiError
     */
    public static getV1Standinginstructions(data: GetV1StandinginstructionsData = {}): CancelablePromise<GetV1StandinginstructionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/standinginstructions',
            query: {
                externalId: data.externalId,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder,
                transferType: data.transferType,
                clientName: data.clientName,
                clientId: data.clientId,
                fromAccountId: data.fromAccountId,
                fromAccountType: data.fromAccountType
            }
        });
    }
    
    /**
     * Create new Standing Instruction
     * Ability to create new instruction for transfer of monetary funds from one account to another
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostStandingInstructionsResponse OK
     * @throws ApiError
     */
    public static postV1Standinginstructions(data: PostV1StandinginstructionsData): CancelablePromise<PostV1StandinginstructionsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/standinginstructions',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Standing Instruction Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed Value Lists
     * Example Requests:
     *
     * standinginstructions/template?fromAccountType=2&fromOfficeId=1
     *
     * standinginstructions/template?fromAccountType=2&fromOfficeId=1&fromClientId=1&transferType=1
     *
     * standinginstructions/template?fromClientId=1&fromAccountType=2&fromAccountId=1&transferType=1
     * @param data The data for the request.
     * @param data.fromOfficeId
     * @param data.fromClientId
     * @param data.fromAccountId
     * @param data.fromAccountType
     * @param data.toOfficeId
     * @param data.toClientId
     * @param data.toAccountId
     * @param data.toAccountType
     * @param data.transferType
     * @returns GetStandingInstructionsTemplateResponse OK
     * @throws ApiError
     */
    public static getV1StandinginstructionsTemplate(data: GetV1StandinginstructionsTemplateData = {}): CancelablePromise<GetV1StandinginstructionsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/standinginstructions/template',
            query: {
                fromOfficeId: data.fromOfficeId,
                fromClientId: data.fromClientId,
                fromAccountId: data.fromAccountId,
                fromAccountType: data.fromAccountType,
                toOfficeId: data.toOfficeId,
                toClientId: data.toClientId,
                toAccountId: data.toAccountId,
                toAccountType: data.toAccountType,
                transferType: data.transferType
            }
        });
    }
    
    /**
     * Retrieve Standing Instruction
     * Example Requests :
     *
     * standinginstructions/1
     * @param data The data for the request.
     * @param data.standingInstructionId standingInstructionId
     * @param data.externalId externalId
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @returns GetStandingInstructionsStandingInstructionIdResponse OK
     * @throws ApiError
     */
    public static getV1StandinginstructionsByStandingInstructionId(data: GetV1StandinginstructionsByStandingInstructionIdData): CancelablePromise<GetV1StandinginstructionsByStandingInstructionIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/standinginstructions/{standingInstructionId}',
            path: {
                standingInstructionId: data.standingInstructionId
            },
            query: {
                externalId: data.externalId,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            }
        });
    }
    
    /**
     * Update Standing Instruction | Delete Standing Instruction
     * Ability to modify existing instruction for transfer of monetary funds from one account to another.
     *
     * PUT https://DomainName/api/v1/standinginstructions/1?command=update
     *
     *
     * Ability to modify existing instruction for transfer of monetary funds from one account to another.
     *
     * PUT https://DomainName/api/v1/standinginstructions/1?command=delete
     * @param data The data for the request.
     * @param data.standingInstructionId standingInstructionId
     * @param data.command command
     * @param data.requestBody
     * @returns PutStandingInstructionsStandingInstructionIdResponse OK
     * @throws ApiError
     */
    public static putV1StandinginstructionsByStandingInstructionId(data: PutV1StandinginstructionsByStandingInstructionIdData): CancelablePromise<PutV1StandinginstructionsByStandingInstructionIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/standinginstructions/{standingInstructionId}',
            path: {
                standingInstructionId: data.standingInstructionId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class SurveyService {
    /**
     * Retrieve surveys
     * Retrieve surveys. This allows to retrieve the list of survey tables registered .
     * @returns GetSurveyResponse OK
     * @throws ApiError
     */
    public static getV1Survey(): CancelablePromise<GetV1SurveyResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/survey'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.surveyName
     * @param data.apptable
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1SurveyRegisterBySurveyNameByApptable(data: PutV1SurveyRegisterBySurveyNameByApptableData): CancelablePromise<PutV1SurveyRegisterBySurveyNameByApptableResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/survey/register/{surveyName}/{apptable}',
            path: {
                surveyName: data.surveyName,
                apptable: data.apptable
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve survey
     * Lists a registered survey table details and the Apache Fineract Core application table they are registered to.
     * @param data The data for the request.
     * @param data.surveyName surveyName
     * @returns GetSurveyResponse OK
     * @throws ApiError
     */
    public static getV1SurveyBySurveyName(data: GetV1SurveyBySurveyNameData): CancelablePromise<GetV1SurveyBySurveyNameResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/survey/{surveyName}',
            path: {
                surveyName: data.surveyName
            }
        });
    }
    
    /**
     * Create an entry in the survey table
     * Insert and entry in a survey table (full fill the survey).
     *
     * Refer Link for sample Body:  [ https://fineract.apache.org/docs/legacy/#survey_create ]
     * @param data The data for the request.
     * @param data.surveyName surveyName
     * @param data.apptableId apptableId
     * @param data.requestBody
     * @returns PostSurveySurveyNameApptableIdResponse OK
     * @throws ApiError
     */
    public static postV1SurveyBySurveyNameByApptableId(data: PostV1SurveyBySurveyNameByApptableIdData): CancelablePromise<PostV1SurveyBySurveyNameByApptableIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/survey/{surveyName}/{apptableId}',
            path: {
                surveyName: data.surveyName,
                apptableId: data.apptableId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.surveyName
     * @param data.clientId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1SurveyBySurveyNameByClientId(data: GetV1SurveyBySurveyNameByClientIdData): CancelablePromise<GetV1SurveyBySurveyNameByClientIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/survey/{surveyName}/{clientId}',
            path: {
                surveyName: data.surveyName,
                clientId: data.clientId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.surveyName
     * @param data.clientId
     * @param data.entryId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1SurveyBySurveyNameByClientIdByEntryId(data: GetV1SurveyBySurveyNameByClientIdByEntryIdData): CancelablePromise<GetV1SurveyBySurveyNameByClientIdByEntryIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/survey/{surveyName}/{clientId}/{entryId}',
            path: {
                surveyName: data.surveyName,
                clientId: data.clientId,
                entryId: data.entryId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.surveyName
     * @param data.clientId
     * @param data.fulfilledId
     * @returns string default response
     * @throws ApiError
     */
    public static deleteV1SurveyBySurveyNameByClientIdByFulfilledId(data: DeleteV1SurveyBySurveyNameByClientIdByFulfilledIdData): CancelablePromise<DeleteV1SurveyBySurveyNameByClientIdByFulfilledIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/survey/{surveyName}/{clientId}/{fulfilledId}',
            path: {
                surveyName: data.surveyName,
                clientId: data.clientId,
                fulfilledId: data.fulfilledId
            }
        });
    }
    
}

export class SpmSurveysService {
    /**
     * List all Surveys
     * @param data The data for the request.
     * @param data.isActive
     * @returns SurveyData OK
     * @throws ApiError
     */
    public static getV1Surveys(data: GetV1SurveysData = {}): CancelablePromise<GetV1SurveysResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/surveys',
            query: {
                isActive: data.isActive
            }
        });
    }
    
    /**
     * Create a Survey
     * Adds a new survey to collect client related data.
     *
     * Mandatory Fields
     *
     * countryCode, key, name, questions, responses, sequenceNo, text, description
     * @param data The data for the request.
     * @param data.requestBody Create survey
     * @returns unknown OK
     * @throws ApiError
     */
    public static postV1Surveys(data: PostV1SurveysData = {}): CancelablePromise<PostV1SurveysResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/surveys',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve a Survey
     * @param data The data for the request.
     * @param data.id Enter id
     * @returns SurveyData OK
     * @throws ApiError
     */
    public static getV1SurveysById(data: GetV1SurveysByIdData): CancelablePromise<GetV1SurveysByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/surveys/{id}',
            path: {
                id: data.id
            }
        });
    }
    
    /**
     * Deactivate Survey
     * @param data The data for the request.
     * @param data.id
     * @param data.command
     * @returns unknown OK
     * @throws ApiError
     */
    public static postV1SurveysById(data: PostV1SurveysByIdData): CancelablePromise<PostV1SurveysByIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/surveys/{id}',
            path: {
                id: data.id
            },
            query: {
                command: data.command
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1SurveysById(data: PutV1SurveysByIdData): CancelablePromise<PutV1SurveysByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/surveys/{id}',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class ScoreCardService {
    /**
     * @param data The data for the request.
     * @param data.clientId
     * @returns ScorecardData default response
     * @throws ApiError
     */
    public static getV1SurveysScorecardsClientsByClientId(data: GetV1SurveysScorecardsClientsByClientIdData): CancelablePromise<GetV1SurveysScorecardsClientsByClientIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/surveys/scorecards/clients/{clientId}',
            path: {
                clientId: data.clientId
            }
        });
    }
    
    /**
     * List all Scorecard entries
     * List all Scorecard entries for a survey.
     * @param data The data for the request.
     * @param data.surveyId Enter surveyId
     * @returns Scorecard OK
     * @throws ApiError
     */
    public static getV1SurveysScorecardsBySurveyId(data: GetV1SurveysScorecardsBySurveyIdData): CancelablePromise<GetV1SurveysScorecardsBySurveyIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/surveys/scorecards/{surveyId}',
            path: {
                surveyId: data.surveyId
            }
        });
    }
    
    /**
     * Create a Scorecard entry
     * Add a new entry to a survey.
     *
     * Mandatory Fields
     * clientId, createdOn, questionId, responseId, staffId
     * @param data The data for the request.
     * @param data.surveyId Enter surveyId
     * @param data.requestBody scorecardData
     * @returns unknown OK
     * @throws ApiError
     */
    public static postV1SurveysScorecardsBySurveyId(data: PostV1SurveysScorecardsBySurveyIdData): CancelablePromise<PostV1SurveysScorecardsBySurveyIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/surveys/scorecards/{surveyId}',
            path: {
                surveyId: data.surveyId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.surveyId Enter surveyId
     * @param data.clientId Enter clientId
     * @returns ScorecardData default response
     * @throws ApiError
     */
    public static getV1SurveysScorecardsBySurveyIdClientsByClientId(data: GetV1SurveysScorecardsBySurveyIdClientsByClientIdData): CancelablePromise<GetV1SurveysScorecardsBySurveyIdClientsByClientIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/surveys/scorecards/{surveyId}/clients/{clientId}',
            path: {
                surveyId: data.surveyId,
                clientId: data.clientId
            }
        });
    }
    
}

export class SpmApiLookUpTableService {
    /**
     * List all Lookup Table entries
     * List all Lookup Table entries for a survey.
     * @param data The data for the request.
     * @param data.surveyId Enter surveyId
     * @returns LookupTableData OK
     * @throws ApiError
     */
    public static getV1SurveysBySurveyIdLookuptables(data: GetV1SurveysBySurveyIdLookuptablesData): CancelablePromise<GetV1SurveysBySurveyIdLookuptablesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/surveys/{surveyId}/lookuptables',
            path: {
                surveyId: data.surveyId
            }
        });
    }
    
    /**
     * Create a Lookup Table entry
     * Add a new entry to a survey.
     *
     * Mandatory Fields
     * key, score, validFrom, validTo
     * @param data The data for the request.
     * @param data.surveyId Enter surveyId
     * @param data.requestBody
     * @returns unknown OK
     * @throws ApiError
     */
    public static postV1SurveysBySurveyIdLookuptables(data: PostV1SurveysBySurveyIdLookuptablesData): CancelablePromise<PostV1SurveysBySurveyIdLookuptablesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/surveys/{surveyId}/lookuptables',
            path: {
                surveyId: data.surveyId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve a Lookup Table entry
     * Retrieve a Lookup Table entry for a survey.
     * @param data The data for the request.
     * @param data.surveyId Enter surveyId
     * @param data.key Enter key
     * @returns LookupTableData OK
     * @throws ApiError
     */
    public static getV1SurveysBySurveyIdLookuptablesByKey(data: GetV1SurveysBySurveyIdLookuptablesByKeyData): CancelablePromise<GetV1SurveysBySurveyIdLookuptablesByKeyResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/surveys/{surveyId}/lookuptables/{key}',
            path: {
                surveyId: data.surveyId,
                key: data.key
            }
        });
    }
    
}

export class TaxComponentsService {
    /**
     * List Tax Components
     * List Tax Components
     * @returns GetTaxesComponentsResponse OK
     * @throws ApiError
     */
    public static getV1TaxesComponent(): CancelablePromise<GetV1TaxesComponentResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/taxes/component'
        });
    }
    
    /**
     * Create a new Tax Component
     * Creates a new Tax Component
     *
     * Mandatory Fields: name, percentage
     *
     * Optional Fields: debitAccountType, debitAcountId, creditAccountType, creditAcountId, startDate
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostTaxesComponentsResponse OK
     * @throws ApiError
     */
    public static postV1TaxesComponent(data: PostV1TaxesComponentData): CancelablePromise<PostV1TaxesComponentResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/taxes/component',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns TaxComponentData default response
     * @throws ApiError
     */
    public static getV1TaxesComponentTemplate(): CancelablePromise<GetV1TaxesComponentTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/taxes/component/template'
        });
    }
    
    /**
     * Retrieve Tax Component
     * Retrieve Tax Component
     * @param data The data for the request.
     * @param data.taxComponentId taxComponentId
     * @returns GetTaxesComponentsResponse OK
     * @throws ApiError
     */
    public static getV1TaxesComponentByTaxComponentId(data: GetV1TaxesComponentByTaxComponentIdData): CancelablePromise<GetV1TaxesComponentByTaxComponentIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/taxes/component/{taxComponentId}',
            path: {
                taxComponentId: data.taxComponentId
            }
        });
    }
    
    /**
     * Update Tax Component
     * Updates Tax component. Debit and credit account details cannot be modified. All the future tax components would be replaced with the new percentage.
     * @param data The data for the request.
     * @param data.taxComponentId taxComponentId
     * @param data.requestBody
     * @returns PutTaxesComponentsTaxComponentIdResponse OK
     * @throws ApiError
     */
    public static putV1TaxesComponentByTaxComponentId(data: PutV1TaxesComponentByTaxComponentIdData): CancelablePromise<PutV1TaxesComponentByTaxComponentIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/taxes/component/{taxComponentId}',
            path: {
                taxComponentId: data.taxComponentId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class TaxGroupService {
    /**
     * List Tax Group
     * List Tax Group
     * @returns GetTaxesGroupResponse OK
     * @throws ApiError
     */
    public static getV1TaxesGroup(): CancelablePromise<GetV1TaxesGroupResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/taxes/group'
        });
    }
    
    /**
     * Create a new Tax Group
     * Create a new Tax Group
     * Mandatory Fields: name and taxComponents
     * Mandatory Fields in taxComponents: taxComponentId
     * Optional Fields in taxComponents: id, startDate and endDate
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostTaxesGroupResponse OK
     * @throws ApiError
     */
    public static postV1TaxesGroup(data: PostV1TaxesGroupData): CancelablePromise<PostV1TaxesGroupResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/taxes/group',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns TaxGroupData default response
     * @throws ApiError
     */
    public static getV1TaxesGroupTemplate(): CancelablePromise<GetV1TaxesGroupTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/taxes/group/template'
        });
    }
    
    /**
     * Retrieve Tax Group
     * Retrieve Tax Group
     * @param data The data for the request.
     * @param data.taxGroupId taxGroupId
     * @returns GetTaxesGroupResponse OK
     * @throws ApiError
     */
    public static getV1TaxesGroupByTaxGroupId(data: GetV1TaxesGroupByTaxGroupIdData): CancelablePromise<GetV1TaxesGroupByTaxGroupIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/taxes/group/{taxGroupId}',
            path: {
                taxGroupId: data.taxGroupId
            }
        });
    }
    
    /**
     * Update Tax Group
     * Updates Tax Group. Only end date can be up-datable and can insert new tax components.
     * @param data The data for the request.
     * @param data.taxGroupId taxGroupId
     * @param data.requestBody
     * @returns PutTaxesGroupTaxGroupIdResponse OK
     * @throws ApiError
     */
    public static putV1TaxesGroupByTaxGroupId(data: PutV1TaxesGroupByTaxGroupIdData): CancelablePromise<PutV1TaxesGroupByTaxGroupIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/taxes/group/{taxGroupId}',
            path: {
                taxGroupId: data.taxGroupId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class TellerCashManagementService {
    /**
     * List all tellers
     * Retrieves list tellers
     * @param data The data for the request.
     * @param data.officeId officeId
     * @returns GetTellersResponse OK
     * @throws ApiError
     */
    public static getV1Tellers(data: GetV1TellersData = {}): CancelablePromise<GetV1TellersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/tellers',
            query: {
                officeId: data.officeId
            }
        });
    }
    
    /**
     * Create teller
     * Mandatory Fields
     * Teller name, OfficeId, Description, Start Date, Status
     * Optional Fields
     * End Date
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostTellersResponse OK
     * @throws ApiError
     */
    public static postV1Tellers(data: PostV1TellersData): CancelablePromise<PostV1TellersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/tellers',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.tellerId tellerId
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static deleteV1TellersByTellerId(data: DeleteV1TellersByTellerIdData): CancelablePromise<DeleteV1TellersByTellerIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/tellers/{tellerId}',
            path: {
                tellerId: data.tellerId
            }
        });
    }
    
    /**
     * Retrieve tellers
     * @param data The data for the request.
     * @param data.tellerId tellerId
     * @returns GetTellersResponse OK
     * @throws ApiError
     */
    public static getV1TellersByTellerId(data: GetV1TellersByTellerIdData): CancelablePromise<GetV1TellersByTellerIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/tellers/{tellerId}',
            path: {
                tellerId: data.tellerId
            }
        });
    }
    
    /**
     * Update teller
     * @param data The data for the request.
     * @param data.tellerId tellerId
     * @param data.requestBody
     * @returns PutTellersResponse OK
     * @throws ApiError
     */
    public static putV1TellersByTellerId(data: PutV1TellersByTellerIdData): CancelablePromise<PutV1TellersByTellerIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/tellers/{tellerId}',
            path: {
                tellerId: data.tellerId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * List Cashiers
     * @param data The data for the request.
     * @param data.tellerId tellerId
     * @param data.fromdate fromdate
     * @param data.todate todate
     * @returns GetTellersTellerIdCashiersResponse OK
     * @throws ApiError
     */
    public static getV1TellersByTellerIdCashiers(data: GetV1TellersByTellerIdCashiersData): CancelablePromise<GetV1TellersByTellerIdCashiersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/tellers/{tellerId}/cashiers',
            path: {
                tellerId: data.tellerId
            },
            query: {
                fromdate: data.fromdate,
                todate: data.todate
            }
        });
    }
    
    /**
     * Create Cashiers
     * Mandatory Fields:
     * Cashier/staff, Fromm Date, To Date, Full Day or From time and To time
     *
     *
     *
     * Optional Fields:
     * Description/Notes
     * @param data The data for the request.
     * @param data.tellerId tellerId
     * @param data.requestBody
     * @returns PostTellersTellerIdCashiersResponse OK
     * @throws ApiError
     */
    public static postV1TellersByTellerIdCashiers(data: PostV1TellersByTellerIdCashiersData): CancelablePromise<PostV1TellersByTellerIdCashiersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/tellers/{tellerId}/cashiers',
            path: {
                tellerId: data.tellerId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Find Cashiers
     * @param data The data for the request.
     * @param data.tellerId tellerId
     * @returns GetTellersTellerIdCashiersTemplateResponse OK
     * @throws ApiError
     */
    public static getV1TellersByTellerIdCashiersTemplate(data: GetV1TellersByTellerIdCashiersTemplateData): CancelablePromise<GetV1TellersByTellerIdCashiersTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/tellers/{tellerId}/cashiers/template',
            path: {
                tellerId: data.tellerId
            }
        });
    }
    
    /**
     * Delete Cashier
     * @param data The data for the request.
     * @param data.tellerId tellerId
     * @param data.cashierId cashierId
     * @returns DeleteTellersTellerIdCashiersCashierIdResponse OK
     * @throws ApiError
     */
    public static deleteV1TellersByTellerIdCashiersByCashierId(data: DeleteV1TellersByTellerIdCashiersByCashierIdData): CancelablePromise<DeleteV1TellersByTellerIdCashiersByCashierIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/tellers/{tellerId}/cashiers/{cashierId}',
            path: {
                tellerId: data.tellerId,
                cashierId: data.cashierId
            }
        });
    }
    
    /**
     * Retrieve a cashier
     * @param data The data for the request.
     * @param data.tellerId tellerId
     * @param data.cashierId cashierId
     * @returns GetTellersTellerIdCashiersCashierIdResponse OK
     * @throws ApiError
     */
    public static getV1TellersByTellerIdCashiersByCashierId(data: GetV1TellersByTellerIdCashiersByCashierIdData): CancelablePromise<GetV1TellersByTellerIdCashiersByCashierIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/tellers/{tellerId}/cashiers/{cashierId}',
            path: {
                tellerId: data.tellerId,
                cashierId: data.cashierId
            }
        });
    }
    
    /**
     * Update Cashier
     * @param data The data for the request.
     * @param data.tellerId tellerId
     * @param data.cashierId cashierId
     * @param data.requestBody
     * @returns PutTellersTellerIdCashiersCashierIdResponse OK
     * @throws ApiError
     */
    public static putV1TellersByTellerIdCashiersByCashierId(data: PutV1TellersByTellerIdCashiersByCashierIdData): CancelablePromise<PutV1TellersByTellerIdCashiersByCashierIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/tellers/{tellerId}/cashiers/{cashierId}',
            path: {
                tellerId: data.tellerId,
                cashierId: data.cashierId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Allocate Cash To Cashier
     * Mandatory Fields:
     * Date, Amount, Currency, Notes/Comments
     * @param data The data for the request.
     * @param data.tellerId tellerId
     * @param data.cashierId cashierId
     * @param data.requestBody
     * @returns PostTellersTellerIdCashiersCashierIdAllocateResponse OK
     * @throws ApiError
     */
    public static postV1TellersByTellerIdCashiersByCashierIdAllocate(data: PostV1TellersByTellerIdCashiersByCashierIdAllocateData): CancelablePromise<PostV1TellersByTellerIdCashiersByCashierIdAllocateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/tellers/{tellerId}/cashiers/{cashierId}/allocate',
            path: {
                tellerId: data.tellerId,
                cashierId: data.cashierId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Settle Cash From Cashier
     * Mandatory Fields
     * Date, Amount, Currency, Notes/Comments
     * @param data The data for the request.
     * @param data.tellerId tellerId
     * @param data.cashierId cashierId
     * @param data.requestBody
     * @returns PostTellersTellerIdCashiersCashierIdSettleResponse OK
     * @throws ApiError
     */
    public static postV1TellersByTellerIdCashiersByCashierIdSettle(data: PostV1TellersByTellerIdCashiersByCashierIdSettleData): CancelablePromise<PostV1TellersByTellerIdCashiersByCashierIdSettleResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/tellers/{tellerId}/cashiers/{cashierId}/settle',
            path: {
                tellerId: data.tellerId,
                cashierId: data.cashierId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve Transactions With Summary For Cashier
     * @param data The data for the request.
     * @param data.tellerId tellerId
     * @param data.cashierId cashierId
     * @param data.currencyCode currencyCode
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @returns GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse OK
     * @throws ApiError
     */
    public static getV1TellersByTellerIdCashiersByCashierIdSummaryandtransactions(data: GetV1TellersByTellerIdCashiersByCashierIdSummaryandtransactionsData): CancelablePromise<GetV1TellersByTellerIdCashiersByCashierIdSummaryandtransactionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/tellers/{tellerId}/cashiers/{cashierId}/summaryandtransactions',
            path: {
                tellerId: data.tellerId,
                cashierId: data.cashierId
            },
            query: {
                currencyCode: data.currencyCode,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            }
        });
    }
    
    /**
     * Retrieve Cashier Transactions
     * @param data The data for the request.
     * @param data.tellerId tellerId
     * @param data.cashierId cashierId
     * @param data.currencyCode currencyCode
     * @param data.offset offset
     * @param data.limit limit
     * @param data.orderBy orderBy
     * @param data.sortOrder sortOrder
     * @returns GetTellersTellerIdCashiersCashiersIdTransactionsResponse OK
     * @throws ApiError
     */
    public static getV1TellersByTellerIdCashiersByCashierIdTransactions(data: GetV1TellersByTellerIdCashiersByCashierIdTransactionsData): CancelablePromise<GetV1TellersByTellerIdCashiersByCashierIdTransactionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/tellers/{tellerId}/cashiers/{cashierId}/transactions',
            path: {
                tellerId: data.tellerId,
                cashierId: data.cashierId
            },
            query: {
                currencyCode: data.currencyCode,
                offset: data.offset,
                limit: data.limit,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            }
        });
    }
    
    /**
     * Retrieve Cashier Transaction Template
     * @param data The data for the request.
     * @param data.tellerId tellerId
     * @param data.cashierId cashierId
     * @returns GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse OK
     * @throws ApiError
     */
    public static getV1TellersByTellerIdCashiersByCashierIdTransactionsTemplate(data: GetV1TellersByTellerIdCashiersByCashierIdTransactionsTemplateData): CancelablePromise<GetV1TellersByTellerIdCashiersByCashierIdTransactionsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/tellers/{tellerId}/cashiers/{cashierId}/transactions/template',
            path: {
                tellerId: data.tellerId,
                cashierId: data.cashierId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.tellerId tellerId
     * @param data.cashierId cashierId
     * @param data.dateRange dateRange
     * @returns TellerJournalData default response
     * @throws ApiError
     */
    public static getV1TellersByTellerIdJournals(data: GetV1TellersByTellerIdJournalsData): CancelablePromise<GetV1TellersByTellerIdJournalsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/tellers/{tellerId}/journals',
            path: {
                tellerId: data.tellerId
            },
            query: {
                cashierId: data.cashierId,
                dateRange: data.dateRange
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.tellerId tellerId
     * @param data.dateRange dateRange
     * @returns TellerTransactionData default response
     * @throws ApiError
     */
    public static getV1TellersByTellerIdTransactions(data: GetV1TellersByTellerIdTransactionsData): CancelablePromise<GetV1TellersByTellerIdTransactionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/tellers/{tellerId}/transactions',
            path: {
                tellerId: data.tellerId
            },
            query: {
                dateRange: data.dateRange
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.tellerId tellerId
     * @param data.transactionId transactionId
     * @returns TellerTransactionData default response
     * @throws ApiError
     */
    public static getV1TellersByTellerIdTransactionsByTransactionId(data: GetV1TellersByTellerIdTransactionsByTransactionIdData): CancelablePromise<GetV1TellersByTellerIdTransactionsByTransactionIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/tellers/{tellerId}/transactions/{transactionId}',
            path: {
                tellerId: data.tellerId,
                transactionId: data.transactionId
            }
        });
    }
    
}

export class UserGeneratedDocumentsService {
    /**
     * Retrieve all UGDs
     * Example Requests:
     *
     * templates
     *
     * It is also possible to get specific UGDs by entity and type:
     *
     * templates?type=0&entity=0
     * [Entity: Id]
     *
     *
     *
     *
     *
     * client: 0, loan: 1
     *
     * [Type: Id]
     *
     *
     *
     * Document: 0, E-Mail (not yet): 1,  SMS: 2
     * @param data The data for the request.
     * @param data.typeId typeId
     * @param data.entityId entityId
     * @returns GetTemplatesResponse OK
     * @throws ApiError
     */
    public static getV1Templates(data: GetV1TemplatesData = {}): CancelablePromise<GetV1TemplatesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/templates',
            query: {
                typeId: data.typeId,
                entityId: data.entityId
            }
        });
    }
    
    /**
     * Add a UGD
     * Adds a new UGD.
     *
     * Mandatory Fields
     * name
     *
     *
     *
     * Example Requests:
     *
     * templates/1
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostTemplatesResponse OK
     * @throws ApiError
     */
    public static postV1Templates(data: PostV1TemplatesData): CancelablePromise<PostV1TemplatesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/templates',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve UGD Details Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for UGDs. The UGD data returned consists of any or all of:
     *
     * ARGUMENTS
     * name String entity String type String text String optional mappers Mapper optional
     * Example Request:
     *
     * templates/template
     * @returns GetTemplatesTemplateResponse OK
     * @throws ApiError
     */
    public static getV1TemplatesTemplate(): CancelablePromise<GetV1TemplatesTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/templates/template'
        });
    }
    
    /**
     * Delete a UGD
     * @param data The data for the request.
     * @param data.templateId templateId
     * @returns DeleteTemplatesTemplateIdResponse OK
     * @throws ApiError
     */
    public static deleteV1TemplatesByTemplateId(data: DeleteV1TemplatesByTemplateIdData): CancelablePromise<DeleteV1TemplatesByTemplateIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/templates/{templateId}',
            path: {
                templateId: data.templateId
            }
        });
    }
    
    /**
     * Retrieve a UGD
     * Example Requests:
     *
     * templates/1
     * @param data The data for the request.
     * @param data.templateId templateId
     * @returns GetTemplatesTemplateIdResponse OK
     * @throws ApiError
     */
    public static getV1TemplatesByTemplateId(data: GetV1TemplatesByTemplateIdData): CancelablePromise<GetV1TemplatesByTemplateIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/templates/{templateId}',
            path: {
                templateId: data.templateId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.templateId
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1TemplatesByTemplateId(data: PostV1TemplatesByTemplateIdData): CancelablePromise<PostV1TemplatesByTemplateIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/templates/{templateId}',
            path: {
                templateId: data.templateId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Update a UGD
     * @param data The data for the request.
     * @param data.templateId templateId
     * @param data.requestBody
     * @returns PutTemplatesTemplateIdResponse OK
     * @throws ApiError
     */
    public static putV1TemplatesByTemplateId(data: PutV1TemplatesByTemplateIdData): CancelablePromise<PutV1TemplatesByTemplateIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/templates/{templateId}',
            path: {
                templateId: data.templateId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.templateId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1TemplatesByTemplateIdTemplate(data: GetV1TemplatesByTemplateIdTemplateData): CancelablePromise<GetV1TemplatesByTemplateIdTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/templates/{templateId}/template',
            path: {
                templateId: data.templateId
            }
        });
    }
    
}

export class TwoFactorService {
    /**
     * @returns string default response
     * @throws ApiError
     */
    public static getV1Twofactor(): CancelablePromise<GetV1TwofactorResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/twofactor'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.deliveryMethod
     * @param data.extendedToken
     * @returns string default response
     * @throws ApiError
     */
    public static postV1Twofactor(data: PostV1TwofactorData = {}): CancelablePromise<PostV1TwofactorResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/twofactor',
            query: {
                deliveryMethod: data.deliveryMethod,
                extendedToken: data.extendedToken
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1TwofactorInvalidate(data: PostV1TwofactorInvalidateData = {}): CancelablePromise<PostV1TwofactorInvalidateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/twofactor/invalidate',
            body: data.requestBody,
            mediaType: '*/*'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.token
     * @returns string default response
     * @throws ApiError
     */
    public static postV1TwofactorValidate(data: PostV1TwofactorValidateData = {}): CancelablePromise<PostV1TwofactorValidateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/twofactor/validate',
            query: {
                token: data.token
            }
        });
    }
    
}

export class FetchAuthenticatedUserDetailsService {
    /**
     * Fetch authenticated user details
     *
     * checks the Authentication and returns the set roles and permissions allowed.
     * @returns GetUserDetailsResponse OK
     * @throws ApiError
     */
    public static getV1Userdetails(): CancelablePromise<GetV1UserdetailsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/userdetails'
        });
    }
    
}

export class UsersService {
    /**
     * Retrieve list of users
     * Example Requests:
     *
     * users
     *
     *
     * users?fields=id,username,email,officeName
     * @returns GetUsersResponse OK
     * @throws ApiError
     */
    public static getV1Users(): CancelablePromise<GetV1UsersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/users'
        });
    }
    
    /**
     * Create a User
     * Adds new application user.
     *
     * Note: Password information is not required (or processed). Password details at present are auto-generated and then sent to the email account given (which is why it can take a few seconds to complete).
     *
     * Mandatory Fields:
     * username, firstname, lastname, email, officeId, roles, sendPasswordToEmail
     *
     * Optional Fields:
     * staffId,passwordNeverExpires,isSelfServiceUser,clients
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostUsersResponse OK
     * @throws ApiError
     */
    public static postV1Users(data: PostV1UsersData): CancelablePromise<PostV1UsersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/users',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.officeId
     * @param data.staffId
     * @param data.dateFormat
     * @returns unknown default response
     * @throws ApiError
     */
    public static getV1UsersDownloadtemplate(data: GetV1UsersDownloadtemplateData = {}): CancelablePromise<GetV1UsersDownloadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/users/downloadtemplate',
            query: {
                officeId: data.officeId,
                staffId: data.staffId,
                dateFormat: data.dateFormat
            }
        });
    }
    
    /**
     * Retrieve User Details Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:
     *
     * Field Defaults
     * Allowed description Lists
     * Example Request:
     *
     * users/template
     * @returns GetUsersTemplateResponse OK
     * @throws ApiError
     */
    public static getV1UsersTemplate(): CancelablePromise<GetV1UsersTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/users/template'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.formData Upload users template
     * @returns string default response
     * @throws ApiError
     */
    public static postV1UsersUploadtemplate(data: PostV1UsersUploadtemplateData = {}): CancelablePromise<PostV1UsersUploadtemplateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/users/uploadtemplate',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Delete a User
     * Removes the user and the associated roles and permissions.
     * @param data The data for the request.
     * @param data.userId userId
     * @returns DeleteUsersUserIdResponse OK
     * @throws ApiError
     */
    public static deleteV1UsersByUserId(data: DeleteV1UsersByUserIdData): CancelablePromise<DeleteV1UsersByUserIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/users/{userId}',
            path: {
                userId: data.userId
            }
        });
    }
    
    /**
     * Retrieve a User
     * Example Requests:
     *
     * users/1
     *
     *
     * users/1?template=true
     *
     *
     * users/1?fields=username,officeName
     * @param data The data for the request.
     * @param data.userId userId
     * @returns GetUsersUserIdResponse OK
     * @throws ApiError
     */
    public static getV1UsersByUserId(data: GetV1UsersByUserIdData): CancelablePromise<GetV1UsersByUserIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/users/{userId}',
            path: {
                userId: data.userId
            }
        });
    }
    
    /**
     * Update a User
     * Updates the user
     * @param data The data for the request.
     * @param data.userId userId
     * @param data.requestBody
     * @returns PutUsersUserIdResponse OK
     * @throws ApiError
     */
    public static putV1UsersByUserId(data: PutV1UsersByUserIdData): CancelablePromise<PutV1UsersByUserIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/users/{userId}',
            path: {
                userId: data.userId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Change the password of a User
     * When updating a password you must provide the repeatPassword parameter also.
     * @param data The data for the request.
     * @param data.userId userId
     * @param data.requestBody
     * @returns ChangePwdUsersUserIdResponse OK
     * @throws ApiError
     */
    public static postV1UsersByUserIdPwd(data: PostV1UsersByUserIdPwdData): CancelablePromise<PostV1UsersByUserIdPwdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/users/{userId}/pwd',
            path: {
                userId: data.userId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class WorkingDaysService {
    /**
     * List Working days
     * Example Requests:
     *
     * workingdays
     * @returns WorkingDaysData default response
     * @throws ApiError
     */
    public static getV1Workingdays(): CancelablePromise<GetV1WorkingdaysResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/workingdays'
        });
    }
    
    /**
     * Update a Working Day
     * Mandatory Fields
     * recurrence,repaymentRescheduleType,extendTermForDailyRepayments,locale
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PutWorkingDaysResponse OK
     * @throws ApiError
     */
    public static putV1Workingdays(data: PutV1WorkingdaysData): CancelablePromise<PutV1WorkingdaysResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/workingdays',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Working Days Template
     * This is a convenience resource. It can be useful when building maintenance user interface screens for working days.
     *
     * Example Request:
     *
     * workingdays/template
     * @returns GetWorkingDaysTemplateResponse OK
     * @throws ApiError
     */
    public static getV1WorkingdaysTemplate(): CancelablePromise<GetV1WorkingdaysTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/workingdays/template'
        });
    }
    
}

export class CalendarService {
    /**
     * @param data The data for the request.
     * @param data.entityType
     * @param data.entityId
     * @param data.calendarType
     * @returns CalendarData default response
     * @throws ApiError
     */
    public static getV1ByEntityTypeByEntityIdCalendars(data: GetV1ByEntityTypeByEntityIdCalendarsData): CancelablePromise<GetV1ByEntityTypeByEntityIdCalendarsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/{entityType}/{entityId}/calendars',
            path: {
                entityType: data.entityType,
                entityId: data.entityId
            },
            query: {
                calendarType: data.calendarType
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.entityType
     * @param data.entityId
     * @param data.requestBody
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static postV1ByEntityTypeByEntityIdCalendars(data: PostV1ByEntityTypeByEntityIdCalendarsData): CancelablePromise<PostV1ByEntityTypeByEntityIdCalendarsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/{entityType}/{entityId}/calendars',
            path: {
                entityType: data.entityType,
                entityId: data.entityId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.entityType
     * @param data.entityId
     * @returns CalendarData default response
     * @throws ApiError
     */
    public static getV1ByEntityTypeByEntityIdCalendarsTemplate(data: GetV1ByEntityTypeByEntityIdCalendarsTemplateData): CancelablePromise<GetV1ByEntityTypeByEntityIdCalendarsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/{entityType}/{entityId}/calendars/template',
            path: {
                entityType: data.entityType,
                entityId: data.entityId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.entityType
     * @param data.entityId
     * @param data.calendarId
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static deleteV1ByEntityTypeByEntityIdCalendarsByCalendarId(data: DeleteV1ByEntityTypeByEntityIdCalendarsByCalendarIdData): CancelablePromise<DeleteV1ByEntityTypeByEntityIdCalendarsByCalendarIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/{entityType}/{entityId}/calendars/{calendarId}',
            path: {
                entityType: data.entityType,
                entityId: data.entityId,
                calendarId: data.calendarId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.calendarId
     * @param data.entityType
     * @param data.entityId
     * @returns CalendarData default response
     * @throws ApiError
     */
    public static getV1ByEntityTypeByEntityIdCalendarsByCalendarId(data: GetV1ByEntityTypeByEntityIdCalendarsByCalendarIdData): CancelablePromise<GetV1ByEntityTypeByEntityIdCalendarsByCalendarIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/{entityType}/{entityId}/calendars/{calendarId}',
            path: {
                calendarId: data.calendarId,
                entityType: data.entityType,
                entityId: data.entityId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.entityType
     * @param data.entityId
     * @param data.calendarId
     * @param data.requestBody
     * @returns CommandProcessingResult default response
     * @throws ApiError
     */
    public static putV1ByEntityTypeByEntityIdCalendarsByCalendarId(data: PutV1ByEntityTypeByEntityIdCalendarsByCalendarIdData): CancelablePromise<PutV1ByEntityTypeByEntityIdCalendarsByCalendarIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/{entityType}/{entityId}/calendars/{calendarId}',
            path: {
                entityType: data.entityType,
                entityId: data.entityId,
                calendarId: data.calendarId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class DocumentsService {
    /**
     * List documents
     * Example Requests:
     *
     * clients/1/documents
     *
     * client_identifiers/1/documents
     *
     * loans/1/documents?fields=name,description
     * @param data The data for the request.
     * @param data.entityType entityType
     * @param data.entityId entityId
     * @returns DocumentData default response
     * @throws ApiError
     */
    public static getV1ByEntityTypeByEntityIdDocuments(data: GetV1ByEntityTypeByEntityIdDocumentsData): CancelablePromise<GetV1ByEntityTypeByEntityIdDocumentsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/{entityType}/{entityId}/documents',
            path: {
                entityType: data.entityType,
                entityId: data.entityId
            }
        });
    }
    
    /**
     * Create a Document
     * Note: A document is created using a Multi-part form upload
     *
     * Body Parts
     *
     * name :
     * Name or summary of the document
     *
     * description :
     * Description of the document
     *
     * file :
     * The file to be uploaded
     *
     * Mandatory Fields :
     * file and description
     * @param data The data for the request.
     * @param data.entityType entityType
     * @param data.entityId entityId
     * @param data.contentLength Content-Length
     * @param data.formData Create document
     * @returns PostEntityTypeEntityIdDocumentsResponse Not Shown (multi-part form data)
     * @throws ApiError
     */
    public static postV1ByEntityTypeByEntityIdDocuments(data: PostV1ByEntityTypeByEntityIdDocumentsData): CancelablePromise<PostV1ByEntityTypeByEntityIdDocumentsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/{entityType}/{entityId}/documents',
            path: {
                entityType: data.entityType,
                entityId: data.entityId
            },
            headers: {
                'Content-Length': data.contentLength
            },
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Remove a Document
     * @param data The data for the request.
     * @param data.entityType entityType
     * @param data.entityId entityId
     * @param data.documentId documentId
     * @returns DeleteEntityTypeEntityIdDocumentsResponse OK
     * @throws ApiError
     */
    public static deleteV1ByEntityTypeByEntityIdDocumentsByDocumentId(data: DeleteV1ByEntityTypeByEntityIdDocumentsByDocumentIdData): CancelablePromise<DeleteV1ByEntityTypeByEntityIdDocumentsByDocumentIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/{entityType}/{entityId}/documents/{documentId}',
            path: {
                entityType: data.entityType,
                entityId: data.entityId,
                documentId: data.documentId
            }
        });
    }
    
    /**
     * Retrieve a Document
     * Example Requests:
     *
     * clients/1/documents/1
     *
     *
     * loans/1/documents/1
     *
     *
     * client_identifiers/1/documents/1?fields=name,description
     * @param data The data for the request.
     * @param data.entityType entityType
     * @param data.entityId entityId
     * @param data.documentId documentId
     * @returns DocumentData default response
     * @throws ApiError
     */
    public static getV1ByEntityTypeByEntityIdDocumentsByDocumentId(data: GetV1ByEntityTypeByEntityIdDocumentsByDocumentIdData): CancelablePromise<GetV1ByEntityTypeByEntityIdDocumentsByDocumentIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/{entityType}/{entityId}/documents/{documentId}',
            path: {
                entityType: data.entityType,
                entityId: data.entityId,
                documentId: data.documentId
            }
        });
    }
    
    /**
     * Update a Document
     * Note: A document is updated using a Multi-part form upload
     * Body Parts
     * name
     * Name or summary of the document
     * description
     * Description of the document
     * file
     * The file to be uploaded
     * @param data The data for the request.
     * @param data.entityType entityType
     * @param data.entityId entityId
     * @param data.documentId documentId
     * @param data.contentLength Content-Length
     * @param data.formData Update document
     * @returns PutEntityTypeEntityIdDocumentsResponse Not Shown (multi-part form data)
     * @throws ApiError
     */
    public static putV1ByEntityTypeByEntityIdDocumentsByDocumentId(data: PutV1ByEntityTypeByEntityIdDocumentsByDocumentIdData): CancelablePromise<PutV1ByEntityTypeByEntityIdDocumentsByDocumentIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/{entityType}/{entityId}/documents/{documentId}',
            path: {
                entityType: data.entityType,
                entityId: data.entityId,
                documentId: data.documentId
            },
            headers: {
                'Content-Length': data.contentLength
            },
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Retrieve Binary File associated with Document
     * Request used to download the file associated with the document
     *
     * Example Requests:
     *
     * clients/1/documents/1/attachment
     *
     *
     * loans/1/documents/1/attachment
     * @param data The data for the request.
     * @param data.entityType entityType
     * @param data.entityId entityId
     * @param data.documentId documentId
     * @returns unknown Not Shown: The corresponding Binary file
     * @throws ApiError
     */
    public static getV1ByEntityTypeByEntityIdDocumentsByDocumentIdAttachment(data: GetV1ByEntityTypeByEntityIdDocumentsByDocumentIdAttachmentData): CancelablePromise<GetV1ByEntityTypeByEntityIdDocumentsByDocumentIdAttachmentResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/{entityType}/{entityId}/documents/{documentId}/attachment',
            path: {
                entityType: data.entityType,
                entityId: data.entityId,
                documentId: data.documentId
            }
        });
    }
    
}

export class MeetingsService {
    /**
     * @param data The data for the request.
     * @param data.entityType
     * @param data.entityId
     * @param data.limit
     * @returns string default response
     * @throws ApiError
     */
    public static getV1ByEntityTypeByEntityIdMeetings(data: GetV1ByEntityTypeByEntityIdMeetingsData): CancelablePromise<GetV1ByEntityTypeByEntityIdMeetingsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/{entityType}/{entityId}/meetings',
            path: {
                entityType: data.entityType,
                entityId: data.entityId
            },
            query: {
                limit: data.limit
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.entityType
     * @param data.entityId
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1ByEntityTypeByEntityIdMeetings(data: PostV1ByEntityTypeByEntityIdMeetingsData): CancelablePromise<PostV1ByEntityTypeByEntityIdMeetingsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/{entityType}/{entityId}/meetings',
            path: {
                entityType: data.entityType,
                entityId: data.entityId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.entityType
     * @param data.entityId
     * @param data.calendarId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1ByEntityTypeByEntityIdMeetingsTemplate(data: GetV1ByEntityTypeByEntityIdMeetingsTemplateData): CancelablePromise<GetV1ByEntityTypeByEntityIdMeetingsTemplateResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/{entityType}/{entityId}/meetings/template',
            path: {
                entityType: data.entityType,
                entityId: data.entityId
            },
            query: {
                calendarId: data.calendarId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.entityType
     * @param data.entityId
     * @param data.meetingId
     * @returns string default response
     * @throws ApiError
     */
    public static deleteV1ByEntityTypeByEntityIdMeetingsByMeetingId(data: DeleteV1ByEntityTypeByEntityIdMeetingsByMeetingIdData): CancelablePromise<DeleteV1ByEntityTypeByEntityIdMeetingsByMeetingIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/{entityType}/{entityId}/meetings/{meetingId}',
            path: {
                entityType: data.entityType,
                entityId: data.entityId,
                meetingId: data.meetingId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.meetingId
     * @param data.entityType
     * @param data.entityId
     * @returns string default response
     * @throws ApiError
     */
    public static getV1ByEntityTypeByEntityIdMeetingsByMeetingId(data: GetV1ByEntityTypeByEntityIdMeetingsByMeetingIdData): CancelablePromise<GetV1ByEntityTypeByEntityIdMeetingsByMeetingIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/{entityType}/{entityId}/meetings/{meetingId}',
            path: {
                meetingId: data.meetingId,
                entityType: data.entityType,
                entityId: data.entityId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.entityType
     * @param data.entityId
     * @param data.meetingId
     * @param data.command
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static postV1ByEntityTypeByEntityIdMeetingsByMeetingId(data: PostV1ByEntityTypeByEntityIdMeetingsByMeetingIdData): CancelablePromise<PostV1ByEntityTypeByEntityIdMeetingsByMeetingIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/{entityType}/{entityId}/meetings/{meetingId}',
            path: {
                entityType: data.entityType,
                entityId: data.entityId,
                meetingId: data.meetingId
            },
            query: {
                command: data.command
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.entityType
     * @param data.entityId
     * @param data.meetingId
     * @param data.requestBody
     * @returns string default response
     * @throws ApiError
     */
    public static putV1ByEntityTypeByEntityIdMeetingsByMeetingId(data: PutV1ByEntityTypeByEntityIdMeetingsByMeetingIdData): CancelablePromise<PutV1ByEntityTypeByEntityIdMeetingsByMeetingIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/{entityType}/{entityId}/meetings/{meetingId}',
            path: {
                entityType: data.entityType,
                entityId: data.entityId,
                meetingId: data.meetingId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class NotesService {
    /**
     * Retrieve a Resource's description
     * Retrieves a Resource's Notes
     *
     * Note: Notes are returned in descending createOn order.
     *
     * Example Requests:
     *
     * clients/2/notes
     *
     *
     * groups/2/notes?fields=note,createdOn,createdByUsername
     * @param data The data for the request.
     * @param data.resourceType resourceType
     * @param data.resourceId resourceId
     * @returns NoteData default response
     * @throws ApiError
     */
    public static getV1ByResourceTypeByResourceIdNotes(data: GetV1ByResourceTypeByResourceIdNotesData): CancelablePromise<GetV1ByResourceTypeByResourceIdNotesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/{resourceType}/{resourceId}/notes',
            path: {
                resourceType: data.resourceType,
                resourceId: data.resourceId
            }
        });
    }
    
    /**
     * Add a Resource Note
     * Adds a new note to a supported resource.
     *
     * Example Requests:
     *
     * clients/1/notes
     *
     *
     * groups/1/notes
     * @param data The data for the request.
     * @param data.resourceType resourceType
     * @param data.resourceId resourceId
     * @param data.requestBody
     * @returns PostResourceTypeResourceIdNotesResponse OK
     * @throws ApiError
     */
    public static postV1ByResourceTypeByResourceIdNotes(data: PostV1ByResourceTypeByResourceIdNotesData): CancelablePromise<PostV1ByResourceTypeByResourceIdNotesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v1/{resourceType}/{resourceId}/notes',
            path: {
                resourceType: data.resourceType,
                resourceId: data.resourceId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Delete a Resource Note
     * Deletes a Resource Note
     * @param data The data for the request.
     * @param data.resourceType resourceType
     * @param data.resourceId resourceId
     * @param data.noteId noteId
     * @returns DeleteResourceTypeResourceIdNotesNoteIdResponse OK
     * @throws ApiError
     */
    public static deleteV1ByResourceTypeByResourceIdNotesByNoteId(data: DeleteV1ByResourceTypeByResourceIdNotesByNoteIdData): CancelablePromise<DeleteV1ByResourceTypeByResourceIdNotesByNoteIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v1/{resourceType}/{resourceId}/notes/{noteId}',
            path: {
                resourceType: data.resourceType,
                resourceId: data.resourceId,
                noteId: data.noteId
            }
        });
    }
    
    /**
     * Retrieve a Resource Note
     * Retrieves a Resource Note
     *
     * Example Requests:
     *
     * clients/1/notes/76
     *
     *
     * groups/1/notes/20
     *
     *
     * clients/1/notes/76?fields=note,createdOn,createdByUsername
     *
     *
     * groups/1/notes/20?fields=note,createdOn,createdByUsername
     * @param data The data for the request.
     * @param data.resourceType resourceType
     * @param data.resourceId resourceId
     * @param data.noteId noteId
     * @returns NoteData default response
     * @throws ApiError
     */
    public static getV1ByResourceTypeByResourceIdNotesByNoteId(data: GetV1ByResourceTypeByResourceIdNotesByNoteIdData): CancelablePromise<GetV1ByResourceTypeByResourceIdNotesByNoteIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v1/{resourceType}/{resourceId}/notes/{noteId}',
            path: {
                resourceType: data.resourceType,
                resourceId: data.resourceId,
                noteId: data.noteId
            }
        });
    }
    
    /**
     * Update a Resource Note
     * Updates a Resource Note
     * @param data The data for the request.
     * @param data.resourceType resourceType
     * @param data.resourceId resourceId
     * @param data.noteId noteId
     * @param data.requestBody
     * @returns PutResourceTypeResourceIdNotesNoteIdResponse OK
     * @throws ApiError
     */
    public static putV1ByResourceTypeByResourceIdNotesByNoteId(data: PutV1ByResourceTypeByResourceIdNotesByNoteIdData): CancelablePromise<PutV1ByResourceTypeByResourceIdNotesByNoteIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/v1/{resourceType}/{resourceId}/notes/{noteId}',
            path: {
                resourceType: data.resourceType,
                resourceId: data.resourceId,
                noteId: data.noteId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class ClientSearchV2Service {
    /**
     * Search Clients by text
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PageClientSearchData default response
     * @throws ApiError
     */
    public static postV2ClientsSearch(data: PostV2ClientsSearchData = {}): CancelablePromise<PostV2ClientsSearchResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v2/clients/search',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}