/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as CreateClientRouteImport } from './routes/create-client'
import { Route as CreateAccountRouteImport } from './routes/create-account'
import { Route as ActivateAccountRouteImport } from './routes/activate-account'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OpenSavingsAccountClientIdRouteImport } from './routes/open-savings-account.$clientId'
import { Route as OpenAccountClientIdRouteImport } from './routes/open-account.$clientId'
import { Route as ClientDetailsClientIdRouteImport } from './routes/client-details/$clientId'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const CreateClientRoute = CreateClientRouteImport.update({
  id: '/create-client',
  path: '/create-client',
  getParentRoute: () => rootRouteImport,
} as any)
const CreateAccountRoute = CreateAccountRouteImport.update({
  id: '/create-account',
  path: '/create-account',
  getParentRoute: () => rootRouteImport,
} as any)
const ActivateAccountRoute = ActivateAccountRouteImport.update({
  id: '/activate-account',
  path: '/activate-account',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OpenSavingsAccountClientIdRoute =
  OpenSavingsAccountClientIdRouteImport.update({
    id: '/open-savings-account/$clientId',
    path: '/open-savings-account/$clientId',
    getParentRoute: () => rootRouteImport,
  } as any)
const OpenAccountClientIdRoute = OpenAccountClientIdRouteImport.update({
  id: '/open-account/$clientId',
  path: '/open-account/$clientId',
  getParentRoute: () => rootRouteImport,
} as any)
const ClientDetailsClientIdRoute = ClientDetailsClientIdRouteImport.update({
  id: '/client-details/$clientId',
  path: '/client-details/$clientId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/activate-account': typeof ActivateAccountRoute
  '/create-account': typeof CreateAccountRoute
  '/create-client': typeof CreateClientRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/client-details/$clientId': typeof ClientDetailsClientIdRoute
  '/open-account/$clientId': typeof OpenAccountClientIdRoute
  '/open-savings-account/$clientId': typeof OpenSavingsAccountClientIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/activate-account': typeof ActivateAccountRoute
  '/create-account': typeof CreateAccountRoute
  '/create-client': typeof CreateClientRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/client-details/$clientId': typeof ClientDetailsClientIdRoute
  '/open-account/$clientId': typeof OpenAccountClientIdRoute
  '/open-savings-account/$clientId': typeof OpenSavingsAccountClientIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/activate-account': typeof ActivateAccountRoute
  '/create-account': typeof CreateAccountRoute
  '/create-client': typeof CreateClientRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/client-details/$clientId': typeof ClientDetailsClientIdRoute
  '/open-account/$clientId': typeof OpenAccountClientIdRoute
  '/open-savings-account/$clientId': typeof OpenSavingsAccountClientIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/activate-account'
    | '/create-account'
    | '/create-client'
    | '/dashboard'
    | '/login'
    | '/client-details/$clientId'
    | '/open-account/$clientId'
    | '/open-savings-account/$clientId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/activate-account'
    | '/create-account'
    | '/create-client'
    | '/dashboard'
    | '/login'
    | '/client-details/$clientId'
    | '/open-account/$clientId'
    | '/open-savings-account/$clientId'
  id:
    | '__root__'
    | '/'
    | '/activate-account'
    | '/create-account'
    | '/create-client'
    | '/dashboard'
    | '/login'
    | '/client-details/$clientId'
    | '/open-account/$clientId'
    | '/open-savings-account/$clientId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ActivateAccountRoute: typeof ActivateAccountRoute
  CreateAccountRoute: typeof CreateAccountRoute
  CreateClientRoute: typeof CreateClientRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
  ClientDetailsClientIdRoute: typeof ClientDetailsClientIdRoute
  OpenAccountClientIdRoute: typeof OpenAccountClientIdRoute
  OpenSavingsAccountClientIdRoute: typeof OpenSavingsAccountClientIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/create-client': {
      id: '/create-client'
      path: '/create-client'
      fullPath: '/create-client'
      preLoaderRoute: typeof CreateClientRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/create-account': {
      id: '/create-account'
      path: '/create-account'
      fullPath: '/create-account'
      preLoaderRoute: typeof CreateAccountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/activate-account': {
      id: '/activate-account'
      path: '/activate-account'
      fullPath: '/activate-account'
      preLoaderRoute: typeof ActivateAccountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/open-savings-account/$clientId': {
      id: '/open-savings-account/$clientId'
      path: '/open-savings-account/$clientId'
      fullPath: '/open-savings-account/$clientId'
      preLoaderRoute: typeof OpenSavingsAccountClientIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/open-account/$clientId': {
      id: '/open-account/$clientId'
      path: '/open-account/$clientId'
      fullPath: '/open-account/$clientId'
      preLoaderRoute: typeof OpenAccountClientIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/client-details/$clientId': {
      id: '/client-details/$clientId'
      path: '/client-details/$clientId'
      fullPath: '/client-details/$clientId'
      preLoaderRoute: typeof ClientDetailsClientIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ActivateAccountRoute: ActivateAccountRoute,
  CreateAccountRoute: CreateAccountRoute,
  CreateClientRoute: CreateClientRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  ClientDetailsClientIdRoute: ClientDetailsClientIdRoute,
  OpenAccountClientIdRoute: OpenAccountClientIdRoute,
  OpenSavingsAccountClientIdRoute: OpenSavingsAccountClientIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
